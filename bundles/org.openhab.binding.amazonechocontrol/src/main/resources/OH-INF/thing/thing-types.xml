<?xml version="1.0" encoding="UTF-8"?>
<thing:thing-descriptions xmlns:thing="https://openhab.org/schemas/thing-description/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" bindingId="amazonechocontrol"
	xsi:schemaLocation="https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd">
	<bridge-type id="account">
		<label>Amazon Account</label>
		<description>Amazon Account where the amazon echo devices are registered.</description>
		<channels>
			<channel id="sendMessage" typeId="sendMessage"/>
			<channel id="refreshActivity" typeId="refreshActivity"/>
		</channels>
		<properties>
			<property name="thingTypeVersion">1</property>
		</properties>
		<config-description>
			<parameter name="discoverSmartHome" type="integer">
				<label>Device Discovery Mode</label>
				<description>Defines which devices shall be discovered.</description>
				<options>
					<option value="0">No Discovery</option>
					<option value="1">Direct connected</option>
					<option value="2">Direct and over Alexa skill</option>
					<option value="3">Direct, over Alexa and openHAB skill</option>
				</options>
				<limitToOptions>true</limitToOptions>
				<default>0</default>
			</parameter>
			<parameter name="pollingIntervalSmartHomeAlexa" type="decimal" min="10" unit="s">
				<label>Polling Interval Alexa</label>
				<description>
					Defines the time in seconds for openHAB to pull the
					state of the directly connected devices. The minimum
					is 10 seconds.
				</description>
				<default>30</default>
			</parameter>
			<parameter name="pollingIntervalSmartSkills" type="decimal" min="60" unit="s">
				<label>Polling Interval Skill</label>
				<description>
					Defines the time in seconds for openHAB to pull the
					state of the over a skill connected devices. The
					minimum is 60 seconds.
				</description>
				<default>120</default>
			</parameter>
			<parameter name="activityRequestDelay" type="integer" min="2" unit="s">
				<label>Activity Request Delay</label>
				<description>The number of seconds between a voice command was detected and the received command is requested from
					the server.</description>
				<default>10</default>
			</parameter>
		</config-description>
	</bridge-type>
	<thing-type id="echo">
		<supported-bridge-type-refs>
			<bridge-type-ref id="account"/>
		</supported-bridge-type-refs>
		<label>Amazon Echo</label>
		<description>Amazon Echo device (Amazon Echo, Amazon Echo Dot, Amazon Echo Plus...)</description>
		<channels>
			<channel id="player" typeId="player"/>
			<channel id="mediaProgress" typeId="mediaProgress"/>
			<channel id="mediaProgressTime" typeId="mediaProgressTime"/>
			<channel id="mediaLength" typeId="mediaLength"/>
			<channel id="volume" typeId="volume"/>
			<channel id="equalizerTreble" typeId="equalizerTreble"/>
			<channel id="equalizerMidrange" typeId="equalizerMidrange"/>
			<channel id="equalizerBass" typeId="equalizerBass"/>
			<channel id="shuffle" typeId="shuffle"/>
			<channel id="imageUrl" typeId="imageUrl"/>
			<channel id="title" typeId="title"/>
			<channel id="subtitle1" typeId="subtitle1"/>
			<channel id="subtitle2" typeId="subtitle2"/>
			<channel id="providerDisplayName" typeId="providerDisplayName"/>
			<channel id="musicProviderId" typeId="musicProviderId"/>
			<channel id="playMusicVoiceCommand" typeId="playMusicVoiceCommand"/>
			<channel id="startCommand" typeId="startCommand"/>
			<channel id="announcement" typeId="announcement"/>
			<channel id="textToSpeech" typeId="textToSpeech"/>
			<channel id="textToSpeechVolume" typeId="textToSpeechVolume"/>
			<channel id="textCommand" typeId="textCommand"/>
			<channel id="remind" typeId="remind"/>
			<channel id="nextReminder" typeId="nextReminder"/>
			<channel id="playAlarmSound" typeId="playAlarmSound"/>
			<channel id="nextAlarm" typeId="nextAlarm"/>
			<channel id="nextMusicAlarm" typeId="nextMusicAlarm"/>
			<channel id="nextTimer" typeId="nextTimer"/>
			<channel id="startRoutine" typeId="startRoutine"/>
			<channel id="bluetoothMAC" typeId="bluetoothMAC"/>
			<channel id="bluetooth" typeId="bluetooth"/>
			<channel id="bluetoothDeviceName" typeId="bluetoothDeviceName"/>
			<channel id="lastVoiceCommand" typeId="lastVoiceCommand"/>
			<channel id="lastSpokenText" typeId="lastSpokenText"/>
			<channel id="notificationVolume" typeId="notificationVolume"/>
			<channel id="ascendingAlarm" typeId="ascendingAlarm"/>
			<channel id="doNotDisturb" typeId="doNotDisturb"/>
		</channels>
		<properties>
			<property name="thingTypeVersion">3</property>
		</properties>
		<representation-property>serialNumber</representation-property>
		<config-description>
			<parameter name="serialNumber" type="text" required="true">
				<label>Serial Number</label>
				<description>The serial number of the device from the Alexa app</description>
			</parameter>
		</config-description>
	</thing-type>
	<thing-type id="echospot">
		<supported-bridge-type-refs>
			<bridge-type-ref id="account"/>
		</supported-bridge-type-refs>
		<label>Amazon Echo Spot</label>
		<description>Amazon Echo Spot device</description>
		<channels>
			<channel id="player" typeId="player"/>
			<channel id="mediaProgress" typeId="mediaProgress"/>
			<channel id="mediaProgressTime" typeId="mediaProgressTime"/>
			<channel id="mediaLength" typeId="mediaLength"/>
			<channel id="volume" typeId="volume"/>
			<channel id="equalizerTreble" typeId="equalizerTreble"/>
			<channel id="equalizerMidrange" typeId="equalizerMidrange"/>
			<channel id="equalizerBass" typeId="equalizerBass"/>
			<channel id="shuffle" typeId="shuffle"/>
			<channel id="imageUrl" typeId="imageUrl"/>
			<channel id="title" typeId="title"/>
			<channel id="subtitle1" typeId="subtitle1"/>
			<channel id="subtitle2" typeId="subtitle2"/>
			<channel id="providerDisplayName" typeId="providerDisplayName"/>
			<channel id="musicProviderId" typeId="musicProviderId"/>
			<channel id="playMusicVoiceCommand" typeId="playMusicVoiceCommand"/>
			<channel id="startCommand" typeId="startCommand"/>
			<channel id="announcement" typeId="announcement"/>
			<channel id="textToSpeech" typeId="textToSpeech"/>
			<channel id="textToSpeechVolume" typeId="textToSpeechVolume"/>
			<channel id="textCommand" typeId="textCommand"/>
			<channel id="remind" typeId="remind"/>
			<channel id="nextReminder" typeId="nextReminder"/>
			<channel id="playAlarmSound" typeId="playAlarmSound"/>
			<channel id="nextAlarm" typeId="nextAlarm"/>
			<channel id="nextMusicAlarm" typeId="nextMusicAlarm"/>
			<channel id="nextTimer" typeId="nextTimer"/>
			<channel id="startRoutine" typeId="startRoutine"/>
			<channel id="bluetoothMAC" typeId="bluetoothMAC"/>
			<channel id="bluetooth" typeId="bluetooth"/>
			<channel id="bluetoothDeviceName" typeId="bluetoothDeviceName"/>
			<channel id="lastVoiceCommand" typeId="lastVoiceCommand"/>
			<channel id="lastSpokenText" typeId="lastSpokenText"/>
			<channel id="notificationVolume" typeId="notificationVolume"/>
			<channel id="ascendingAlarm" typeId="ascendingAlarm"/>
			<channel id="doNotDisturb" typeId="doNotDisturb"/>
		</channels>
		<properties>
			<property name="thingTypeVersion">3</property>
		</properties>
		<representation-property>serialNumber</representation-property>
		<config-description>
			<parameter name="serialNumber" type="text" required="true">
				<label>Serial Number</label>
				<description>The serial number of the device from the Alexa app</description>
			</parameter>
		</config-description>
	</thing-type>
	<thing-type id="echoshow">
		<supported-bridge-type-refs>
			<bridge-type-ref id="account"/>
		</supported-bridge-type-refs>
		<label>Amazon Echo Show</label>
		<description>Amazon Echo Show device</description>
		<channels>
			<channel id="player" typeId="player"/>
			<channel id="mediaProgress" typeId="mediaProgress"/>
			<channel id="mediaProgressTime" typeId="mediaProgressTime"/>
			<channel id="mediaLength" typeId="mediaLength"/>
			<channel id="volume" typeId="volume"/>
			<channel id="equalizerTreble" typeId="equalizerTreble"/>
			<channel id="equalizerMidrange" typeId="equalizerMidrange"/>
			<channel id="equalizerBass" typeId="equalizerBass"/>
			<channel id="shuffle" typeId="shuffle"/>
			<channel id="imageUrl" typeId="imageUrl"/>
			<channel id="title" typeId="title"/>
			<channel id="subtitle1" typeId="subtitle1"/>
			<channel id="subtitle2" typeId="subtitle2"/>
			<channel id="providerDisplayName" typeId="providerDisplayName"/>
			<channel id="musicProviderId" typeId="musicProviderId"/>
			<channel id="playMusicVoiceCommand" typeId="playMusicVoiceCommand"/>
			<channel id="startCommand" typeId="startCommand"/>
			<channel id="announcement" typeId="announcement"/>
			<channel id="textToSpeech" typeId="textToSpeech"/>
			<channel id="textToSpeechVolume" typeId="textToSpeechVolume"/>
			<channel id="textCommand" typeId="textCommand"/>
			<channel id="remind" typeId="remind"/>
			<channel id="nextReminder" typeId="nextReminder"/>
			<channel id="playAlarmSound" typeId="playAlarmSound"/>
			<channel id="nextAlarm" typeId="nextAlarm"/>
			<channel id="nextMusicAlarm" typeId="nextMusicAlarm"/>
			<channel id="nextTimer" typeId="nextTimer"/>
			<channel id="startRoutine" typeId="startRoutine"/>
			<channel id="bluetoothMAC" typeId="bluetoothMAC"/>
			<channel id="bluetooth" typeId="bluetooth"/>
			<channel id="bluetoothDeviceName" typeId="bluetoothDeviceName"/>
			<channel id="lastVoiceCommand" typeId="lastVoiceCommand"/>
			<channel id="lastSpokenText" typeId="lastSpokenText"/>
			<channel id="notificationVolume" typeId="notificationVolume"/>
			<channel id="ascendingAlarm" typeId="ascendingAlarm"/>
			<channel id="doNotDisturb" typeId="doNotDisturb"/>
		</channels>
		<properties>
			<property name="thingTypeVersion">3</property>
		</properties>
		<representation-property>serialNumber</representation-property>
		<config-description>
			<parameter name="serialNumber" type="text" required="true">
				<label>Serial Number</label>
				<description>The serial number of the device from the Alexa app</description>
			</parameter>
		</config-description>
	</thing-type>
	<thing-type id="wha">
		<supported-bridge-type-refs>
			<bridge-type-ref id="account"/>
		</supported-bridge-type-refs>
		<label>Whole House Audio Control</label>
		<description>Amazon Multiroom (Whole House Audio) Music</description>
		<channels>
			<channel id="player" typeId="player"/>
			<channel id="mediaProgressTime" typeId="mediaProgressTime"/>
			<channel id="mediaProgress" typeId="mediaProgress"/>
			<channel id="mediaLength" typeId="mediaLength"/>
			<channel id="shuffle" typeId="shuffle"/>
			<channel id="imageUrl" typeId="imageUrl"/>
			<channel id="title" typeId="title"/>
			<channel id="subtitle1" typeId="subtitle1"/>
			<channel id="subtitle2" typeId="subtitle2"/>
			<channel id="providerDisplayName" typeId="providerDisplayName"/>
		</channels>
		<properties>
			<property name="thingTypeVersion">1</property>
		</properties>
		<representation-property>serialNumber</representation-property>
		<config-description>
			<parameter name="serialNumber" type="text" required="true">
				<label>Serial Number</label>
				<description>The serial number of the device from the Alexa app</description>
			</parameter>
		</config-description>
	</thing-type>
	<thing-type id="flashbriefingprofile">
		<supported-bridge-type-refs>
			<bridge-type-ref id="account"/>
		</supported-bridge-type-refs>
		<label>Flash Briefing Profile</label>
		<description>Store and load a flash briefing configuration</description>
		<channels>
			<channel id="save" typeId="save"/>
			<channel id="active" typeId="active"/>
			<channel id="playOnDevice" typeId="playOnDevice"/>
		</channels>
	</thing-type>
	<thing-type id="smartHomeDevice">
		<supported-bridge-type-refs>
			<bridge-type-ref id="account"/>
		</supported-bridge-type-refs>
		<label>Smart Home Device</label>
		<description>Smart home device connected to Alexa</description>
		<properties>
			<property name="thingTypeVersion">2</property>
		</properties>
		<representation-property>id</representation-property>
		<config-description>
			<parameter name="id" type="text" required="true">
				<label>Device Id</label>
				<description>The id of the device (Please use the discover function to get a configured Thing)</description>
			</parameter>
		</config-description>
	</thing-type>
	<thing-type id="smartHomeDeviceGroup">
		<supported-bridge-type-refs>
			<bridge-type-ref id="account"/>
		</supported-bridge-type-refs>
		<label>Smart Home Device Group</label>
		<description>Group of smart home devices in your amazon account</description>
		<properties>
			<property name="thingTypeVersion">1</property>
		</properties>
		<representation-property>id</representation-property>
		<config-description>
			<parameter name="id" type="text" required="true">
				<label>Group Id</label>
				<description>The id of the device group (Please use the discover function to get a configured Thing)</description>
			</parameter>
		</config-description>
	</thing-type>
	<channel-type id="save" advanced="true">
		<item-type>Switch</item-type>
		<label>Save</label>
		<description>Save the current flash briefing configuration (write-only)</description>
		<autoUpdatePolicy>veto</autoUpdatePolicy>
	</channel-type>
	<channel-type id="active">
		<item-type>Switch</item-type>
		<label>Active</label>
		<description>Activate this flash briefing configuration</description>
	</channel-type>
	<channel-type id="playOnDevice" advanced="true">
		<item-type>String</item-type>
		<label>Play On Device</label>
		<description>Plays the briefing on the device (serial number or name, write only)</description>
		<autoUpdatePolicy>veto</autoUpdatePolicy>
	</channel-type>
	<channel-type id="bluetoothDeviceName" advanced="true">
		<item-type>String</item-type>
		<label>Bluetooth Device</label>
		<description>Connected bluetooth device</description>
		<state readOnly="true"/>
	</channel-type>
	<channel-type id="remind" advanced="true">
		<item-type>String</item-type>
		<label>Remind</label>
		<description>Speak the reminder and send a notification to the Alexa app</description>
		<autoUpdatePolicy>veto</autoUpdatePolicy>
	</channel-type>
	<channel-type id="startRoutine" advanced="true">
		<item-type>String</item-type>
		<label>Start a Routine</label>
		<description>The command which must be spoken to active the routing without the preceding "Alexa," (write-only)
		</description>
		<autoUpdatePolicy>veto</autoUpdatePolicy>
	</channel-type>
	<channel-type id="playAlarmSound" advanced="true">
		<item-type>String</item-type>
		<label>Alarm Sound</label>
		<description>Plays an alarm sound</description>
		<autoUpdatePolicy>veto</autoUpdatePolicy>
	</channel-type>
	<channel-type id="providerDisplayName" advanced="true">
		<item-type>String</item-type>
		<label>Provider Name</label>
		<description>Name of music provider</description>
		<state readOnly="true"/>
	</channel-type>
	<channel-type id="bluetoothMAC">
		<item-type>String</item-type>
		<label>Bluetooth Connection</label>
		<description>MAC-Address of the bluetooth connected device</description>
	</channel-type>
	<channel-type id="imageUrl" advanced="true">
		<item-type>String</item-type>
		<label>Image Url</label>
		<description>Url of the album image or radio station logo</description>
		<state readOnly="true"/>
	</channel-type>
	<channel-type id="title">
		<item-type>String</item-type>
		<label>Title</label>
		<state readOnly="true"/>
	</channel-type>
	<channel-type id="subtitle1" advanced="true">
		<item-type>String</item-type>
		<label>Subtitle 1</label>
		<state readOnly="true"/>
	</channel-type>
	<channel-type id="subtitle2" advanced="true">
		<item-type>String</item-type>
		<label>Subtitle 2</label>
		<state readOnly="true"/>
	</channel-type>
	<channel-type id="bluetooth" advanced="true">
		<item-type>Switch</item-type>
		<label>Bluetooth Connection</label>
		<description>Connect to last used device</description>
	</channel-type>
	<channel-type id="loop">
		<item-type>Switch</item-type>
		<label>Loop</label>
		<description>Loop</description>
	</channel-type>
	<channel-type id="shuffle">
		<item-type>Switch</item-type>
		<label>Shuffle</label>
		<description>Shuffle play</description>
	</channel-type>
	<channel-type id="player">
		<item-type>Player</item-type>
		<label>Player</label>
		<description>Music Player</description>
	</channel-type>
	<channel-type id="volume">
		<item-type>Dimmer</item-type>
		<label>Volume</label>
		<description>Volume of the sound</description>
	</channel-type>
	<channel-type id="equalizerTreble">
		<item-type>Number</item-type>
		<label>Treble</label>
		<description>Equalizer Treble</description>
		<state min="-6" max="6" step="1"></state>
	</channel-type>
	<channel-type id="equalizerMidrange">
		<item-type>Number</item-type>
		<label>Midrange</label>
		<description>Equalizer Midrange</description>
		<state min="-6" max="6" step="1"></state>
	</channel-type>
	<channel-type id="equalizerBass">
		<item-type>Number</item-type>
		<label>Bass</label>
		<description>Equalizer Bass</description>
		<state min="-6" max="6" step="1"></state>
	</channel-type>
	<channel-type id="musicProviderId">
		<item-type>String</item-type>
		<label>Music Provider</label>
	</channel-type>
	<channel-type id="playMusicVoiceCommand">
		<item-type>String</item-type>
		<label>Music Voice Command</label>
		<description>Voice command as text. E.g. 'Yesterday from the Beatles' (write-only)</description>
		<autoUpdatePolicy>veto</autoUpdatePolicy>
	</channel-type>
	<channel-type id="sendMessage">
		<item-type>String</item-type>
		<label>Send Message</label>
		<description>Sends a message to the Echo devices (write-only).</description>
		<autoUpdatePolicy>veto</autoUpdatePolicy>
	</channel-type>
	<channel-type id="refreshActivity">
		<item-type>Switch</item-type>
		<label>Refresh Activity</label>
		<description>A command send to this channel refreshes the customer history activity (write-only)</description>
		<autoUpdatePolicy>veto</autoUpdatePolicy>
	</channel-type>
	<channel-type id="announcement" advanced="true">
		<item-type>String</item-type>
		<label>Announcement</label>
		<description>Display the announcement message on the display (write-only). See in the tutorial section of the binding
			description to learn how it's possible to set the title and turn off the sound.</description>
		<autoUpdatePolicy>veto</autoUpdatePolicy>
	</channel-type>
	<channel-type id="textToSpeech" advanced="true">
		<item-type>String</item-type>
		<label>Speak</label>
		<description>Speak the text (write-only). It is possible to use plain text or SSML: &lt;speak&gt;I want to tell you a
			secret.&lt;amazon:effect name=&quot;whispered&quot;&gt;I am not a real human.&lt;/amazon:effect&gt;.Can you believe
			it?&lt;/speak&gt;</description>
		<autoUpdatePolicy>veto</autoUpdatePolicy>
	</channel-type>
	<channel-type id="textToSpeechVolume" advanced="true">
		<item-type>Dimmer</item-type>
		<label>Speak Volume</label>
		<description>Volume of the Speak channel. If 0, the current volume will be used.</description>
	</channel-type>
	<channel-type id="textCommand">
		<item-type>String</item-type>
		<label>TextCommand</label>
		<description>Run a command (write-only). The command can run like a spoken command.</description>
		<autoUpdatePolicy>veto</autoUpdatePolicy>
	</channel-type>
	<channel-type id="lastVoiceCommand" advanced="true">
		<item-type>String</item-type>
		<label>Last Voice Command</label>
		<description>Last voice command spoken to the device. Writing to the channel starts voice output.</description>
	</channel-type>
	<channel-type id="lastSpokenText" advanced="true">
		<item-type>String</item-type>
		<label>Last Spoken Text</label>
		<description>Last spoken text of the device.</description>
		<state readOnly="true"/>
	</channel-type>
	<channel-type id="mediaProgress">
		<item-type>Dimmer</item-type>
		<label>Media Progress</label>
		<description>Media progress in percent</description>
	</channel-type>
	<channel-type id="mediaProgressTime" advanced="true">
		<item-type>Number:Time</item-type>
		<label>Media Play Time</label>
		<state pattern="%d %unit%"/>
	</channel-type>
	<channel-type id="mediaLength" advanced="true">
		<item-type>Number:Time</item-type>
		<label>Media Length</label>
		<state readOnly="true" pattern="%d %unit%"/>
	</channel-type>
	<channel-type id="startCommand">
		<item-type>String</item-type>
		<label>Start</label>
		<description>Start information (write-only)</description>
		<autoUpdatePolicy>veto</autoUpdatePolicy>
	</channel-type>
	<channel-type id="notificationVolume" advanced="true">
		<item-type>Dimmer</item-type>
		<label>Notification Volume</label>
	</channel-type>
	<channel-type id="ascendingAlarm" advanced="true">
		<item-type>Switch</item-type>
		<label>Ascending Alarm</label>
		<description>Ascending alarm up to the configured volume</description>
	</channel-type>
	<channel-type id="doNotDisturb">
		<item-type>Switch</item-type>
		<label>Do Not Disturb</label>
		<description>Do Not Disturb mode enabled</description>
	</channel-type>
	<channel-type id="nextReminder" advanced="true">
		<item-type>DateTime</item-type>
		<label>Next Reminder</label>
		<state readOnly="true"/>
	</channel-type>
	<channel-type id="nextAlarm" advanced="true">
		<item-type>DateTime</item-type>
		<label>Next Alarm</label>
		<state readOnly="true"/>
	</channel-type>
	<channel-type id="nextMusicAlarm" advanced="true">
		<item-type>DateTime</item-type>
		<label>Next Music Alarm</label>
		<state readOnly="true"/>
	</channel-type>
	<channel-type id="nextTimer" advanced="true">
		<item-type>DateTime</item-type>
		<label>Next Timer</label>
		<state readOnly="true"/>
	</channel-type>
	<!-- dynamic smart home device channels -->
	<!-- Alexa.AcousticEventSensor -->
	<channel-type id="acousticEventDetectionState">
		<item-type>Contact</item-type>
		<label>Acoustic Event</label>
		<state readOnly="true"/>
	</channel-type>
	<!-- Alexa.BrightnessController -->
	<channel-type id="brightness">
		<item-type>Dimmer</item-type>
		<label>Brightness</label>
		<state min="0" max="100" step="1"/>
	</channel-type>
	<!-- Alexa.ColorController -->
	<channel-type id="color">
		<item-type>Color</item-type>
		<label>Color</label>
		<config-description>
			<parameter name="matchColors" type="boolean">
				<label>Match Colors</label>
				<description>The API does not support sending HSB values. Enabling this allows the binding to try to get the most
					similar pre-defined color and send that instead.</description>
				<default>false</default>
			</parameter>
		</config-description>
	</channel-type>
	<channel-type id="colorName">
		<item-type>String</item-type>
		<label>Color Name</label>
	</channel-type>
	<!-- Alexa.ColorTemperatureController -->
	<channel-type id="colorTemperatureName">
		<item-type>String</item-type>
		<label>Color Temperature Name</label>
	</channel-type>
	<!-- Alexa.PercentageController -->
	<channel-type id="percentage">
		<item-type>Dimmer</item-type>
		<label>Percentage</label>
	</channel-type>
	<!-- Alexa.PowerController -->
	<channel-type id="powerState">
		<item-type>Switch</item-type>
		<label>Power State</label>
	</channel-type>
	<!-- Alexa.LockController -->
	<channel-type id="lockState">
		<item-type>Switch</item-type>
		<label>Lock State</label>
	</channel-type>
	<!-- Alexa.PowerLevelController -->
	<channel-type id="powerLevel">
		<item-type>Dimmer</item-type>
		<label>Power Level</label>
		<state min="0" max="100" step="1"/>
	</channel-type>
	<!-- Alexa.SecurityPanelController -->
	<channel-type id="armState">
		<item-type>String</item-type>
		<label>ARM State</label>
	</channel-type>
	<channel-type id="burglaryAlarm">
		<item-type>Contact</item-type>
		<label>Burglary Alarm</label>
		<state readOnly="true"/>
	</channel-type>
	<channel-type id="carbonMonoxideAlarm">
		<item-type>Contact</item-type>
		<label>Carbon Monoxide Alarm</label>
		<state readOnly="true"/>
	</channel-type>
	<channel-type id="fireAlarm">
		<item-type>Contact</item-type>
		<label>Fire Alarm</label>
		<state readOnly="true"/>
	</channel-type>
	<channel-type id="waterAlarm">
		<item-type>Contact</item-type>
		<label>Water Alarm</label>
		<state readOnly="true"/>
	</channel-type>
	<!-- Alexa.TemperatureSensor -->
	<channel-type id="temperature">
		<item-type>Number:Temperature</item-type>
		<label>Temperature</label>
		<state readOnly="true" pattern="%.1f %unit%"/>
	</channel-type>
	<!-- Alexa.MotionSensor -->
	<channel-type id="motionDetected">
		<item-type>Switch</item-type>
		<label>Motion Detected</label>
		<state readOnly="true"/>
	</channel-type>
	<!-- Alexa.EndpointHealth -->
	<channel-type id="connectivity">
		<item-type>String</item-type>
		<label>Connectivity</label>
		<state readOnly="true"/>
	</channel-type>
	<!-- Alexa.ContactSensor -->
	<channel-type id="contact">
		<item-type>Contact</item-type>
		<label>Contact</label>
		<state readOnly="true"/>
	</channel-type>
	<!-- Alexa.Location -->
	<channel-type id="geoLocation">
		<item-type>Location</item-type>
		<label>Location</label>
		<state readOnly="true"/>
	</channel-type>
	<!-- Alexa.ThermostatController -->
	<channel-type id="targetSetpoint">
		<item-type>Number:Temperature</item-type>
		<label>Target Setpoint</label>
		<state pattern="%.1f %unit%"/>
	</channel-type>
	<channel-type id="upperSetpoint">
		<item-type>Number:Temperature</item-type>
		<label>Upper Setpoint</label>
		<category>Temperature</category>
		<tags>
			<tag>Setpoint</tag>
			<tag>Temperature</tag>
		</tags>
		<state pattern="%.1f %unit%"/>
	</channel-type>
	<channel-type id="lowerSetpoint">
		<item-type>Number:Temperature</item-type>
		<label>Lower Setpoint</label>
		<category>Temperature</category>
		<tags>
			<tag>Setpoint</tag>
			<tag>Temperature</tag>
		</tags>
		<state pattern="%.1f %unit%"/>
	</channel-type>
	<channel-type id="thermostatMode">
		<item-type>String</item-type>
		<label>Thermostat Mode</label>
		<state>
			<options>
				<option value="AUTO">Auto</option>
				<option value="HEAT">Heat</option>
				<option value="COOL">Cool</option>
				<option value="OFF">Off</option>
				<option value="ECO">Eco</option>
			</options>
		</state>
	</channel-type>
	<!-- Alexa.RangeController -->
	<channel-type id="indoorAirQuality">
		<item-type>Number</item-type>
		<label>Indoor Air Quality</label>
		<state readOnly="true"/>
	</channel-type>
	<channel-type id="relativeHumidity">
		<item-type unitHint="%">Number:Dimensionless</item-type>
		<label>Humidity</label>
		<category>Humidity</category>
		<tags>
			<tag>Measurement</tag>
			<tag>Temperature</tag>
		</tags>
		<state readOnly="true" pattern=":.1%"/>
	</channel-type>
	<channel-type id="pm25">
		<item-type>Number:Density</item-type>
		<label>PM2.5</label>
		<description>Particulate Matter PM2.5 density.</description>
		<state readOnly="true"/>
	</channel-type>
	<channel-type id="carbonMonoxide">
		<item-type>Number:Dimensionless</item-type>
		<label>Carbon Monoxide</label>
		<state readOnly="true"/>
	</channel-type>
	<channel-type id="voc">
		<item-type>Number</item-type>
		<label>VOC</label>
		<state readOnly="true"/>
	</channel-type>
	<channel-type id="fanSpeed">
		<item-type>Number</item-type>
		<label>Fan speed</label>
	</channel-type>


</thing:thing-descriptions>
