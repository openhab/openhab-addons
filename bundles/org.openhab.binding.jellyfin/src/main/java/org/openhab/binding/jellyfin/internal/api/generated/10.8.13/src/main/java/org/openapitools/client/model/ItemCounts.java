/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Class LibrarySummary.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-27T20:32:44.334408221+01:00[Europe/Zurich]", comments = "Generator version: 7.10.0")
public class ItemCounts {
  public static final String SERIALIZED_NAME_MOVIE_COUNT = "MovieCount";
  @SerializedName(SERIALIZED_NAME_MOVIE_COUNT)
  @javax.annotation.Nullable
  private Integer movieCount;

  public static final String SERIALIZED_NAME_SERIES_COUNT = "SeriesCount";
  @SerializedName(SERIALIZED_NAME_SERIES_COUNT)
  @javax.annotation.Nullable
  private Integer seriesCount;

  public static final String SERIALIZED_NAME_EPISODE_COUNT = "EpisodeCount";
  @SerializedName(SERIALIZED_NAME_EPISODE_COUNT)
  @javax.annotation.Nullable
  private Integer episodeCount;

  public static final String SERIALIZED_NAME_ARTIST_COUNT = "ArtistCount";
  @SerializedName(SERIALIZED_NAME_ARTIST_COUNT)
  @javax.annotation.Nullable
  private Integer artistCount;

  public static final String SERIALIZED_NAME_PROGRAM_COUNT = "ProgramCount";
  @SerializedName(SERIALIZED_NAME_PROGRAM_COUNT)
  @javax.annotation.Nullable
  private Integer programCount;

  public static final String SERIALIZED_NAME_TRAILER_COUNT = "TrailerCount";
  @SerializedName(SERIALIZED_NAME_TRAILER_COUNT)
  @javax.annotation.Nullable
  private Integer trailerCount;

  public static final String SERIALIZED_NAME_SONG_COUNT = "SongCount";
  @SerializedName(SERIALIZED_NAME_SONG_COUNT)
  @javax.annotation.Nullable
  private Integer songCount;

  public static final String SERIALIZED_NAME_ALBUM_COUNT = "AlbumCount";
  @SerializedName(SERIALIZED_NAME_ALBUM_COUNT)
  @javax.annotation.Nullable
  private Integer albumCount;

  public static final String SERIALIZED_NAME_MUSIC_VIDEO_COUNT = "MusicVideoCount";
  @SerializedName(SERIALIZED_NAME_MUSIC_VIDEO_COUNT)
  @javax.annotation.Nullable
  private Integer musicVideoCount;

  public static final String SERIALIZED_NAME_BOX_SET_COUNT = "BoxSetCount";
  @SerializedName(SERIALIZED_NAME_BOX_SET_COUNT)
  @javax.annotation.Nullable
  private Integer boxSetCount;

  public static final String SERIALIZED_NAME_BOOK_COUNT = "BookCount";
  @SerializedName(SERIALIZED_NAME_BOOK_COUNT)
  @javax.annotation.Nullable
  private Integer bookCount;

  public static final String SERIALIZED_NAME_ITEM_COUNT = "ItemCount";
  @SerializedName(SERIALIZED_NAME_ITEM_COUNT)
  @javax.annotation.Nullable
  private Integer itemCount;

  public ItemCounts() {
  }

  public ItemCounts movieCount(@javax.annotation.Nullable Integer movieCount) {
    this.movieCount = movieCount;
    return this;
  }

  /**
   * Gets or sets the movie count.
   * @return movieCount
   */
  @javax.annotation.Nullable
  public Integer getMovieCount() {
    return movieCount;
  }

  public void setMovieCount(@javax.annotation.Nullable Integer movieCount) {
    this.movieCount = movieCount;
  }


  public ItemCounts seriesCount(@javax.annotation.Nullable Integer seriesCount) {
    this.seriesCount = seriesCount;
    return this;
  }

  /**
   * Gets or sets the series count.
   * @return seriesCount
   */
  @javax.annotation.Nullable
  public Integer getSeriesCount() {
    return seriesCount;
  }

  public void setSeriesCount(@javax.annotation.Nullable Integer seriesCount) {
    this.seriesCount = seriesCount;
  }


  public ItemCounts episodeCount(@javax.annotation.Nullable Integer episodeCount) {
    this.episodeCount = episodeCount;
    return this;
  }

  /**
   * Gets or sets the episode count.
   * @return episodeCount
   */
  @javax.annotation.Nullable
  public Integer getEpisodeCount() {
    return episodeCount;
  }

  public void setEpisodeCount(@javax.annotation.Nullable Integer episodeCount) {
    this.episodeCount = episodeCount;
  }


  public ItemCounts artistCount(@javax.annotation.Nullable Integer artistCount) {
    this.artistCount = artistCount;
    return this;
  }

  /**
   * Gets or sets the artist count.
   * @return artistCount
   */
  @javax.annotation.Nullable
  public Integer getArtistCount() {
    return artistCount;
  }

  public void setArtistCount(@javax.annotation.Nullable Integer artistCount) {
    this.artistCount = artistCount;
  }


  public ItemCounts programCount(@javax.annotation.Nullable Integer programCount) {
    this.programCount = programCount;
    return this;
  }

  /**
   * Gets or sets the program count.
   * @return programCount
   */
  @javax.annotation.Nullable
  public Integer getProgramCount() {
    return programCount;
  }

  public void setProgramCount(@javax.annotation.Nullable Integer programCount) {
    this.programCount = programCount;
  }


  public ItemCounts trailerCount(@javax.annotation.Nullable Integer trailerCount) {
    this.trailerCount = trailerCount;
    return this;
  }

  /**
   * Gets or sets the trailer count.
   * @return trailerCount
   */
  @javax.annotation.Nullable
  public Integer getTrailerCount() {
    return trailerCount;
  }

  public void setTrailerCount(@javax.annotation.Nullable Integer trailerCount) {
    this.trailerCount = trailerCount;
  }


  public ItemCounts songCount(@javax.annotation.Nullable Integer songCount) {
    this.songCount = songCount;
    return this;
  }

  /**
   * Gets or sets the song count.
   * @return songCount
   */
  @javax.annotation.Nullable
  public Integer getSongCount() {
    return songCount;
  }

  public void setSongCount(@javax.annotation.Nullable Integer songCount) {
    this.songCount = songCount;
  }


  public ItemCounts albumCount(@javax.annotation.Nullable Integer albumCount) {
    this.albumCount = albumCount;
    return this;
  }

  /**
   * Gets or sets the album count.
   * @return albumCount
   */
  @javax.annotation.Nullable
  public Integer getAlbumCount() {
    return albumCount;
  }

  public void setAlbumCount(@javax.annotation.Nullable Integer albumCount) {
    this.albumCount = albumCount;
  }


  public ItemCounts musicVideoCount(@javax.annotation.Nullable Integer musicVideoCount) {
    this.musicVideoCount = musicVideoCount;
    return this;
  }

  /**
   * Gets or sets the music video count.
   * @return musicVideoCount
   */
  @javax.annotation.Nullable
  public Integer getMusicVideoCount() {
    return musicVideoCount;
  }

  public void setMusicVideoCount(@javax.annotation.Nullable Integer musicVideoCount) {
    this.musicVideoCount = musicVideoCount;
  }


  public ItemCounts boxSetCount(@javax.annotation.Nullable Integer boxSetCount) {
    this.boxSetCount = boxSetCount;
    return this;
  }

  /**
   * Gets or sets the box set count.
   * @return boxSetCount
   */
  @javax.annotation.Nullable
  public Integer getBoxSetCount() {
    return boxSetCount;
  }

  public void setBoxSetCount(@javax.annotation.Nullable Integer boxSetCount) {
    this.boxSetCount = boxSetCount;
  }


  public ItemCounts bookCount(@javax.annotation.Nullable Integer bookCount) {
    this.bookCount = bookCount;
    return this;
  }

  /**
   * Gets or sets the book count.
   * @return bookCount
   */
  @javax.annotation.Nullable
  public Integer getBookCount() {
    return bookCount;
  }

  public void setBookCount(@javax.annotation.Nullable Integer bookCount) {
    this.bookCount = bookCount;
  }


  public ItemCounts itemCount(@javax.annotation.Nullable Integer itemCount) {
    this.itemCount = itemCount;
    return this;
  }

  /**
   * Gets or sets the item count.
   * @return itemCount
   */
  @javax.annotation.Nullable
  public Integer getItemCount() {
    return itemCount;
  }

  public void setItemCount(@javax.annotation.Nullable Integer itemCount) {
    this.itemCount = itemCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemCounts itemCounts = (ItemCounts) o;
    return Objects.equals(this.movieCount, itemCounts.movieCount) &&
        Objects.equals(this.seriesCount, itemCounts.seriesCount) &&
        Objects.equals(this.episodeCount, itemCounts.episodeCount) &&
        Objects.equals(this.artistCount, itemCounts.artistCount) &&
        Objects.equals(this.programCount, itemCounts.programCount) &&
        Objects.equals(this.trailerCount, itemCounts.trailerCount) &&
        Objects.equals(this.songCount, itemCounts.songCount) &&
        Objects.equals(this.albumCount, itemCounts.albumCount) &&
        Objects.equals(this.musicVideoCount, itemCounts.musicVideoCount) &&
        Objects.equals(this.boxSetCount, itemCounts.boxSetCount) &&
        Objects.equals(this.bookCount, itemCounts.bookCount) &&
        Objects.equals(this.itemCount, itemCounts.itemCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(movieCount, seriesCount, episodeCount, artistCount, programCount, trailerCount, songCount, albumCount, musicVideoCount, boxSetCount, bookCount, itemCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemCounts {\n");
    sb.append("    movieCount: ").append(toIndentedString(movieCount)).append("\n");
    sb.append("    seriesCount: ").append(toIndentedString(seriesCount)).append("\n");
    sb.append("    episodeCount: ").append(toIndentedString(episodeCount)).append("\n");
    sb.append("    artistCount: ").append(toIndentedString(artistCount)).append("\n");
    sb.append("    programCount: ").append(toIndentedString(programCount)).append("\n");
    sb.append("    trailerCount: ").append(toIndentedString(trailerCount)).append("\n");
    sb.append("    songCount: ").append(toIndentedString(songCount)).append("\n");
    sb.append("    albumCount: ").append(toIndentedString(albumCount)).append("\n");
    sb.append("    musicVideoCount: ").append(toIndentedString(musicVideoCount)).append("\n");
    sb.append("    boxSetCount: ").append(toIndentedString(boxSetCount)).append("\n");
    sb.append("    bookCount: ").append(toIndentedString(bookCount)).append("\n");
    sb.append("    itemCount: ").append(toIndentedString(itemCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MovieCount");
    openapiFields.add("SeriesCount");
    openapiFields.add("EpisodeCount");
    openapiFields.add("ArtistCount");
    openapiFields.add("ProgramCount");
    openapiFields.add("TrailerCount");
    openapiFields.add("SongCount");
    openapiFields.add("AlbumCount");
    openapiFields.add("MusicVideoCount");
    openapiFields.add("BoxSetCount");
    openapiFields.add("BookCount");
    openapiFields.add("ItemCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ItemCounts
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ItemCounts.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ItemCounts is not found in the empty JSON string", ItemCounts.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ItemCounts.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ItemCounts` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ItemCounts.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ItemCounts' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ItemCounts> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ItemCounts.class));

       return (TypeAdapter<T>) new TypeAdapter<ItemCounts>() {
           @Override
           public void write(JsonWriter out, ItemCounts value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ItemCounts read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ItemCounts given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ItemCounts
   * @throws IOException if the JSON string is invalid with respect to ItemCounts
   */
  public static ItemCounts fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ItemCounts.class);
  }

  /**
   * Convert an instance of ItemCounts to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

