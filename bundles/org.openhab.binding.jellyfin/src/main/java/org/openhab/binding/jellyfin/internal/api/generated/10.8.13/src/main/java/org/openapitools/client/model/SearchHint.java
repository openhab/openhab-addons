/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Class SearchHintResult.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-27T20:32:44.334408221+01:00[Europe/Zurich]", comments = "Generator version: 7.10.0")
public class SearchHint {
  public static final String SERIALIZED_NAME_ITEM_ID = "ItemId";
  @SerializedName(SERIALIZED_NAME_ITEM_ID)
  @javax.annotation.Nullable
  private UUID itemId;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private UUID id;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_MATCHED_TERM = "MatchedTerm";
  @SerializedName(SERIALIZED_NAME_MATCHED_TERM)
  @javax.annotation.Nullable
  private String matchedTerm;

  public static final String SERIALIZED_NAME_INDEX_NUMBER = "IndexNumber";
  @SerializedName(SERIALIZED_NAME_INDEX_NUMBER)
  @javax.annotation.Nullable
  private Integer indexNumber;

  public static final String SERIALIZED_NAME_PRODUCTION_YEAR = "ProductionYear";
  @SerializedName(SERIALIZED_NAME_PRODUCTION_YEAR)
  @javax.annotation.Nullable
  private Integer productionYear;

  public static final String SERIALIZED_NAME_PARENT_INDEX_NUMBER = "ParentIndexNumber";
  @SerializedName(SERIALIZED_NAME_PARENT_INDEX_NUMBER)
  @javax.annotation.Nullable
  private Integer parentIndexNumber;

  public static final String SERIALIZED_NAME_PRIMARY_IMAGE_TAG = "PrimaryImageTag";
  @SerializedName(SERIALIZED_NAME_PRIMARY_IMAGE_TAG)
  @javax.annotation.Nullable
  private String primaryImageTag;

  public static final String SERIALIZED_NAME_THUMB_IMAGE_TAG = "ThumbImageTag";
  @SerializedName(SERIALIZED_NAME_THUMB_IMAGE_TAG)
  @javax.annotation.Nullable
  private String thumbImageTag;

  public static final String SERIALIZED_NAME_THUMB_IMAGE_ITEM_ID = "ThumbImageItemId";
  @SerializedName(SERIALIZED_NAME_THUMB_IMAGE_ITEM_ID)
  @javax.annotation.Nullable
  private String thumbImageItemId;

  public static final String SERIALIZED_NAME_BACKDROP_IMAGE_TAG = "BackdropImageTag";
  @SerializedName(SERIALIZED_NAME_BACKDROP_IMAGE_TAG)
  @javax.annotation.Nullable
  private String backdropImageTag;

  public static final String SERIALIZED_NAME_BACKDROP_IMAGE_ITEM_ID = "BackdropImageItemId";
  @SerializedName(SERIALIZED_NAME_BACKDROP_IMAGE_ITEM_ID)
  @javax.annotation.Nullable
  private String backdropImageItemId;

  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  @javax.annotation.Nullable
  private String type;

  public static final String SERIALIZED_NAME_IS_FOLDER = "IsFolder";
  @SerializedName(SERIALIZED_NAME_IS_FOLDER)
  @javax.annotation.Nullable
  private Boolean isFolder;

  public static final String SERIALIZED_NAME_RUN_TIME_TICKS = "RunTimeTicks";
  @SerializedName(SERIALIZED_NAME_RUN_TIME_TICKS)
  @javax.annotation.Nullable
  private Long runTimeTicks;

  public static final String SERIALIZED_NAME_MEDIA_TYPE = "MediaType";
  @SerializedName(SERIALIZED_NAME_MEDIA_TYPE)
  @javax.annotation.Nullable
  private String mediaType;

  public static final String SERIALIZED_NAME_START_DATE = "StartDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_END_DATE = "EndDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime endDate;

  public static final String SERIALIZED_NAME_SERIES = "Series";
  @SerializedName(SERIALIZED_NAME_SERIES)
  @javax.annotation.Nullable
  private String series;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  @javax.annotation.Nullable
  private String status;

  public static final String SERIALIZED_NAME_ALBUM = "Album";
  @SerializedName(SERIALIZED_NAME_ALBUM)
  @javax.annotation.Nullable
  private String album;

  public static final String SERIALIZED_NAME_ALBUM_ID = "AlbumId";
  @SerializedName(SERIALIZED_NAME_ALBUM_ID)
  @javax.annotation.Nullable
  private UUID albumId;

  public static final String SERIALIZED_NAME_ALBUM_ARTIST = "AlbumArtist";
  @SerializedName(SERIALIZED_NAME_ALBUM_ARTIST)
  @javax.annotation.Nullable
  private String albumArtist;

  public static final String SERIALIZED_NAME_ARTISTS = "Artists";
  @SerializedName(SERIALIZED_NAME_ARTISTS)
  @javax.annotation.Nullable
  private List<String> artists;

  public static final String SERIALIZED_NAME_SONG_COUNT = "SongCount";
  @SerializedName(SERIALIZED_NAME_SONG_COUNT)
  @javax.annotation.Nullable
  private Integer songCount;

  public static final String SERIALIZED_NAME_EPISODE_COUNT = "EpisodeCount";
  @SerializedName(SERIALIZED_NAME_EPISODE_COUNT)
  @javax.annotation.Nullable
  private Integer episodeCount;

  public static final String SERIALIZED_NAME_CHANNEL_ID = "ChannelId";
  @SerializedName(SERIALIZED_NAME_CHANNEL_ID)
  @javax.annotation.Nullable
  private UUID channelId;

  public static final String SERIALIZED_NAME_CHANNEL_NAME = "ChannelName";
  @SerializedName(SERIALIZED_NAME_CHANNEL_NAME)
  @javax.annotation.Nullable
  private String channelName;

  public static final String SERIALIZED_NAME_PRIMARY_IMAGE_ASPECT_RATIO = "PrimaryImageAspectRatio";
  @SerializedName(SERIALIZED_NAME_PRIMARY_IMAGE_ASPECT_RATIO)
  @javax.annotation.Nullable
  private Double primaryImageAspectRatio;

  public SearchHint() {
  }

  public SearchHint itemId(@javax.annotation.Nullable UUID itemId) {
    this.itemId = itemId;
    return this;
  }

  /**
   * Gets or sets the item id.
   * @return itemId
   */
  @javax.annotation.Nullable
  public UUID getItemId() {
    return itemId;
  }

  public void setItemId(@javax.annotation.Nullable UUID itemId) {
    this.itemId = itemId;
  }


  public SearchHint id(@javax.annotation.Nullable UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public UUID getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable UUID id) {
    this.id = id;
  }


  public SearchHint name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Gets or sets the name.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public SearchHint matchedTerm(@javax.annotation.Nullable String matchedTerm) {
    this.matchedTerm = matchedTerm;
    return this;
  }

  /**
   * Gets or sets the matched term.
   * @return matchedTerm
   */
  @javax.annotation.Nullable
  public String getMatchedTerm() {
    return matchedTerm;
  }

  public void setMatchedTerm(@javax.annotation.Nullable String matchedTerm) {
    this.matchedTerm = matchedTerm;
  }


  public SearchHint indexNumber(@javax.annotation.Nullable Integer indexNumber) {
    this.indexNumber = indexNumber;
    return this;
  }

  /**
   * Gets or sets the index number.
   * @return indexNumber
   */
  @javax.annotation.Nullable
  public Integer getIndexNumber() {
    return indexNumber;
  }

  public void setIndexNumber(@javax.annotation.Nullable Integer indexNumber) {
    this.indexNumber = indexNumber;
  }


  public SearchHint productionYear(@javax.annotation.Nullable Integer productionYear) {
    this.productionYear = productionYear;
    return this;
  }

  /**
   * Gets or sets the production year.
   * @return productionYear
   */
  @javax.annotation.Nullable
  public Integer getProductionYear() {
    return productionYear;
  }

  public void setProductionYear(@javax.annotation.Nullable Integer productionYear) {
    this.productionYear = productionYear;
  }


  public SearchHint parentIndexNumber(@javax.annotation.Nullable Integer parentIndexNumber) {
    this.parentIndexNumber = parentIndexNumber;
    return this;
  }

  /**
   * Gets or sets the parent index number.
   * @return parentIndexNumber
   */
  @javax.annotation.Nullable
  public Integer getParentIndexNumber() {
    return parentIndexNumber;
  }

  public void setParentIndexNumber(@javax.annotation.Nullable Integer parentIndexNumber) {
    this.parentIndexNumber = parentIndexNumber;
  }


  public SearchHint primaryImageTag(@javax.annotation.Nullable String primaryImageTag) {
    this.primaryImageTag = primaryImageTag;
    return this;
  }

  /**
   * Gets or sets the image tag.
   * @return primaryImageTag
   */
  @javax.annotation.Nullable
  public String getPrimaryImageTag() {
    return primaryImageTag;
  }

  public void setPrimaryImageTag(@javax.annotation.Nullable String primaryImageTag) {
    this.primaryImageTag = primaryImageTag;
  }


  public SearchHint thumbImageTag(@javax.annotation.Nullable String thumbImageTag) {
    this.thumbImageTag = thumbImageTag;
    return this;
  }

  /**
   * Gets or sets the thumb image tag.
   * @return thumbImageTag
   */
  @javax.annotation.Nullable
  public String getThumbImageTag() {
    return thumbImageTag;
  }

  public void setThumbImageTag(@javax.annotation.Nullable String thumbImageTag) {
    this.thumbImageTag = thumbImageTag;
  }


  public SearchHint thumbImageItemId(@javax.annotation.Nullable String thumbImageItemId) {
    this.thumbImageItemId = thumbImageItemId;
    return this;
  }

  /**
   * Gets or sets the thumb image item identifier.
   * @return thumbImageItemId
   */
  @javax.annotation.Nullable
  public String getThumbImageItemId() {
    return thumbImageItemId;
  }

  public void setThumbImageItemId(@javax.annotation.Nullable String thumbImageItemId) {
    this.thumbImageItemId = thumbImageItemId;
  }


  public SearchHint backdropImageTag(@javax.annotation.Nullable String backdropImageTag) {
    this.backdropImageTag = backdropImageTag;
    return this;
  }

  /**
   * Gets or sets the backdrop image tag.
   * @return backdropImageTag
   */
  @javax.annotation.Nullable
  public String getBackdropImageTag() {
    return backdropImageTag;
  }

  public void setBackdropImageTag(@javax.annotation.Nullable String backdropImageTag) {
    this.backdropImageTag = backdropImageTag;
  }


  public SearchHint backdropImageItemId(@javax.annotation.Nullable String backdropImageItemId) {
    this.backdropImageItemId = backdropImageItemId;
    return this;
  }

  /**
   * Gets or sets the backdrop image item identifier.
   * @return backdropImageItemId
   */
  @javax.annotation.Nullable
  public String getBackdropImageItemId() {
    return backdropImageItemId;
  }

  public void setBackdropImageItemId(@javax.annotation.Nullable String backdropImageItemId) {
    this.backdropImageItemId = backdropImageItemId;
  }


  public SearchHint type(@javax.annotation.Nullable String type) {
    this.type = type;
    return this;
  }

  /**
   * Gets or sets the type.
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(@javax.annotation.Nullable String type) {
    this.type = type;
  }


  public SearchHint isFolder(@javax.annotation.Nullable Boolean isFolder) {
    this.isFolder = isFolder;
    return this;
  }

  /**
   * Get isFolder
   * @return isFolder
   */
  @javax.annotation.Nullable
  public Boolean getIsFolder() {
    return isFolder;
  }

  public void setIsFolder(@javax.annotation.Nullable Boolean isFolder) {
    this.isFolder = isFolder;
  }


  public SearchHint runTimeTicks(@javax.annotation.Nullable Long runTimeTicks) {
    this.runTimeTicks = runTimeTicks;
    return this;
  }

  /**
   * Gets or sets the run time ticks.
   * @return runTimeTicks
   */
  @javax.annotation.Nullable
  public Long getRunTimeTicks() {
    return runTimeTicks;
  }

  public void setRunTimeTicks(@javax.annotation.Nullable Long runTimeTicks) {
    this.runTimeTicks = runTimeTicks;
  }


  public SearchHint mediaType(@javax.annotation.Nullable String mediaType) {
    this.mediaType = mediaType;
    return this;
  }

  /**
   * Gets or sets the type of the media.
   * @return mediaType
   */
  @javax.annotation.Nullable
  public String getMediaType() {
    return mediaType;
  }

  public void setMediaType(@javax.annotation.Nullable String mediaType) {
    this.mediaType = mediaType;
  }


  public SearchHint startDate(@javax.annotation.Nullable OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Get startDate
   * @return startDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(@javax.annotation.Nullable OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public SearchHint endDate(@javax.annotation.Nullable OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * Get endDate
   * @return endDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(@javax.annotation.Nullable OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  public SearchHint series(@javax.annotation.Nullable String series) {
    this.series = series;
    return this;
  }

  /**
   * Gets or sets the series.
   * @return series
   */
  @javax.annotation.Nullable
  public String getSeries() {
    return series;
  }

  public void setSeries(@javax.annotation.Nullable String series) {
    this.series = series;
  }


  public SearchHint status(@javax.annotation.Nullable String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(@javax.annotation.Nullable String status) {
    this.status = status;
  }


  public SearchHint album(@javax.annotation.Nullable String album) {
    this.album = album;
    return this;
  }

  /**
   * Gets or sets the album.
   * @return album
   */
  @javax.annotation.Nullable
  public String getAlbum() {
    return album;
  }

  public void setAlbum(@javax.annotation.Nullable String album) {
    this.album = album;
  }


  public SearchHint albumId(@javax.annotation.Nullable UUID albumId) {
    this.albumId = albumId;
    return this;
  }

  /**
   * Get albumId
   * @return albumId
   */
  @javax.annotation.Nullable
  public UUID getAlbumId() {
    return albumId;
  }

  public void setAlbumId(@javax.annotation.Nullable UUID albumId) {
    this.albumId = albumId;
  }


  public SearchHint albumArtist(@javax.annotation.Nullable String albumArtist) {
    this.albumArtist = albumArtist;
    return this;
  }

  /**
   * Gets or sets the album artist.
   * @return albumArtist
   */
  @javax.annotation.Nullable
  public String getAlbumArtist() {
    return albumArtist;
  }

  public void setAlbumArtist(@javax.annotation.Nullable String albumArtist) {
    this.albumArtist = albumArtist;
  }


  public SearchHint artists(@javax.annotation.Nullable List<String> artists) {
    this.artists = artists;
    return this;
  }

  public SearchHint addArtistsItem(String artistsItem) {
    if (this.artists == null) {
      this.artists = new ArrayList<>();
    }
    this.artists.add(artistsItem);
    return this;
  }

  /**
   * Gets or sets the artists.
   * @return artists
   */
  @javax.annotation.Nullable
  public List<String> getArtists() {
    return artists;
  }

  public void setArtists(@javax.annotation.Nullable List<String> artists) {
    this.artists = artists;
  }


  public SearchHint songCount(@javax.annotation.Nullable Integer songCount) {
    this.songCount = songCount;
    return this;
  }

  /**
   * Gets or sets the song count.
   * @return songCount
   */
  @javax.annotation.Nullable
  public Integer getSongCount() {
    return songCount;
  }

  public void setSongCount(@javax.annotation.Nullable Integer songCount) {
    this.songCount = songCount;
  }


  public SearchHint episodeCount(@javax.annotation.Nullable Integer episodeCount) {
    this.episodeCount = episodeCount;
    return this;
  }

  /**
   * Gets or sets the episode count.
   * @return episodeCount
   */
  @javax.annotation.Nullable
  public Integer getEpisodeCount() {
    return episodeCount;
  }

  public void setEpisodeCount(@javax.annotation.Nullable Integer episodeCount) {
    this.episodeCount = episodeCount;
  }


  public SearchHint channelId(@javax.annotation.Nullable UUID channelId) {
    this.channelId = channelId;
    return this;
  }

  /**
   * Gets or sets the channel identifier.
   * @return channelId
   */
  @javax.annotation.Nullable
  public UUID getChannelId() {
    return channelId;
  }

  public void setChannelId(@javax.annotation.Nullable UUID channelId) {
    this.channelId = channelId;
  }


  public SearchHint channelName(@javax.annotation.Nullable String channelName) {
    this.channelName = channelName;
    return this;
  }

  /**
   * Gets or sets the name of the channel.
   * @return channelName
   */
  @javax.annotation.Nullable
  public String getChannelName() {
    return channelName;
  }

  public void setChannelName(@javax.annotation.Nullable String channelName) {
    this.channelName = channelName;
  }


  public SearchHint primaryImageAspectRatio(@javax.annotation.Nullable Double primaryImageAspectRatio) {
    this.primaryImageAspectRatio = primaryImageAspectRatio;
    return this;
  }

  /**
   * Gets or sets the primary image aspect ratio.
   * @return primaryImageAspectRatio
   */
  @javax.annotation.Nullable
  public Double getPrimaryImageAspectRatio() {
    return primaryImageAspectRatio;
  }

  public void setPrimaryImageAspectRatio(@javax.annotation.Nullable Double primaryImageAspectRatio) {
    this.primaryImageAspectRatio = primaryImageAspectRatio;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchHint searchHint = (SearchHint) o;
    return Objects.equals(this.itemId, searchHint.itemId) &&
        Objects.equals(this.id, searchHint.id) &&
        Objects.equals(this.name, searchHint.name) &&
        Objects.equals(this.matchedTerm, searchHint.matchedTerm) &&
        Objects.equals(this.indexNumber, searchHint.indexNumber) &&
        Objects.equals(this.productionYear, searchHint.productionYear) &&
        Objects.equals(this.parentIndexNumber, searchHint.parentIndexNumber) &&
        Objects.equals(this.primaryImageTag, searchHint.primaryImageTag) &&
        Objects.equals(this.thumbImageTag, searchHint.thumbImageTag) &&
        Objects.equals(this.thumbImageItemId, searchHint.thumbImageItemId) &&
        Objects.equals(this.backdropImageTag, searchHint.backdropImageTag) &&
        Objects.equals(this.backdropImageItemId, searchHint.backdropImageItemId) &&
        Objects.equals(this.type, searchHint.type) &&
        Objects.equals(this.isFolder, searchHint.isFolder) &&
        Objects.equals(this.runTimeTicks, searchHint.runTimeTicks) &&
        Objects.equals(this.mediaType, searchHint.mediaType) &&
        Objects.equals(this.startDate, searchHint.startDate) &&
        Objects.equals(this.endDate, searchHint.endDate) &&
        Objects.equals(this.series, searchHint.series) &&
        Objects.equals(this.status, searchHint.status) &&
        Objects.equals(this.album, searchHint.album) &&
        Objects.equals(this.albumId, searchHint.albumId) &&
        Objects.equals(this.albumArtist, searchHint.albumArtist) &&
        Objects.equals(this.artists, searchHint.artists) &&
        Objects.equals(this.songCount, searchHint.songCount) &&
        Objects.equals(this.episodeCount, searchHint.episodeCount) &&
        Objects.equals(this.channelId, searchHint.channelId) &&
        Objects.equals(this.channelName, searchHint.channelName) &&
        Objects.equals(this.primaryImageAspectRatio, searchHint.primaryImageAspectRatio);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemId, id, name, matchedTerm, indexNumber, productionYear, parentIndexNumber, primaryImageTag, thumbImageTag, thumbImageItemId, backdropImageTag, backdropImageItemId, type, isFolder, runTimeTicks, mediaType, startDate, endDate, series, status, album, albumId, albumArtist, artists, songCount, episodeCount, channelId, channelName, primaryImageAspectRatio);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchHint {\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    matchedTerm: ").append(toIndentedString(matchedTerm)).append("\n");
    sb.append("    indexNumber: ").append(toIndentedString(indexNumber)).append("\n");
    sb.append("    productionYear: ").append(toIndentedString(productionYear)).append("\n");
    sb.append("    parentIndexNumber: ").append(toIndentedString(parentIndexNumber)).append("\n");
    sb.append("    primaryImageTag: ").append(toIndentedString(primaryImageTag)).append("\n");
    sb.append("    thumbImageTag: ").append(toIndentedString(thumbImageTag)).append("\n");
    sb.append("    thumbImageItemId: ").append(toIndentedString(thumbImageItemId)).append("\n");
    sb.append("    backdropImageTag: ").append(toIndentedString(backdropImageTag)).append("\n");
    sb.append("    backdropImageItemId: ").append(toIndentedString(backdropImageItemId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    isFolder: ").append(toIndentedString(isFolder)).append("\n");
    sb.append("    runTimeTicks: ").append(toIndentedString(runTimeTicks)).append("\n");
    sb.append("    mediaType: ").append(toIndentedString(mediaType)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    series: ").append(toIndentedString(series)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    album: ").append(toIndentedString(album)).append("\n");
    sb.append("    albumId: ").append(toIndentedString(albumId)).append("\n");
    sb.append("    albumArtist: ").append(toIndentedString(albumArtist)).append("\n");
    sb.append("    artists: ").append(toIndentedString(artists)).append("\n");
    sb.append("    songCount: ").append(toIndentedString(songCount)).append("\n");
    sb.append("    episodeCount: ").append(toIndentedString(episodeCount)).append("\n");
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    channelName: ").append(toIndentedString(channelName)).append("\n");
    sb.append("    primaryImageAspectRatio: ").append(toIndentedString(primaryImageAspectRatio)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ItemId");
    openapiFields.add("Id");
    openapiFields.add("Name");
    openapiFields.add("MatchedTerm");
    openapiFields.add("IndexNumber");
    openapiFields.add("ProductionYear");
    openapiFields.add("ParentIndexNumber");
    openapiFields.add("PrimaryImageTag");
    openapiFields.add("ThumbImageTag");
    openapiFields.add("ThumbImageItemId");
    openapiFields.add("BackdropImageTag");
    openapiFields.add("BackdropImageItemId");
    openapiFields.add("Type");
    openapiFields.add("IsFolder");
    openapiFields.add("RunTimeTicks");
    openapiFields.add("MediaType");
    openapiFields.add("StartDate");
    openapiFields.add("EndDate");
    openapiFields.add("Series");
    openapiFields.add("Status");
    openapiFields.add("Album");
    openapiFields.add("AlbumId");
    openapiFields.add("AlbumArtist");
    openapiFields.add("Artists");
    openapiFields.add("SongCount");
    openapiFields.add("EpisodeCount");
    openapiFields.add("ChannelId");
    openapiFields.add("ChannelName");
    openapiFields.add("PrimaryImageAspectRatio");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SearchHint
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SearchHint.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SearchHint is not found in the empty JSON string", SearchHint.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SearchHint.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SearchHint` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("ItemId") != null && !jsonObj.get("ItemId").isJsonNull()) && !jsonObj.get("ItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ItemId").toString()));
      }
      if ((jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) && !jsonObj.get("Id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Id").toString()));
      }
      if ((jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) && !jsonObj.get("Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Name").toString()));
      }
      if ((jsonObj.get("MatchedTerm") != null && !jsonObj.get("MatchedTerm").isJsonNull()) && !jsonObj.get("MatchedTerm").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MatchedTerm` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MatchedTerm").toString()));
      }
      if ((jsonObj.get("PrimaryImageTag") != null && !jsonObj.get("PrimaryImageTag").isJsonNull()) && !jsonObj.get("PrimaryImageTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PrimaryImageTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PrimaryImageTag").toString()));
      }
      if ((jsonObj.get("ThumbImageTag") != null && !jsonObj.get("ThumbImageTag").isJsonNull()) && !jsonObj.get("ThumbImageTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ThumbImageTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ThumbImageTag").toString()));
      }
      if ((jsonObj.get("ThumbImageItemId") != null && !jsonObj.get("ThumbImageItemId").isJsonNull()) && !jsonObj.get("ThumbImageItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ThumbImageItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ThumbImageItemId").toString()));
      }
      if ((jsonObj.get("BackdropImageTag") != null && !jsonObj.get("BackdropImageTag").isJsonNull()) && !jsonObj.get("BackdropImageTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BackdropImageTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BackdropImageTag").toString()));
      }
      if ((jsonObj.get("BackdropImageItemId") != null && !jsonObj.get("BackdropImageItemId").isJsonNull()) && !jsonObj.get("BackdropImageItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BackdropImageItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BackdropImageItemId").toString()));
      }
      if ((jsonObj.get("Type") != null && !jsonObj.get("Type").isJsonNull()) && !jsonObj.get("Type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Type").toString()));
      }
      if ((jsonObj.get("MediaType") != null && !jsonObj.get("MediaType").isJsonNull()) && !jsonObj.get("MediaType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MediaType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MediaType").toString()));
      }
      if ((jsonObj.get("Series") != null && !jsonObj.get("Series").isJsonNull()) && !jsonObj.get("Series").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Series` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Series").toString()));
      }
      if ((jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) && !jsonObj.get("Status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Status").toString()));
      }
      if ((jsonObj.get("Album") != null && !jsonObj.get("Album").isJsonNull()) && !jsonObj.get("Album").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Album` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Album").toString()));
      }
      if ((jsonObj.get("AlbumId") != null && !jsonObj.get("AlbumId").isJsonNull()) && !jsonObj.get("AlbumId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AlbumId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AlbumId").toString()));
      }
      if ((jsonObj.get("AlbumArtist") != null && !jsonObj.get("AlbumArtist").isJsonNull()) && !jsonObj.get("AlbumArtist").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AlbumArtist` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AlbumArtist").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("Artists") != null && !jsonObj.get("Artists").isJsonNull() && !jsonObj.get("Artists").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `Artists` to be an array in the JSON string but got `%s`", jsonObj.get("Artists").toString()));
      }
      if ((jsonObj.get("ChannelId") != null && !jsonObj.get("ChannelId").isJsonNull()) && !jsonObj.get("ChannelId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ChannelId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ChannelId").toString()));
      }
      if ((jsonObj.get("ChannelName") != null && !jsonObj.get("ChannelName").isJsonNull()) && !jsonObj.get("ChannelName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ChannelName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ChannelName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SearchHint.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SearchHint' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SearchHint> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SearchHint.class));

       return (TypeAdapter<T>) new TypeAdapter<SearchHint>() {
           @Override
           public void write(JsonWriter out, SearchHint value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SearchHint read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SearchHint given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SearchHint
   * @throws IOException if the JSON string is invalid with respect to SearchHint
   */
  public static SearchHint fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SearchHint.class);
  }

  /**
   * Convert an instance of SearchHint to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

