/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.client.model.PackageInfo;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * Class InstallationInfo.
 */
@JsonPropertyOrder({
  InstallationInfo.JSON_PROPERTY_GUID,
  InstallationInfo.JSON_PROPERTY_NAME,
  InstallationInfo.JSON_PROPERTY_VERSION,
  InstallationInfo.JSON_PROPERTY_CHANGELOG,
  InstallationInfo.JSON_PROPERTY_SOURCE_URL,
  InstallationInfo.JSON_PROPERTY_CHECKSUM,
  InstallationInfo.JSON_PROPERTY_PACKAGE_INFO
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class InstallationInfo {
  public static final String JSON_PROPERTY_GUID = "Guid";
  @javax.annotation.Nullable
  private UUID guid;

  public static final String JSON_PROPERTY_NAME = "Name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION = "Version";
  private JsonNullable<String> version = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CHANGELOG = "Changelog";
  private JsonNullable<String> changelog = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SOURCE_URL = "SourceUrl";
  private JsonNullable<String> sourceUrl = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CHECKSUM = "Checksum";
  private JsonNullable<String> checksum = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PACKAGE_INFO = "PackageInfo";
  private JsonNullable<PackageInfo> packageInfo = JsonNullable.<PackageInfo>undefined();

  public InstallationInfo() { 
  }

  public InstallationInfo guid(@javax.annotation.Nullable UUID guid) {
    this.guid = guid;
    return this;
  }

  /**
   * Gets or sets the Id.
   * @return guid
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public UUID getGuid() {
    return guid;
  }


  @JsonProperty(JSON_PROPERTY_GUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGuid(@javax.annotation.Nullable UUID guid) {
    this.guid = guid;
  }


  public InstallationInfo name(@javax.annotation.Nullable String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

  /**
   * Gets or sets the name.
   * @return name
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public InstallationInfo version(@javax.annotation.Nullable String version) {
    this.version = JsonNullable.<String>of(version);
    return this;
  }

  /**
   * Gets or sets the version.
   * @return version
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getVersion() {
        return version.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersion_JsonNullable() {
    return version;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION)
  public void setVersion_JsonNullable(JsonNullable<String> version) {
    this.version = version;
  }

  public void setVersion(@javax.annotation.Nullable String version) {
    this.version = JsonNullable.<String>of(version);
  }


  public InstallationInfo changelog(@javax.annotation.Nullable String changelog) {
    this.changelog = JsonNullable.<String>of(changelog);
    return this;
  }

  /**
   * Gets or sets the changelog for this version.
   * @return changelog
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getChangelog() {
        return changelog.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CHANGELOG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getChangelog_JsonNullable() {
    return changelog;
  }
  
  @JsonProperty(JSON_PROPERTY_CHANGELOG)
  public void setChangelog_JsonNullable(JsonNullable<String> changelog) {
    this.changelog = changelog;
  }

  public void setChangelog(@javax.annotation.Nullable String changelog) {
    this.changelog = JsonNullable.<String>of(changelog);
  }


  public InstallationInfo sourceUrl(@javax.annotation.Nullable String sourceUrl) {
    this.sourceUrl = JsonNullable.<String>of(sourceUrl);
    return this;
  }

  /**
   * Gets or sets the source URL.
   * @return sourceUrl
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getSourceUrl() {
        return sourceUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOURCE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSourceUrl_JsonNullable() {
    return sourceUrl;
  }
  
  @JsonProperty(JSON_PROPERTY_SOURCE_URL)
  public void setSourceUrl_JsonNullable(JsonNullable<String> sourceUrl) {
    this.sourceUrl = sourceUrl;
  }

  public void setSourceUrl(@javax.annotation.Nullable String sourceUrl) {
    this.sourceUrl = JsonNullable.<String>of(sourceUrl);
  }


  public InstallationInfo checksum(@javax.annotation.Nullable String checksum) {
    this.checksum = JsonNullable.<String>of(checksum);
    return this;
  }

  /**
   * Gets or sets a checksum for the binary.
   * @return checksum
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getChecksum() {
        return checksum.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CHECKSUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getChecksum_JsonNullable() {
    return checksum;
  }
  
  @JsonProperty(JSON_PROPERTY_CHECKSUM)
  public void setChecksum_JsonNullable(JsonNullable<String> checksum) {
    this.checksum = checksum;
  }

  public void setChecksum(@javax.annotation.Nullable String checksum) {
    this.checksum = JsonNullable.<String>of(checksum);
  }


  public InstallationInfo packageInfo(@javax.annotation.Nullable PackageInfo packageInfo) {
    this.packageInfo = JsonNullable.<PackageInfo>of(packageInfo);
    return this;
  }

  /**
   * Gets or sets package information for the installation.
   * @return packageInfo
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public PackageInfo getPackageInfo() {
        return packageInfo.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PACKAGE_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PackageInfo> getPackageInfo_JsonNullable() {
    return packageInfo;
  }
  
  @JsonProperty(JSON_PROPERTY_PACKAGE_INFO)
  public void setPackageInfo_JsonNullable(JsonNullable<PackageInfo> packageInfo) {
    this.packageInfo = packageInfo;
  }

  public void setPackageInfo(@javax.annotation.Nullable PackageInfo packageInfo) {
    this.packageInfo = JsonNullable.<PackageInfo>of(packageInfo);
  }


  /**
   * Return true if this InstallationInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstallationInfo installationInfo = (InstallationInfo) o;
    return Objects.equals(this.guid, installationInfo.guid) &&
        equalsNullable(this.name, installationInfo.name) &&
        equalsNullable(this.version, installationInfo.version) &&
        equalsNullable(this.changelog, installationInfo.changelog) &&
        equalsNullable(this.sourceUrl, installationInfo.sourceUrl) &&
        equalsNullable(this.checksum, installationInfo.checksum) &&
        equalsNullable(this.packageInfo, installationInfo.packageInfo);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(guid, hashCodeNullable(name), hashCodeNullable(version), hashCodeNullable(changelog), hashCodeNullable(sourceUrl), hashCodeNullable(checksum), hashCodeNullable(packageInfo));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstallationInfo {\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    changelog: ").append(toIndentedString(changelog)).append("\n");
    sb.append("    sourceUrl: ").append(toIndentedString(sourceUrl)).append("\n");
    sb.append("    checksum: ").append(toIndentedString(checksum)).append("\n");
    sb.append("    packageInfo: ").append(toIndentedString(packageInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `Guid` to the URL query string
    if (getGuid() != null) {
      joiner.add(String.format("%sGuid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getGuid()))));
    }

    // add `Name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getName()))));
    }

    // add `Version` to the URL query string
    if (getVersion() != null) {
      joiner.add(String.format("%sVersion%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getVersion()))));
    }

    // add `Changelog` to the URL query string
    if (getChangelog() != null) {
      joiner.add(String.format("%sChangelog%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getChangelog()))));
    }

    // add `SourceUrl` to the URL query string
    if (getSourceUrl() != null) {
      joiner.add(String.format("%sSourceUrl%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSourceUrl()))));
    }

    // add `Checksum` to the URL query string
    if (getChecksum() != null) {
      joiner.add(String.format("%sChecksum%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getChecksum()))));
    }

    // add `PackageInfo` to the URL query string
    if (getPackageInfo() != null) {
      joiner.add(getPackageInfo().toUrlQueryString(prefix + "PackageInfo" + suffix));
    }

    return joiner.toString();
  }
}

