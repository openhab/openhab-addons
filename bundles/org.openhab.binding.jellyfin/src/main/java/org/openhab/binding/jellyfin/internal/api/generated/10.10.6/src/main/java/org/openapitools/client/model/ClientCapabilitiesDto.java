/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DeviceProfile;
import org.openapitools.client.model.GeneralCommandType;
import org.openapitools.client.model.MediaType;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * Client capabilities dto.
 */
@JsonPropertyOrder({
  ClientCapabilitiesDto.JSON_PROPERTY_PLAYABLE_MEDIA_TYPES,
  ClientCapabilitiesDto.JSON_PROPERTY_SUPPORTED_COMMANDS,
  ClientCapabilitiesDto.JSON_PROPERTY_SUPPORTS_MEDIA_CONTROL,
  ClientCapabilitiesDto.JSON_PROPERTY_SUPPORTS_PERSISTENT_IDENTIFIER,
  ClientCapabilitiesDto.JSON_PROPERTY_DEVICE_PROFILE,
  ClientCapabilitiesDto.JSON_PROPERTY_APP_STORE_URL,
  ClientCapabilitiesDto.JSON_PROPERTY_ICON_URL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-28T21:48:58.939457991Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class ClientCapabilitiesDto {
  public static final String JSON_PROPERTY_PLAYABLE_MEDIA_TYPES = "PlayableMediaTypes";
  @javax.annotation.Nullable
  private List<MediaType> playableMediaTypes = new ArrayList<>();

  public static final String JSON_PROPERTY_SUPPORTED_COMMANDS = "SupportedCommands";
  @javax.annotation.Nullable
  private List<GeneralCommandType> supportedCommands = new ArrayList<>();

  public static final String JSON_PROPERTY_SUPPORTS_MEDIA_CONTROL = "SupportsMediaControl";
  @javax.annotation.Nullable
  private Boolean supportsMediaControl;

  public static final String JSON_PROPERTY_SUPPORTS_PERSISTENT_IDENTIFIER = "SupportsPersistentIdentifier";
  @javax.annotation.Nullable
  private Boolean supportsPersistentIdentifier;

  public static final String JSON_PROPERTY_DEVICE_PROFILE = "DeviceProfile";
  private JsonNullable<DeviceProfile> deviceProfile = JsonNullable.<DeviceProfile>undefined();

  public static final String JSON_PROPERTY_APP_STORE_URL = "AppStoreUrl";
  private JsonNullable<String> appStoreUrl = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ICON_URL = "IconUrl";
  private JsonNullable<String> iconUrl = JsonNullable.<String>undefined();

  public ClientCapabilitiesDto() { 
  }

  public ClientCapabilitiesDto playableMediaTypes(@javax.annotation.Nullable List<MediaType> playableMediaTypes) {
    this.playableMediaTypes = playableMediaTypes;
    return this;
  }

  public ClientCapabilitiesDto addPlayableMediaTypesItem(MediaType playableMediaTypesItem) {
    if (this.playableMediaTypes == null) {
      this.playableMediaTypes = new ArrayList<>();
    }
    this.playableMediaTypes.add(playableMediaTypesItem);
    return this;
  }

  /**
   * Gets or sets the list of playable media types.
   * @return playableMediaTypes
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLAYABLE_MEDIA_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<MediaType> getPlayableMediaTypes() {
    return playableMediaTypes;
  }


  @JsonProperty(JSON_PROPERTY_PLAYABLE_MEDIA_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlayableMediaTypes(@javax.annotation.Nullable List<MediaType> playableMediaTypes) {
    this.playableMediaTypes = playableMediaTypes;
  }


  public ClientCapabilitiesDto supportedCommands(@javax.annotation.Nullable List<GeneralCommandType> supportedCommands) {
    this.supportedCommands = supportedCommands;
    return this;
  }

  public ClientCapabilitiesDto addSupportedCommandsItem(GeneralCommandType supportedCommandsItem) {
    if (this.supportedCommands == null) {
      this.supportedCommands = new ArrayList<>();
    }
    this.supportedCommands.add(supportedCommandsItem);
    return this;
  }

  /**
   * Gets or sets the list of supported commands.
   * @return supportedCommands
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUPPORTED_COMMANDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<GeneralCommandType> getSupportedCommands() {
    return supportedCommands;
  }


  @JsonProperty(JSON_PROPERTY_SUPPORTED_COMMANDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupportedCommands(@javax.annotation.Nullable List<GeneralCommandType> supportedCommands) {
    this.supportedCommands = supportedCommands;
  }


  public ClientCapabilitiesDto supportsMediaControl(@javax.annotation.Nullable Boolean supportsMediaControl) {
    this.supportsMediaControl = supportsMediaControl;
    return this;
  }

  /**
   * Gets or sets a value indicating whether session supports media control.
   * @return supportsMediaControl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUPPORTS_MEDIA_CONTROL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getSupportsMediaControl() {
    return supportsMediaControl;
  }


  @JsonProperty(JSON_PROPERTY_SUPPORTS_MEDIA_CONTROL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupportsMediaControl(@javax.annotation.Nullable Boolean supportsMediaControl) {
    this.supportsMediaControl = supportsMediaControl;
  }


  public ClientCapabilitiesDto supportsPersistentIdentifier(@javax.annotation.Nullable Boolean supportsPersistentIdentifier) {
    this.supportsPersistentIdentifier = supportsPersistentIdentifier;
    return this;
  }

  /**
   * Gets or sets a value indicating whether session supports a persistent identifier.
   * @return supportsPersistentIdentifier
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUPPORTS_PERSISTENT_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getSupportsPersistentIdentifier() {
    return supportsPersistentIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_SUPPORTS_PERSISTENT_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupportsPersistentIdentifier(@javax.annotation.Nullable Boolean supportsPersistentIdentifier) {
    this.supportsPersistentIdentifier = supportsPersistentIdentifier;
  }


  public ClientCapabilitiesDto deviceProfile(@javax.annotation.Nullable DeviceProfile deviceProfile) {
    this.deviceProfile = JsonNullable.<DeviceProfile>of(deviceProfile);
    return this;
  }

  /**
   * Gets or sets the device profile.
   * @return deviceProfile
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public DeviceProfile getDeviceProfile() {
        return deviceProfile.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DEVICE_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DeviceProfile> getDeviceProfile_JsonNullable() {
    return deviceProfile;
  }
  
  @JsonProperty(JSON_PROPERTY_DEVICE_PROFILE)
  public void setDeviceProfile_JsonNullable(JsonNullable<DeviceProfile> deviceProfile) {
    this.deviceProfile = deviceProfile;
  }

  public void setDeviceProfile(@javax.annotation.Nullable DeviceProfile deviceProfile) {
    this.deviceProfile = JsonNullable.<DeviceProfile>of(deviceProfile);
  }


  public ClientCapabilitiesDto appStoreUrl(@javax.annotation.Nullable String appStoreUrl) {
    this.appStoreUrl = JsonNullable.<String>of(appStoreUrl);
    return this;
  }

  /**
   * Gets or sets the app store url.
   * @return appStoreUrl
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getAppStoreUrl() {
        return appStoreUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_APP_STORE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAppStoreUrl_JsonNullable() {
    return appStoreUrl;
  }
  
  @JsonProperty(JSON_PROPERTY_APP_STORE_URL)
  public void setAppStoreUrl_JsonNullable(JsonNullable<String> appStoreUrl) {
    this.appStoreUrl = appStoreUrl;
  }

  public void setAppStoreUrl(@javax.annotation.Nullable String appStoreUrl) {
    this.appStoreUrl = JsonNullable.<String>of(appStoreUrl);
  }


  public ClientCapabilitiesDto iconUrl(@javax.annotation.Nullable String iconUrl) {
    this.iconUrl = JsonNullable.<String>of(iconUrl);
    return this;
  }

  /**
   * Gets or sets the icon url.
   * @return iconUrl
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getIconUrl() {
        return iconUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ICON_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIconUrl_JsonNullable() {
    return iconUrl;
  }
  
  @JsonProperty(JSON_PROPERTY_ICON_URL)
  public void setIconUrl_JsonNullable(JsonNullable<String> iconUrl) {
    this.iconUrl = iconUrl;
  }

  public void setIconUrl(@javax.annotation.Nullable String iconUrl) {
    this.iconUrl = JsonNullable.<String>of(iconUrl);
  }


  /**
   * Return true if this ClientCapabilitiesDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClientCapabilitiesDto clientCapabilitiesDto = (ClientCapabilitiesDto) o;
    return Objects.equals(this.playableMediaTypes, clientCapabilitiesDto.playableMediaTypes) &&
        Objects.equals(this.supportedCommands, clientCapabilitiesDto.supportedCommands) &&
        Objects.equals(this.supportsMediaControl, clientCapabilitiesDto.supportsMediaControl) &&
        Objects.equals(this.supportsPersistentIdentifier, clientCapabilitiesDto.supportsPersistentIdentifier) &&
        equalsNullable(this.deviceProfile, clientCapabilitiesDto.deviceProfile) &&
        equalsNullable(this.appStoreUrl, clientCapabilitiesDto.appStoreUrl) &&
        equalsNullable(this.iconUrl, clientCapabilitiesDto.iconUrl);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(playableMediaTypes, supportedCommands, supportsMediaControl, supportsPersistentIdentifier, hashCodeNullable(deviceProfile), hashCodeNullable(appStoreUrl), hashCodeNullable(iconUrl));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClientCapabilitiesDto {\n");
    sb.append("    playableMediaTypes: ").append(toIndentedString(playableMediaTypes)).append("\n");
    sb.append("    supportedCommands: ").append(toIndentedString(supportedCommands)).append("\n");
    sb.append("    supportsMediaControl: ").append(toIndentedString(supportsMediaControl)).append("\n");
    sb.append("    supportsPersistentIdentifier: ").append(toIndentedString(supportsPersistentIdentifier)).append("\n");
    sb.append("    deviceProfile: ").append(toIndentedString(deviceProfile)).append("\n");
    sb.append("    appStoreUrl: ").append(toIndentedString(appStoreUrl)).append("\n");
    sb.append("    iconUrl: ").append(toIndentedString(iconUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `PlayableMediaTypes` to the URL query string
    if (getPlayableMediaTypes() != null) {
      for (int i = 0; i < getPlayableMediaTypes().size(); i++) {
        if (getPlayableMediaTypes().get(i) != null) {
          joiner.add(String.format("%sPlayableMediaTypes%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getPlayableMediaTypes().get(i)))));
        }
      }
    }

    // add `SupportedCommands` to the URL query string
    if (getSupportedCommands() != null) {
      for (int i = 0; i < getSupportedCommands().size(); i++) {
        if (getSupportedCommands().get(i) != null) {
          joiner.add(String.format("%sSupportedCommands%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getSupportedCommands().get(i)))));
        }
      }
    }

    // add `SupportsMediaControl` to the URL query string
    if (getSupportsMediaControl() != null) {
      joiner.add(String.format("%sSupportsMediaControl%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSupportsMediaControl()))));
    }

    // add `SupportsPersistentIdentifier` to the URL query string
    if (getSupportsPersistentIdentifier() != null) {
      joiner.add(String.format("%sSupportsPersistentIdentifier%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSupportsPersistentIdentifier()))));
    }

    // add `DeviceProfile` to the URL query string
    if (getDeviceProfile() != null) {
      joiner.add(getDeviceProfile().toUrlQueryString(prefix + "DeviceProfile" + suffix));
    }

    // add `AppStoreUrl` to the URL query string
    if (getAppStoreUrl() != null) {
      joiner.add(String.format("%sAppStoreUrl%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAppStoreUrl()))));
    }

    // add `IconUrl` to the URL query string
    if (getIconUrl() != null) {
      joiner.add(String.format("%sIconUrl%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIconUrl()))));
    }

    return joiner.toString();
  }
}

