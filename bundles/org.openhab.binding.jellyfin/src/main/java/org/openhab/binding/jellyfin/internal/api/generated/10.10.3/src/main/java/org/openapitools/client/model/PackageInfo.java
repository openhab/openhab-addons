/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.VersionInfo;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * Class PackageInfo.
 */
@JsonPropertyOrder({
  PackageInfo.JSON_PROPERTY_NAME,
  PackageInfo.JSON_PROPERTY_DESCRIPTION,
  PackageInfo.JSON_PROPERTY_OVERVIEW,
  PackageInfo.JSON_PROPERTY_OWNER,
  PackageInfo.JSON_PROPERTY_CATEGORY,
  PackageInfo.JSON_PROPERTY_GUID,
  PackageInfo.JSON_PROPERTY_VERSIONS,
  PackageInfo.JSON_PROPERTY_IMAGE_URL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-28T21:48:48.410245241Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class PackageInfo {
  public static final String JSON_PROPERTY_NAME = "name";
  @javax.annotation.Nullable
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @javax.annotation.Nullable
  private String description;

  public static final String JSON_PROPERTY_OVERVIEW = "overview";
  @javax.annotation.Nullable
  private String overview;

  public static final String JSON_PROPERTY_OWNER = "owner";
  @javax.annotation.Nullable
  private String owner;

  public static final String JSON_PROPERTY_CATEGORY = "category";
  @javax.annotation.Nullable
  private String category;

  public static final String JSON_PROPERTY_GUID = "guid";
  @javax.annotation.Nullable
  private UUID guid;

  public static final String JSON_PROPERTY_VERSIONS = "versions";
  @javax.annotation.Nullable
  private List<VersionInfo> versions = new ArrayList<>();

  public static final String JSON_PROPERTY_IMAGE_URL = "imageUrl";
  private JsonNullable<String> imageUrl = JsonNullable.<String>undefined();

  public PackageInfo() { 
  }

  public PackageInfo name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Gets or sets the name.
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public PackageInfo description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Gets or sets a long description of the plugin containing features or helpful explanations.
   * @return description
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public PackageInfo overview(@javax.annotation.Nullable String overview) {
    this.overview = overview;
    return this;
  }

  /**
   * Gets or sets a short overview of what the plugin does.
   * @return overview
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OVERVIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getOverview() {
    return overview;
  }


  @JsonProperty(JSON_PROPERTY_OVERVIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOverview(@javax.annotation.Nullable String overview) {
    this.overview = overview;
  }


  public PackageInfo owner(@javax.annotation.Nullable String owner) {
    this.owner = owner;
    return this;
  }

  /**
   * Gets or sets the owner.
   * @return owner
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getOwner() {
    return owner;
  }


  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwner(@javax.annotation.Nullable String owner) {
    this.owner = owner;
  }


  public PackageInfo category(@javax.annotation.Nullable String category) {
    this.category = category;
    return this;
  }

  /**
   * Gets or sets the category.
   * @return category
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategory(@javax.annotation.Nullable String category) {
    this.category = category;
  }


  public PackageInfo guid(@javax.annotation.Nullable UUID guid) {
    this.guid = guid;
    return this;
  }

  /**
   * Gets or sets the guid of the assembly associated with this plugin.  This is used to identify the proper item for automatic updates.
   * @return guid
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public UUID getGuid() {
    return guid;
  }


  @JsonProperty(JSON_PROPERTY_GUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGuid(@javax.annotation.Nullable UUID guid) {
    this.guid = guid;
  }


  public PackageInfo versions(@javax.annotation.Nullable List<VersionInfo> versions) {
    this.versions = versions;
    return this;
  }

  public PackageInfo addVersionsItem(VersionInfo versionsItem) {
    if (this.versions == null) {
      this.versions = new ArrayList<>();
    }
    this.versions.add(versionsItem);
    return this;
  }

  /**
   * Gets or sets the versions.
   * @return versions
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<VersionInfo> getVersions() {
    return versions;
  }


  @JsonProperty(JSON_PROPERTY_VERSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersions(@javax.annotation.Nullable List<VersionInfo> versions) {
    this.versions = versions;
  }


  public PackageInfo imageUrl(@javax.annotation.Nullable String imageUrl) {
    this.imageUrl = JsonNullable.<String>of(imageUrl);
    return this;
  }

  /**
   * Gets or sets the image url for the package.
   * @return imageUrl
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getImageUrl() {
        return imageUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMAGE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getImageUrl_JsonNullable() {
    return imageUrl;
  }
  
  @JsonProperty(JSON_PROPERTY_IMAGE_URL)
  public void setImageUrl_JsonNullable(JsonNullable<String> imageUrl) {
    this.imageUrl = imageUrl;
  }

  public void setImageUrl(@javax.annotation.Nullable String imageUrl) {
    this.imageUrl = JsonNullable.<String>of(imageUrl);
  }


  /**
   * Return true if this PackageInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PackageInfo packageInfo = (PackageInfo) o;
    return Objects.equals(this.name, packageInfo.name) &&
        Objects.equals(this.description, packageInfo.description) &&
        Objects.equals(this.overview, packageInfo.overview) &&
        Objects.equals(this.owner, packageInfo.owner) &&
        Objects.equals(this.category, packageInfo.category) &&
        Objects.equals(this.guid, packageInfo.guid) &&
        Objects.equals(this.versions, packageInfo.versions) &&
        equalsNullable(this.imageUrl, packageInfo.imageUrl);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, overview, owner, category, guid, versions, hashCodeNullable(imageUrl));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PackageInfo {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    overview: ").append(toIndentedString(overview)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    versions: ").append(toIndentedString(versions)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getName()))));
    }

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format("%sdescription%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDescription()))));
    }

    // add `overview` to the URL query string
    if (getOverview() != null) {
      joiner.add(String.format("%soverview%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOverview()))));
    }

    // add `owner` to the URL query string
    if (getOwner() != null) {
      joiner.add(String.format("%sowner%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOwner()))));
    }

    // add `category` to the URL query string
    if (getCategory() != null) {
      joiner.add(String.format("%scategory%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCategory()))));
    }

    // add `guid` to the URL query string
    if (getGuid() != null) {
      joiner.add(String.format("%sguid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getGuid()))));
    }

    // add `versions` to the URL query string
    if (getVersions() != null) {
      for (int i = 0; i < getVersions().size(); i++) {
        if (getVersions().get(i) != null) {
          joiner.add(getVersions().get(i).toUrlQueryString(String.format("%sversions%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `imageUrl` to the URL query string
    if (getImageUrl() != null) {
      joiner.add(String.format("%simageUrl%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getImageUrl()))));
    }

    return joiner.toString();
  }
}

