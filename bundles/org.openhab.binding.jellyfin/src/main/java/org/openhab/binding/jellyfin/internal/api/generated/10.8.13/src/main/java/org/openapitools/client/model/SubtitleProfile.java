/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.client.model.SubtitleDeliveryMethod;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * SubtitleProfile
 */
@JsonPropertyOrder({
  SubtitleProfile.JSON_PROPERTY_FORMAT,
  SubtitleProfile.JSON_PROPERTY_METHOD,
  SubtitleProfile.JSON_PROPERTY_DIDL_MODE,
  SubtitleProfile.JSON_PROPERTY_LANGUAGE,
  SubtitleProfile.JSON_PROPERTY_CONTAINER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-16T17:51:31.285278872Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class SubtitleProfile {
  public static final String JSON_PROPERTY_FORMAT = "Format";
  private JsonNullable<String> format = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_METHOD = "Method";
  @javax.annotation.Nullable
  private SubtitleDeliveryMethod method;

  public static final String JSON_PROPERTY_DIDL_MODE = "DidlMode";
  private JsonNullable<String> didlMode = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LANGUAGE = "Language";
  private JsonNullable<String> language = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CONTAINER = "Container";
  private JsonNullable<String> container = JsonNullable.<String>undefined();

  public SubtitleProfile() { 
  }

  public SubtitleProfile format(@javax.annotation.Nullable String format) {
    this.format = JsonNullable.<String>of(format);
    return this;
  }

  /**
   * Get format
   * @return format
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getFormat() {
        return format.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFormat_JsonNullable() {
    return format;
  }
  
  @JsonProperty(JSON_PROPERTY_FORMAT)
  public void setFormat_JsonNullable(JsonNullable<String> format) {
    this.format = format;
  }

  public void setFormat(@javax.annotation.Nullable String format) {
    this.format = JsonNullable.<String>of(format);
  }


  public SubtitleProfile method(@javax.annotation.Nullable SubtitleDeliveryMethod method) {
    this.method = method;
    return this;
  }

  /**
   * Delivery method to use during playback of a specific subtitle format.
   * @return method
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public SubtitleDeliveryMethod getMethod() {
    return method;
  }


  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMethod(@javax.annotation.Nullable SubtitleDeliveryMethod method) {
    this.method = method;
  }


  public SubtitleProfile didlMode(@javax.annotation.Nullable String didlMode) {
    this.didlMode = JsonNullable.<String>of(didlMode);
    return this;
  }

  /**
   * Get didlMode
   * @return didlMode
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getDidlMode() {
        return didlMode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DIDL_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDidlMode_JsonNullable() {
    return didlMode;
  }
  
  @JsonProperty(JSON_PROPERTY_DIDL_MODE)
  public void setDidlMode_JsonNullable(JsonNullable<String> didlMode) {
    this.didlMode = didlMode;
  }

  public void setDidlMode(@javax.annotation.Nullable String didlMode) {
    this.didlMode = JsonNullable.<String>of(didlMode);
  }


  public SubtitleProfile language(@javax.annotation.Nullable String language) {
    this.language = JsonNullable.<String>of(language);
    return this;
  }

  /**
   * Get language
   * @return language
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getLanguage() {
        return language.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLanguage_JsonNullable() {
    return language;
  }
  
  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  public void setLanguage_JsonNullable(JsonNullable<String> language) {
    this.language = language;
  }

  public void setLanguage(@javax.annotation.Nullable String language) {
    this.language = JsonNullable.<String>of(language);
  }


  public SubtitleProfile container(@javax.annotation.Nullable String container) {
    this.container = JsonNullable.<String>of(container);
    return this;
  }

  /**
   * Get container
   * @return container
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getContainer() {
        return container.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONTAINER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getContainer_JsonNullable() {
    return container;
  }
  
  @JsonProperty(JSON_PROPERTY_CONTAINER)
  public void setContainer_JsonNullable(JsonNullable<String> container) {
    this.container = container;
  }

  public void setContainer(@javax.annotation.Nullable String container) {
    this.container = JsonNullable.<String>of(container);
  }


  /**
   * Return true if this SubtitleProfile object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubtitleProfile subtitleProfile = (SubtitleProfile) o;
    return equalsNullable(this.format, subtitleProfile.format) &&
        Objects.equals(this.method, subtitleProfile.method) &&
        equalsNullable(this.didlMode, subtitleProfile.didlMode) &&
        equalsNullable(this.language, subtitleProfile.language) &&
        equalsNullable(this.container, subtitleProfile.container);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(format), method, hashCodeNullable(didlMode), hashCodeNullable(language), hashCodeNullable(container));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubtitleProfile {\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    didlMode: ").append(toIndentedString(didlMode)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    container: ").append(toIndentedString(container)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `Format` to the URL query string
    if (getFormat() != null) {
      joiner.add(String.format("%sFormat%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFormat()))));
    }

    // add `Method` to the URL query string
    if (getMethod() != null) {
      joiner.add(String.format("%sMethod%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMethod()))));
    }

    // add `DidlMode` to the URL query string
    if (getDidlMode() != null) {
      joiner.add(String.format("%sDidlMode%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDidlMode()))));
    }

    // add `Language` to the URL query string
    if (getLanguage() != null) {
      joiner.add(String.format("%sLanguage%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLanguage()))));
    }

    // add `Container` to the URL query string
    if (getContainer() != null) {
      joiner.add(String.format("%sContainer%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getContainer()))));
    }

    return joiner.toString();
  }
}

