/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.ImageType;
import org.openapitools.client.model.ItemFields;
import org.openapitools.client.model.ItemSortBy;
import org.openapitools.client.model.SortOrder;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Get programs dto.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-27T20:32:56.699980679+01:00[Europe/Zurich]", comments = "Generator version: 7.10.0")
public class GetProgramsDto {
  public static final String SERIALIZED_NAME_CHANNEL_IDS = "ChannelIds";
  @SerializedName(SERIALIZED_NAME_CHANNEL_IDS)
  @javax.annotation.Nullable
  private List<UUID> channelIds;

  public static final String SERIALIZED_NAME_USER_ID = "UserId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  @javax.annotation.Nullable
  private UUID userId;

  public static final String SERIALIZED_NAME_MIN_START_DATE = "MinStartDate";
  @SerializedName(SERIALIZED_NAME_MIN_START_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime minStartDate;

  public static final String SERIALIZED_NAME_HAS_AIRED = "HasAired";
  @SerializedName(SERIALIZED_NAME_HAS_AIRED)
  @javax.annotation.Nullable
  private Boolean hasAired;

  public static final String SERIALIZED_NAME_IS_AIRING = "IsAiring";
  @SerializedName(SERIALIZED_NAME_IS_AIRING)
  @javax.annotation.Nullable
  private Boolean isAiring;

  public static final String SERIALIZED_NAME_MAX_START_DATE = "MaxStartDate";
  @SerializedName(SERIALIZED_NAME_MAX_START_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime maxStartDate;

  public static final String SERIALIZED_NAME_MIN_END_DATE = "MinEndDate";
  @SerializedName(SERIALIZED_NAME_MIN_END_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime minEndDate;

  public static final String SERIALIZED_NAME_MAX_END_DATE = "MaxEndDate";
  @SerializedName(SERIALIZED_NAME_MAX_END_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime maxEndDate;

  public static final String SERIALIZED_NAME_IS_MOVIE = "IsMovie";
  @SerializedName(SERIALIZED_NAME_IS_MOVIE)
  @javax.annotation.Nullable
  private Boolean isMovie;

  public static final String SERIALIZED_NAME_IS_SERIES = "IsSeries";
  @SerializedName(SERIALIZED_NAME_IS_SERIES)
  @javax.annotation.Nullable
  private Boolean isSeries;

  public static final String SERIALIZED_NAME_IS_NEWS = "IsNews";
  @SerializedName(SERIALIZED_NAME_IS_NEWS)
  @javax.annotation.Nullable
  private Boolean isNews;

  public static final String SERIALIZED_NAME_IS_KIDS = "IsKids";
  @SerializedName(SERIALIZED_NAME_IS_KIDS)
  @javax.annotation.Nullable
  private Boolean isKids;

  public static final String SERIALIZED_NAME_IS_SPORTS = "IsSports";
  @SerializedName(SERIALIZED_NAME_IS_SPORTS)
  @javax.annotation.Nullable
  private Boolean isSports;

  public static final String SERIALIZED_NAME_START_INDEX = "StartIndex";
  @SerializedName(SERIALIZED_NAME_START_INDEX)
  @javax.annotation.Nullable
  private Integer startIndex;

  public static final String SERIALIZED_NAME_LIMIT = "Limit";
  @SerializedName(SERIALIZED_NAME_LIMIT)
  @javax.annotation.Nullable
  private Integer limit;

  public static final String SERIALIZED_NAME_SORT_BY = "SortBy";
  @SerializedName(SERIALIZED_NAME_SORT_BY)
  @javax.annotation.Nullable
  private List<ItemSortBy> sortBy;

  public static final String SERIALIZED_NAME_SORT_ORDER = "SortOrder";
  @SerializedName(SERIALIZED_NAME_SORT_ORDER)
  @javax.annotation.Nullable
  private List<SortOrder> sortOrder;

  public static final String SERIALIZED_NAME_GENRES = "Genres";
  @SerializedName(SERIALIZED_NAME_GENRES)
  @javax.annotation.Nullable
  private List<String> genres;

  public static final String SERIALIZED_NAME_GENRE_IDS = "GenreIds";
  @SerializedName(SERIALIZED_NAME_GENRE_IDS)
  @javax.annotation.Nullable
  private List<UUID> genreIds;

  public static final String SERIALIZED_NAME_ENABLE_IMAGES = "EnableImages";
  @SerializedName(SERIALIZED_NAME_ENABLE_IMAGES)
  @javax.annotation.Nullable
  private Boolean enableImages;

  public static final String SERIALIZED_NAME_ENABLE_TOTAL_RECORD_COUNT = "EnableTotalRecordCount";
  @SerializedName(SERIALIZED_NAME_ENABLE_TOTAL_RECORD_COUNT)
  @javax.annotation.Nullable
  private Boolean enableTotalRecordCount = true;

  public static final String SERIALIZED_NAME_IMAGE_TYPE_LIMIT = "ImageTypeLimit";
  @SerializedName(SERIALIZED_NAME_IMAGE_TYPE_LIMIT)
  @javax.annotation.Nullable
  private Integer imageTypeLimit;

  public static final String SERIALIZED_NAME_ENABLE_IMAGE_TYPES = "EnableImageTypes";
  @SerializedName(SERIALIZED_NAME_ENABLE_IMAGE_TYPES)
  @javax.annotation.Nullable
  private List<ImageType> enableImageTypes;

  public static final String SERIALIZED_NAME_ENABLE_USER_DATA = "EnableUserData";
  @SerializedName(SERIALIZED_NAME_ENABLE_USER_DATA)
  @javax.annotation.Nullable
  private Boolean enableUserData;

  public static final String SERIALIZED_NAME_SERIES_TIMER_ID = "SeriesTimerId";
  @SerializedName(SERIALIZED_NAME_SERIES_TIMER_ID)
  @javax.annotation.Nullable
  private String seriesTimerId;

  public static final String SERIALIZED_NAME_LIBRARY_SERIES_ID = "LibrarySeriesId";
  @SerializedName(SERIALIZED_NAME_LIBRARY_SERIES_ID)
  @javax.annotation.Nullable
  private UUID librarySeriesId;

  public static final String SERIALIZED_NAME_FIELDS = "Fields";
  @SerializedName(SERIALIZED_NAME_FIELDS)
  @javax.annotation.Nullable
  private List<ItemFields> fields;

  public GetProgramsDto() {
  }

  public GetProgramsDto channelIds(@javax.annotation.Nullable List<UUID> channelIds) {
    this.channelIds = channelIds;
    return this;
  }

  public GetProgramsDto addChannelIdsItem(UUID channelIdsItem) {
    if (this.channelIds == null) {
      this.channelIds = new ArrayList<>();
    }
    this.channelIds.add(channelIdsItem);
    return this;
  }

  /**
   * Gets or sets the channels to return guide information for.
   * @return channelIds
   */
  @javax.annotation.Nullable
  public List<UUID> getChannelIds() {
    return channelIds;
  }

  public void setChannelIds(@javax.annotation.Nullable List<UUID> channelIds) {
    this.channelIds = channelIds;
  }


  public GetProgramsDto userId(@javax.annotation.Nullable UUID userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Gets or sets optional. Filter by user id.
   * @return userId
   */
  @javax.annotation.Nullable
  public UUID getUserId() {
    return userId;
  }

  public void setUserId(@javax.annotation.Nullable UUID userId) {
    this.userId = userId;
  }


  public GetProgramsDto minStartDate(@javax.annotation.Nullable OffsetDateTime minStartDate) {
    this.minStartDate = minStartDate;
    return this;
  }

  /**
   * Gets or sets the minimum premiere start date.
   * @return minStartDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getMinStartDate() {
    return minStartDate;
  }

  public void setMinStartDate(@javax.annotation.Nullable OffsetDateTime minStartDate) {
    this.minStartDate = minStartDate;
  }


  public GetProgramsDto hasAired(@javax.annotation.Nullable Boolean hasAired) {
    this.hasAired = hasAired;
    return this;
  }

  /**
   * Gets or sets filter by programs that have completed airing, or not.
   * @return hasAired
   */
  @javax.annotation.Nullable
  public Boolean getHasAired() {
    return hasAired;
  }

  public void setHasAired(@javax.annotation.Nullable Boolean hasAired) {
    this.hasAired = hasAired;
  }


  public GetProgramsDto isAiring(@javax.annotation.Nullable Boolean isAiring) {
    this.isAiring = isAiring;
    return this;
  }

  /**
   * Gets or sets filter by programs that are currently airing, or not.
   * @return isAiring
   */
  @javax.annotation.Nullable
  public Boolean getIsAiring() {
    return isAiring;
  }

  public void setIsAiring(@javax.annotation.Nullable Boolean isAiring) {
    this.isAiring = isAiring;
  }


  public GetProgramsDto maxStartDate(@javax.annotation.Nullable OffsetDateTime maxStartDate) {
    this.maxStartDate = maxStartDate;
    return this;
  }

  /**
   * Gets or sets the maximum premiere start date.
   * @return maxStartDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getMaxStartDate() {
    return maxStartDate;
  }

  public void setMaxStartDate(@javax.annotation.Nullable OffsetDateTime maxStartDate) {
    this.maxStartDate = maxStartDate;
  }


  public GetProgramsDto minEndDate(@javax.annotation.Nullable OffsetDateTime minEndDate) {
    this.minEndDate = minEndDate;
    return this;
  }

  /**
   * Gets or sets the minimum premiere end date.
   * @return minEndDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getMinEndDate() {
    return minEndDate;
  }

  public void setMinEndDate(@javax.annotation.Nullable OffsetDateTime minEndDate) {
    this.minEndDate = minEndDate;
  }


  public GetProgramsDto maxEndDate(@javax.annotation.Nullable OffsetDateTime maxEndDate) {
    this.maxEndDate = maxEndDate;
    return this;
  }

  /**
   * Gets or sets the maximum premiere end date.
   * @return maxEndDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getMaxEndDate() {
    return maxEndDate;
  }

  public void setMaxEndDate(@javax.annotation.Nullable OffsetDateTime maxEndDate) {
    this.maxEndDate = maxEndDate;
  }


  public GetProgramsDto isMovie(@javax.annotation.Nullable Boolean isMovie) {
    this.isMovie = isMovie;
    return this;
  }

  /**
   * Gets or sets filter for movies.
   * @return isMovie
   */
  @javax.annotation.Nullable
  public Boolean getIsMovie() {
    return isMovie;
  }

  public void setIsMovie(@javax.annotation.Nullable Boolean isMovie) {
    this.isMovie = isMovie;
  }


  public GetProgramsDto isSeries(@javax.annotation.Nullable Boolean isSeries) {
    this.isSeries = isSeries;
    return this;
  }

  /**
   * Gets or sets filter for series.
   * @return isSeries
   */
  @javax.annotation.Nullable
  public Boolean getIsSeries() {
    return isSeries;
  }

  public void setIsSeries(@javax.annotation.Nullable Boolean isSeries) {
    this.isSeries = isSeries;
  }


  public GetProgramsDto isNews(@javax.annotation.Nullable Boolean isNews) {
    this.isNews = isNews;
    return this;
  }

  /**
   * Gets or sets filter for news.
   * @return isNews
   */
  @javax.annotation.Nullable
  public Boolean getIsNews() {
    return isNews;
  }

  public void setIsNews(@javax.annotation.Nullable Boolean isNews) {
    this.isNews = isNews;
  }


  public GetProgramsDto isKids(@javax.annotation.Nullable Boolean isKids) {
    this.isKids = isKids;
    return this;
  }

  /**
   * Gets or sets filter for kids.
   * @return isKids
   */
  @javax.annotation.Nullable
  public Boolean getIsKids() {
    return isKids;
  }

  public void setIsKids(@javax.annotation.Nullable Boolean isKids) {
    this.isKids = isKids;
  }


  public GetProgramsDto isSports(@javax.annotation.Nullable Boolean isSports) {
    this.isSports = isSports;
    return this;
  }

  /**
   * Gets or sets filter for sports.
   * @return isSports
   */
  @javax.annotation.Nullable
  public Boolean getIsSports() {
    return isSports;
  }

  public void setIsSports(@javax.annotation.Nullable Boolean isSports) {
    this.isSports = isSports;
  }


  public GetProgramsDto startIndex(@javax.annotation.Nullable Integer startIndex) {
    this.startIndex = startIndex;
    return this;
  }

  /**
   * Gets or sets the record index to start at. All items with a lower index will be dropped from the results.
   * @return startIndex
   */
  @javax.annotation.Nullable
  public Integer getStartIndex() {
    return startIndex;
  }

  public void setStartIndex(@javax.annotation.Nullable Integer startIndex) {
    this.startIndex = startIndex;
  }


  public GetProgramsDto limit(@javax.annotation.Nullable Integer limit) {
    this.limit = limit;
    return this;
  }

  /**
   * Gets or sets the maximum number of records to return.
   * @return limit
   */
  @javax.annotation.Nullable
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(@javax.annotation.Nullable Integer limit) {
    this.limit = limit;
  }


  public GetProgramsDto sortBy(@javax.annotation.Nullable List<ItemSortBy> sortBy) {
    this.sortBy = sortBy;
    return this;
  }

  public GetProgramsDto addSortByItem(ItemSortBy sortByItem) {
    if (this.sortBy == null) {
      this.sortBy = new ArrayList<>();
    }
    this.sortBy.add(sortByItem);
    return this;
  }

  /**
   * Gets or sets specify one or more sort orders, comma delimited. Options: Name, StartDate.
   * @return sortBy
   */
  @javax.annotation.Nullable
  public List<ItemSortBy> getSortBy() {
    return sortBy;
  }

  public void setSortBy(@javax.annotation.Nullable List<ItemSortBy> sortBy) {
    this.sortBy = sortBy;
  }


  public GetProgramsDto sortOrder(@javax.annotation.Nullable List<SortOrder> sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

  public GetProgramsDto addSortOrderItem(SortOrder sortOrderItem) {
    if (this.sortOrder == null) {
      this.sortOrder = new ArrayList<>();
    }
    this.sortOrder.add(sortOrderItem);
    return this;
  }

  /**
   * Gets or sets sort order.
   * @return sortOrder
   */
  @javax.annotation.Nullable
  public List<SortOrder> getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(@javax.annotation.Nullable List<SortOrder> sortOrder) {
    this.sortOrder = sortOrder;
  }


  public GetProgramsDto genres(@javax.annotation.Nullable List<String> genres) {
    this.genres = genres;
    return this;
  }

  public GetProgramsDto addGenresItem(String genresItem) {
    if (this.genres == null) {
      this.genres = new ArrayList<>();
    }
    this.genres.add(genresItem);
    return this;
  }

  /**
   * Gets or sets the genres to return guide information for.
   * @return genres
   */
  @javax.annotation.Nullable
  public List<String> getGenres() {
    return genres;
  }

  public void setGenres(@javax.annotation.Nullable List<String> genres) {
    this.genres = genres;
  }


  public GetProgramsDto genreIds(@javax.annotation.Nullable List<UUID> genreIds) {
    this.genreIds = genreIds;
    return this;
  }

  public GetProgramsDto addGenreIdsItem(UUID genreIdsItem) {
    if (this.genreIds == null) {
      this.genreIds = new ArrayList<>();
    }
    this.genreIds.add(genreIdsItem);
    return this;
  }

  /**
   * Gets or sets the genre ids to return guide information for.
   * @return genreIds
   */
  @javax.annotation.Nullable
  public List<UUID> getGenreIds() {
    return genreIds;
  }

  public void setGenreIds(@javax.annotation.Nullable List<UUID> genreIds) {
    this.genreIds = genreIds;
  }


  public GetProgramsDto enableImages(@javax.annotation.Nullable Boolean enableImages) {
    this.enableImages = enableImages;
    return this;
  }

  /**
   * Gets or sets include image information in output.
   * @return enableImages
   */
  @javax.annotation.Nullable
  public Boolean getEnableImages() {
    return enableImages;
  }

  public void setEnableImages(@javax.annotation.Nullable Boolean enableImages) {
    this.enableImages = enableImages;
  }


  public GetProgramsDto enableTotalRecordCount(@javax.annotation.Nullable Boolean enableTotalRecordCount) {
    this.enableTotalRecordCount = enableTotalRecordCount;
    return this;
  }

  /**
   * Gets or sets a value indicating whether retrieve total record count.
   * @return enableTotalRecordCount
   */
  @javax.annotation.Nullable
  public Boolean getEnableTotalRecordCount() {
    return enableTotalRecordCount;
  }

  public void setEnableTotalRecordCount(@javax.annotation.Nullable Boolean enableTotalRecordCount) {
    this.enableTotalRecordCount = enableTotalRecordCount;
  }


  public GetProgramsDto imageTypeLimit(@javax.annotation.Nullable Integer imageTypeLimit) {
    this.imageTypeLimit = imageTypeLimit;
    return this;
  }

  /**
   * Gets or sets the max number of images to return, per image type.
   * @return imageTypeLimit
   */
  @javax.annotation.Nullable
  public Integer getImageTypeLimit() {
    return imageTypeLimit;
  }

  public void setImageTypeLimit(@javax.annotation.Nullable Integer imageTypeLimit) {
    this.imageTypeLimit = imageTypeLimit;
  }


  public GetProgramsDto enableImageTypes(@javax.annotation.Nullable List<ImageType> enableImageTypes) {
    this.enableImageTypes = enableImageTypes;
    return this;
  }

  public GetProgramsDto addEnableImageTypesItem(ImageType enableImageTypesItem) {
    if (this.enableImageTypes == null) {
      this.enableImageTypes = new ArrayList<>();
    }
    this.enableImageTypes.add(enableImageTypesItem);
    return this;
  }

  /**
   * Gets or sets the image types to include in the output.
   * @return enableImageTypes
   */
  @javax.annotation.Nullable
  public List<ImageType> getEnableImageTypes() {
    return enableImageTypes;
  }

  public void setEnableImageTypes(@javax.annotation.Nullable List<ImageType> enableImageTypes) {
    this.enableImageTypes = enableImageTypes;
  }


  public GetProgramsDto enableUserData(@javax.annotation.Nullable Boolean enableUserData) {
    this.enableUserData = enableUserData;
    return this;
  }

  /**
   * Gets or sets include user data.
   * @return enableUserData
   */
  @javax.annotation.Nullable
  public Boolean getEnableUserData() {
    return enableUserData;
  }

  public void setEnableUserData(@javax.annotation.Nullable Boolean enableUserData) {
    this.enableUserData = enableUserData;
  }


  public GetProgramsDto seriesTimerId(@javax.annotation.Nullable String seriesTimerId) {
    this.seriesTimerId = seriesTimerId;
    return this;
  }

  /**
   * Gets or sets filter by series timer id.
   * @return seriesTimerId
   */
  @javax.annotation.Nullable
  public String getSeriesTimerId() {
    return seriesTimerId;
  }

  public void setSeriesTimerId(@javax.annotation.Nullable String seriesTimerId) {
    this.seriesTimerId = seriesTimerId;
  }


  public GetProgramsDto librarySeriesId(@javax.annotation.Nullable UUID librarySeriesId) {
    this.librarySeriesId = librarySeriesId;
    return this;
  }

  /**
   * Gets or sets filter by library series id.
   * @return librarySeriesId
   */
  @javax.annotation.Nullable
  public UUID getLibrarySeriesId() {
    return librarySeriesId;
  }

  public void setLibrarySeriesId(@javax.annotation.Nullable UUID librarySeriesId) {
    this.librarySeriesId = librarySeriesId;
  }


  public GetProgramsDto fields(@javax.annotation.Nullable List<ItemFields> fields) {
    this.fields = fields;
    return this;
  }

  public GetProgramsDto addFieldsItem(ItemFields fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

  /**
   * Gets or sets specify additional fields of information to return in the output.
   * @return fields
   */
  @javax.annotation.Nullable
  public List<ItemFields> getFields() {
    return fields;
  }

  public void setFields(@javax.annotation.Nullable List<ItemFields> fields) {
    this.fields = fields;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetProgramsDto getProgramsDto = (GetProgramsDto) o;
    return Objects.equals(this.channelIds, getProgramsDto.channelIds) &&
        Objects.equals(this.userId, getProgramsDto.userId) &&
        Objects.equals(this.minStartDate, getProgramsDto.minStartDate) &&
        Objects.equals(this.hasAired, getProgramsDto.hasAired) &&
        Objects.equals(this.isAiring, getProgramsDto.isAiring) &&
        Objects.equals(this.maxStartDate, getProgramsDto.maxStartDate) &&
        Objects.equals(this.minEndDate, getProgramsDto.minEndDate) &&
        Objects.equals(this.maxEndDate, getProgramsDto.maxEndDate) &&
        Objects.equals(this.isMovie, getProgramsDto.isMovie) &&
        Objects.equals(this.isSeries, getProgramsDto.isSeries) &&
        Objects.equals(this.isNews, getProgramsDto.isNews) &&
        Objects.equals(this.isKids, getProgramsDto.isKids) &&
        Objects.equals(this.isSports, getProgramsDto.isSports) &&
        Objects.equals(this.startIndex, getProgramsDto.startIndex) &&
        Objects.equals(this.limit, getProgramsDto.limit) &&
        Objects.equals(this.sortBy, getProgramsDto.sortBy) &&
        Objects.equals(this.sortOrder, getProgramsDto.sortOrder) &&
        Objects.equals(this.genres, getProgramsDto.genres) &&
        Objects.equals(this.genreIds, getProgramsDto.genreIds) &&
        Objects.equals(this.enableImages, getProgramsDto.enableImages) &&
        Objects.equals(this.enableTotalRecordCount, getProgramsDto.enableTotalRecordCount) &&
        Objects.equals(this.imageTypeLimit, getProgramsDto.imageTypeLimit) &&
        Objects.equals(this.enableImageTypes, getProgramsDto.enableImageTypes) &&
        Objects.equals(this.enableUserData, getProgramsDto.enableUserData) &&
        Objects.equals(this.seriesTimerId, getProgramsDto.seriesTimerId) &&
        Objects.equals(this.librarySeriesId, getProgramsDto.librarySeriesId) &&
        Objects.equals(this.fields, getProgramsDto.fields);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(channelIds, userId, minStartDate, hasAired, isAiring, maxStartDate, minEndDate, maxEndDate, isMovie, isSeries, isNews, isKids, isSports, startIndex, limit, sortBy, sortOrder, genres, genreIds, enableImages, enableTotalRecordCount, imageTypeLimit, enableImageTypes, enableUserData, seriesTimerId, librarySeriesId, fields);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetProgramsDto {\n");
    sb.append("    channelIds: ").append(toIndentedString(channelIds)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    minStartDate: ").append(toIndentedString(minStartDate)).append("\n");
    sb.append("    hasAired: ").append(toIndentedString(hasAired)).append("\n");
    sb.append("    isAiring: ").append(toIndentedString(isAiring)).append("\n");
    sb.append("    maxStartDate: ").append(toIndentedString(maxStartDate)).append("\n");
    sb.append("    minEndDate: ").append(toIndentedString(minEndDate)).append("\n");
    sb.append("    maxEndDate: ").append(toIndentedString(maxEndDate)).append("\n");
    sb.append("    isMovie: ").append(toIndentedString(isMovie)).append("\n");
    sb.append("    isSeries: ").append(toIndentedString(isSeries)).append("\n");
    sb.append("    isNews: ").append(toIndentedString(isNews)).append("\n");
    sb.append("    isKids: ").append(toIndentedString(isKids)).append("\n");
    sb.append("    isSports: ").append(toIndentedString(isSports)).append("\n");
    sb.append("    startIndex: ").append(toIndentedString(startIndex)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    genres: ").append(toIndentedString(genres)).append("\n");
    sb.append("    genreIds: ").append(toIndentedString(genreIds)).append("\n");
    sb.append("    enableImages: ").append(toIndentedString(enableImages)).append("\n");
    sb.append("    enableTotalRecordCount: ").append(toIndentedString(enableTotalRecordCount)).append("\n");
    sb.append("    imageTypeLimit: ").append(toIndentedString(imageTypeLimit)).append("\n");
    sb.append("    enableImageTypes: ").append(toIndentedString(enableImageTypes)).append("\n");
    sb.append("    enableUserData: ").append(toIndentedString(enableUserData)).append("\n");
    sb.append("    seriesTimerId: ").append(toIndentedString(seriesTimerId)).append("\n");
    sb.append("    librarySeriesId: ").append(toIndentedString(librarySeriesId)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ChannelIds");
    openapiFields.add("UserId");
    openapiFields.add("MinStartDate");
    openapiFields.add("HasAired");
    openapiFields.add("IsAiring");
    openapiFields.add("MaxStartDate");
    openapiFields.add("MinEndDate");
    openapiFields.add("MaxEndDate");
    openapiFields.add("IsMovie");
    openapiFields.add("IsSeries");
    openapiFields.add("IsNews");
    openapiFields.add("IsKids");
    openapiFields.add("IsSports");
    openapiFields.add("StartIndex");
    openapiFields.add("Limit");
    openapiFields.add("SortBy");
    openapiFields.add("SortOrder");
    openapiFields.add("Genres");
    openapiFields.add("GenreIds");
    openapiFields.add("EnableImages");
    openapiFields.add("EnableTotalRecordCount");
    openapiFields.add("ImageTypeLimit");
    openapiFields.add("EnableImageTypes");
    openapiFields.add("EnableUserData");
    openapiFields.add("SeriesTimerId");
    openapiFields.add("LibrarySeriesId");
    openapiFields.add("Fields");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetProgramsDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetProgramsDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetProgramsDto is not found in the empty JSON string", GetProgramsDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetProgramsDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetProgramsDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("ChannelIds") != null && !jsonObj.get("ChannelIds").isJsonNull() && !jsonObj.get("ChannelIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ChannelIds` to be an array in the JSON string but got `%s`", jsonObj.get("ChannelIds").toString()));
      }
      if ((jsonObj.get("UserId") != null && !jsonObj.get("UserId").isJsonNull()) && !jsonObj.get("UserId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `UserId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("UserId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("SortBy") != null && !jsonObj.get("SortBy").isJsonNull() && !jsonObj.get("SortBy").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `SortBy` to be an array in the JSON string but got `%s`", jsonObj.get("SortBy").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("SortOrder") != null && !jsonObj.get("SortOrder").isJsonNull() && !jsonObj.get("SortOrder").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `SortOrder` to be an array in the JSON string but got `%s`", jsonObj.get("SortOrder").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("Genres") != null && !jsonObj.get("Genres").isJsonNull() && !jsonObj.get("Genres").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `Genres` to be an array in the JSON string but got `%s`", jsonObj.get("Genres").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("GenreIds") != null && !jsonObj.get("GenreIds").isJsonNull() && !jsonObj.get("GenreIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `GenreIds` to be an array in the JSON string but got `%s`", jsonObj.get("GenreIds").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("EnableImageTypes") != null && !jsonObj.get("EnableImageTypes").isJsonNull() && !jsonObj.get("EnableImageTypes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `EnableImageTypes` to be an array in the JSON string but got `%s`", jsonObj.get("EnableImageTypes").toString()));
      }
      if ((jsonObj.get("SeriesTimerId") != null && !jsonObj.get("SeriesTimerId").isJsonNull()) && !jsonObj.get("SeriesTimerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SeriesTimerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SeriesTimerId").toString()));
      }
      if ((jsonObj.get("LibrarySeriesId") != null && !jsonObj.get("LibrarySeriesId").isJsonNull()) && !jsonObj.get("LibrarySeriesId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LibrarySeriesId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LibrarySeriesId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("Fields") != null && !jsonObj.get("Fields").isJsonNull() && !jsonObj.get("Fields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `Fields` to be an array in the JSON string but got `%s`", jsonObj.get("Fields").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetProgramsDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetProgramsDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetProgramsDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetProgramsDto.class));

       return (TypeAdapter<T>) new TypeAdapter<GetProgramsDto>() {
           @Override
           public void write(JsonWriter out, GetProgramsDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetProgramsDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetProgramsDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetProgramsDto
   * @throws IOException if the JSON string is invalid with respect to GetProgramsDto
   */
  public static GetProgramsDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetProgramsDto.class);
  }

  /**
   * Convert an instance of GetProgramsDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

