/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.PlaylistUserPermissions;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * DTO for playlists.
 */
@JsonPropertyOrder({
  PlaylistDto.JSON_PROPERTY_OPEN_ACCESS,
  PlaylistDto.JSON_PROPERTY_SHARES,
  PlaylistDto.JSON_PROPERTY_ITEM_IDS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-28T21:48:48.410245241Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class PlaylistDto {
  public static final String JSON_PROPERTY_OPEN_ACCESS = "OpenAccess";
  @javax.annotation.Nullable
  private Boolean openAccess;

  public static final String JSON_PROPERTY_SHARES = "Shares";
  @javax.annotation.Nullable
  private List<PlaylistUserPermissions> shares = new ArrayList<>();

  public static final String JSON_PROPERTY_ITEM_IDS = "ItemIds";
  @javax.annotation.Nullable
  private List<UUID> itemIds = new ArrayList<>();

  public PlaylistDto() { 
  }

  public PlaylistDto openAccess(@javax.annotation.Nullable Boolean openAccess) {
    this.openAccess = openAccess;
    return this;
  }

  /**
   * Gets or sets a value indicating whether the playlist is publicly readable.
   * @return openAccess
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPEN_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getOpenAccess() {
    return openAccess;
  }


  @JsonProperty(JSON_PROPERTY_OPEN_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOpenAccess(@javax.annotation.Nullable Boolean openAccess) {
    this.openAccess = openAccess;
  }


  public PlaylistDto shares(@javax.annotation.Nullable List<PlaylistUserPermissions> shares) {
    this.shares = shares;
    return this;
  }

  public PlaylistDto addSharesItem(PlaylistUserPermissions sharesItem) {
    if (this.shares == null) {
      this.shares = new ArrayList<>();
    }
    this.shares.add(sharesItem);
    return this;
  }

  /**
   * Gets or sets the share permissions.
   * @return shares
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHARES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<PlaylistUserPermissions> getShares() {
    return shares;
  }


  @JsonProperty(JSON_PROPERTY_SHARES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShares(@javax.annotation.Nullable List<PlaylistUserPermissions> shares) {
    this.shares = shares;
  }


  public PlaylistDto itemIds(@javax.annotation.Nullable List<UUID> itemIds) {
    this.itemIds = itemIds;
    return this;
  }

  public PlaylistDto addItemIdsItem(UUID itemIdsItem) {
    if (this.itemIds == null) {
      this.itemIds = new ArrayList<>();
    }
    this.itemIds.add(itemIdsItem);
    return this;
  }

  /**
   * Gets or sets the item ids.
   * @return itemIds
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ITEM_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<UUID> getItemIds() {
    return itemIds;
  }


  @JsonProperty(JSON_PROPERTY_ITEM_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setItemIds(@javax.annotation.Nullable List<UUID> itemIds) {
    this.itemIds = itemIds;
  }


  /**
   * Return true if this PlaylistDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlaylistDto playlistDto = (PlaylistDto) o;
    return Objects.equals(this.openAccess, playlistDto.openAccess) &&
        Objects.equals(this.shares, playlistDto.shares) &&
        Objects.equals(this.itemIds, playlistDto.itemIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(openAccess, shares, itemIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlaylistDto {\n");
    sb.append("    openAccess: ").append(toIndentedString(openAccess)).append("\n");
    sb.append("    shares: ").append(toIndentedString(shares)).append("\n");
    sb.append("    itemIds: ").append(toIndentedString(itemIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `OpenAccess` to the URL query string
    if (getOpenAccess() != null) {
      joiner.add(String.format("%sOpenAccess%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOpenAccess()))));
    }

    // add `Shares` to the URL query string
    if (getShares() != null) {
      for (int i = 0; i < getShares().size(); i++) {
        if (getShares().get(i) != null) {
          joiner.add(getShares().get(i).toUrlQueryString(String.format("%sShares%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `ItemIds` to the URL query string
    if (getItemIds() != null) {
      for (int i = 0; i < getItemIds().size(); i++) {
        if (getItemIds().get(i) != null) {
          joiner.add(String.format("%sItemIds%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getItemIds().get(i)))));
        }
      }
    }

    return joiner.toString();
  }
}

