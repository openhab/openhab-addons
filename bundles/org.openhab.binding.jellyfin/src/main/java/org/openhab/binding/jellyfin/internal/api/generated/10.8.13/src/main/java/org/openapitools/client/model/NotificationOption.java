/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.SendToUserType;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * NotificationOption
 */
@JsonPropertyOrder({
  NotificationOption.JSON_PROPERTY_TYPE,
  NotificationOption.JSON_PROPERTY_DISABLED_MONITOR_USERS,
  NotificationOption.JSON_PROPERTY_SEND_TO_USERS,
  NotificationOption.JSON_PROPERTY_ENABLED,
  NotificationOption.JSON_PROPERTY_DISABLED_SERVICES,
  NotificationOption.JSON_PROPERTY_SEND_TO_USER_MODE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-16T17:51:31.285278872Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class NotificationOption {
  public static final String JSON_PROPERTY_TYPE = "Type";
  private JsonNullable<String> type = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DISABLED_MONITOR_USERS = "DisabledMonitorUsers";
  @javax.annotation.Nullable
  private List<String> disabledMonitorUsers = new ArrayList<>();

  public static final String JSON_PROPERTY_SEND_TO_USERS = "SendToUsers";
  @javax.annotation.Nullable
  private List<String> sendToUsers = new ArrayList<>();

  public static final String JSON_PROPERTY_ENABLED = "Enabled";
  @javax.annotation.Nullable
  private Boolean enabled;

  public static final String JSON_PROPERTY_DISABLED_SERVICES = "DisabledServices";
  @javax.annotation.Nullable
  private List<String> disabledServices = new ArrayList<>();

  public static final String JSON_PROPERTY_SEND_TO_USER_MODE = "SendToUserMode";
  @javax.annotation.Nullable
  private SendToUserType sendToUserMode;

  public NotificationOption() { 
  }

  public NotificationOption type(@javax.annotation.Nullable String type) {
    this.type = JsonNullable.<String>of(type);
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getType() {
        return type.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getType_JsonNullable() {
    return type;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE)
  public void setType_JsonNullable(JsonNullable<String> type) {
    this.type = type;
  }

  public void setType(@javax.annotation.Nullable String type) {
    this.type = JsonNullable.<String>of(type);
  }


  public NotificationOption disabledMonitorUsers(@javax.annotation.Nullable List<String> disabledMonitorUsers) {
    this.disabledMonitorUsers = disabledMonitorUsers;
    return this;
  }

  public NotificationOption addDisabledMonitorUsersItem(String disabledMonitorUsersItem) {
    if (this.disabledMonitorUsers == null) {
      this.disabledMonitorUsers = new ArrayList<>();
    }
    this.disabledMonitorUsers.add(disabledMonitorUsersItem);
    return this;
  }

  /**
   * Gets or sets user Ids to not monitor (it&#39;s opt out).
   * @return disabledMonitorUsers
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISABLED_MONITOR_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getDisabledMonitorUsers() {
    return disabledMonitorUsers;
  }


  @JsonProperty(JSON_PROPERTY_DISABLED_MONITOR_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisabledMonitorUsers(@javax.annotation.Nullable List<String> disabledMonitorUsers) {
    this.disabledMonitorUsers = disabledMonitorUsers;
  }


  public NotificationOption sendToUsers(@javax.annotation.Nullable List<String> sendToUsers) {
    this.sendToUsers = sendToUsers;
    return this;
  }

  public NotificationOption addSendToUsersItem(String sendToUsersItem) {
    if (this.sendToUsers == null) {
      this.sendToUsers = new ArrayList<>();
    }
    this.sendToUsers.add(sendToUsersItem);
    return this;
  }

  /**
   * Gets or sets user Ids to send to (if SendToUserMode &#x3D;&#x3D; Custom).
   * @return sendToUsers
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEND_TO_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getSendToUsers() {
    return sendToUsers;
  }


  @JsonProperty(JSON_PROPERTY_SEND_TO_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSendToUsers(@javax.annotation.Nullable List<String> sendToUsers) {
    this.sendToUsers = sendToUsers;
  }


  public NotificationOption enabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this MediaBrowser.Model.Notifications.NotificationOption is enabled.
   * @return enabled
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
  }


  public NotificationOption disabledServices(@javax.annotation.Nullable List<String> disabledServices) {
    this.disabledServices = disabledServices;
    return this;
  }

  public NotificationOption addDisabledServicesItem(String disabledServicesItem) {
    if (this.disabledServices == null) {
      this.disabledServices = new ArrayList<>();
    }
    this.disabledServices.add(disabledServicesItem);
    return this;
  }

  /**
   * Gets or sets the disabled services.
   * @return disabledServices
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISABLED_SERVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getDisabledServices() {
    return disabledServices;
  }


  @JsonProperty(JSON_PROPERTY_DISABLED_SERVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisabledServices(@javax.annotation.Nullable List<String> disabledServices) {
    this.disabledServices = disabledServices;
  }


  public NotificationOption sendToUserMode(@javax.annotation.Nullable SendToUserType sendToUserMode) {
    this.sendToUserMode = sendToUserMode;
    return this;
  }

  /**
   * Gets or sets the send to user mode.
   * @return sendToUserMode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEND_TO_USER_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public SendToUserType getSendToUserMode() {
    return sendToUserMode;
  }


  @JsonProperty(JSON_PROPERTY_SEND_TO_USER_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSendToUserMode(@javax.annotation.Nullable SendToUserType sendToUserMode) {
    this.sendToUserMode = sendToUserMode;
  }


  /**
   * Return true if this NotificationOption object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NotificationOption notificationOption = (NotificationOption) o;
    return equalsNullable(this.type, notificationOption.type) &&
        Objects.equals(this.disabledMonitorUsers, notificationOption.disabledMonitorUsers) &&
        Objects.equals(this.sendToUsers, notificationOption.sendToUsers) &&
        Objects.equals(this.enabled, notificationOption.enabled) &&
        Objects.equals(this.disabledServices, notificationOption.disabledServices) &&
        Objects.equals(this.sendToUserMode, notificationOption.sendToUserMode);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(type), disabledMonitorUsers, sendToUsers, enabled, disabledServices, sendToUserMode);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NotificationOption {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    disabledMonitorUsers: ").append(toIndentedString(disabledMonitorUsers)).append("\n");
    sb.append("    sendToUsers: ").append(toIndentedString(sendToUsers)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    disabledServices: ").append(toIndentedString(disabledServices)).append("\n");
    sb.append("    sendToUserMode: ").append(toIndentedString(sendToUserMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `Type` to the URL query string
    if (getType() != null) {
      joiner.add(String.format("%sType%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getType()))));
    }

    // add `DisabledMonitorUsers` to the URL query string
    if (getDisabledMonitorUsers() != null) {
      for (int i = 0; i < getDisabledMonitorUsers().size(); i++) {
        joiner.add(String.format("%sDisabledMonitorUsers%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getDisabledMonitorUsers().get(i)))));
      }
    }

    // add `SendToUsers` to the URL query string
    if (getSendToUsers() != null) {
      for (int i = 0; i < getSendToUsers().size(); i++) {
        joiner.add(String.format("%sSendToUsers%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getSendToUsers().get(i)))));
      }
    }

    // add `Enabled` to the URL query string
    if (getEnabled() != null) {
      joiner.add(String.format("%sEnabled%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnabled()))));
    }

    // add `DisabledServices` to the URL query string
    if (getDisabledServices() != null) {
      for (int i = 0; i < getDisabledServices().size(); i++) {
        joiner.add(String.format("%sDisabledServices%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getDisabledServices().get(i)))));
      }
    }

    // add `SendToUserMode` to the URL query string
    if (getSendToUserMode() != null) {
      joiner.add(String.format("%sSendToUserMode%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSendToUserMode()))));
    }

    return joiner.toString();
  }
}

