/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MediaSourceInfo;
import org.openapitools.client.model.PlaybackErrorCode;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * Class PlaybackInfoResponse.
 */
@JsonPropertyOrder({
  PlaybackInfoResponse.JSON_PROPERTY_MEDIA_SOURCES,
  PlaybackInfoResponse.JSON_PROPERTY_PLAY_SESSION_ID,
  PlaybackInfoResponse.JSON_PROPERTY_ERROR_CODE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class PlaybackInfoResponse {
  public static final String JSON_PROPERTY_MEDIA_SOURCES = "MediaSources";
  @javax.annotation.Nullable
  private List<MediaSourceInfo> mediaSources = new ArrayList<>();

  public static final String JSON_PROPERTY_PLAY_SESSION_ID = "PlaySessionId";
  private JsonNullable<String> playSessionId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ERROR_CODE = "ErrorCode";
  private JsonNullable<PlaybackErrorCode> errorCode = JsonNullable.<PlaybackErrorCode>undefined();

  public PlaybackInfoResponse() { 
  }

  public PlaybackInfoResponse mediaSources(@javax.annotation.Nullable List<MediaSourceInfo> mediaSources) {
    this.mediaSources = mediaSources;
    return this;
  }

  public PlaybackInfoResponse addMediaSourcesItem(MediaSourceInfo mediaSourcesItem) {
    if (this.mediaSources == null) {
      this.mediaSources = new ArrayList<>();
    }
    this.mediaSources.add(mediaSourcesItem);
    return this;
  }

  /**
   * Gets or sets the media sources.
   * @return mediaSources
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEDIA_SOURCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<MediaSourceInfo> getMediaSources() {
    return mediaSources;
  }


  @JsonProperty(JSON_PROPERTY_MEDIA_SOURCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMediaSources(@javax.annotation.Nullable List<MediaSourceInfo> mediaSources) {
    this.mediaSources = mediaSources;
  }


  public PlaybackInfoResponse playSessionId(@javax.annotation.Nullable String playSessionId) {
    this.playSessionId = JsonNullable.<String>of(playSessionId);
    return this;
  }

  /**
   * Gets or sets the play session identifier.
   * @return playSessionId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getPlaySessionId() {
        return playSessionId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLAY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPlaySessionId_JsonNullable() {
    return playSessionId;
  }
  
  @JsonProperty(JSON_PROPERTY_PLAY_SESSION_ID)
  public void setPlaySessionId_JsonNullable(JsonNullable<String> playSessionId) {
    this.playSessionId = playSessionId;
  }

  public void setPlaySessionId(@javax.annotation.Nullable String playSessionId) {
    this.playSessionId = JsonNullable.<String>of(playSessionId);
  }


  public PlaybackInfoResponse errorCode(@javax.annotation.Nullable PlaybackErrorCode errorCode) {
    this.errorCode = JsonNullable.<PlaybackErrorCode>of(errorCode);
    return this;
  }

  /**
   * Gets or sets the error code.
   * @return errorCode
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public PlaybackErrorCode getErrorCode() {
        return errorCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PlaybackErrorCode> getErrorCode_JsonNullable() {
    return errorCode;
  }
  
  @JsonProperty(JSON_PROPERTY_ERROR_CODE)
  public void setErrorCode_JsonNullable(JsonNullable<PlaybackErrorCode> errorCode) {
    this.errorCode = errorCode;
  }

  public void setErrorCode(@javax.annotation.Nullable PlaybackErrorCode errorCode) {
    this.errorCode = JsonNullable.<PlaybackErrorCode>of(errorCode);
  }


  /**
   * Return true if this PlaybackInfoResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlaybackInfoResponse playbackInfoResponse = (PlaybackInfoResponse) o;
    return Objects.equals(this.mediaSources, playbackInfoResponse.mediaSources) &&
        equalsNullable(this.playSessionId, playbackInfoResponse.playSessionId) &&
        equalsNullable(this.errorCode, playbackInfoResponse.errorCode);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(mediaSources, hashCodeNullable(playSessionId), hashCodeNullable(errorCode));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlaybackInfoResponse {\n");
    sb.append("    mediaSources: ").append(toIndentedString(mediaSources)).append("\n");
    sb.append("    playSessionId: ").append(toIndentedString(playSessionId)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `MediaSources` to the URL query string
    if (getMediaSources() != null) {
      for (int i = 0; i < getMediaSources().size(); i++) {
        if (getMediaSources().get(i) != null) {
          joiner.add(getMediaSources().get(i).toUrlQueryString(String.format("%sMediaSources%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `PlaySessionId` to the URL query string
    if (getPlaySessionId() != null) {
      joiner.add(String.format("%sPlaySessionId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPlaySessionId()))));
    }

    // add `ErrorCode` to the URL query string
    if (getErrorCode() != null) {
      joiner.add(String.format("%sErrorCode%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getErrorCode()))));
    }

    return joiner.toString();
  }
}

