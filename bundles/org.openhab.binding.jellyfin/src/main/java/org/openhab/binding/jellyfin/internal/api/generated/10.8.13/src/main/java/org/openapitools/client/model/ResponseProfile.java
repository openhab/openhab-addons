/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DlnaProfileType;
import org.openapitools.client.model.ProfileCondition;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * ResponseProfile
 */
@JsonPropertyOrder({
  ResponseProfile.JSON_PROPERTY_CONTAINER,
  ResponseProfile.JSON_PROPERTY_AUDIO_CODEC,
  ResponseProfile.JSON_PROPERTY_VIDEO_CODEC,
  ResponseProfile.JSON_PROPERTY_TYPE,
  ResponseProfile.JSON_PROPERTY_ORG_PN,
  ResponseProfile.JSON_PROPERTY_MIME_TYPE,
  ResponseProfile.JSON_PROPERTY_CONDITIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class ResponseProfile {
  public static final String JSON_PROPERTY_CONTAINER = "Container";
  private JsonNullable<String> container = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AUDIO_CODEC = "AudioCodec";
  private JsonNullable<String> audioCodec = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VIDEO_CODEC = "VideoCodec";
  private JsonNullable<String> videoCodec = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TYPE = "Type";
  @javax.annotation.Nullable
  private DlnaProfileType type;

  public static final String JSON_PROPERTY_ORG_PN = "OrgPn";
  private JsonNullable<String> orgPn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MIME_TYPE = "MimeType";
  private JsonNullable<String> mimeType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CONDITIONS = "Conditions";
  private JsonNullable<List<ProfileCondition>> conditions = JsonNullable.<List<ProfileCondition>>undefined();

  public ResponseProfile() { 
  }

  public ResponseProfile container(@javax.annotation.Nullable String container) {
    this.container = JsonNullable.<String>of(container);
    return this;
  }

  /**
   * Get container
   * @return container
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getContainer() {
        return container.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONTAINER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getContainer_JsonNullable() {
    return container;
  }
  
  @JsonProperty(JSON_PROPERTY_CONTAINER)
  public void setContainer_JsonNullable(JsonNullable<String> container) {
    this.container = container;
  }

  public void setContainer(@javax.annotation.Nullable String container) {
    this.container = JsonNullable.<String>of(container);
  }


  public ResponseProfile audioCodec(@javax.annotation.Nullable String audioCodec) {
    this.audioCodec = JsonNullable.<String>of(audioCodec);
    return this;
  }

  /**
   * Get audioCodec
   * @return audioCodec
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getAudioCodec() {
        return audioCodec.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUDIO_CODEC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAudioCodec_JsonNullable() {
    return audioCodec;
  }
  
  @JsonProperty(JSON_PROPERTY_AUDIO_CODEC)
  public void setAudioCodec_JsonNullable(JsonNullable<String> audioCodec) {
    this.audioCodec = audioCodec;
  }

  public void setAudioCodec(@javax.annotation.Nullable String audioCodec) {
    this.audioCodec = JsonNullable.<String>of(audioCodec);
  }


  public ResponseProfile videoCodec(@javax.annotation.Nullable String videoCodec) {
    this.videoCodec = JsonNullable.<String>of(videoCodec);
    return this;
  }

  /**
   * Get videoCodec
   * @return videoCodec
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getVideoCodec() {
        return videoCodec.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VIDEO_CODEC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVideoCodec_JsonNullable() {
    return videoCodec;
  }
  
  @JsonProperty(JSON_PROPERTY_VIDEO_CODEC)
  public void setVideoCodec_JsonNullable(JsonNullable<String> videoCodec) {
    this.videoCodec = videoCodec;
  }

  public void setVideoCodec(@javax.annotation.Nullable String videoCodec) {
    this.videoCodec = JsonNullable.<String>of(videoCodec);
  }


  public ResponseProfile type(@javax.annotation.Nullable DlnaProfileType type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public DlnaProfileType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(@javax.annotation.Nullable DlnaProfileType type) {
    this.type = type;
  }


  public ResponseProfile orgPn(@javax.annotation.Nullable String orgPn) {
    this.orgPn = JsonNullable.<String>of(orgPn);
    return this;
  }

  /**
   * Get orgPn
   * @return orgPn
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getOrgPn() {
        return orgPn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ORG_PN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOrgPn_JsonNullable() {
    return orgPn;
  }
  
  @JsonProperty(JSON_PROPERTY_ORG_PN)
  public void setOrgPn_JsonNullable(JsonNullable<String> orgPn) {
    this.orgPn = orgPn;
  }

  public void setOrgPn(@javax.annotation.Nullable String orgPn) {
    this.orgPn = JsonNullable.<String>of(orgPn);
  }


  public ResponseProfile mimeType(@javax.annotation.Nullable String mimeType) {
    this.mimeType = JsonNullable.<String>of(mimeType);
    return this;
  }

  /**
   * Get mimeType
   * @return mimeType
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getMimeType() {
        return mimeType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MIME_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMimeType_JsonNullable() {
    return mimeType;
  }
  
  @JsonProperty(JSON_PROPERTY_MIME_TYPE)
  public void setMimeType_JsonNullable(JsonNullable<String> mimeType) {
    this.mimeType = mimeType;
  }

  public void setMimeType(@javax.annotation.Nullable String mimeType) {
    this.mimeType = JsonNullable.<String>of(mimeType);
  }


  public ResponseProfile conditions(@javax.annotation.Nullable List<ProfileCondition> conditions) {
    this.conditions = JsonNullable.<List<ProfileCondition>>of(conditions);
    return this;
  }

  public ResponseProfile addConditionsItem(ProfileCondition conditionsItem) {
    if (this.conditions == null || !this.conditions.isPresent()) {
      this.conditions = JsonNullable.<List<ProfileCondition>>of(new ArrayList<>());
    }
    try {
      this.conditions.get().add(conditionsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get conditions
   * @return conditions
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<ProfileCondition> getConditions() {
        return conditions.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ProfileCondition>> getConditions_JsonNullable() {
    return conditions;
  }
  
  @JsonProperty(JSON_PROPERTY_CONDITIONS)
  public void setConditions_JsonNullable(JsonNullable<List<ProfileCondition>> conditions) {
    this.conditions = conditions;
  }

  public void setConditions(@javax.annotation.Nullable List<ProfileCondition> conditions) {
    this.conditions = JsonNullable.<List<ProfileCondition>>of(conditions);
  }


  /**
   * Return true if this ResponseProfile object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseProfile responseProfile = (ResponseProfile) o;
    return equalsNullable(this.container, responseProfile.container) &&
        equalsNullable(this.audioCodec, responseProfile.audioCodec) &&
        equalsNullable(this.videoCodec, responseProfile.videoCodec) &&
        Objects.equals(this.type, responseProfile.type) &&
        equalsNullable(this.orgPn, responseProfile.orgPn) &&
        equalsNullable(this.mimeType, responseProfile.mimeType) &&
        equalsNullable(this.conditions, responseProfile.conditions);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(container), hashCodeNullable(audioCodec), hashCodeNullable(videoCodec), type, hashCodeNullable(orgPn), hashCodeNullable(mimeType), hashCodeNullable(conditions));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseProfile {\n");
    sb.append("    container: ").append(toIndentedString(container)).append("\n");
    sb.append("    audioCodec: ").append(toIndentedString(audioCodec)).append("\n");
    sb.append("    videoCodec: ").append(toIndentedString(videoCodec)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    orgPn: ").append(toIndentedString(orgPn)).append("\n");
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `Container` to the URL query string
    if (getContainer() != null) {
      joiner.add(String.format("%sContainer%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getContainer()))));
    }

    // add `AudioCodec` to the URL query string
    if (getAudioCodec() != null) {
      joiner.add(String.format("%sAudioCodec%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAudioCodec()))));
    }

    // add `VideoCodec` to the URL query string
    if (getVideoCodec() != null) {
      joiner.add(String.format("%sVideoCodec%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getVideoCodec()))));
    }

    // add `Type` to the URL query string
    if (getType() != null) {
      joiner.add(String.format("%sType%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getType()))));
    }

    // add `OrgPn` to the URL query string
    if (getOrgPn() != null) {
      joiner.add(String.format("%sOrgPn%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOrgPn()))));
    }

    // add `MimeType` to the URL query string
    if (getMimeType() != null) {
      joiner.add(String.format("%sMimeType%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMimeType()))));
    }

    // add `Conditions` to the URL query string
    if (getConditions() != null) {
      for (int i = 0; i < getConditions().size(); i++) {
        if (getConditions().get(i) != null) {
          joiner.add(getConditions().get(i).toUrlQueryString(String.format("%sConditions%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }
}

