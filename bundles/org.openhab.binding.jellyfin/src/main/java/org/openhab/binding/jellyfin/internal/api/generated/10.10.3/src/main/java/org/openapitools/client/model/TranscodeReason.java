/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets TranscodeReason
 */
@JsonAdapter(TranscodeReason.Adapter.class)
public enum TranscodeReason {
  
  CONTAINER_NOT_SUPPORTED("ContainerNotSupported"),
  
  VIDEO_CODEC_NOT_SUPPORTED("VideoCodecNotSupported"),
  
  AUDIO_CODEC_NOT_SUPPORTED("AudioCodecNotSupported"),
  
  SUBTITLE_CODEC_NOT_SUPPORTED("SubtitleCodecNotSupported"),
  
  AUDIO_IS_EXTERNAL("AudioIsExternal"),
  
  SECONDARY_AUDIO_NOT_SUPPORTED("SecondaryAudioNotSupported"),
  
  VIDEO_PROFILE_NOT_SUPPORTED("VideoProfileNotSupported"),
  
  VIDEO_LEVEL_NOT_SUPPORTED("VideoLevelNotSupported"),
  
  VIDEO_RESOLUTION_NOT_SUPPORTED("VideoResolutionNotSupported"),
  
  VIDEO_BIT_DEPTH_NOT_SUPPORTED("VideoBitDepthNotSupported"),
  
  VIDEO_FRAMERATE_NOT_SUPPORTED("VideoFramerateNotSupported"),
  
  REF_FRAMES_NOT_SUPPORTED("RefFramesNotSupported"),
  
  ANAMORPHIC_VIDEO_NOT_SUPPORTED("AnamorphicVideoNotSupported"),
  
  INTERLACED_VIDEO_NOT_SUPPORTED("InterlacedVideoNotSupported"),
  
  AUDIO_CHANNELS_NOT_SUPPORTED("AudioChannelsNotSupported"),
  
  AUDIO_PROFILE_NOT_SUPPORTED("AudioProfileNotSupported"),
  
  AUDIO_SAMPLE_RATE_NOT_SUPPORTED("AudioSampleRateNotSupported"),
  
  AUDIO_BIT_DEPTH_NOT_SUPPORTED("AudioBitDepthNotSupported"),
  
  CONTAINER_BITRATE_EXCEEDS_LIMIT("ContainerBitrateExceedsLimit"),
  
  VIDEO_BITRATE_NOT_SUPPORTED("VideoBitrateNotSupported"),
  
  AUDIO_BITRATE_NOT_SUPPORTED("AudioBitrateNotSupported"),
  
  UNKNOWN_VIDEO_STREAM_INFO("UnknownVideoStreamInfo"),
  
  UNKNOWN_AUDIO_STREAM_INFO("UnknownAudioStreamInfo"),
  
  DIRECT_PLAY_ERROR("DirectPlayError"),
  
  VIDEO_RANGE_TYPE_NOT_SUPPORTED("VideoRangeTypeNotSupported"),
  
  VIDEO_CODEC_TAG_NOT_SUPPORTED("VideoCodecTagNotSupported");

  private String value;

  TranscodeReason(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static TranscodeReason fromValue(String value) {
    for (TranscodeReason b : TranscodeReason.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<TranscodeReason> {
    @Override
    public void write(final JsonWriter jsonWriter, final TranscodeReason enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public TranscodeReason read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return TranscodeReason.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    TranscodeReason.fromValue(value);
  }
}

