/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * Class PlayRequestDto.
 */
@JsonPropertyOrder({
  PlayRequestDto.JSON_PROPERTY_PLAYING_QUEUE,
  PlayRequestDto.JSON_PROPERTY_PLAYING_ITEM_POSITION,
  PlayRequestDto.JSON_PROPERTY_START_POSITION_TICKS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-16T17:51:31.285278872Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class PlayRequestDto {
  public static final String JSON_PROPERTY_PLAYING_QUEUE = "PlayingQueue";
  @javax.annotation.Nullable
  private List<UUID> playingQueue = new ArrayList<>();

  public static final String JSON_PROPERTY_PLAYING_ITEM_POSITION = "PlayingItemPosition";
  @javax.annotation.Nullable
  private Integer playingItemPosition;

  public static final String JSON_PROPERTY_START_POSITION_TICKS = "StartPositionTicks";
  @javax.annotation.Nullable
  private Long startPositionTicks;

  public PlayRequestDto() { 
  }

  public PlayRequestDto playingQueue(@javax.annotation.Nullable List<UUID> playingQueue) {
    this.playingQueue = playingQueue;
    return this;
  }

  public PlayRequestDto addPlayingQueueItem(UUID playingQueueItem) {
    if (this.playingQueue == null) {
      this.playingQueue = new ArrayList<>();
    }
    this.playingQueue.add(playingQueueItem);
    return this;
  }

  /**
   * Gets or sets the playing queue.
   * @return playingQueue
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLAYING_QUEUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<UUID> getPlayingQueue() {
    return playingQueue;
  }


  @JsonProperty(JSON_PROPERTY_PLAYING_QUEUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlayingQueue(@javax.annotation.Nullable List<UUID> playingQueue) {
    this.playingQueue = playingQueue;
  }


  public PlayRequestDto playingItemPosition(@javax.annotation.Nullable Integer playingItemPosition) {
    this.playingItemPosition = playingItemPosition;
    return this;
  }

  /**
   * Gets or sets the position of the playing item in the queue.
   * @return playingItemPosition
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLAYING_ITEM_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getPlayingItemPosition() {
    return playingItemPosition;
  }


  @JsonProperty(JSON_PROPERTY_PLAYING_ITEM_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlayingItemPosition(@javax.annotation.Nullable Integer playingItemPosition) {
    this.playingItemPosition = playingItemPosition;
  }


  public PlayRequestDto startPositionTicks(@javax.annotation.Nullable Long startPositionTicks) {
    this.startPositionTicks = startPositionTicks;
    return this;
  }

  /**
   * Gets or sets the start position ticks.
   * @return startPositionTicks
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_POSITION_TICKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getStartPositionTicks() {
    return startPositionTicks;
  }


  @JsonProperty(JSON_PROPERTY_START_POSITION_TICKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartPositionTicks(@javax.annotation.Nullable Long startPositionTicks) {
    this.startPositionTicks = startPositionTicks;
  }


  /**
   * Return true if this PlayRequestDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlayRequestDto playRequestDto = (PlayRequestDto) o;
    return Objects.equals(this.playingQueue, playRequestDto.playingQueue) &&
        Objects.equals(this.playingItemPosition, playRequestDto.playingItemPosition) &&
        Objects.equals(this.startPositionTicks, playRequestDto.startPositionTicks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(playingQueue, playingItemPosition, startPositionTicks);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlayRequestDto {\n");
    sb.append("    playingQueue: ").append(toIndentedString(playingQueue)).append("\n");
    sb.append("    playingItemPosition: ").append(toIndentedString(playingItemPosition)).append("\n");
    sb.append("    startPositionTicks: ").append(toIndentedString(startPositionTicks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `PlayingQueue` to the URL query string
    if (getPlayingQueue() != null) {
      for (int i = 0; i < getPlayingQueue().size(); i++) {
        if (getPlayingQueue().get(i) != null) {
          joiner.add(String.format("%sPlayingQueue%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getPlayingQueue().get(i)))));
        }
      }
    }

    // add `PlayingItemPosition` to the URL query string
    if (getPlayingItemPosition() != null) {
      joiner.add(String.format("%sPlayingItemPosition%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPlayingItemPosition()))));
    }

    // add `StartPositionTicks` to the URL query string
    if (getStartPositionTicks() != null) {
      joiner.add(String.format("%sStartPositionTicks%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStartPositionTicks()))));
    }

    return joiner.toString();
  }
}

