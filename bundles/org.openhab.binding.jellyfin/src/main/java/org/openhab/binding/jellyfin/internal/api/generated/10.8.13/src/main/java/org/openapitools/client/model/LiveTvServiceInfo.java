/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.LiveTvServiceStatus;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * Class ServiceInfo.
 */
@JsonPropertyOrder({
  LiveTvServiceInfo.JSON_PROPERTY_NAME,
  LiveTvServiceInfo.JSON_PROPERTY_HOME_PAGE_URL,
  LiveTvServiceInfo.JSON_PROPERTY_STATUS,
  LiveTvServiceInfo.JSON_PROPERTY_STATUS_MESSAGE,
  LiveTvServiceInfo.JSON_PROPERTY_VERSION,
  LiveTvServiceInfo.JSON_PROPERTY_HAS_UPDATE_AVAILABLE,
  LiveTvServiceInfo.JSON_PROPERTY_IS_VISIBLE,
  LiveTvServiceInfo.JSON_PROPERTY_TUNERS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-28T21:48:40.061690683Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class LiveTvServiceInfo {
  public static final String JSON_PROPERTY_NAME = "Name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HOME_PAGE_URL = "HomePageUrl";
  private JsonNullable<String> homePageUrl = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STATUS = "Status";
  @javax.annotation.Nullable
  private LiveTvServiceStatus status;

  public static final String JSON_PROPERTY_STATUS_MESSAGE = "StatusMessage";
  private JsonNullable<String> statusMessage = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION = "Version";
  private JsonNullable<String> version = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HAS_UPDATE_AVAILABLE = "HasUpdateAvailable";
  @javax.annotation.Nullable
  private Boolean hasUpdateAvailable;

  public static final String JSON_PROPERTY_IS_VISIBLE = "IsVisible";
  @javax.annotation.Nullable
  private Boolean isVisible;

  public static final String JSON_PROPERTY_TUNERS = "Tuners";
  private JsonNullable<List<String>> tuners = JsonNullable.<List<String>>undefined();

  public LiveTvServiceInfo() { 
  }

  public LiveTvServiceInfo name(@javax.annotation.Nullable String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

  /**
   * Gets or sets the name.
   * @return name
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public LiveTvServiceInfo homePageUrl(@javax.annotation.Nullable String homePageUrl) {
    this.homePageUrl = JsonNullable.<String>of(homePageUrl);
    return this;
  }

  /**
   * Gets or sets the home page URL.
   * @return homePageUrl
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getHomePageUrl() {
        return homePageUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOME_PAGE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getHomePageUrl_JsonNullable() {
    return homePageUrl;
  }
  
  @JsonProperty(JSON_PROPERTY_HOME_PAGE_URL)
  public void setHomePageUrl_JsonNullable(JsonNullable<String> homePageUrl) {
    this.homePageUrl = homePageUrl;
  }

  public void setHomePageUrl(@javax.annotation.Nullable String homePageUrl) {
    this.homePageUrl = JsonNullable.<String>of(homePageUrl);
  }


  public LiveTvServiceInfo status(@javax.annotation.Nullable LiveTvServiceStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Gets or sets the status.
   * @return status
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public LiveTvServiceStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(@javax.annotation.Nullable LiveTvServiceStatus status) {
    this.status = status;
  }


  public LiveTvServiceInfo statusMessage(@javax.annotation.Nullable String statusMessage) {
    this.statusMessage = JsonNullable.<String>of(statusMessage);
    return this;
  }

  /**
   * Gets or sets the status message.
   * @return statusMessage
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getStatusMessage() {
        return statusMessage.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATUS_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStatusMessage_JsonNullable() {
    return statusMessage;
  }
  
  @JsonProperty(JSON_PROPERTY_STATUS_MESSAGE)
  public void setStatusMessage_JsonNullable(JsonNullable<String> statusMessage) {
    this.statusMessage = statusMessage;
  }

  public void setStatusMessage(@javax.annotation.Nullable String statusMessage) {
    this.statusMessage = JsonNullable.<String>of(statusMessage);
  }


  public LiveTvServiceInfo version(@javax.annotation.Nullable String version) {
    this.version = JsonNullable.<String>of(version);
    return this;
  }

  /**
   * Gets or sets the version.
   * @return version
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getVersion() {
        return version.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersion_JsonNullable() {
    return version;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION)
  public void setVersion_JsonNullable(JsonNullable<String> version) {
    this.version = version;
  }

  public void setVersion(@javax.annotation.Nullable String version) {
    this.version = JsonNullable.<String>of(version);
  }


  public LiveTvServiceInfo hasUpdateAvailable(@javax.annotation.Nullable Boolean hasUpdateAvailable) {
    this.hasUpdateAvailable = hasUpdateAvailable;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance has update available.
   * @return hasUpdateAvailable
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HAS_UPDATE_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getHasUpdateAvailable() {
    return hasUpdateAvailable;
  }


  @JsonProperty(JSON_PROPERTY_HAS_UPDATE_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasUpdateAvailable(@javax.annotation.Nullable Boolean hasUpdateAvailable) {
    this.hasUpdateAvailable = hasUpdateAvailable;
  }


  public LiveTvServiceInfo isVisible(@javax.annotation.Nullable Boolean isVisible) {
    this.isVisible = isVisible;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance is visible.
   * @return isVisible
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_VISIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getIsVisible() {
    return isVisible;
  }


  @JsonProperty(JSON_PROPERTY_IS_VISIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsVisible(@javax.annotation.Nullable Boolean isVisible) {
    this.isVisible = isVisible;
  }


  public LiveTvServiceInfo tuners(@javax.annotation.Nullable List<String> tuners) {
    this.tuners = JsonNullable.<List<String>>of(tuners);
    return this;
  }

  public LiveTvServiceInfo addTunersItem(String tunersItem) {
    if (this.tuners == null || !this.tuners.isPresent()) {
      this.tuners = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.tuners.get().add(tunersItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get tuners
   * @return tuners
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<String> getTuners() {
        return tuners.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TUNERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getTuners_JsonNullable() {
    return tuners;
  }
  
  @JsonProperty(JSON_PROPERTY_TUNERS)
  public void setTuners_JsonNullable(JsonNullable<List<String>> tuners) {
    this.tuners = tuners;
  }

  public void setTuners(@javax.annotation.Nullable List<String> tuners) {
    this.tuners = JsonNullable.<List<String>>of(tuners);
  }


  /**
   * Return true if this LiveTvServiceInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LiveTvServiceInfo liveTvServiceInfo = (LiveTvServiceInfo) o;
    return equalsNullable(this.name, liveTvServiceInfo.name) &&
        equalsNullable(this.homePageUrl, liveTvServiceInfo.homePageUrl) &&
        Objects.equals(this.status, liveTvServiceInfo.status) &&
        equalsNullable(this.statusMessage, liveTvServiceInfo.statusMessage) &&
        equalsNullable(this.version, liveTvServiceInfo.version) &&
        Objects.equals(this.hasUpdateAvailable, liveTvServiceInfo.hasUpdateAvailable) &&
        Objects.equals(this.isVisible, liveTvServiceInfo.isVisible) &&
        equalsNullable(this.tuners, liveTvServiceInfo.tuners);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(name), hashCodeNullable(homePageUrl), status, hashCodeNullable(statusMessage), hashCodeNullable(version), hasUpdateAvailable, isVisible, hashCodeNullable(tuners));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LiveTvServiceInfo {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    homePageUrl: ").append(toIndentedString(homePageUrl)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    hasUpdateAvailable: ").append(toIndentedString(hasUpdateAvailable)).append("\n");
    sb.append("    isVisible: ").append(toIndentedString(isVisible)).append("\n");
    sb.append("    tuners: ").append(toIndentedString(tuners)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `Name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getName()))));
    }

    // add `HomePageUrl` to the URL query string
    if (getHomePageUrl() != null) {
      joiner.add(String.format("%sHomePageUrl%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getHomePageUrl()))));
    }

    // add `Status` to the URL query string
    if (getStatus() != null) {
      joiner.add(String.format("%sStatus%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStatus()))));
    }

    // add `StatusMessage` to the URL query string
    if (getStatusMessage() != null) {
      joiner.add(String.format("%sStatusMessage%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStatusMessage()))));
    }

    // add `Version` to the URL query string
    if (getVersion() != null) {
      joiner.add(String.format("%sVersion%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getVersion()))));
    }

    // add `HasUpdateAvailable` to the URL query string
    if (getHasUpdateAvailable() != null) {
      joiner.add(String.format("%sHasUpdateAvailable%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getHasUpdateAvailable()))));
    }

    // add `IsVisible` to the URL query string
    if (getIsVisible() != null) {
      joiner.add(String.format("%sIsVisible%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsVisible()))));
    }

    // add `Tuners` to the URL query string
    if (getTuners() != null) {
      for (int i = 0; i < getTuners().size(); i++) {
        joiner.add(String.format("%sTuners%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getTuners().get(i)))));
      }
    }

    return joiner.toString();
  }
}

