/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * Class BufferRequestDto.
 */
@JsonPropertyOrder({
  BufferRequestDto.JSON_PROPERTY_WHEN,
  BufferRequestDto.JSON_PROPERTY_POSITION_TICKS,
  BufferRequestDto.JSON_PROPERTY_IS_PLAYING,
  BufferRequestDto.JSON_PROPERTY_PLAYLIST_ITEM_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-28T21:48:58.939457991Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class BufferRequestDto {
  public static final String JSON_PROPERTY_WHEN = "When";
  @javax.annotation.Nullable
  private OffsetDateTime when;

  public static final String JSON_PROPERTY_POSITION_TICKS = "PositionTicks";
  @javax.annotation.Nullable
  private Long positionTicks;

  public static final String JSON_PROPERTY_IS_PLAYING = "IsPlaying";
  @javax.annotation.Nullable
  private Boolean isPlaying;

  public static final String JSON_PROPERTY_PLAYLIST_ITEM_ID = "PlaylistItemId";
  @javax.annotation.Nullable
  private UUID playlistItemId;

  public BufferRequestDto() { 
  }

  public BufferRequestDto when(@javax.annotation.Nullable OffsetDateTime when) {
    this.when = when;
    return this;
  }

  /**
   * Gets or sets when the request has been made by the client.
   * @return when
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WHEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getWhen() {
    return when;
  }


  @JsonProperty(JSON_PROPERTY_WHEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWhen(@javax.annotation.Nullable OffsetDateTime when) {
    this.when = when;
  }


  public BufferRequestDto positionTicks(@javax.annotation.Nullable Long positionTicks) {
    this.positionTicks = positionTicks;
    return this;
  }

  /**
   * Gets or sets the position ticks.
   * @return positionTicks
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSITION_TICKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getPositionTicks() {
    return positionTicks;
  }


  @JsonProperty(JSON_PROPERTY_POSITION_TICKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPositionTicks(@javax.annotation.Nullable Long positionTicks) {
    this.positionTicks = positionTicks;
  }


  public BufferRequestDto isPlaying(@javax.annotation.Nullable Boolean isPlaying) {
    this.isPlaying = isPlaying;
    return this;
  }

  /**
   * Gets or sets a value indicating whether the client playback is unpaused.
   * @return isPlaying
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_PLAYING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getIsPlaying() {
    return isPlaying;
  }


  @JsonProperty(JSON_PROPERTY_IS_PLAYING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsPlaying(@javax.annotation.Nullable Boolean isPlaying) {
    this.isPlaying = isPlaying;
  }


  public BufferRequestDto playlistItemId(@javax.annotation.Nullable UUID playlistItemId) {
    this.playlistItemId = playlistItemId;
    return this;
  }

  /**
   * Gets or sets the playlist item identifier of the playing item.
   * @return playlistItemId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLAYLIST_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public UUID getPlaylistItemId() {
    return playlistItemId;
  }


  @JsonProperty(JSON_PROPERTY_PLAYLIST_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlaylistItemId(@javax.annotation.Nullable UUID playlistItemId) {
    this.playlistItemId = playlistItemId;
  }


  /**
   * Return true if this BufferRequestDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BufferRequestDto bufferRequestDto = (BufferRequestDto) o;
    return Objects.equals(this.when, bufferRequestDto.when) &&
        Objects.equals(this.positionTicks, bufferRequestDto.positionTicks) &&
        Objects.equals(this.isPlaying, bufferRequestDto.isPlaying) &&
        Objects.equals(this.playlistItemId, bufferRequestDto.playlistItemId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(when, positionTicks, isPlaying, playlistItemId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BufferRequestDto {\n");
    sb.append("    when: ").append(toIndentedString(when)).append("\n");
    sb.append("    positionTicks: ").append(toIndentedString(positionTicks)).append("\n");
    sb.append("    isPlaying: ").append(toIndentedString(isPlaying)).append("\n");
    sb.append("    playlistItemId: ").append(toIndentedString(playlistItemId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `When` to the URL query string
    if (getWhen() != null) {
      joiner.add(String.format("%sWhen%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getWhen()))));
    }

    // add `PositionTicks` to the URL query string
    if (getPositionTicks() != null) {
      joiner.add(String.format("%sPositionTicks%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPositionTicks()))));
    }

    // add `IsPlaying` to the URL query string
    if (getIsPlaying() != null) {
      joiner.add(String.format("%sIsPlaying%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsPlaying()))));
    }

    // add `PlaylistItemId` to the URL query string
    if (getPlaylistItemId() != null) {
      joiner.add(String.format("%sPlaylistItemId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPlaylistItemId()))));
    }

    return joiner.toString();
  }
}

