/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * Stores the state of an quick connect request.
 */
@JsonPropertyOrder({
  QuickConnectResult.JSON_PROPERTY_AUTHENTICATED,
  QuickConnectResult.JSON_PROPERTY_SECRET,
  QuickConnectResult.JSON_PROPERTY_CODE,
  QuickConnectResult.JSON_PROPERTY_DEVICE_ID,
  QuickConnectResult.JSON_PROPERTY_DEVICE_NAME,
  QuickConnectResult.JSON_PROPERTY_APP_NAME,
  QuickConnectResult.JSON_PROPERTY_APP_VERSION,
  QuickConnectResult.JSON_PROPERTY_DATE_ADDED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-28T21:48:58.939457991Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class QuickConnectResult {
  public static final String JSON_PROPERTY_AUTHENTICATED = "Authenticated";
  @javax.annotation.Nullable
  private Boolean authenticated;

  public static final String JSON_PROPERTY_SECRET = "Secret";
  @javax.annotation.Nullable
  private String secret;

  public static final String JSON_PROPERTY_CODE = "Code";
  @javax.annotation.Nullable
  private String code;

  public static final String JSON_PROPERTY_DEVICE_ID = "DeviceId";
  @javax.annotation.Nullable
  private String deviceId;

  public static final String JSON_PROPERTY_DEVICE_NAME = "DeviceName";
  @javax.annotation.Nullable
  private String deviceName;

  public static final String JSON_PROPERTY_APP_NAME = "AppName";
  @javax.annotation.Nullable
  private String appName;

  public static final String JSON_PROPERTY_APP_VERSION = "AppVersion";
  @javax.annotation.Nullable
  private String appVersion;

  public static final String JSON_PROPERTY_DATE_ADDED = "DateAdded";
  @javax.annotation.Nullable
  private OffsetDateTime dateAdded;

  public QuickConnectResult() { 
  }

  public QuickConnectResult authenticated(@javax.annotation.Nullable Boolean authenticated) {
    this.authenticated = authenticated;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this request is authorized.
   * @return authenticated
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHENTICATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getAuthenticated() {
    return authenticated;
  }


  @JsonProperty(JSON_PROPERTY_AUTHENTICATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthenticated(@javax.annotation.Nullable Boolean authenticated) {
    this.authenticated = authenticated;
  }


  public QuickConnectResult secret(@javax.annotation.Nullable String secret) {
    this.secret = secret;
    return this;
  }

  /**
   * Gets the secret value used to uniquely identify this request. Can be used to retrieve authentication information.
   * @return secret
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECRET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSecret() {
    return secret;
  }


  @JsonProperty(JSON_PROPERTY_SECRET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecret(@javax.annotation.Nullable String secret) {
    this.secret = secret;
  }


  public QuickConnectResult code(@javax.annotation.Nullable String code) {
    this.code = code;
    return this;
  }

  /**
   * Gets the user facing code used so the user can quickly differentiate this request from others.
   * @return code
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(@javax.annotation.Nullable String code) {
    this.code = code;
  }


  public QuickConnectResult deviceId(@javax.annotation.Nullable String deviceId) {
    this.deviceId = deviceId;
    return this;
  }

  /**
   * Gets the requesting device id.
   * @return deviceId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEVICE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDeviceId() {
    return deviceId;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeviceId(@javax.annotation.Nullable String deviceId) {
    this.deviceId = deviceId;
  }


  public QuickConnectResult deviceName(@javax.annotation.Nullable String deviceName) {
    this.deviceName = deviceName;
    return this;
  }

  /**
   * Gets the requesting device name.
   * @return deviceName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEVICE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDeviceName() {
    return deviceName;
  }


  @JsonProperty(JSON_PROPERTY_DEVICE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeviceName(@javax.annotation.Nullable String deviceName) {
    this.deviceName = deviceName;
  }


  public QuickConnectResult appName(@javax.annotation.Nullable String appName) {
    this.appName = appName;
    return this;
  }

  /**
   * Gets the requesting app name.
   * @return appName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APP_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getAppName() {
    return appName;
  }


  @JsonProperty(JSON_PROPERTY_APP_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAppName(@javax.annotation.Nullable String appName) {
    this.appName = appName;
  }


  public QuickConnectResult appVersion(@javax.annotation.Nullable String appVersion) {
    this.appVersion = appVersion;
    return this;
  }

  /**
   * Gets the requesting app version.
   * @return appVersion
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APP_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getAppVersion() {
    return appVersion;
  }


  @JsonProperty(JSON_PROPERTY_APP_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAppVersion(@javax.annotation.Nullable String appVersion) {
    this.appVersion = appVersion;
  }


  public QuickConnectResult dateAdded(@javax.annotation.Nullable OffsetDateTime dateAdded) {
    this.dateAdded = dateAdded;
    return this;
  }

  /**
   * Gets or sets the DateTime that this request was created.
   * @return dateAdded
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_ADDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getDateAdded() {
    return dateAdded;
  }


  @JsonProperty(JSON_PROPERTY_DATE_ADDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateAdded(@javax.annotation.Nullable OffsetDateTime dateAdded) {
    this.dateAdded = dateAdded;
  }


  /**
   * Return true if this QuickConnectResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuickConnectResult quickConnectResult = (QuickConnectResult) o;
    return Objects.equals(this.authenticated, quickConnectResult.authenticated) &&
        Objects.equals(this.secret, quickConnectResult.secret) &&
        Objects.equals(this.code, quickConnectResult.code) &&
        Objects.equals(this.deviceId, quickConnectResult.deviceId) &&
        Objects.equals(this.deviceName, quickConnectResult.deviceName) &&
        Objects.equals(this.appName, quickConnectResult.appName) &&
        Objects.equals(this.appVersion, quickConnectResult.appVersion) &&
        Objects.equals(this.dateAdded, quickConnectResult.dateAdded);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authenticated, secret, code, deviceId, deviceName, appName, appVersion, dateAdded);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuickConnectResult {\n");
    sb.append("    authenticated: ").append(toIndentedString(authenticated)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
    sb.append("    deviceName: ").append(toIndentedString(deviceName)).append("\n");
    sb.append("    appName: ").append(toIndentedString(appName)).append("\n");
    sb.append("    appVersion: ").append(toIndentedString(appVersion)).append("\n");
    sb.append("    dateAdded: ").append(toIndentedString(dateAdded)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `Authenticated` to the URL query string
    if (getAuthenticated() != null) {
      joiner.add(String.format("%sAuthenticated%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAuthenticated()))));
    }

    // add `Secret` to the URL query string
    if (getSecret() != null) {
      joiner.add(String.format("%sSecret%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSecret()))));
    }

    // add `Code` to the URL query string
    if (getCode() != null) {
      joiner.add(String.format("%sCode%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCode()))));
    }

    // add `DeviceId` to the URL query string
    if (getDeviceId() != null) {
      joiner.add(String.format("%sDeviceId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDeviceId()))));
    }

    // add `DeviceName` to the URL query string
    if (getDeviceName() != null) {
      joiner.add(String.format("%sDeviceName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDeviceName()))));
    }

    // add `AppName` to the URL query string
    if (getAppName() != null) {
      joiner.add(String.format("%sAppName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAppName()))));
    }

    // add `AppVersion` to the URL query string
    if (getAppVersion() != null) {
      joiner.add(String.format("%sAppVersion%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAppVersion()))));
    }

    // add `DateAdded` to the URL query string
    if (getDateAdded() != null) {
      joiner.add(String.format("%sDateAdded%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDateAdded()))));
    }

    return joiner.toString();
  }
}

