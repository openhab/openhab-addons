/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.AccessSchedule;
import org.openapitools.client.model.SyncPlayUserAccessType;
import org.openapitools.client.model.UnratedItem;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * UserPolicy
 */
@JsonPropertyOrder({
  UserPolicy.JSON_PROPERTY_IS_ADMINISTRATOR,
  UserPolicy.JSON_PROPERTY_IS_HIDDEN,
  UserPolicy.JSON_PROPERTY_ENABLE_COLLECTION_MANAGEMENT,
  UserPolicy.JSON_PROPERTY_ENABLE_SUBTITLE_MANAGEMENT,
  UserPolicy.JSON_PROPERTY_ENABLE_LYRIC_MANAGEMENT,
  UserPolicy.JSON_PROPERTY_IS_DISABLED,
  UserPolicy.JSON_PROPERTY_MAX_PARENTAL_RATING,
  UserPolicy.JSON_PROPERTY_BLOCKED_TAGS,
  UserPolicy.JSON_PROPERTY_ALLOWED_TAGS,
  UserPolicy.JSON_PROPERTY_ENABLE_USER_PREFERENCE_ACCESS,
  UserPolicy.JSON_PROPERTY_ACCESS_SCHEDULES,
  UserPolicy.JSON_PROPERTY_BLOCK_UNRATED_ITEMS,
  UserPolicy.JSON_PROPERTY_ENABLE_REMOTE_CONTROL_OF_OTHER_USERS,
  UserPolicy.JSON_PROPERTY_ENABLE_SHARED_DEVICE_CONTROL,
  UserPolicy.JSON_PROPERTY_ENABLE_REMOTE_ACCESS,
  UserPolicy.JSON_PROPERTY_ENABLE_LIVE_TV_MANAGEMENT,
  UserPolicy.JSON_PROPERTY_ENABLE_LIVE_TV_ACCESS,
  UserPolicy.JSON_PROPERTY_ENABLE_MEDIA_PLAYBACK,
  UserPolicy.JSON_PROPERTY_ENABLE_AUDIO_PLAYBACK_TRANSCODING,
  UserPolicy.JSON_PROPERTY_ENABLE_VIDEO_PLAYBACK_TRANSCODING,
  UserPolicy.JSON_PROPERTY_ENABLE_PLAYBACK_REMUXING,
  UserPolicy.JSON_PROPERTY_FORCE_REMOTE_SOURCE_TRANSCODING,
  UserPolicy.JSON_PROPERTY_ENABLE_CONTENT_DELETION,
  UserPolicy.JSON_PROPERTY_ENABLE_CONTENT_DELETION_FROM_FOLDERS,
  UserPolicy.JSON_PROPERTY_ENABLE_CONTENT_DOWNLOADING,
  UserPolicy.JSON_PROPERTY_ENABLE_SYNC_TRANSCODING,
  UserPolicy.JSON_PROPERTY_ENABLE_MEDIA_CONVERSION,
  UserPolicy.JSON_PROPERTY_ENABLED_DEVICES,
  UserPolicy.JSON_PROPERTY_ENABLE_ALL_DEVICES,
  UserPolicy.JSON_PROPERTY_ENABLED_CHANNELS,
  UserPolicy.JSON_PROPERTY_ENABLE_ALL_CHANNELS,
  UserPolicy.JSON_PROPERTY_ENABLED_FOLDERS,
  UserPolicy.JSON_PROPERTY_ENABLE_ALL_FOLDERS,
  UserPolicy.JSON_PROPERTY_INVALID_LOGIN_ATTEMPT_COUNT,
  UserPolicy.JSON_PROPERTY_LOGIN_ATTEMPTS_BEFORE_LOCKOUT,
  UserPolicy.JSON_PROPERTY_MAX_ACTIVE_SESSIONS,
  UserPolicy.JSON_PROPERTY_ENABLE_PUBLIC_SHARING,
  UserPolicy.JSON_PROPERTY_BLOCKED_MEDIA_FOLDERS,
  UserPolicy.JSON_PROPERTY_BLOCKED_CHANNELS,
  UserPolicy.JSON_PROPERTY_REMOTE_CLIENT_BITRATE_LIMIT,
  UserPolicy.JSON_PROPERTY_AUTHENTICATION_PROVIDER_ID,
  UserPolicy.JSON_PROPERTY_PASSWORD_RESET_PROVIDER_ID,
  UserPolicy.JSON_PROPERTY_SYNC_PLAY_ACCESS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-28T21:48:48.410245241Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class UserPolicy {
  public static final String JSON_PROPERTY_IS_ADMINISTRATOR = "IsAdministrator";
  @javax.annotation.Nullable
  private Boolean isAdministrator;

  public static final String JSON_PROPERTY_IS_HIDDEN = "IsHidden";
  @javax.annotation.Nullable
  private Boolean isHidden;

  public static final String JSON_PROPERTY_ENABLE_COLLECTION_MANAGEMENT = "EnableCollectionManagement";
  @javax.annotation.Nullable
  private Boolean enableCollectionManagement = false;

  public static final String JSON_PROPERTY_ENABLE_SUBTITLE_MANAGEMENT = "EnableSubtitleManagement";
  @javax.annotation.Nullable
  private Boolean enableSubtitleManagement = false;

  public static final String JSON_PROPERTY_ENABLE_LYRIC_MANAGEMENT = "EnableLyricManagement";
  @javax.annotation.Nullable
  private Boolean enableLyricManagement = false;

  public static final String JSON_PROPERTY_IS_DISABLED = "IsDisabled";
  @javax.annotation.Nullable
  private Boolean isDisabled;

  public static final String JSON_PROPERTY_MAX_PARENTAL_RATING = "MaxParentalRating";
  private JsonNullable<Integer> maxParentalRating = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_BLOCKED_TAGS = "BlockedTags";
  private JsonNullable<List<String>> blockedTags = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ALLOWED_TAGS = "AllowedTags";
  private JsonNullable<List<String>> allowedTags = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ENABLE_USER_PREFERENCE_ACCESS = "EnableUserPreferenceAccess";
  @javax.annotation.Nullable
  private Boolean enableUserPreferenceAccess;

  public static final String JSON_PROPERTY_ACCESS_SCHEDULES = "AccessSchedules";
  private JsonNullable<List<AccessSchedule>> accessSchedules = JsonNullable.<List<AccessSchedule>>undefined();

  public static final String JSON_PROPERTY_BLOCK_UNRATED_ITEMS = "BlockUnratedItems";
  private JsonNullable<List<UnratedItem>> blockUnratedItems = JsonNullable.<List<UnratedItem>>undefined();

  public static final String JSON_PROPERTY_ENABLE_REMOTE_CONTROL_OF_OTHER_USERS = "EnableRemoteControlOfOtherUsers";
  @javax.annotation.Nullable
  private Boolean enableRemoteControlOfOtherUsers;

  public static final String JSON_PROPERTY_ENABLE_SHARED_DEVICE_CONTROL = "EnableSharedDeviceControl";
  @javax.annotation.Nullable
  private Boolean enableSharedDeviceControl;

  public static final String JSON_PROPERTY_ENABLE_REMOTE_ACCESS = "EnableRemoteAccess";
  @javax.annotation.Nullable
  private Boolean enableRemoteAccess;

  public static final String JSON_PROPERTY_ENABLE_LIVE_TV_MANAGEMENT = "EnableLiveTvManagement";
  @javax.annotation.Nullable
  private Boolean enableLiveTvManagement;

  public static final String JSON_PROPERTY_ENABLE_LIVE_TV_ACCESS = "EnableLiveTvAccess";
  @javax.annotation.Nullable
  private Boolean enableLiveTvAccess;

  public static final String JSON_PROPERTY_ENABLE_MEDIA_PLAYBACK = "EnableMediaPlayback";
  @javax.annotation.Nullable
  private Boolean enableMediaPlayback;

  public static final String JSON_PROPERTY_ENABLE_AUDIO_PLAYBACK_TRANSCODING = "EnableAudioPlaybackTranscoding";
  @javax.annotation.Nullable
  private Boolean enableAudioPlaybackTranscoding;

  public static final String JSON_PROPERTY_ENABLE_VIDEO_PLAYBACK_TRANSCODING = "EnableVideoPlaybackTranscoding";
  @javax.annotation.Nullable
  private Boolean enableVideoPlaybackTranscoding;

  public static final String JSON_PROPERTY_ENABLE_PLAYBACK_REMUXING = "EnablePlaybackRemuxing";
  @javax.annotation.Nullable
  private Boolean enablePlaybackRemuxing;

  public static final String JSON_PROPERTY_FORCE_REMOTE_SOURCE_TRANSCODING = "ForceRemoteSourceTranscoding";
  @javax.annotation.Nullable
  private Boolean forceRemoteSourceTranscoding;

  public static final String JSON_PROPERTY_ENABLE_CONTENT_DELETION = "EnableContentDeletion";
  @javax.annotation.Nullable
  private Boolean enableContentDeletion;

  public static final String JSON_PROPERTY_ENABLE_CONTENT_DELETION_FROM_FOLDERS = "EnableContentDeletionFromFolders";
  private JsonNullable<List<String>> enableContentDeletionFromFolders = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ENABLE_CONTENT_DOWNLOADING = "EnableContentDownloading";
  @javax.annotation.Nullable
  private Boolean enableContentDownloading;

  public static final String JSON_PROPERTY_ENABLE_SYNC_TRANSCODING = "EnableSyncTranscoding";
  @javax.annotation.Nullable
  private Boolean enableSyncTranscoding;

  public static final String JSON_PROPERTY_ENABLE_MEDIA_CONVERSION = "EnableMediaConversion";
  @javax.annotation.Nullable
  private Boolean enableMediaConversion;

  public static final String JSON_PROPERTY_ENABLED_DEVICES = "EnabledDevices";
  private JsonNullable<List<String>> enabledDevices = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ENABLE_ALL_DEVICES = "EnableAllDevices";
  @javax.annotation.Nullable
  private Boolean enableAllDevices;

  public static final String JSON_PROPERTY_ENABLED_CHANNELS = "EnabledChannels";
  private JsonNullable<List<UUID>> enabledChannels = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_ENABLE_ALL_CHANNELS = "EnableAllChannels";
  @javax.annotation.Nullable
  private Boolean enableAllChannels;

  public static final String JSON_PROPERTY_ENABLED_FOLDERS = "EnabledFolders";
  private JsonNullable<List<UUID>> enabledFolders = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_ENABLE_ALL_FOLDERS = "EnableAllFolders";
  @javax.annotation.Nullable
  private Boolean enableAllFolders;

  public static final String JSON_PROPERTY_INVALID_LOGIN_ATTEMPT_COUNT = "InvalidLoginAttemptCount";
  @javax.annotation.Nullable
  private Integer invalidLoginAttemptCount;

  public static final String JSON_PROPERTY_LOGIN_ATTEMPTS_BEFORE_LOCKOUT = "LoginAttemptsBeforeLockout";
  @javax.annotation.Nullable
  private Integer loginAttemptsBeforeLockout;

  public static final String JSON_PROPERTY_MAX_ACTIVE_SESSIONS = "MaxActiveSessions";
  @javax.annotation.Nullable
  private Integer maxActiveSessions;

  public static final String JSON_PROPERTY_ENABLE_PUBLIC_SHARING = "EnablePublicSharing";
  @javax.annotation.Nullable
  private Boolean enablePublicSharing;

  public static final String JSON_PROPERTY_BLOCKED_MEDIA_FOLDERS = "BlockedMediaFolders";
  private JsonNullable<List<UUID>> blockedMediaFolders = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_BLOCKED_CHANNELS = "BlockedChannels";
  private JsonNullable<List<UUID>> blockedChannels = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_REMOTE_CLIENT_BITRATE_LIMIT = "RemoteClientBitrateLimit";
  @javax.annotation.Nullable
  private Integer remoteClientBitrateLimit;

  public static final String JSON_PROPERTY_AUTHENTICATION_PROVIDER_ID = "AuthenticationProviderId";
  @javax.annotation.Nonnull
  private String authenticationProviderId;

  public static final String JSON_PROPERTY_PASSWORD_RESET_PROVIDER_ID = "PasswordResetProviderId";
  @javax.annotation.Nonnull
  private String passwordResetProviderId;

  public static final String JSON_PROPERTY_SYNC_PLAY_ACCESS = "SyncPlayAccess";
  @javax.annotation.Nullable
  private SyncPlayUserAccessType syncPlayAccess;

  public UserPolicy() { 
  }

  public UserPolicy isAdministrator(@javax.annotation.Nullable Boolean isAdministrator) {
    this.isAdministrator = isAdministrator;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance is administrator.
   * @return isAdministrator
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_ADMINISTRATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getIsAdministrator() {
    return isAdministrator;
  }


  @JsonProperty(JSON_PROPERTY_IS_ADMINISTRATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsAdministrator(@javax.annotation.Nullable Boolean isAdministrator) {
    this.isAdministrator = isAdministrator;
  }


  public UserPolicy isHidden(@javax.annotation.Nullable Boolean isHidden) {
    this.isHidden = isHidden;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance is hidden.
   * @return isHidden
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_HIDDEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getIsHidden() {
    return isHidden;
  }


  @JsonProperty(JSON_PROPERTY_IS_HIDDEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsHidden(@javax.annotation.Nullable Boolean isHidden) {
    this.isHidden = isHidden;
  }


  public UserPolicy enableCollectionManagement(@javax.annotation.Nullable Boolean enableCollectionManagement) {
    this.enableCollectionManagement = enableCollectionManagement;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance can manage collections.
   * @return enableCollectionManagement
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_COLLECTION_MANAGEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableCollectionManagement() {
    return enableCollectionManagement;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_COLLECTION_MANAGEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableCollectionManagement(@javax.annotation.Nullable Boolean enableCollectionManagement) {
    this.enableCollectionManagement = enableCollectionManagement;
  }


  public UserPolicy enableSubtitleManagement(@javax.annotation.Nullable Boolean enableSubtitleManagement) {
    this.enableSubtitleManagement = enableSubtitleManagement;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance can manage subtitles.
   * @return enableSubtitleManagement
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_SUBTITLE_MANAGEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableSubtitleManagement() {
    return enableSubtitleManagement;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_SUBTITLE_MANAGEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableSubtitleManagement(@javax.annotation.Nullable Boolean enableSubtitleManagement) {
    this.enableSubtitleManagement = enableSubtitleManagement;
  }


  public UserPolicy enableLyricManagement(@javax.annotation.Nullable Boolean enableLyricManagement) {
    this.enableLyricManagement = enableLyricManagement;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this user can manage lyrics.
   * @return enableLyricManagement
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_LYRIC_MANAGEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableLyricManagement() {
    return enableLyricManagement;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_LYRIC_MANAGEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableLyricManagement(@javax.annotation.Nullable Boolean enableLyricManagement) {
    this.enableLyricManagement = enableLyricManagement;
  }


  public UserPolicy isDisabled(@javax.annotation.Nullable Boolean isDisabled) {
    this.isDisabled = isDisabled;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance is disabled.
   * @return isDisabled
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_DISABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getIsDisabled() {
    return isDisabled;
  }


  @JsonProperty(JSON_PROPERTY_IS_DISABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsDisabled(@javax.annotation.Nullable Boolean isDisabled) {
    this.isDisabled = isDisabled;
  }


  public UserPolicy maxParentalRating(@javax.annotation.Nullable Integer maxParentalRating) {
    this.maxParentalRating = JsonNullable.<Integer>of(maxParentalRating);
    return this;
  }

  /**
   * Gets or sets the max parental rating.
   * @return maxParentalRating
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getMaxParentalRating() {
        return maxParentalRating.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_PARENTAL_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getMaxParentalRating_JsonNullable() {
    return maxParentalRating;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_PARENTAL_RATING)
  public void setMaxParentalRating_JsonNullable(JsonNullable<Integer> maxParentalRating) {
    this.maxParentalRating = maxParentalRating;
  }

  public void setMaxParentalRating(@javax.annotation.Nullable Integer maxParentalRating) {
    this.maxParentalRating = JsonNullable.<Integer>of(maxParentalRating);
  }


  public UserPolicy blockedTags(@javax.annotation.Nullable List<String> blockedTags) {
    this.blockedTags = JsonNullable.<List<String>>of(blockedTags);
    return this;
  }

  public UserPolicy addBlockedTagsItem(String blockedTagsItem) {
    if (this.blockedTags == null || !this.blockedTags.isPresent()) {
      this.blockedTags = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.blockedTags.get().add(blockedTagsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get blockedTags
   * @return blockedTags
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<String> getBlockedTags() {
        return blockedTags.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BLOCKED_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getBlockedTags_JsonNullable() {
    return blockedTags;
  }
  
  @JsonProperty(JSON_PROPERTY_BLOCKED_TAGS)
  public void setBlockedTags_JsonNullable(JsonNullable<List<String>> blockedTags) {
    this.blockedTags = blockedTags;
  }

  public void setBlockedTags(@javax.annotation.Nullable List<String> blockedTags) {
    this.blockedTags = JsonNullable.<List<String>>of(blockedTags);
  }


  public UserPolicy allowedTags(@javax.annotation.Nullable List<String> allowedTags) {
    this.allowedTags = JsonNullable.<List<String>>of(allowedTags);
    return this;
  }

  public UserPolicy addAllowedTagsItem(String allowedTagsItem) {
    if (this.allowedTags == null || !this.allowedTags.isPresent()) {
      this.allowedTags = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.allowedTags.get().add(allowedTagsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get allowedTags
   * @return allowedTags
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<String> getAllowedTags() {
        return allowedTags.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ALLOWED_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getAllowedTags_JsonNullable() {
    return allowedTags;
  }
  
  @JsonProperty(JSON_PROPERTY_ALLOWED_TAGS)
  public void setAllowedTags_JsonNullable(JsonNullable<List<String>> allowedTags) {
    this.allowedTags = allowedTags;
  }

  public void setAllowedTags(@javax.annotation.Nullable List<String> allowedTags) {
    this.allowedTags = JsonNullable.<List<String>>of(allowedTags);
  }


  public UserPolicy enableUserPreferenceAccess(@javax.annotation.Nullable Boolean enableUserPreferenceAccess) {
    this.enableUserPreferenceAccess = enableUserPreferenceAccess;
    return this;
  }

  /**
   * Get enableUserPreferenceAccess
   * @return enableUserPreferenceAccess
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_USER_PREFERENCE_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableUserPreferenceAccess() {
    return enableUserPreferenceAccess;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_USER_PREFERENCE_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableUserPreferenceAccess(@javax.annotation.Nullable Boolean enableUserPreferenceAccess) {
    this.enableUserPreferenceAccess = enableUserPreferenceAccess;
  }


  public UserPolicy accessSchedules(@javax.annotation.Nullable List<AccessSchedule> accessSchedules) {
    this.accessSchedules = JsonNullable.<List<AccessSchedule>>of(accessSchedules);
    return this;
  }

  public UserPolicy addAccessSchedulesItem(AccessSchedule accessSchedulesItem) {
    if (this.accessSchedules == null || !this.accessSchedules.isPresent()) {
      this.accessSchedules = JsonNullable.<List<AccessSchedule>>of(new ArrayList<>());
    }
    try {
      this.accessSchedules.get().add(accessSchedulesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get accessSchedules
   * @return accessSchedules
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<AccessSchedule> getAccessSchedules() {
        return accessSchedules.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ACCESS_SCHEDULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AccessSchedule>> getAccessSchedules_JsonNullable() {
    return accessSchedules;
  }
  
  @JsonProperty(JSON_PROPERTY_ACCESS_SCHEDULES)
  public void setAccessSchedules_JsonNullable(JsonNullable<List<AccessSchedule>> accessSchedules) {
    this.accessSchedules = accessSchedules;
  }

  public void setAccessSchedules(@javax.annotation.Nullable List<AccessSchedule> accessSchedules) {
    this.accessSchedules = JsonNullable.<List<AccessSchedule>>of(accessSchedules);
  }


  public UserPolicy blockUnratedItems(@javax.annotation.Nullable List<UnratedItem> blockUnratedItems) {
    this.blockUnratedItems = JsonNullable.<List<UnratedItem>>of(blockUnratedItems);
    return this;
  }

  public UserPolicy addBlockUnratedItemsItem(UnratedItem blockUnratedItemsItem) {
    if (this.blockUnratedItems == null || !this.blockUnratedItems.isPresent()) {
      this.blockUnratedItems = JsonNullable.<List<UnratedItem>>of(new ArrayList<>());
    }
    try {
      this.blockUnratedItems.get().add(blockUnratedItemsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get blockUnratedItems
   * @return blockUnratedItems
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<UnratedItem> getBlockUnratedItems() {
        return blockUnratedItems.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BLOCK_UNRATED_ITEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UnratedItem>> getBlockUnratedItems_JsonNullable() {
    return blockUnratedItems;
  }
  
  @JsonProperty(JSON_PROPERTY_BLOCK_UNRATED_ITEMS)
  public void setBlockUnratedItems_JsonNullable(JsonNullable<List<UnratedItem>> blockUnratedItems) {
    this.blockUnratedItems = blockUnratedItems;
  }

  public void setBlockUnratedItems(@javax.annotation.Nullable List<UnratedItem> blockUnratedItems) {
    this.blockUnratedItems = JsonNullable.<List<UnratedItem>>of(blockUnratedItems);
  }


  public UserPolicy enableRemoteControlOfOtherUsers(@javax.annotation.Nullable Boolean enableRemoteControlOfOtherUsers) {
    this.enableRemoteControlOfOtherUsers = enableRemoteControlOfOtherUsers;
    return this;
  }

  /**
   * Get enableRemoteControlOfOtherUsers
   * @return enableRemoteControlOfOtherUsers
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_REMOTE_CONTROL_OF_OTHER_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableRemoteControlOfOtherUsers() {
    return enableRemoteControlOfOtherUsers;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_REMOTE_CONTROL_OF_OTHER_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableRemoteControlOfOtherUsers(@javax.annotation.Nullable Boolean enableRemoteControlOfOtherUsers) {
    this.enableRemoteControlOfOtherUsers = enableRemoteControlOfOtherUsers;
  }


  public UserPolicy enableSharedDeviceControl(@javax.annotation.Nullable Boolean enableSharedDeviceControl) {
    this.enableSharedDeviceControl = enableSharedDeviceControl;
    return this;
  }

  /**
   * Get enableSharedDeviceControl
   * @return enableSharedDeviceControl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_SHARED_DEVICE_CONTROL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableSharedDeviceControl() {
    return enableSharedDeviceControl;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_SHARED_DEVICE_CONTROL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableSharedDeviceControl(@javax.annotation.Nullable Boolean enableSharedDeviceControl) {
    this.enableSharedDeviceControl = enableSharedDeviceControl;
  }


  public UserPolicy enableRemoteAccess(@javax.annotation.Nullable Boolean enableRemoteAccess) {
    this.enableRemoteAccess = enableRemoteAccess;
    return this;
  }

  /**
   * Get enableRemoteAccess
   * @return enableRemoteAccess
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_REMOTE_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableRemoteAccess() {
    return enableRemoteAccess;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_REMOTE_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableRemoteAccess(@javax.annotation.Nullable Boolean enableRemoteAccess) {
    this.enableRemoteAccess = enableRemoteAccess;
  }


  public UserPolicy enableLiveTvManagement(@javax.annotation.Nullable Boolean enableLiveTvManagement) {
    this.enableLiveTvManagement = enableLiveTvManagement;
    return this;
  }

  /**
   * Get enableLiveTvManagement
   * @return enableLiveTvManagement
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_LIVE_TV_MANAGEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableLiveTvManagement() {
    return enableLiveTvManagement;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_LIVE_TV_MANAGEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableLiveTvManagement(@javax.annotation.Nullable Boolean enableLiveTvManagement) {
    this.enableLiveTvManagement = enableLiveTvManagement;
  }


  public UserPolicy enableLiveTvAccess(@javax.annotation.Nullable Boolean enableLiveTvAccess) {
    this.enableLiveTvAccess = enableLiveTvAccess;
    return this;
  }

  /**
   * Get enableLiveTvAccess
   * @return enableLiveTvAccess
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_LIVE_TV_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableLiveTvAccess() {
    return enableLiveTvAccess;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_LIVE_TV_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableLiveTvAccess(@javax.annotation.Nullable Boolean enableLiveTvAccess) {
    this.enableLiveTvAccess = enableLiveTvAccess;
  }


  public UserPolicy enableMediaPlayback(@javax.annotation.Nullable Boolean enableMediaPlayback) {
    this.enableMediaPlayback = enableMediaPlayback;
    return this;
  }

  /**
   * Get enableMediaPlayback
   * @return enableMediaPlayback
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_MEDIA_PLAYBACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableMediaPlayback() {
    return enableMediaPlayback;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_MEDIA_PLAYBACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableMediaPlayback(@javax.annotation.Nullable Boolean enableMediaPlayback) {
    this.enableMediaPlayback = enableMediaPlayback;
  }


  public UserPolicy enableAudioPlaybackTranscoding(@javax.annotation.Nullable Boolean enableAudioPlaybackTranscoding) {
    this.enableAudioPlaybackTranscoding = enableAudioPlaybackTranscoding;
    return this;
  }

  /**
   * Get enableAudioPlaybackTranscoding
   * @return enableAudioPlaybackTranscoding
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_AUDIO_PLAYBACK_TRANSCODING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableAudioPlaybackTranscoding() {
    return enableAudioPlaybackTranscoding;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_AUDIO_PLAYBACK_TRANSCODING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableAudioPlaybackTranscoding(@javax.annotation.Nullable Boolean enableAudioPlaybackTranscoding) {
    this.enableAudioPlaybackTranscoding = enableAudioPlaybackTranscoding;
  }


  public UserPolicy enableVideoPlaybackTranscoding(@javax.annotation.Nullable Boolean enableVideoPlaybackTranscoding) {
    this.enableVideoPlaybackTranscoding = enableVideoPlaybackTranscoding;
    return this;
  }

  /**
   * Get enableVideoPlaybackTranscoding
   * @return enableVideoPlaybackTranscoding
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_VIDEO_PLAYBACK_TRANSCODING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableVideoPlaybackTranscoding() {
    return enableVideoPlaybackTranscoding;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_VIDEO_PLAYBACK_TRANSCODING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableVideoPlaybackTranscoding(@javax.annotation.Nullable Boolean enableVideoPlaybackTranscoding) {
    this.enableVideoPlaybackTranscoding = enableVideoPlaybackTranscoding;
  }


  public UserPolicy enablePlaybackRemuxing(@javax.annotation.Nullable Boolean enablePlaybackRemuxing) {
    this.enablePlaybackRemuxing = enablePlaybackRemuxing;
    return this;
  }

  /**
   * Get enablePlaybackRemuxing
   * @return enablePlaybackRemuxing
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_PLAYBACK_REMUXING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnablePlaybackRemuxing() {
    return enablePlaybackRemuxing;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_PLAYBACK_REMUXING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnablePlaybackRemuxing(@javax.annotation.Nullable Boolean enablePlaybackRemuxing) {
    this.enablePlaybackRemuxing = enablePlaybackRemuxing;
  }


  public UserPolicy forceRemoteSourceTranscoding(@javax.annotation.Nullable Boolean forceRemoteSourceTranscoding) {
    this.forceRemoteSourceTranscoding = forceRemoteSourceTranscoding;
    return this;
  }

  /**
   * Get forceRemoteSourceTranscoding
   * @return forceRemoteSourceTranscoding
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FORCE_REMOTE_SOURCE_TRANSCODING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getForceRemoteSourceTranscoding() {
    return forceRemoteSourceTranscoding;
  }


  @JsonProperty(JSON_PROPERTY_FORCE_REMOTE_SOURCE_TRANSCODING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setForceRemoteSourceTranscoding(@javax.annotation.Nullable Boolean forceRemoteSourceTranscoding) {
    this.forceRemoteSourceTranscoding = forceRemoteSourceTranscoding;
  }


  public UserPolicy enableContentDeletion(@javax.annotation.Nullable Boolean enableContentDeletion) {
    this.enableContentDeletion = enableContentDeletion;
    return this;
  }

  /**
   * Get enableContentDeletion
   * @return enableContentDeletion
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_CONTENT_DELETION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableContentDeletion() {
    return enableContentDeletion;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_CONTENT_DELETION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableContentDeletion(@javax.annotation.Nullable Boolean enableContentDeletion) {
    this.enableContentDeletion = enableContentDeletion;
  }


  public UserPolicy enableContentDeletionFromFolders(@javax.annotation.Nullable List<String> enableContentDeletionFromFolders) {
    this.enableContentDeletionFromFolders = JsonNullable.<List<String>>of(enableContentDeletionFromFolders);
    return this;
  }

  public UserPolicy addEnableContentDeletionFromFoldersItem(String enableContentDeletionFromFoldersItem) {
    if (this.enableContentDeletionFromFolders == null || !this.enableContentDeletionFromFolders.isPresent()) {
      this.enableContentDeletionFromFolders = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.enableContentDeletionFromFolders.get().add(enableContentDeletionFromFoldersItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get enableContentDeletionFromFolders
   * @return enableContentDeletionFromFolders
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<String> getEnableContentDeletionFromFolders() {
        return enableContentDeletionFromFolders.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENABLE_CONTENT_DELETION_FROM_FOLDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getEnableContentDeletionFromFolders_JsonNullable() {
    return enableContentDeletionFromFolders;
  }
  
  @JsonProperty(JSON_PROPERTY_ENABLE_CONTENT_DELETION_FROM_FOLDERS)
  public void setEnableContentDeletionFromFolders_JsonNullable(JsonNullable<List<String>> enableContentDeletionFromFolders) {
    this.enableContentDeletionFromFolders = enableContentDeletionFromFolders;
  }

  public void setEnableContentDeletionFromFolders(@javax.annotation.Nullable List<String> enableContentDeletionFromFolders) {
    this.enableContentDeletionFromFolders = JsonNullable.<List<String>>of(enableContentDeletionFromFolders);
  }


  public UserPolicy enableContentDownloading(@javax.annotation.Nullable Boolean enableContentDownloading) {
    this.enableContentDownloading = enableContentDownloading;
    return this;
  }

  /**
   * Get enableContentDownloading
   * @return enableContentDownloading
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_CONTENT_DOWNLOADING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableContentDownloading() {
    return enableContentDownloading;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_CONTENT_DOWNLOADING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableContentDownloading(@javax.annotation.Nullable Boolean enableContentDownloading) {
    this.enableContentDownloading = enableContentDownloading;
  }


  public UserPolicy enableSyncTranscoding(@javax.annotation.Nullable Boolean enableSyncTranscoding) {
    this.enableSyncTranscoding = enableSyncTranscoding;
    return this;
  }

  /**
   * Gets or sets a value indicating whether [enable synchronize].
   * @return enableSyncTranscoding
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_SYNC_TRANSCODING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableSyncTranscoding() {
    return enableSyncTranscoding;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_SYNC_TRANSCODING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableSyncTranscoding(@javax.annotation.Nullable Boolean enableSyncTranscoding) {
    this.enableSyncTranscoding = enableSyncTranscoding;
  }


  public UserPolicy enableMediaConversion(@javax.annotation.Nullable Boolean enableMediaConversion) {
    this.enableMediaConversion = enableMediaConversion;
    return this;
  }

  /**
   * Get enableMediaConversion
   * @return enableMediaConversion
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_MEDIA_CONVERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableMediaConversion() {
    return enableMediaConversion;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_MEDIA_CONVERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableMediaConversion(@javax.annotation.Nullable Boolean enableMediaConversion) {
    this.enableMediaConversion = enableMediaConversion;
  }


  public UserPolicy enabledDevices(@javax.annotation.Nullable List<String> enabledDevices) {
    this.enabledDevices = JsonNullable.<List<String>>of(enabledDevices);
    return this;
  }

  public UserPolicy addEnabledDevicesItem(String enabledDevicesItem) {
    if (this.enabledDevices == null || !this.enabledDevices.isPresent()) {
      this.enabledDevices = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.enabledDevices.get().add(enabledDevicesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get enabledDevices
   * @return enabledDevices
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<String> getEnabledDevices() {
        return enabledDevices.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENABLED_DEVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getEnabledDevices_JsonNullable() {
    return enabledDevices;
  }
  
  @JsonProperty(JSON_PROPERTY_ENABLED_DEVICES)
  public void setEnabledDevices_JsonNullable(JsonNullable<List<String>> enabledDevices) {
    this.enabledDevices = enabledDevices;
  }

  public void setEnabledDevices(@javax.annotation.Nullable List<String> enabledDevices) {
    this.enabledDevices = JsonNullable.<List<String>>of(enabledDevices);
  }


  public UserPolicy enableAllDevices(@javax.annotation.Nullable Boolean enableAllDevices) {
    this.enableAllDevices = enableAllDevices;
    return this;
  }

  /**
   * Get enableAllDevices
   * @return enableAllDevices
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_ALL_DEVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableAllDevices() {
    return enableAllDevices;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_ALL_DEVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableAllDevices(@javax.annotation.Nullable Boolean enableAllDevices) {
    this.enableAllDevices = enableAllDevices;
  }


  public UserPolicy enabledChannels(@javax.annotation.Nullable List<UUID> enabledChannels) {
    this.enabledChannels = JsonNullable.<List<UUID>>of(enabledChannels);
    return this;
  }

  public UserPolicy addEnabledChannelsItem(UUID enabledChannelsItem) {
    if (this.enabledChannels == null || !this.enabledChannels.isPresent()) {
      this.enabledChannels = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.enabledChannels.get().add(enabledChannelsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get enabledChannels
   * @return enabledChannels
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<UUID> getEnabledChannels() {
        return enabledChannels.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENABLED_CHANNELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getEnabledChannels_JsonNullable() {
    return enabledChannels;
  }
  
  @JsonProperty(JSON_PROPERTY_ENABLED_CHANNELS)
  public void setEnabledChannels_JsonNullable(JsonNullable<List<UUID>> enabledChannels) {
    this.enabledChannels = enabledChannels;
  }

  public void setEnabledChannels(@javax.annotation.Nullable List<UUID> enabledChannels) {
    this.enabledChannels = JsonNullable.<List<UUID>>of(enabledChannels);
  }


  public UserPolicy enableAllChannels(@javax.annotation.Nullable Boolean enableAllChannels) {
    this.enableAllChannels = enableAllChannels;
    return this;
  }

  /**
   * Get enableAllChannels
   * @return enableAllChannels
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_ALL_CHANNELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableAllChannels() {
    return enableAllChannels;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_ALL_CHANNELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableAllChannels(@javax.annotation.Nullable Boolean enableAllChannels) {
    this.enableAllChannels = enableAllChannels;
  }


  public UserPolicy enabledFolders(@javax.annotation.Nullable List<UUID> enabledFolders) {
    this.enabledFolders = JsonNullable.<List<UUID>>of(enabledFolders);
    return this;
  }

  public UserPolicy addEnabledFoldersItem(UUID enabledFoldersItem) {
    if (this.enabledFolders == null || !this.enabledFolders.isPresent()) {
      this.enabledFolders = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.enabledFolders.get().add(enabledFoldersItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get enabledFolders
   * @return enabledFolders
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<UUID> getEnabledFolders() {
        return enabledFolders.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENABLED_FOLDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getEnabledFolders_JsonNullable() {
    return enabledFolders;
  }
  
  @JsonProperty(JSON_PROPERTY_ENABLED_FOLDERS)
  public void setEnabledFolders_JsonNullable(JsonNullable<List<UUID>> enabledFolders) {
    this.enabledFolders = enabledFolders;
  }

  public void setEnabledFolders(@javax.annotation.Nullable List<UUID> enabledFolders) {
    this.enabledFolders = JsonNullable.<List<UUID>>of(enabledFolders);
  }


  public UserPolicy enableAllFolders(@javax.annotation.Nullable Boolean enableAllFolders) {
    this.enableAllFolders = enableAllFolders;
    return this;
  }

  /**
   * Get enableAllFolders
   * @return enableAllFolders
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_ALL_FOLDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableAllFolders() {
    return enableAllFolders;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_ALL_FOLDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableAllFolders(@javax.annotation.Nullable Boolean enableAllFolders) {
    this.enableAllFolders = enableAllFolders;
  }


  public UserPolicy invalidLoginAttemptCount(@javax.annotation.Nullable Integer invalidLoginAttemptCount) {
    this.invalidLoginAttemptCount = invalidLoginAttemptCount;
    return this;
  }

  /**
   * Get invalidLoginAttemptCount
   * @return invalidLoginAttemptCount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVALID_LOGIN_ATTEMPT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getInvalidLoginAttemptCount() {
    return invalidLoginAttemptCount;
  }


  @JsonProperty(JSON_PROPERTY_INVALID_LOGIN_ATTEMPT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvalidLoginAttemptCount(@javax.annotation.Nullable Integer invalidLoginAttemptCount) {
    this.invalidLoginAttemptCount = invalidLoginAttemptCount;
  }


  public UserPolicy loginAttemptsBeforeLockout(@javax.annotation.Nullable Integer loginAttemptsBeforeLockout) {
    this.loginAttemptsBeforeLockout = loginAttemptsBeforeLockout;
    return this;
  }

  /**
   * Get loginAttemptsBeforeLockout
   * @return loginAttemptsBeforeLockout
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOGIN_ATTEMPTS_BEFORE_LOCKOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getLoginAttemptsBeforeLockout() {
    return loginAttemptsBeforeLockout;
  }


  @JsonProperty(JSON_PROPERTY_LOGIN_ATTEMPTS_BEFORE_LOCKOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoginAttemptsBeforeLockout(@javax.annotation.Nullable Integer loginAttemptsBeforeLockout) {
    this.loginAttemptsBeforeLockout = loginAttemptsBeforeLockout;
  }


  public UserPolicy maxActiveSessions(@javax.annotation.Nullable Integer maxActiveSessions) {
    this.maxActiveSessions = maxActiveSessions;
    return this;
  }

  /**
   * Get maxActiveSessions
   * @return maxActiveSessions
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_ACTIVE_SESSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getMaxActiveSessions() {
    return maxActiveSessions;
  }


  @JsonProperty(JSON_PROPERTY_MAX_ACTIVE_SESSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxActiveSessions(@javax.annotation.Nullable Integer maxActiveSessions) {
    this.maxActiveSessions = maxActiveSessions;
  }


  public UserPolicy enablePublicSharing(@javax.annotation.Nullable Boolean enablePublicSharing) {
    this.enablePublicSharing = enablePublicSharing;
    return this;
  }

  /**
   * Get enablePublicSharing
   * @return enablePublicSharing
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_PUBLIC_SHARING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnablePublicSharing() {
    return enablePublicSharing;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_PUBLIC_SHARING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnablePublicSharing(@javax.annotation.Nullable Boolean enablePublicSharing) {
    this.enablePublicSharing = enablePublicSharing;
  }


  public UserPolicy blockedMediaFolders(@javax.annotation.Nullable List<UUID> blockedMediaFolders) {
    this.blockedMediaFolders = JsonNullable.<List<UUID>>of(blockedMediaFolders);
    return this;
  }

  public UserPolicy addBlockedMediaFoldersItem(UUID blockedMediaFoldersItem) {
    if (this.blockedMediaFolders == null || !this.blockedMediaFolders.isPresent()) {
      this.blockedMediaFolders = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.blockedMediaFolders.get().add(blockedMediaFoldersItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get blockedMediaFolders
   * @return blockedMediaFolders
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<UUID> getBlockedMediaFolders() {
        return blockedMediaFolders.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BLOCKED_MEDIA_FOLDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getBlockedMediaFolders_JsonNullable() {
    return blockedMediaFolders;
  }
  
  @JsonProperty(JSON_PROPERTY_BLOCKED_MEDIA_FOLDERS)
  public void setBlockedMediaFolders_JsonNullable(JsonNullable<List<UUID>> blockedMediaFolders) {
    this.blockedMediaFolders = blockedMediaFolders;
  }

  public void setBlockedMediaFolders(@javax.annotation.Nullable List<UUID> blockedMediaFolders) {
    this.blockedMediaFolders = JsonNullable.<List<UUID>>of(blockedMediaFolders);
  }


  public UserPolicy blockedChannels(@javax.annotation.Nullable List<UUID> blockedChannels) {
    this.blockedChannels = JsonNullable.<List<UUID>>of(blockedChannels);
    return this;
  }

  public UserPolicy addBlockedChannelsItem(UUID blockedChannelsItem) {
    if (this.blockedChannels == null || !this.blockedChannels.isPresent()) {
      this.blockedChannels = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.blockedChannels.get().add(blockedChannelsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get blockedChannels
   * @return blockedChannels
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<UUID> getBlockedChannels() {
        return blockedChannels.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BLOCKED_CHANNELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getBlockedChannels_JsonNullable() {
    return blockedChannels;
  }
  
  @JsonProperty(JSON_PROPERTY_BLOCKED_CHANNELS)
  public void setBlockedChannels_JsonNullable(JsonNullable<List<UUID>> blockedChannels) {
    this.blockedChannels = blockedChannels;
  }

  public void setBlockedChannels(@javax.annotation.Nullable List<UUID> blockedChannels) {
    this.blockedChannels = JsonNullable.<List<UUID>>of(blockedChannels);
  }


  public UserPolicy remoteClientBitrateLimit(@javax.annotation.Nullable Integer remoteClientBitrateLimit) {
    this.remoteClientBitrateLimit = remoteClientBitrateLimit;
    return this;
  }

  /**
   * Get remoteClientBitrateLimit
   * @return remoteClientBitrateLimit
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMOTE_CLIENT_BITRATE_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getRemoteClientBitrateLimit() {
    return remoteClientBitrateLimit;
  }


  @JsonProperty(JSON_PROPERTY_REMOTE_CLIENT_BITRATE_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemoteClientBitrateLimit(@javax.annotation.Nullable Integer remoteClientBitrateLimit) {
    this.remoteClientBitrateLimit = remoteClientBitrateLimit;
  }


  public UserPolicy authenticationProviderId(@javax.annotation.Nonnull String authenticationProviderId) {
    this.authenticationProviderId = authenticationProviderId;
    return this;
  }

  /**
   * Get authenticationProviderId
   * @return authenticationProviderId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_PROVIDER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getAuthenticationProviderId() {
    return authenticationProviderId;
  }


  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_PROVIDER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuthenticationProviderId(@javax.annotation.Nonnull String authenticationProviderId) {
    this.authenticationProviderId = authenticationProviderId;
  }


  public UserPolicy passwordResetProviderId(@javax.annotation.Nonnull String passwordResetProviderId) {
    this.passwordResetProviderId = passwordResetProviderId;
    return this;
  }

  /**
   * Get passwordResetProviderId
   * @return passwordResetProviderId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PASSWORD_RESET_PROVIDER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getPasswordResetProviderId() {
    return passwordResetProviderId;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD_RESET_PROVIDER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPasswordResetProviderId(@javax.annotation.Nonnull String passwordResetProviderId) {
    this.passwordResetProviderId = passwordResetProviderId;
  }


  public UserPolicy syncPlayAccess(@javax.annotation.Nullable SyncPlayUserAccessType syncPlayAccess) {
    this.syncPlayAccess = syncPlayAccess;
    return this;
  }

  /**
   * Enum SyncPlayUserAccessType.
   * @return syncPlayAccess
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SYNC_PLAY_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public SyncPlayUserAccessType getSyncPlayAccess() {
    return syncPlayAccess;
  }


  @JsonProperty(JSON_PROPERTY_SYNC_PLAY_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSyncPlayAccess(@javax.annotation.Nullable SyncPlayUserAccessType syncPlayAccess) {
    this.syncPlayAccess = syncPlayAccess;
  }


  /**
   * Return true if this UserPolicy object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserPolicy userPolicy = (UserPolicy) o;
    return Objects.equals(this.isAdministrator, userPolicy.isAdministrator) &&
        Objects.equals(this.isHidden, userPolicy.isHidden) &&
        Objects.equals(this.enableCollectionManagement, userPolicy.enableCollectionManagement) &&
        Objects.equals(this.enableSubtitleManagement, userPolicy.enableSubtitleManagement) &&
        Objects.equals(this.enableLyricManagement, userPolicy.enableLyricManagement) &&
        Objects.equals(this.isDisabled, userPolicy.isDisabled) &&
        equalsNullable(this.maxParentalRating, userPolicy.maxParentalRating) &&
        equalsNullable(this.blockedTags, userPolicy.blockedTags) &&
        equalsNullable(this.allowedTags, userPolicy.allowedTags) &&
        Objects.equals(this.enableUserPreferenceAccess, userPolicy.enableUserPreferenceAccess) &&
        equalsNullable(this.accessSchedules, userPolicy.accessSchedules) &&
        equalsNullable(this.blockUnratedItems, userPolicy.blockUnratedItems) &&
        Objects.equals(this.enableRemoteControlOfOtherUsers, userPolicy.enableRemoteControlOfOtherUsers) &&
        Objects.equals(this.enableSharedDeviceControl, userPolicy.enableSharedDeviceControl) &&
        Objects.equals(this.enableRemoteAccess, userPolicy.enableRemoteAccess) &&
        Objects.equals(this.enableLiveTvManagement, userPolicy.enableLiveTvManagement) &&
        Objects.equals(this.enableLiveTvAccess, userPolicy.enableLiveTvAccess) &&
        Objects.equals(this.enableMediaPlayback, userPolicy.enableMediaPlayback) &&
        Objects.equals(this.enableAudioPlaybackTranscoding, userPolicy.enableAudioPlaybackTranscoding) &&
        Objects.equals(this.enableVideoPlaybackTranscoding, userPolicy.enableVideoPlaybackTranscoding) &&
        Objects.equals(this.enablePlaybackRemuxing, userPolicy.enablePlaybackRemuxing) &&
        Objects.equals(this.forceRemoteSourceTranscoding, userPolicy.forceRemoteSourceTranscoding) &&
        Objects.equals(this.enableContentDeletion, userPolicy.enableContentDeletion) &&
        equalsNullable(this.enableContentDeletionFromFolders, userPolicy.enableContentDeletionFromFolders) &&
        Objects.equals(this.enableContentDownloading, userPolicy.enableContentDownloading) &&
        Objects.equals(this.enableSyncTranscoding, userPolicy.enableSyncTranscoding) &&
        Objects.equals(this.enableMediaConversion, userPolicy.enableMediaConversion) &&
        equalsNullable(this.enabledDevices, userPolicy.enabledDevices) &&
        Objects.equals(this.enableAllDevices, userPolicy.enableAllDevices) &&
        equalsNullable(this.enabledChannels, userPolicy.enabledChannels) &&
        Objects.equals(this.enableAllChannels, userPolicy.enableAllChannels) &&
        equalsNullable(this.enabledFolders, userPolicy.enabledFolders) &&
        Objects.equals(this.enableAllFolders, userPolicy.enableAllFolders) &&
        Objects.equals(this.invalidLoginAttemptCount, userPolicy.invalidLoginAttemptCount) &&
        Objects.equals(this.loginAttemptsBeforeLockout, userPolicy.loginAttemptsBeforeLockout) &&
        Objects.equals(this.maxActiveSessions, userPolicy.maxActiveSessions) &&
        Objects.equals(this.enablePublicSharing, userPolicy.enablePublicSharing) &&
        equalsNullable(this.blockedMediaFolders, userPolicy.blockedMediaFolders) &&
        equalsNullable(this.blockedChannels, userPolicy.blockedChannels) &&
        Objects.equals(this.remoteClientBitrateLimit, userPolicy.remoteClientBitrateLimit) &&
        Objects.equals(this.authenticationProviderId, userPolicy.authenticationProviderId) &&
        Objects.equals(this.passwordResetProviderId, userPolicy.passwordResetProviderId) &&
        Objects.equals(this.syncPlayAccess, userPolicy.syncPlayAccess);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(isAdministrator, isHidden, enableCollectionManagement, enableSubtitleManagement, enableLyricManagement, isDisabled, hashCodeNullable(maxParentalRating), hashCodeNullable(blockedTags), hashCodeNullable(allowedTags), enableUserPreferenceAccess, hashCodeNullable(accessSchedules), hashCodeNullable(blockUnratedItems), enableRemoteControlOfOtherUsers, enableSharedDeviceControl, enableRemoteAccess, enableLiveTvManagement, enableLiveTvAccess, enableMediaPlayback, enableAudioPlaybackTranscoding, enableVideoPlaybackTranscoding, enablePlaybackRemuxing, forceRemoteSourceTranscoding, enableContentDeletion, hashCodeNullable(enableContentDeletionFromFolders), enableContentDownloading, enableSyncTranscoding, enableMediaConversion, hashCodeNullable(enabledDevices), enableAllDevices, hashCodeNullable(enabledChannels), enableAllChannels, hashCodeNullable(enabledFolders), enableAllFolders, invalidLoginAttemptCount, loginAttemptsBeforeLockout, maxActiveSessions, enablePublicSharing, hashCodeNullable(blockedMediaFolders), hashCodeNullable(blockedChannels), remoteClientBitrateLimit, authenticationProviderId, passwordResetProviderId, syncPlayAccess);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserPolicy {\n");
    sb.append("    isAdministrator: ").append(toIndentedString(isAdministrator)).append("\n");
    sb.append("    isHidden: ").append(toIndentedString(isHidden)).append("\n");
    sb.append("    enableCollectionManagement: ").append(toIndentedString(enableCollectionManagement)).append("\n");
    sb.append("    enableSubtitleManagement: ").append(toIndentedString(enableSubtitleManagement)).append("\n");
    sb.append("    enableLyricManagement: ").append(toIndentedString(enableLyricManagement)).append("\n");
    sb.append("    isDisabled: ").append(toIndentedString(isDisabled)).append("\n");
    sb.append("    maxParentalRating: ").append(toIndentedString(maxParentalRating)).append("\n");
    sb.append("    blockedTags: ").append(toIndentedString(blockedTags)).append("\n");
    sb.append("    allowedTags: ").append(toIndentedString(allowedTags)).append("\n");
    sb.append("    enableUserPreferenceAccess: ").append(toIndentedString(enableUserPreferenceAccess)).append("\n");
    sb.append("    accessSchedules: ").append(toIndentedString(accessSchedules)).append("\n");
    sb.append("    blockUnratedItems: ").append(toIndentedString(blockUnratedItems)).append("\n");
    sb.append("    enableRemoteControlOfOtherUsers: ").append(toIndentedString(enableRemoteControlOfOtherUsers)).append("\n");
    sb.append("    enableSharedDeviceControl: ").append(toIndentedString(enableSharedDeviceControl)).append("\n");
    sb.append("    enableRemoteAccess: ").append(toIndentedString(enableRemoteAccess)).append("\n");
    sb.append("    enableLiveTvManagement: ").append(toIndentedString(enableLiveTvManagement)).append("\n");
    sb.append("    enableLiveTvAccess: ").append(toIndentedString(enableLiveTvAccess)).append("\n");
    sb.append("    enableMediaPlayback: ").append(toIndentedString(enableMediaPlayback)).append("\n");
    sb.append("    enableAudioPlaybackTranscoding: ").append(toIndentedString(enableAudioPlaybackTranscoding)).append("\n");
    sb.append("    enableVideoPlaybackTranscoding: ").append(toIndentedString(enableVideoPlaybackTranscoding)).append("\n");
    sb.append("    enablePlaybackRemuxing: ").append(toIndentedString(enablePlaybackRemuxing)).append("\n");
    sb.append("    forceRemoteSourceTranscoding: ").append(toIndentedString(forceRemoteSourceTranscoding)).append("\n");
    sb.append("    enableContentDeletion: ").append(toIndentedString(enableContentDeletion)).append("\n");
    sb.append("    enableContentDeletionFromFolders: ").append(toIndentedString(enableContentDeletionFromFolders)).append("\n");
    sb.append("    enableContentDownloading: ").append(toIndentedString(enableContentDownloading)).append("\n");
    sb.append("    enableSyncTranscoding: ").append(toIndentedString(enableSyncTranscoding)).append("\n");
    sb.append("    enableMediaConversion: ").append(toIndentedString(enableMediaConversion)).append("\n");
    sb.append("    enabledDevices: ").append(toIndentedString(enabledDevices)).append("\n");
    sb.append("    enableAllDevices: ").append(toIndentedString(enableAllDevices)).append("\n");
    sb.append("    enabledChannels: ").append(toIndentedString(enabledChannels)).append("\n");
    sb.append("    enableAllChannels: ").append(toIndentedString(enableAllChannels)).append("\n");
    sb.append("    enabledFolders: ").append(toIndentedString(enabledFolders)).append("\n");
    sb.append("    enableAllFolders: ").append(toIndentedString(enableAllFolders)).append("\n");
    sb.append("    invalidLoginAttemptCount: ").append(toIndentedString(invalidLoginAttemptCount)).append("\n");
    sb.append("    loginAttemptsBeforeLockout: ").append(toIndentedString(loginAttemptsBeforeLockout)).append("\n");
    sb.append("    maxActiveSessions: ").append(toIndentedString(maxActiveSessions)).append("\n");
    sb.append("    enablePublicSharing: ").append(toIndentedString(enablePublicSharing)).append("\n");
    sb.append("    blockedMediaFolders: ").append(toIndentedString(blockedMediaFolders)).append("\n");
    sb.append("    blockedChannels: ").append(toIndentedString(blockedChannels)).append("\n");
    sb.append("    remoteClientBitrateLimit: ").append(toIndentedString(remoteClientBitrateLimit)).append("\n");
    sb.append("    authenticationProviderId: ").append(toIndentedString(authenticationProviderId)).append("\n");
    sb.append("    passwordResetProviderId: ").append(toIndentedString(passwordResetProviderId)).append("\n");
    sb.append("    syncPlayAccess: ").append(toIndentedString(syncPlayAccess)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `IsAdministrator` to the URL query string
    if (getIsAdministrator() != null) {
      joiner.add(String.format("%sIsAdministrator%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsAdministrator()))));
    }

    // add `IsHidden` to the URL query string
    if (getIsHidden() != null) {
      joiner.add(String.format("%sIsHidden%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsHidden()))));
    }

    // add `EnableCollectionManagement` to the URL query string
    if (getEnableCollectionManagement() != null) {
      joiner.add(String.format("%sEnableCollectionManagement%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableCollectionManagement()))));
    }

    // add `EnableSubtitleManagement` to the URL query string
    if (getEnableSubtitleManagement() != null) {
      joiner.add(String.format("%sEnableSubtitleManagement%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableSubtitleManagement()))));
    }

    // add `EnableLyricManagement` to the URL query string
    if (getEnableLyricManagement() != null) {
      joiner.add(String.format("%sEnableLyricManagement%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableLyricManagement()))));
    }

    // add `IsDisabled` to the URL query string
    if (getIsDisabled() != null) {
      joiner.add(String.format("%sIsDisabled%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsDisabled()))));
    }

    // add `MaxParentalRating` to the URL query string
    if (getMaxParentalRating() != null) {
      joiner.add(String.format("%sMaxParentalRating%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMaxParentalRating()))));
    }

    // add `BlockedTags` to the URL query string
    if (getBlockedTags() != null) {
      for (int i = 0; i < getBlockedTags().size(); i++) {
        joiner.add(String.format("%sBlockedTags%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getBlockedTags().get(i)))));
      }
    }

    // add `AllowedTags` to the URL query string
    if (getAllowedTags() != null) {
      for (int i = 0; i < getAllowedTags().size(); i++) {
        joiner.add(String.format("%sAllowedTags%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getAllowedTags().get(i)))));
      }
    }

    // add `EnableUserPreferenceAccess` to the URL query string
    if (getEnableUserPreferenceAccess() != null) {
      joiner.add(String.format("%sEnableUserPreferenceAccess%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableUserPreferenceAccess()))));
    }

    // add `AccessSchedules` to the URL query string
    if (getAccessSchedules() != null) {
      for (int i = 0; i < getAccessSchedules().size(); i++) {
        if (getAccessSchedules().get(i) != null) {
          joiner.add(getAccessSchedules().get(i).toUrlQueryString(String.format("%sAccessSchedules%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `BlockUnratedItems` to the URL query string
    if (getBlockUnratedItems() != null) {
      for (int i = 0; i < getBlockUnratedItems().size(); i++) {
        if (getBlockUnratedItems().get(i) != null) {
          joiner.add(String.format("%sBlockUnratedItems%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getBlockUnratedItems().get(i)))));
        }
      }
    }

    // add `EnableRemoteControlOfOtherUsers` to the URL query string
    if (getEnableRemoteControlOfOtherUsers() != null) {
      joiner.add(String.format("%sEnableRemoteControlOfOtherUsers%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableRemoteControlOfOtherUsers()))));
    }

    // add `EnableSharedDeviceControl` to the URL query string
    if (getEnableSharedDeviceControl() != null) {
      joiner.add(String.format("%sEnableSharedDeviceControl%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableSharedDeviceControl()))));
    }

    // add `EnableRemoteAccess` to the URL query string
    if (getEnableRemoteAccess() != null) {
      joiner.add(String.format("%sEnableRemoteAccess%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableRemoteAccess()))));
    }

    // add `EnableLiveTvManagement` to the URL query string
    if (getEnableLiveTvManagement() != null) {
      joiner.add(String.format("%sEnableLiveTvManagement%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableLiveTvManagement()))));
    }

    // add `EnableLiveTvAccess` to the URL query string
    if (getEnableLiveTvAccess() != null) {
      joiner.add(String.format("%sEnableLiveTvAccess%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableLiveTvAccess()))));
    }

    // add `EnableMediaPlayback` to the URL query string
    if (getEnableMediaPlayback() != null) {
      joiner.add(String.format("%sEnableMediaPlayback%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableMediaPlayback()))));
    }

    // add `EnableAudioPlaybackTranscoding` to the URL query string
    if (getEnableAudioPlaybackTranscoding() != null) {
      joiner.add(String.format("%sEnableAudioPlaybackTranscoding%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableAudioPlaybackTranscoding()))));
    }

    // add `EnableVideoPlaybackTranscoding` to the URL query string
    if (getEnableVideoPlaybackTranscoding() != null) {
      joiner.add(String.format("%sEnableVideoPlaybackTranscoding%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableVideoPlaybackTranscoding()))));
    }

    // add `EnablePlaybackRemuxing` to the URL query string
    if (getEnablePlaybackRemuxing() != null) {
      joiner.add(String.format("%sEnablePlaybackRemuxing%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnablePlaybackRemuxing()))));
    }

    // add `ForceRemoteSourceTranscoding` to the URL query string
    if (getForceRemoteSourceTranscoding() != null) {
      joiner.add(String.format("%sForceRemoteSourceTranscoding%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getForceRemoteSourceTranscoding()))));
    }

    // add `EnableContentDeletion` to the URL query string
    if (getEnableContentDeletion() != null) {
      joiner.add(String.format("%sEnableContentDeletion%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableContentDeletion()))));
    }

    // add `EnableContentDeletionFromFolders` to the URL query string
    if (getEnableContentDeletionFromFolders() != null) {
      for (int i = 0; i < getEnableContentDeletionFromFolders().size(); i++) {
        joiner.add(String.format("%sEnableContentDeletionFromFolders%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getEnableContentDeletionFromFolders().get(i)))));
      }
    }

    // add `EnableContentDownloading` to the URL query string
    if (getEnableContentDownloading() != null) {
      joiner.add(String.format("%sEnableContentDownloading%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableContentDownloading()))));
    }

    // add `EnableSyncTranscoding` to the URL query string
    if (getEnableSyncTranscoding() != null) {
      joiner.add(String.format("%sEnableSyncTranscoding%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableSyncTranscoding()))));
    }

    // add `EnableMediaConversion` to the URL query string
    if (getEnableMediaConversion() != null) {
      joiner.add(String.format("%sEnableMediaConversion%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableMediaConversion()))));
    }

    // add `EnabledDevices` to the URL query string
    if (getEnabledDevices() != null) {
      for (int i = 0; i < getEnabledDevices().size(); i++) {
        joiner.add(String.format("%sEnabledDevices%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getEnabledDevices().get(i)))));
      }
    }

    // add `EnableAllDevices` to the URL query string
    if (getEnableAllDevices() != null) {
      joiner.add(String.format("%sEnableAllDevices%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableAllDevices()))));
    }

    // add `EnabledChannels` to the URL query string
    if (getEnabledChannels() != null) {
      for (int i = 0; i < getEnabledChannels().size(); i++) {
        if (getEnabledChannels().get(i) != null) {
          joiner.add(String.format("%sEnabledChannels%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getEnabledChannels().get(i)))));
        }
      }
    }

    // add `EnableAllChannels` to the URL query string
    if (getEnableAllChannels() != null) {
      joiner.add(String.format("%sEnableAllChannels%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableAllChannels()))));
    }

    // add `EnabledFolders` to the URL query string
    if (getEnabledFolders() != null) {
      for (int i = 0; i < getEnabledFolders().size(); i++) {
        if (getEnabledFolders().get(i) != null) {
          joiner.add(String.format("%sEnabledFolders%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getEnabledFolders().get(i)))));
        }
      }
    }

    // add `EnableAllFolders` to the URL query string
    if (getEnableAllFolders() != null) {
      joiner.add(String.format("%sEnableAllFolders%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableAllFolders()))));
    }

    // add `InvalidLoginAttemptCount` to the URL query string
    if (getInvalidLoginAttemptCount() != null) {
      joiner.add(String.format("%sInvalidLoginAttemptCount%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getInvalidLoginAttemptCount()))));
    }

    // add `LoginAttemptsBeforeLockout` to the URL query string
    if (getLoginAttemptsBeforeLockout() != null) {
      joiner.add(String.format("%sLoginAttemptsBeforeLockout%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLoginAttemptsBeforeLockout()))));
    }

    // add `MaxActiveSessions` to the URL query string
    if (getMaxActiveSessions() != null) {
      joiner.add(String.format("%sMaxActiveSessions%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMaxActiveSessions()))));
    }

    // add `EnablePublicSharing` to the URL query string
    if (getEnablePublicSharing() != null) {
      joiner.add(String.format("%sEnablePublicSharing%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnablePublicSharing()))));
    }

    // add `BlockedMediaFolders` to the URL query string
    if (getBlockedMediaFolders() != null) {
      for (int i = 0; i < getBlockedMediaFolders().size(); i++) {
        if (getBlockedMediaFolders().get(i) != null) {
          joiner.add(String.format("%sBlockedMediaFolders%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getBlockedMediaFolders().get(i)))));
        }
      }
    }

    // add `BlockedChannels` to the URL query string
    if (getBlockedChannels() != null) {
      for (int i = 0; i < getBlockedChannels().size(); i++) {
        if (getBlockedChannels().get(i) != null) {
          joiner.add(String.format("%sBlockedChannels%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getBlockedChannels().get(i)))));
        }
      }
    }

    // add `RemoteClientBitrateLimit` to the URL query string
    if (getRemoteClientBitrateLimit() != null) {
      joiner.add(String.format("%sRemoteClientBitrateLimit%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRemoteClientBitrateLimit()))));
    }

    // add `AuthenticationProviderId` to the URL query string
    if (getAuthenticationProviderId() != null) {
      joiner.add(String.format("%sAuthenticationProviderId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAuthenticationProviderId()))));
    }

    // add `PasswordResetProviderId` to the URL query string
    if (getPasswordResetProviderId() != null) {
      joiner.add(String.format("%sPasswordResetProviderId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPasswordResetProviderId()))));
    }

    // add `SyncPlayAccess` to the URL query string
    if (getSyncPlayAccess() != null) {
      joiner.add(String.format("%sSyncPlayAccess%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSyncPlayAccess()))));
    }

    return joiner.toString();
  }
}

