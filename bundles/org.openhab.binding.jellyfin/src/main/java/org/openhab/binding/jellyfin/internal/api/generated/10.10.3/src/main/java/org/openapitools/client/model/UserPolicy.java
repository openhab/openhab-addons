/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.AccessSchedule;
import org.openapitools.client.model.SyncPlayUserAccessType;
import org.openapitools.client.model.UnratedItem;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UserPolicy
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-27T20:32:56.699980679+01:00[Europe/Zurich]", comments = "Generator version: 7.10.0")
public class UserPolicy {
  public static final String SERIALIZED_NAME_IS_ADMINISTRATOR = "IsAdministrator";
  @SerializedName(SERIALIZED_NAME_IS_ADMINISTRATOR)
  @javax.annotation.Nullable
  private Boolean isAdministrator;

  public static final String SERIALIZED_NAME_IS_HIDDEN = "IsHidden";
  @SerializedName(SERIALIZED_NAME_IS_HIDDEN)
  @javax.annotation.Nullable
  private Boolean isHidden;

  public static final String SERIALIZED_NAME_ENABLE_COLLECTION_MANAGEMENT = "EnableCollectionManagement";
  @SerializedName(SERIALIZED_NAME_ENABLE_COLLECTION_MANAGEMENT)
  @javax.annotation.Nullable
  private Boolean enableCollectionManagement = false;

  public static final String SERIALIZED_NAME_ENABLE_SUBTITLE_MANAGEMENT = "EnableSubtitleManagement";
  @SerializedName(SERIALIZED_NAME_ENABLE_SUBTITLE_MANAGEMENT)
  @javax.annotation.Nullable
  private Boolean enableSubtitleManagement = false;

  public static final String SERIALIZED_NAME_ENABLE_LYRIC_MANAGEMENT = "EnableLyricManagement";
  @SerializedName(SERIALIZED_NAME_ENABLE_LYRIC_MANAGEMENT)
  @javax.annotation.Nullable
  private Boolean enableLyricManagement = false;

  public static final String SERIALIZED_NAME_IS_DISABLED = "IsDisabled";
  @SerializedName(SERIALIZED_NAME_IS_DISABLED)
  @javax.annotation.Nullable
  private Boolean isDisabled;

  public static final String SERIALIZED_NAME_MAX_PARENTAL_RATING = "MaxParentalRating";
  @SerializedName(SERIALIZED_NAME_MAX_PARENTAL_RATING)
  @javax.annotation.Nullable
  private Integer maxParentalRating;

  public static final String SERIALIZED_NAME_BLOCKED_TAGS = "BlockedTags";
  @SerializedName(SERIALIZED_NAME_BLOCKED_TAGS)
  @javax.annotation.Nullable
  private List<String> blockedTags;

  public static final String SERIALIZED_NAME_ALLOWED_TAGS = "AllowedTags";
  @SerializedName(SERIALIZED_NAME_ALLOWED_TAGS)
  @javax.annotation.Nullable
  private List<String> allowedTags;

  public static final String SERIALIZED_NAME_ENABLE_USER_PREFERENCE_ACCESS = "EnableUserPreferenceAccess";
  @SerializedName(SERIALIZED_NAME_ENABLE_USER_PREFERENCE_ACCESS)
  @javax.annotation.Nullable
  private Boolean enableUserPreferenceAccess;

  public static final String SERIALIZED_NAME_ACCESS_SCHEDULES = "AccessSchedules";
  @SerializedName(SERIALIZED_NAME_ACCESS_SCHEDULES)
  @javax.annotation.Nullable
  private List<AccessSchedule> accessSchedules;

  public static final String SERIALIZED_NAME_BLOCK_UNRATED_ITEMS = "BlockUnratedItems";
  @SerializedName(SERIALIZED_NAME_BLOCK_UNRATED_ITEMS)
  @javax.annotation.Nullable
  private List<UnratedItem> blockUnratedItems;

  public static final String SERIALIZED_NAME_ENABLE_REMOTE_CONTROL_OF_OTHER_USERS = "EnableRemoteControlOfOtherUsers";
  @SerializedName(SERIALIZED_NAME_ENABLE_REMOTE_CONTROL_OF_OTHER_USERS)
  @javax.annotation.Nullable
  private Boolean enableRemoteControlOfOtherUsers;

  public static final String SERIALIZED_NAME_ENABLE_SHARED_DEVICE_CONTROL = "EnableSharedDeviceControl";
  @SerializedName(SERIALIZED_NAME_ENABLE_SHARED_DEVICE_CONTROL)
  @javax.annotation.Nullable
  private Boolean enableSharedDeviceControl;

  public static final String SERIALIZED_NAME_ENABLE_REMOTE_ACCESS = "EnableRemoteAccess";
  @SerializedName(SERIALIZED_NAME_ENABLE_REMOTE_ACCESS)
  @javax.annotation.Nullable
  private Boolean enableRemoteAccess;

  public static final String SERIALIZED_NAME_ENABLE_LIVE_TV_MANAGEMENT = "EnableLiveTvManagement";
  @SerializedName(SERIALIZED_NAME_ENABLE_LIVE_TV_MANAGEMENT)
  @javax.annotation.Nullable
  private Boolean enableLiveTvManagement;

  public static final String SERIALIZED_NAME_ENABLE_LIVE_TV_ACCESS = "EnableLiveTvAccess";
  @SerializedName(SERIALIZED_NAME_ENABLE_LIVE_TV_ACCESS)
  @javax.annotation.Nullable
  private Boolean enableLiveTvAccess;

  public static final String SERIALIZED_NAME_ENABLE_MEDIA_PLAYBACK = "EnableMediaPlayback";
  @SerializedName(SERIALIZED_NAME_ENABLE_MEDIA_PLAYBACK)
  @javax.annotation.Nullable
  private Boolean enableMediaPlayback;

  public static final String SERIALIZED_NAME_ENABLE_AUDIO_PLAYBACK_TRANSCODING = "EnableAudioPlaybackTranscoding";
  @SerializedName(SERIALIZED_NAME_ENABLE_AUDIO_PLAYBACK_TRANSCODING)
  @javax.annotation.Nullable
  private Boolean enableAudioPlaybackTranscoding;

  public static final String SERIALIZED_NAME_ENABLE_VIDEO_PLAYBACK_TRANSCODING = "EnableVideoPlaybackTranscoding";
  @SerializedName(SERIALIZED_NAME_ENABLE_VIDEO_PLAYBACK_TRANSCODING)
  @javax.annotation.Nullable
  private Boolean enableVideoPlaybackTranscoding;

  public static final String SERIALIZED_NAME_ENABLE_PLAYBACK_REMUXING = "EnablePlaybackRemuxing";
  @SerializedName(SERIALIZED_NAME_ENABLE_PLAYBACK_REMUXING)
  @javax.annotation.Nullable
  private Boolean enablePlaybackRemuxing;

  public static final String SERIALIZED_NAME_FORCE_REMOTE_SOURCE_TRANSCODING = "ForceRemoteSourceTranscoding";
  @SerializedName(SERIALIZED_NAME_FORCE_REMOTE_SOURCE_TRANSCODING)
  @javax.annotation.Nullable
  private Boolean forceRemoteSourceTranscoding;

  public static final String SERIALIZED_NAME_ENABLE_CONTENT_DELETION = "EnableContentDeletion";
  @SerializedName(SERIALIZED_NAME_ENABLE_CONTENT_DELETION)
  @javax.annotation.Nullable
  private Boolean enableContentDeletion;

  public static final String SERIALIZED_NAME_ENABLE_CONTENT_DELETION_FROM_FOLDERS = "EnableContentDeletionFromFolders";
  @SerializedName(SERIALIZED_NAME_ENABLE_CONTENT_DELETION_FROM_FOLDERS)
  @javax.annotation.Nullable
  private List<String> enableContentDeletionFromFolders;

  public static final String SERIALIZED_NAME_ENABLE_CONTENT_DOWNLOADING = "EnableContentDownloading";
  @SerializedName(SERIALIZED_NAME_ENABLE_CONTENT_DOWNLOADING)
  @javax.annotation.Nullable
  private Boolean enableContentDownloading;

  public static final String SERIALIZED_NAME_ENABLE_SYNC_TRANSCODING = "EnableSyncTranscoding";
  @SerializedName(SERIALIZED_NAME_ENABLE_SYNC_TRANSCODING)
  @javax.annotation.Nullable
  private Boolean enableSyncTranscoding;

  public static final String SERIALIZED_NAME_ENABLE_MEDIA_CONVERSION = "EnableMediaConversion";
  @SerializedName(SERIALIZED_NAME_ENABLE_MEDIA_CONVERSION)
  @javax.annotation.Nullable
  private Boolean enableMediaConversion;

  public static final String SERIALIZED_NAME_ENABLED_DEVICES = "EnabledDevices";
  @SerializedName(SERIALIZED_NAME_ENABLED_DEVICES)
  @javax.annotation.Nullable
  private List<String> enabledDevices;

  public static final String SERIALIZED_NAME_ENABLE_ALL_DEVICES = "EnableAllDevices";
  @SerializedName(SERIALIZED_NAME_ENABLE_ALL_DEVICES)
  @javax.annotation.Nullable
  private Boolean enableAllDevices;

  public static final String SERIALIZED_NAME_ENABLED_CHANNELS = "EnabledChannels";
  @SerializedName(SERIALIZED_NAME_ENABLED_CHANNELS)
  @javax.annotation.Nullable
  private List<UUID> enabledChannels;

  public static final String SERIALIZED_NAME_ENABLE_ALL_CHANNELS = "EnableAllChannels";
  @SerializedName(SERIALIZED_NAME_ENABLE_ALL_CHANNELS)
  @javax.annotation.Nullable
  private Boolean enableAllChannels;

  public static final String SERIALIZED_NAME_ENABLED_FOLDERS = "EnabledFolders";
  @SerializedName(SERIALIZED_NAME_ENABLED_FOLDERS)
  @javax.annotation.Nullable
  private List<UUID> enabledFolders;

  public static final String SERIALIZED_NAME_ENABLE_ALL_FOLDERS = "EnableAllFolders";
  @SerializedName(SERIALIZED_NAME_ENABLE_ALL_FOLDERS)
  @javax.annotation.Nullable
  private Boolean enableAllFolders;

  public static final String SERIALIZED_NAME_INVALID_LOGIN_ATTEMPT_COUNT = "InvalidLoginAttemptCount";
  @SerializedName(SERIALIZED_NAME_INVALID_LOGIN_ATTEMPT_COUNT)
  @javax.annotation.Nullable
  private Integer invalidLoginAttemptCount;

  public static final String SERIALIZED_NAME_LOGIN_ATTEMPTS_BEFORE_LOCKOUT = "LoginAttemptsBeforeLockout";
  @SerializedName(SERIALIZED_NAME_LOGIN_ATTEMPTS_BEFORE_LOCKOUT)
  @javax.annotation.Nullable
  private Integer loginAttemptsBeforeLockout;

  public static final String SERIALIZED_NAME_MAX_ACTIVE_SESSIONS = "MaxActiveSessions";
  @SerializedName(SERIALIZED_NAME_MAX_ACTIVE_SESSIONS)
  @javax.annotation.Nullable
  private Integer maxActiveSessions;

  public static final String SERIALIZED_NAME_ENABLE_PUBLIC_SHARING = "EnablePublicSharing";
  @SerializedName(SERIALIZED_NAME_ENABLE_PUBLIC_SHARING)
  @javax.annotation.Nullable
  private Boolean enablePublicSharing;

  public static final String SERIALIZED_NAME_BLOCKED_MEDIA_FOLDERS = "BlockedMediaFolders";
  @SerializedName(SERIALIZED_NAME_BLOCKED_MEDIA_FOLDERS)
  @javax.annotation.Nullable
  private List<UUID> blockedMediaFolders;

  public static final String SERIALIZED_NAME_BLOCKED_CHANNELS = "BlockedChannels";
  @SerializedName(SERIALIZED_NAME_BLOCKED_CHANNELS)
  @javax.annotation.Nullable
  private List<UUID> blockedChannels;

  public static final String SERIALIZED_NAME_REMOTE_CLIENT_BITRATE_LIMIT = "RemoteClientBitrateLimit";
  @SerializedName(SERIALIZED_NAME_REMOTE_CLIENT_BITRATE_LIMIT)
  @javax.annotation.Nullable
  private Integer remoteClientBitrateLimit;

  public static final String SERIALIZED_NAME_AUTHENTICATION_PROVIDER_ID = "AuthenticationProviderId";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_PROVIDER_ID)
  @javax.annotation.Nonnull
  private String authenticationProviderId;

  public static final String SERIALIZED_NAME_PASSWORD_RESET_PROVIDER_ID = "PasswordResetProviderId";
  @SerializedName(SERIALIZED_NAME_PASSWORD_RESET_PROVIDER_ID)
  @javax.annotation.Nonnull
  private String passwordResetProviderId;

  public static final String SERIALIZED_NAME_SYNC_PLAY_ACCESS = "SyncPlayAccess";
  @SerializedName(SERIALIZED_NAME_SYNC_PLAY_ACCESS)
  @javax.annotation.Nullable
  private SyncPlayUserAccessType syncPlayAccess;

  public UserPolicy() {
  }

  public UserPolicy isAdministrator(@javax.annotation.Nullable Boolean isAdministrator) {
    this.isAdministrator = isAdministrator;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance is administrator.
   * @return isAdministrator
   */
  @javax.annotation.Nullable
  public Boolean getIsAdministrator() {
    return isAdministrator;
  }

  public void setIsAdministrator(@javax.annotation.Nullable Boolean isAdministrator) {
    this.isAdministrator = isAdministrator;
  }


  public UserPolicy isHidden(@javax.annotation.Nullable Boolean isHidden) {
    this.isHidden = isHidden;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance is hidden.
   * @return isHidden
   */
  @javax.annotation.Nullable
  public Boolean getIsHidden() {
    return isHidden;
  }

  public void setIsHidden(@javax.annotation.Nullable Boolean isHidden) {
    this.isHidden = isHidden;
  }


  public UserPolicy enableCollectionManagement(@javax.annotation.Nullable Boolean enableCollectionManagement) {
    this.enableCollectionManagement = enableCollectionManagement;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance can manage collections.
   * @return enableCollectionManagement
   */
  @javax.annotation.Nullable
  public Boolean getEnableCollectionManagement() {
    return enableCollectionManagement;
  }

  public void setEnableCollectionManagement(@javax.annotation.Nullable Boolean enableCollectionManagement) {
    this.enableCollectionManagement = enableCollectionManagement;
  }


  public UserPolicy enableSubtitleManagement(@javax.annotation.Nullable Boolean enableSubtitleManagement) {
    this.enableSubtitleManagement = enableSubtitleManagement;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance can manage subtitles.
   * @return enableSubtitleManagement
   */
  @javax.annotation.Nullable
  public Boolean getEnableSubtitleManagement() {
    return enableSubtitleManagement;
  }

  public void setEnableSubtitleManagement(@javax.annotation.Nullable Boolean enableSubtitleManagement) {
    this.enableSubtitleManagement = enableSubtitleManagement;
  }


  public UserPolicy enableLyricManagement(@javax.annotation.Nullable Boolean enableLyricManagement) {
    this.enableLyricManagement = enableLyricManagement;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this user can manage lyrics.
   * @return enableLyricManagement
   */
  @javax.annotation.Nullable
  public Boolean getEnableLyricManagement() {
    return enableLyricManagement;
  }

  public void setEnableLyricManagement(@javax.annotation.Nullable Boolean enableLyricManagement) {
    this.enableLyricManagement = enableLyricManagement;
  }


  public UserPolicy isDisabled(@javax.annotation.Nullable Boolean isDisabled) {
    this.isDisabled = isDisabled;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance is disabled.
   * @return isDisabled
   */
  @javax.annotation.Nullable
  public Boolean getIsDisabled() {
    return isDisabled;
  }

  public void setIsDisabled(@javax.annotation.Nullable Boolean isDisabled) {
    this.isDisabled = isDisabled;
  }


  public UserPolicy maxParentalRating(@javax.annotation.Nullable Integer maxParentalRating) {
    this.maxParentalRating = maxParentalRating;
    return this;
  }

  /**
   * Gets or sets the max parental rating.
   * @return maxParentalRating
   */
  @javax.annotation.Nullable
  public Integer getMaxParentalRating() {
    return maxParentalRating;
  }

  public void setMaxParentalRating(@javax.annotation.Nullable Integer maxParentalRating) {
    this.maxParentalRating = maxParentalRating;
  }


  public UserPolicy blockedTags(@javax.annotation.Nullable List<String> blockedTags) {
    this.blockedTags = blockedTags;
    return this;
  }

  public UserPolicy addBlockedTagsItem(String blockedTagsItem) {
    if (this.blockedTags == null) {
      this.blockedTags = new ArrayList<>();
    }
    this.blockedTags.add(blockedTagsItem);
    return this;
  }

  /**
   * Get blockedTags
   * @return blockedTags
   */
  @javax.annotation.Nullable
  public List<String> getBlockedTags() {
    return blockedTags;
  }

  public void setBlockedTags(@javax.annotation.Nullable List<String> blockedTags) {
    this.blockedTags = blockedTags;
  }


  public UserPolicy allowedTags(@javax.annotation.Nullable List<String> allowedTags) {
    this.allowedTags = allowedTags;
    return this;
  }

  public UserPolicy addAllowedTagsItem(String allowedTagsItem) {
    if (this.allowedTags == null) {
      this.allowedTags = new ArrayList<>();
    }
    this.allowedTags.add(allowedTagsItem);
    return this;
  }

  /**
   * Get allowedTags
   * @return allowedTags
   */
  @javax.annotation.Nullable
  public List<String> getAllowedTags() {
    return allowedTags;
  }

  public void setAllowedTags(@javax.annotation.Nullable List<String> allowedTags) {
    this.allowedTags = allowedTags;
  }


  public UserPolicy enableUserPreferenceAccess(@javax.annotation.Nullable Boolean enableUserPreferenceAccess) {
    this.enableUserPreferenceAccess = enableUserPreferenceAccess;
    return this;
  }

  /**
   * Get enableUserPreferenceAccess
   * @return enableUserPreferenceAccess
   */
  @javax.annotation.Nullable
  public Boolean getEnableUserPreferenceAccess() {
    return enableUserPreferenceAccess;
  }

  public void setEnableUserPreferenceAccess(@javax.annotation.Nullable Boolean enableUserPreferenceAccess) {
    this.enableUserPreferenceAccess = enableUserPreferenceAccess;
  }


  public UserPolicy accessSchedules(@javax.annotation.Nullable List<AccessSchedule> accessSchedules) {
    this.accessSchedules = accessSchedules;
    return this;
  }

  public UserPolicy addAccessSchedulesItem(AccessSchedule accessSchedulesItem) {
    if (this.accessSchedules == null) {
      this.accessSchedules = new ArrayList<>();
    }
    this.accessSchedules.add(accessSchedulesItem);
    return this;
  }

  /**
   * Get accessSchedules
   * @return accessSchedules
   */
  @javax.annotation.Nullable
  public List<AccessSchedule> getAccessSchedules() {
    return accessSchedules;
  }

  public void setAccessSchedules(@javax.annotation.Nullable List<AccessSchedule> accessSchedules) {
    this.accessSchedules = accessSchedules;
  }


  public UserPolicy blockUnratedItems(@javax.annotation.Nullable List<UnratedItem> blockUnratedItems) {
    this.blockUnratedItems = blockUnratedItems;
    return this;
  }

  public UserPolicy addBlockUnratedItemsItem(UnratedItem blockUnratedItemsItem) {
    if (this.blockUnratedItems == null) {
      this.blockUnratedItems = new ArrayList<>();
    }
    this.blockUnratedItems.add(blockUnratedItemsItem);
    return this;
  }

  /**
   * Get blockUnratedItems
   * @return blockUnratedItems
   */
  @javax.annotation.Nullable
  public List<UnratedItem> getBlockUnratedItems() {
    return blockUnratedItems;
  }

  public void setBlockUnratedItems(@javax.annotation.Nullable List<UnratedItem> blockUnratedItems) {
    this.blockUnratedItems = blockUnratedItems;
  }


  public UserPolicy enableRemoteControlOfOtherUsers(@javax.annotation.Nullable Boolean enableRemoteControlOfOtherUsers) {
    this.enableRemoteControlOfOtherUsers = enableRemoteControlOfOtherUsers;
    return this;
  }

  /**
   * Get enableRemoteControlOfOtherUsers
   * @return enableRemoteControlOfOtherUsers
   */
  @javax.annotation.Nullable
  public Boolean getEnableRemoteControlOfOtherUsers() {
    return enableRemoteControlOfOtherUsers;
  }

  public void setEnableRemoteControlOfOtherUsers(@javax.annotation.Nullable Boolean enableRemoteControlOfOtherUsers) {
    this.enableRemoteControlOfOtherUsers = enableRemoteControlOfOtherUsers;
  }


  public UserPolicy enableSharedDeviceControl(@javax.annotation.Nullable Boolean enableSharedDeviceControl) {
    this.enableSharedDeviceControl = enableSharedDeviceControl;
    return this;
  }

  /**
   * Get enableSharedDeviceControl
   * @return enableSharedDeviceControl
   */
  @javax.annotation.Nullable
  public Boolean getEnableSharedDeviceControl() {
    return enableSharedDeviceControl;
  }

  public void setEnableSharedDeviceControl(@javax.annotation.Nullable Boolean enableSharedDeviceControl) {
    this.enableSharedDeviceControl = enableSharedDeviceControl;
  }


  public UserPolicy enableRemoteAccess(@javax.annotation.Nullable Boolean enableRemoteAccess) {
    this.enableRemoteAccess = enableRemoteAccess;
    return this;
  }

  /**
   * Get enableRemoteAccess
   * @return enableRemoteAccess
   */
  @javax.annotation.Nullable
  public Boolean getEnableRemoteAccess() {
    return enableRemoteAccess;
  }

  public void setEnableRemoteAccess(@javax.annotation.Nullable Boolean enableRemoteAccess) {
    this.enableRemoteAccess = enableRemoteAccess;
  }


  public UserPolicy enableLiveTvManagement(@javax.annotation.Nullable Boolean enableLiveTvManagement) {
    this.enableLiveTvManagement = enableLiveTvManagement;
    return this;
  }

  /**
   * Get enableLiveTvManagement
   * @return enableLiveTvManagement
   */
  @javax.annotation.Nullable
  public Boolean getEnableLiveTvManagement() {
    return enableLiveTvManagement;
  }

  public void setEnableLiveTvManagement(@javax.annotation.Nullable Boolean enableLiveTvManagement) {
    this.enableLiveTvManagement = enableLiveTvManagement;
  }


  public UserPolicy enableLiveTvAccess(@javax.annotation.Nullable Boolean enableLiveTvAccess) {
    this.enableLiveTvAccess = enableLiveTvAccess;
    return this;
  }

  /**
   * Get enableLiveTvAccess
   * @return enableLiveTvAccess
   */
  @javax.annotation.Nullable
  public Boolean getEnableLiveTvAccess() {
    return enableLiveTvAccess;
  }

  public void setEnableLiveTvAccess(@javax.annotation.Nullable Boolean enableLiveTvAccess) {
    this.enableLiveTvAccess = enableLiveTvAccess;
  }


  public UserPolicy enableMediaPlayback(@javax.annotation.Nullable Boolean enableMediaPlayback) {
    this.enableMediaPlayback = enableMediaPlayback;
    return this;
  }

  /**
   * Get enableMediaPlayback
   * @return enableMediaPlayback
   */
  @javax.annotation.Nullable
  public Boolean getEnableMediaPlayback() {
    return enableMediaPlayback;
  }

  public void setEnableMediaPlayback(@javax.annotation.Nullable Boolean enableMediaPlayback) {
    this.enableMediaPlayback = enableMediaPlayback;
  }


  public UserPolicy enableAudioPlaybackTranscoding(@javax.annotation.Nullable Boolean enableAudioPlaybackTranscoding) {
    this.enableAudioPlaybackTranscoding = enableAudioPlaybackTranscoding;
    return this;
  }

  /**
   * Get enableAudioPlaybackTranscoding
   * @return enableAudioPlaybackTranscoding
   */
  @javax.annotation.Nullable
  public Boolean getEnableAudioPlaybackTranscoding() {
    return enableAudioPlaybackTranscoding;
  }

  public void setEnableAudioPlaybackTranscoding(@javax.annotation.Nullable Boolean enableAudioPlaybackTranscoding) {
    this.enableAudioPlaybackTranscoding = enableAudioPlaybackTranscoding;
  }


  public UserPolicy enableVideoPlaybackTranscoding(@javax.annotation.Nullable Boolean enableVideoPlaybackTranscoding) {
    this.enableVideoPlaybackTranscoding = enableVideoPlaybackTranscoding;
    return this;
  }

  /**
   * Get enableVideoPlaybackTranscoding
   * @return enableVideoPlaybackTranscoding
   */
  @javax.annotation.Nullable
  public Boolean getEnableVideoPlaybackTranscoding() {
    return enableVideoPlaybackTranscoding;
  }

  public void setEnableVideoPlaybackTranscoding(@javax.annotation.Nullable Boolean enableVideoPlaybackTranscoding) {
    this.enableVideoPlaybackTranscoding = enableVideoPlaybackTranscoding;
  }


  public UserPolicy enablePlaybackRemuxing(@javax.annotation.Nullable Boolean enablePlaybackRemuxing) {
    this.enablePlaybackRemuxing = enablePlaybackRemuxing;
    return this;
  }

  /**
   * Get enablePlaybackRemuxing
   * @return enablePlaybackRemuxing
   */
  @javax.annotation.Nullable
  public Boolean getEnablePlaybackRemuxing() {
    return enablePlaybackRemuxing;
  }

  public void setEnablePlaybackRemuxing(@javax.annotation.Nullable Boolean enablePlaybackRemuxing) {
    this.enablePlaybackRemuxing = enablePlaybackRemuxing;
  }


  public UserPolicy forceRemoteSourceTranscoding(@javax.annotation.Nullable Boolean forceRemoteSourceTranscoding) {
    this.forceRemoteSourceTranscoding = forceRemoteSourceTranscoding;
    return this;
  }

  /**
   * Get forceRemoteSourceTranscoding
   * @return forceRemoteSourceTranscoding
   */
  @javax.annotation.Nullable
  public Boolean getForceRemoteSourceTranscoding() {
    return forceRemoteSourceTranscoding;
  }

  public void setForceRemoteSourceTranscoding(@javax.annotation.Nullable Boolean forceRemoteSourceTranscoding) {
    this.forceRemoteSourceTranscoding = forceRemoteSourceTranscoding;
  }


  public UserPolicy enableContentDeletion(@javax.annotation.Nullable Boolean enableContentDeletion) {
    this.enableContentDeletion = enableContentDeletion;
    return this;
  }

  /**
   * Get enableContentDeletion
   * @return enableContentDeletion
   */
  @javax.annotation.Nullable
  public Boolean getEnableContentDeletion() {
    return enableContentDeletion;
  }

  public void setEnableContentDeletion(@javax.annotation.Nullable Boolean enableContentDeletion) {
    this.enableContentDeletion = enableContentDeletion;
  }


  public UserPolicy enableContentDeletionFromFolders(@javax.annotation.Nullable List<String> enableContentDeletionFromFolders) {
    this.enableContentDeletionFromFolders = enableContentDeletionFromFolders;
    return this;
  }

  public UserPolicy addEnableContentDeletionFromFoldersItem(String enableContentDeletionFromFoldersItem) {
    if (this.enableContentDeletionFromFolders == null) {
      this.enableContentDeletionFromFolders = new ArrayList<>();
    }
    this.enableContentDeletionFromFolders.add(enableContentDeletionFromFoldersItem);
    return this;
  }

  /**
   * Get enableContentDeletionFromFolders
   * @return enableContentDeletionFromFolders
   */
  @javax.annotation.Nullable
  public List<String> getEnableContentDeletionFromFolders() {
    return enableContentDeletionFromFolders;
  }

  public void setEnableContentDeletionFromFolders(@javax.annotation.Nullable List<String> enableContentDeletionFromFolders) {
    this.enableContentDeletionFromFolders = enableContentDeletionFromFolders;
  }


  public UserPolicy enableContentDownloading(@javax.annotation.Nullable Boolean enableContentDownloading) {
    this.enableContentDownloading = enableContentDownloading;
    return this;
  }

  /**
   * Get enableContentDownloading
   * @return enableContentDownloading
   */
  @javax.annotation.Nullable
  public Boolean getEnableContentDownloading() {
    return enableContentDownloading;
  }

  public void setEnableContentDownloading(@javax.annotation.Nullable Boolean enableContentDownloading) {
    this.enableContentDownloading = enableContentDownloading;
  }


  public UserPolicy enableSyncTranscoding(@javax.annotation.Nullable Boolean enableSyncTranscoding) {
    this.enableSyncTranscoding = enableSyncTranscoding;
    return this;
  }

  /**
   * Gets or sets a value indicating whether [enable synchronize].
   * @return enableSyncTranscoding
   */
  @javax.annotation.Nullable
  public Boolean getEnableSyncTranscoding() {
    return enableSyncTranscoding;
  }

  public void setEnableSyncTranscoding(@javax.annotation.Nullable Boolean enableSyncTranscoding) {
    this.enableSyncTranscoding = enableSyncTranscoding;
  }


  public UserPolicy enableMediaConversion(@javax.annotation.Nullable Boolean enableMediaConversion) {
    this.enableMediaConversion = enableMediaConversion;
    return this;
  }

  /**
   * Get enableMediaConversion
   * @return enableMediaConversion
   */
  @javax.annotation.Nullable
  public Boolean getEnableMediaConversion() {
    return enableMediaConversion;
  }

  public void setEnableMediaConversion(@javax.annotation.Nullable Boolean enableMediaConversion) {
    this.enableMediaConversion = enableMediaConversion;
  }


  public UserPolicy enabledDevices(@javax.annotation.Nullable List<String> enabledDevices) {
    this.enabledDevices = enabledDevices;
    return this;
  }

  public UserPolicy addEnabledDevicesItem(String enabledDevicesItem) {
    if (this.enabledDevices == null) {
      this.enabledDevices = new ArrayList<>();
    }
    this.enabledDevices.add(enabledDevicesItem);
    return this;
  }

  /**
   * Get enabledDevices
   * @return enabledDevices
   */
  @javax.annotation.Nullable
  public List<String> getEnabledDevices() {
    return enabledDevices;
  }

  public void setEnabledDevices(@javax.annotation.Nullable List<String> enabledDevices) {
    this.enabledDevices = enabledDevices;
  }


  public UserPolicy enableAllDevices(@javax.annotation.Nullable Boolean enableAllDevices) {
    this.enableAllDevices = enableAllDevices;
    return this;
  }

  /**
   * Get enableAllDevices
   * @return enableAllDevices
   */
  @javax.annotation.Nullable
  public Boolean getEnableAllDevices() {
    return enableAllDevices;
  }

  public void setEnableAllDevices(@javax.annotation.Nullable Boolean enableAllDevices) {
    this.enableAllDevices = enableAllDevices;
  }


  public UserPolicy enabledChannels(@javax.annotation.Nullable List<UUID> enabledChannels) {
    this.enabledChannels = enabledChannels;
    return this;
  }

  public UserPolicy addEnabledChannelsItem(UUID enabledChannelsItem) {
    if (this.enabledChannels == null) {
      this.enabledChannels = new ArrayList<>();
    }
    this.enabledChannels.add(enabledChannelsItem);
    return this;
  }

  /**
   * Get enabledChannels
   * @return enabledChannels
   */
  @javax.annotation.Nullable
  public List<UUID> getEnabledChannels() {
    return enabledChannels;
  }

  public void setEnabledChannels(@javax.annotation.Nullable List<UUID> enabledChannels) {
    this.enabledChannels = enabledChannels;
  }


  public UserPolicy enableAllChannels(@javax.annotation.Nullable Boolean enableAllChannels) {
    this.enableAllChannels = enableAllChannels;
    return this;
  }

  /**
   * Get enableAllChannels
   * @return enableAllChannels
   */
  @javax.annotation.Nullable
  public Boolean getEnableAllChannels() {
    return enableAllChannels;
  }

  public void setEnableAllChannels(@javax.annotation.Nullable Boolean enableAllChannels) {
    this.enableAllChannels = enableAllChannels;
  }


  public UserPolicy enabledFolders(@javax.annotation.Nullable List<UUID> enabledFolders) {
    this.enabledFolders = enabledFolders;
    return this;
  }

  public UserPolicy addEnabledFoldersItem(UUID enabledFoldersItem) {
    if (this.enabledFolders == null) {
      this.enabledFolders = new ArrayList<>();
    }
    this.enabledFolders.add(enabledFoldersItem);
    return this;
  }

  /**
   * Get enabledFolders
   * @return enabledFolders
   */
  @javax.annotation.Nullable
  public List<UUID> getEnabledFolders() {
    return enabledFolders;
  }

  public void setEnabledFolders(@javax.annotation.Nullable List<UUID> enabledFolders) {
    this.enabledFolders = enabledFolders;
  }


  public UserPolicy enableAllFolders(@javax.annotation.Nullable Boolean enableAllFolders) {
    this.enableAllFolders = enableAllFolders;
    return this;
  }

  /**
   * Get enableAllFolders
   * @return enableAllFolders
   */
  @javax.annotation.Nullable
  public Boolean getEnableAllFolders() {
    return enableAllFolders;
  }

  public void setEnableAllFolders(@javax.annotation.Nullable Boolean enableAllFolders) {
    this.enableAllFolders = enableAllFolders;
  }


  public UserPolicy invalidLoginAttemptCount(@javax.annotation.Nullable Integer invalidLoginAttemptCount) {
    this.invalidLoginAttemptCount = invalidLoginAttemptCount;
    return this;
  }

  /**
   * Get invalidLoginAttemptCount
   * @return invalidLoginAttemptCount
   */
  @javax.annotation.Nullable
  public Integer getInvalidLoginAttemptCount() {
    return invalidLoginAttemptCount;
  }

  public void setInvalidLoginAttemptCount(@javax.annotation.Nullable Integer invalidLoginAttemptCount) {
    this.invalidLoginAttemptCount = invalidLoginAttemptCount;
  }


  public UserPolicy loginAttemptsBeforeLockout(@javax.annotation.Nullable Integer loginAttemptsBeforeLockout) {
    this.loginAttemptsBeforeLockout = loginAttemptsBeforeLockout;
    return this;
  }

  /**
   * Get loginAttemptsBeforeLockout
   * @return loginAttemptsBeforeLockout
   */
  @javax.annotation.Nullable
  public Integer getLoginAttemptsBeforeLockout() {
    return loginAttemptsBeforeLockout;
  }

  public void setLoginAttemptsBeforeLockout(@javax.annotation.Nullable Integer loginAttemptsBeforeLockout) {
    this.loginAttemptsBeforeLockout = loginAttemptsBeforeLockout;
  }


  public UserPolicy maxActiveSessions(@javax.annotation.Nullable Integer maxActiveSessions) {
    this.maxActiveSessions = maxActiveSessions;
    return this;
  }

  /**
   * Get maxActiveSessions
   * @return maxActiveSessions
   */
  @javax.annotation.Nullable
  public Integer getMaxActiveSessions() {
    return maxActiveSessions;
  }

  public void setMaxActiveSessions(@javax.annotation.Nullable Integer maxActiveSessions) {
    this.maxActiveSessions = maxActiveSessions;
  }


  public UserPolicy enablePublicSharing(@javax.annotation.Nullable Boolean enablePublicSharing) {
    this.enablePublicSharing = enablePublicSharing;
    return this;
  }

  /**
   * Get enablePublicSharing
   * @return enablePublicSharing
   */
  @javax.annotation.Nullable
  public Boolean getEnablePublicSharing() {
    return enablePublicSharing;
  }

  public void setEnablePublicSharing(@javax.annotation.Nullable Boolean enablePublicSharing) {
    this.enablePublicSharing = enablePublicSharing;
  }


  public UserPolicy blockedMediaFolders(@javax.annotation.Nullable List<UUID> blockedMediaFolders) {
    this.blockedMediaFolders = blockedMediaFolders;
    return this;
  }

  public UserPolicy addBlockedMediaFoldersItem(UUID blockedMediaFoldersItem) {
    if (this.blockedMediaFolders == null) {
      this.blockedMediaFolders = new ArrayList<>();
    }
    this.blockedMediaFolders.add(blockedMediaFoldersItem);
    return this;
  }

  /**
   * Get blockedMediaFolders
   * @return blockedMediaFolders
   */
  @javax.annotation.Nullable
  public List<UUID> getBlockedMediaFolders() {
    return blockedMediaFolders;
  }

  public void setBlockedMediaFolders(@javax.annotation.Nullable List<UUID> blockedMediaFolders) {
    this.blockedMediaFolders = blockedMediaFolders;
  }


  public UserPolicy blockedChannels(@javax.annotation.Nullable List<UUID> blockedChannels) {
    this.blockedChannels = blockedChannels;
    return this;
  }

  public UserPolicy addBlockedChannelsItem(UUID blockedChannelsItem) {
    if (this.blockedChannels == null) {
      this.blockedChannels = new ArrayList<>();
    }
    this.blockedChannels.add(blockedChannelsItem);
    return this;
  }

  /**
   * Get blockedChannels
   * @return blockedChannels
   */
  @javax.annotation.Nullable
  public List<UUID> getBlockedChannels() {
    return blockedChannels;
  }

  public void setBlockedChannels(@javax.annotation.Nullable List<UUID> blockedChannels) {
    this.blockedChannels = blockedChannels;
  }


  public UserPolicy remoteClientBitrateLimit(@javax.annotation.Nullable Integer remoteClientBitrateLimit) {
    this.remoteClientBitrateLimit = remoteClientBitrateLimit;
    return this;
  }

  /**
   * Get remoteClientBitrateLimit
   * @return remoteClientBitrateLimit
   */
  @javax.annotation.Nullable
  public Integer getRemoteClientBitrateLimit() {
    return remoteClientBitrateLimit;
  }

  public void setRemoteClientBitrateLimit(@javax.annotation.Nullable Integer remoteClientBitrateLimit) {
    this.remoteClientBitrateLimit = remoteClientBitrateLimit;
  }


  public UserPolicy authenticationProviderId(@javax.annotation.Nonnull String authenticationProviderId) {
    this.authenticationProviderId = authenticationProviderId;
    return this;
  }

  /**
   * Get authenticationProviderId
   * @return authenticationProviderId
   */
  @javax.annotation.Nonnull
  public String getAuthenticationProviderId() {
    return authenticationProviderId;
  }

  public void setAuthenticationProviderId(@javax.annotation.Nonnull String authenticationProviderId) {
    this.authenticationProviderId = authenticationProviderId;
  }


  public UserPolicy passwordResetProviderId(@javax.annotation.Nonnull String passwordResetProviderId) {
    this.passwordResetProviderId = passwordResetProviderId;
    return this;
  }

  /**
   * Get passwordResetProviderId
   * @return passwordResetProviderId
   */
  @javax.annotation.Nonnull
  public String getPasswordResetProviderId() {
    return passwordResetProviderId;
  }

  public void setPasswordResetProviderId(@javax.annotation.Nonnull String passwordResetProviderId) {
    this.passwordResetProviderId = passwordResetProviderId;
  }


  public UserPolicy syncPlayAccess(@javax.annotation.Nullable SyncPlayUserAccessType syncPlayAccess) {
    this.syncPlayAccess = syncPlayAccess;
    return this;
  }

  /**
   * Enum SyncPlayUserAccessType.
   * @return syncPlayAccess
   */
  @javax.annotation.Nullable
  public SyncPlayUserAccessType getSyncPlayAccess() {
    return syncPlayAccess;
  }

  public void setSyncPlayAccess(@javax.annotation.Nullable SyncPlayUserAccessType syncPlayAccess) {
    this.syncPlayAccess = syncPlayAccess;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserPolicy userPolicy = (UserPolicy) o;
    return Objects.equals(this.isAdministrator, userPolicy.isAdministrator) &&
        Objects.equals(this.isHidden, userPolicy.isHidden) &&
        Objects.equals(this.enableCollectionManagement, userPolicy.enableCollectionManagement) &&
        Objects.equals(this.enableSubtitleManagement, userPolicy.enableSubtitleManagement) &&
        Objects.equals(this.enableLyricManagement, userPolicy.enableLyricManagement) &&
        Objects.equals(this.isDisabled, userPolicy.isDisabled) &&
        Objects.equals(this.maxParentalRating, userPolicy.maxParentalRating) &&
        Objects.equals(this.blockedTags, userPolicy.blockedTags) &&
        Objects.equals(this.allowedTags, userPolicy.allowedTags) &&
        Objects.equals(this.enableUserPreferenceAccess, userPolicy.enableUserPreferenceAccess) &&
        Objects.equals(this.accessSchedules, userPolicy.accessSchedules) &&
        Objects.equals(this.blockUnratedItems, userPolicy.blockUnratedItems) &&
        Objects.equals(this.enableRemoteControlOfOtherUsers, userPolicy.enableRemoteControlOfOtherUsers) &&
        Objects.equals(this.enableSharedDeviceControl, userPolicy.enableSharedDeviceControl) &&
        Objects.equals(this.enableRemoteAccess, userPolicy.enableRemoteAccess) &&
        Objects.equals(this.enableLiveTvManagement, userPolicy.enableLiveTvManagement) &&
        Objects.equals(this.enableLiveTvAccess, userPolicy.enableLiveTvAccess) &&
        Objects.equals(this.enableMediaPlayback, userPolicy.enableMediaPlayback) &&
        Objects.equals(this.enableAudioPlaybackTranscoding, userPolicy.enableAudioPlaybackTranscoding) &&
        Objects.equals(this.enableVideoPlaybackTranscoding, userPolicy.enableVideoPlaybackTranscoding) &&
        Objects.equals(this.enablePlaybackRemuxing, userPolicy.enablePlaybackRemuxing) &&
        Objects.equals(this.forceRemoteSourceTranscoding, userPolicy.forceRemoteSourceTranscoding) &&
        Objects.equals(this.enableContentDeletion, userPolicy.enableContentDeletion) &&
        Objects.equals(this.enableContentDeletionFromFolders, userPolicy.enableContentDeletionFromFolders) &&
        Objects.equals(this.enableContentDownloading, userPolicy.enableContentDownloading) &&
        Objects.equals(this.enableSyncTranscoding, userPolicy.enableSyncTranscoding) &&
        Objects.equals(this.enableMediaConversion, userPolicy.enableMediaConversion) &&
        Objects.equals(this.enabledDevices, userPolicy.enabledDevices) &&
        Objects.equals(this.enableAllDevices, userPolicy.enableAllDevices) &&
        Objects.equals(this.enabledChannels, userPolicy.enabledChannels) &&
        Objects.equals(this.enableAllChannels, userPolicy.enableAllChannels) &&
        Objects.equals(this.enabledFolders, userPolicy.enabledFolders) &&
        Objects.equals(this.enableAllFolders, userPolicy.enableAllFolders) &&
        Objects.equals(this.invalidLoginAttemptCount, userPolicy.invalidLoginAttemptCount) &&
        Objects.equals(this.loginAttemptsBeforeLockout, userPolicy.loginAttemptsBeforeLockout) &&
        Objects.equals(this.maxActiveSessions, userPolicy.maxActiveSessions) &&
        Objects.equals(this.enablePublicSharing, userPolicy.enablePublicSharing) &&
        Objects.equals(this.blockedMediaFolders, userPolicy.blockedMediaFolders) &&
        Objects.equals(this.blockedChannels, userPolicy.blockedChannels) &&
        Objects.equals(this.remoteClientBitrateLimit, userPolicy.remoteClientBitrateLimit) &&
        Objects.equals(this.authenticationProviderId, userPolicy.authenticationProviderId) &&
        Objects.equals(this.passwordResetProviderId, userPolicy.passwordResetProviderId) &&
        Objects.equals(this.syncPlayAccess, userPolicy.syncPlayAccess);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(isAdministrator, isHidden, enableCollectionManagement, enableSubtitleManagement, enableLyricManagement, isDisabled, maxParentalRating, blockedTags, allowedTags, enableUserPreferenceAccess, accessSchedules, blockUnratedItems, enableRemoteControlOfOtherUsers, enableSharedDeviceControl, enableRemoteAccess, enableLiveTvManagement, enableLiveTvAccess, enableMediaPlayback, enableAudioPlaybackTranscoding, enableVideoPlaybackTranscoding, enablePlaybackRemuxing, forceRemoteSourceTranscoding, enableContentDeletion, enableContentDeletionFromFolders, enableContentDownloading, enableSyncTranscoding, enableMediaConversion, enabledDevices, enableAllDevices, enabledChannels, enableAllChannels, enabledFolders, enableAllFolders, invalidLoginAttemptCount, loginAttemptsBeforeLockout, maxActiveSessions, enablePublicSharing, blockedMediaFolders, blockedChannels, remoteClientBitrateLimit, authenticationProviderId, passwordResetProviderId, syncPlayAccess);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserPolicy {\n");
    sb.append("    isAdministrator: ").append(toIndentedString(isAdministrator)).append("\n");
    sb.append("    isHidden: ").append(toIndentedString(isHidden)).append("\n");
    sb.append("    enableCollectionManagement: ").append(toIndentedString(enableCollectionManagement)).append("\n");
    sb.append("    enableSubtitleManagement: ").append(toIndentedString(enableSubtitleManagement)).append("\n");
    sb.append("    enableLyricManagement: ").append(toIndentedString(enableLyricManagement)).append("\n");
    sb.append("    isDisabled: ").append(toIndentedString(isDisabled)).append("\n");
    sb.append("    maxParentalRating: ").append(toIndentedString(maxParentalRating)).append("\n");
    sb.append("    blockedTags: ").append(toIndentedString(blockedTags)).append("\n");
    sb.append("    allowedTags: ").append(toIndentedString(allowedTags)).append("\n");
    sb.append("    enableUserPreferenceAccess: ").append(toIndentedString(enableUserPreferenceAccess)).append("\n");
    sb.append("    accessSchedules: ").append(toIndentedString(accessSchedules)).append("\n");
    sb.append("    blockUnratedItems: ").append(toIndentedString(blockUnratedItems)).append("\n");
    sb.append("    enableRemoteControlOfOtherUsers: ").append(toIndentedString(enableRemoteControlOfOtherUsers)).append("\n");
    sb.append("    enableSharedDeviceControl: ").append(toIndentedString(enableSharedDeviceControl)).append("\n");
    sb.append("    enableRemoteAccess: ").append(toIndentedString(enableRemoteAccess)).append("\n");
    sb.append("    enableLiveTvManagement: ").append(toIndentedString(enableLiveTvManagement)).append("\n");
    sb.append("    enableLiveTvAccess: ").append(toIndentedString(enableLiveTvAccess)).append("\n");
    sb.append("    enableMediaPlayback: ").append(toIndentedString(enableMediaPlayback)).append("\n");
    sb.append("    enableAudioPlaybackTranscoding: ").append(toIndentedString(enableAudioPlaybackTranscoding)).append("\n");
    sb.append("    enableVideoPlaybackTranscoding: ").append(toIndentedString(enableVideoPlaybackTranscoding)).append("\n");
    sb.append("    enablePlaybackRemuxing: ").append(toIndentedString(enablePlaybackRemuxing)).append("\n");
    sb.append("    forceRemoteSourceTranscoding: ").append(toIndentedString(forceRemoteSourceTranscoding)).append("\n");
    sb.append("    enableContentDeletion: ").append(toIndentedString(enableContentDeletion)).append("\n");
    sb.append("    enableContentDeletionFromFolders: ").append(toIndentedString(enableContentDeletionFromFolders)).append("\n");
    sb.append("    enableContentDownloading: ").append(toIndentedString(enableContentDownloading)).append("\n");
    sb.append("    enableSyncTranscoding: ").append(toIndentedString(enableSyncTranscoding)).append("\n");
    sb.append("    enableMediaConversion: ").append(toIndentedString(enableMediaConversion)).append("\n");
    sb.append("    enabledDevices: ").append(toIndentedString(enabledDevices)).append("\n");
    sb.append("    enableAllDevices: ").append(toIndentedString(enableAllDevices)).append("\n");
    sb.append("    enabledChannels: ").append(toIndentedString(enabledChannels)).append("\n");
    sb.append("    enableAllChannels: ").append(toIndentedString(enableAllChannels)).append("\n");
    sb.append("    enabledFolders: ").append(toIndentedString(enabledFolders)).append("\n");
    sb.append("    enableAllFolders: ").append(toIndentedString(enableAllFolders)).append("\n");
    sb.append("    invalidLoginAttemptCount: ").append(toIndentedString(invalidLoginAttemptCount)).append("\n");
    sb.append("    loginAttemptsBeforeLockout: ").append(toIndentedString(loginAttemptsBeforeLockout)).append("\n");
    sb.append("    maxActiveSessions: ").append(toIndentedString(maxActiveSessions)).append("\n");
    sb.append("    enablePublicSharing: ").append(toIndentedString(enablePublicSharing)).append("\n");
    sb.append("    blockedMediaFolders: ").append(toIndentedString(blockedMediaFolders)).append("\n");
    sb.append("    blockedChannels: ").append(toIndentedString(blockedChannels)).append("\n");
    sb.append("    remoteClientBitrateLimit: ").append(toIndentedString(remoteClientBitrateLimit)).append("\n");
    sb.append("    authenticationProviderId: ").append(toIndentedString(authenticationProviderId)).append("\n");
    sb.append("    passwordResetProviderId: ").append(toIndentedString(passwordResetProviderId)).append("\n");
    sb.append("    syncPlayAccess: ").append(toIndentedString(syncPlayAccess)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("IsAdministrator");
    openapiFields.add("IsHidden");
    openapiFields.add("EnableCollectionManagement");
    openapiFields.add("EnableSubtitleManagement");
    openapiFields.add("EnableLyricManagement");
    openapiFields.add("IsDisabled");
    openapiFields.add("MaxParentalRating");
    openapiFields.add("BlockedTags");
    openapiFields.add("AllowedTags");
    openapiFields.add("EnableUserPreferenceAccess");
    openapiFields.add("AccessSchedules");
    openapiFields.add("BlockUnratedItems");
    openapiFields.add("EnableRemoteControlOfOtherUsers");
    openapiFields.add("EnableSharedDeviceControl");
    openapiFields.add("EnableRemoteAccess");
    openapiFields.add("EnableLiveTvManagement");
    openapiFields.add("EnableLiveTvAccess");
    openapiFields.add("EnableMediaPlayback");
    openapiFields.add("EnableAudioPlaybackTranscoding");
    openapiFields.add("EnableVideoPlaybackTranscoding");
    openapiFields.add("EnablePlaybackRemuxing");
    openapiFields.add("ForceRemoteSourceTranscoding");
    openapiFields.add("EnableContentDeletion");
    openapiFields.add("EnableContentDeletionFromFolders");
    openapiFields.add("EnableContentDownloading");
    openapiFields.add("EnableSyncTranscoding");
    openapiFields.add("EnableMediaConversion");
    openapiFields.add("EnabledDevices");
    openapiFields.add("EnableAllDevices");
    openapiFields.add("EnabledChannels");
    openapiFields.add("EnableAllChannels");
    openapiFields.add("EnabledFolders");
    openapiFields.add("EnableAllFolders");
    openapiFields.add("InvalidLoginAttemptCount");
    openapiFields.add("LoginAttemptsBeforeLockout");
    openapiFields.add("MaxActiveSessions");
    openapiFields.add("EnablePublicSharing");
    openapiFields.add("BlockedMediaFolders");
    openapiFields.add("BlockedChannels");
    openapiFields.add("RemoteClientBitrateLimit");
    openapiFields.add("AuthenticationProviderId");
    openapiFields.add("PasswordResetProviderId");
    openapiFields.add("SyncPlayAccess");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("AuthenticationProviderId");
    openapiRequiredFields.add("PasswordResetProviderId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UserPolicy
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UserPolicy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserPolicy is not found in the empty JSON string", UserPolicy.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UserPolicy.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UserPolicy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UserPolicy.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("BlockedTags") != null && !jsonObj.get("BlockedTags").isJsonNull() && !jsonObj.get("BlockedTags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `BlockedTags` to be an array in the JSON string but got `%s`", jsonObj.get("BlockedTags").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("AllowedTags") != null && !jsonObj.get("AllowedTags").isJsonNull() && !jsonObj.get("AllowedTags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `AllowedTags` to be an array in the JSON string but got `%s`", jsonObj.get("AllowedTags").toString()));
      }
      if (jsonObj.get("AccessSchedules") != null && !jsonObj.get("AccessSchedules").isJsonNull()) {
        JsonArray jsonArrayaccessSchedules = jsonObj.getAsJsonArray("AccessSchedules");
        if (jsonArrayaccessSchedules != null) {
          // ensure the json data is an array
          if (!jsonObj.get("AccessSchedules").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `AccessSchedules` to be an array in the JSON string but got `%s`", jsonObj.get("AccessSchedules").toString()));
          }

          // validate the optional field `AccessSchedules` (array)
          for (int i = 0; i < jsonArrayaccessSchedules.size(); i++) {
            AccessSchedule.validateJsonElement(jsonArrayaccessSchedules.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("BlockUnratedItems") != null && !jsonObj.get("BlockUnratedItems").isJsonNull() && !jsonObj.get("BlockUnratedItems").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `BlockUnratedItems` to be an array in the JSON string but got `%s`", jsonObj.get("BlockUnratedItems").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("EnableContentDeletionFromFolders") != null && !jsonObj.get("EnableContentDeletionFromFolders").isJsonNull() && !jsonObj.get("EnableContentDeletionFromFolders").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `EnableContentDeletionFromFolders` to be an array in the JSON string but got `%s`", jsonObj.get("EnableContentDeletionFromFolders").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("EnabledDevices") != null && !jsonObj.get("EnabledDevices").isJsonNull() && !jsonObj.get("EnabledDevices").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `EnabledDevices` to be an array in the JSON string but got `%s`", jsonObj.get("EnabledDevices").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("EnabledChannels") != null && !jsonObj.get("EnabledChannels").isJsonNull() && !jsonObj.get("EnabledChannels").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `EnabledChannels` to be an array in the JSON string but got `%s`", jsonObj.get("EnabledChannels").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("EnabledFolders") != null && !jsonObj.get("EnabledFolders").isJsonNull() && !jsonObj.get("EnabledFolders").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `EnabledFolders` to be an array in the JSON string but got `%s`", jsonObj.get("EnabledFolders").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("BlockedMediaFolders") != null && !jsonObj.get("BlockedMediaFolders").isJsonNull() && !jsonObj.get("BlockedMediaFolders").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `BlockedMediaFolders` to be an array in the JSON string but got `%s`", jsonObj.get("BlockedMediaFolders").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("BlockedChannels") != null && !jsonObj.get("BlockedChannels").isJsonNull() && !jsonObj.get("BlockedChannels").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `BlockedChannels` to be an array in the JSON string but got `%s`", jsonObj.get("BlockedChannels").toString()));
      }
      if (!jsonObj.get("AuthenticationProviderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AuthenticationProviderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AuthenticationProviderId").toString()));
      }
      if (!jsonObj.get("PasswordResetProviderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PasswordResetProviderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PasswordResetProviderId").toString()));
      }
      // validate the optional field `SyncPlayAccess`
      if (jsonObj.get("SyncPlayAccess") != null && !jsonObj.get("SyncPlayAccess").isJsonNull()) {
        SyncPlayUserAccessType.validateJsonElement(jsonObj.get("SyncPlayAccess"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserPolicy.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserPolicy' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserPolicy> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserPolicy.class));

       return (TypeAdapter<T>) new TypeAdapter<UserPolicy>() {
           @Override
           public void write(JsonWriter out, UserPolicy value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UserPolicy read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UserPolicy given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UserPolicy
   * @throws IOException if the JSON string is invalid with respect to UserPolicy
   */
  public static UserPolicy fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserPolicy.class);
  }

  /**
   * Convert an instance of UserPolicy to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

