/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.NotificationDto;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * A list of notifications with the total record count for pagination.
 */
@JsonPropertyOrder({
  NotificationResultDto.JSON_PROPERTY_NOTIFICATIONS,
  NotificationResultDto.JSON_PROPERTY_TOTAL_RECORD_COUNT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class NotificationResultDto {
  public static final String JSON_PROPERTY_NOTIFICATIONS = "Notifications";
  @javax.annotation.Nullable
  private List<NotificationDto> notifications = new ArrayList<>();

  public static final String JSON_PROPERTY_TOTAL_RECORD_COUNT = "TotalRecordCount";
  @javax.annotation.Nullable
  private Integer totalRecordCount;

  public NotificationResultDto() { 
  }

  public NotificationResultDto notifications(@javax.annotation.Nullable List<NotificationDto> notifications) {
    this.notifications = notifications;
    return this;
  }

  public NotificationResultDto addNotificationsItem(NotificationDto notificationsItem) {
    if (this.notifications == null) {
      this.notifications = new ArrayList<>();
    }
    this.notifications.add(notificationsItem);
    return this;
  }

  /**
   * Gets or sets the current page of notifications.
   * @return notifications
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOTIFICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<NotificationDto> getNotifications() {
    return notifications;
  }


  @JsonProperty(JSON_PROPERTY_NOTIFICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotifications(@javax.annotation.Nullable List<NotificationDto> notifications) {
    this.notifications = notifications;
  }


  public NotificationResultDto totalRecordCount(@javax.annotation.Nullable Integer totalRecordCount) {
    this.totalRecordCount = totalRecordCount;
    return this;
  }

  /**
   * Gets or sets the total number of notifications.
   * @return totalRecordCount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_RECORD_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getTotalRecordCount() {
    return totalRecordCount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_RECORD_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalRecordCount(@javax.annotation.Nullable Integer totalRecordCount) {
    this.totalRecordCount = totalRecordCount;
  }


  /**
   * Return true if this NotificationResultDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NotificationResultDto notificationResultDto = (NotificationResultDto) o;
    return Objects.equals(this.notifications, notificationResultDto.notifications) &&
        Objects.equals(this.totalRecordCount, notificationResultDto.totalRecordCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(notifications, totalRecordCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NotificationResultDto {\n");
    sb.append("    notifications: ").append(toIndentedString(notifications)).append("\n");
    sb.append("    totalRecordCount: ").append(toIndentedString(totalRecordCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `Notifications` to the URL query string
    if (getNotifications() != null) {
      for (int i = 0; i < getNotifications().size(); i++) {
        if (getNotifications().get(i) != null) {
          joiner.add(getNotifications().get(i).toUrlQueryString(String.format("%sNotifications%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `TotalRecordCount` to the URL query string
    if (getTotalRecordCount() != null) {
      joiner.add(String.format("%sTotalRecordCount%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTotalRecordCount()))));
    }

    return joiner.toString();
  }
}

