/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.openapitools.client.model.DayOfWeek;
import org.openapitools.client.model.DayPattern;
import org.openapitools.client.model.KeepUntil;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * Class SeriesTimerInfoDto.
 */
@JsonPropertyOrder({
  SeriesTimerInfoDto.JSON_PROPERTY_ID,
  SeriesTimerInfoDto.JSON_PROPERTY_TYPE,
  SeriesTimerInfoDto.JSON_PROPERTY_SERVER_ID,
  SeriesTimerInfoDto.JSON_PROPERTY_EXTERNAL_ID,
  SeriesTimerInfoDto.JSON_PROPERTY_CHANNEL_ID,
  SeriesTimerInfoDto.JSON_PROPERTY_EXTERNAL_CHANNEL_ID,
  SeriesTimerInfoDto.JSON_PROPERTY_CHANNEL_NAME,
  SeriesTimerInfoDto.JSON_PROPERTY_CHANNEL_PRIMARY_IMAGE_TAG,
  SeriesTimerInfoDto.JSON_PROPERTY_PROGRAM_ID,
  SeriesTimerInfoDto.JSON_PROPERTY_EXTERNAL_PROGRAM_ID,
  SeriesTimerInfoDto.JSON_PROPERTY_NAME,
  SeriesTimerInfoDto.JSON_PROPERTY_OVERVIEW,
  SeriesTimerInfoDto.JSON_PROPERTY_START_DATE,
  SeriesTimerInfoDto.JSON_PROPERTY_END_DATE,
  SeriesTimerInfoDto.JSON_PROPERTY_SERVICE_NAME,
  SeriesTimerInfoDto.JSON_PROPERTY_PRIORITY,
  SeriesTimerInfoDto.JSON_PROPERTY_PRE_PADDING_SECONDS,
  SeriesTimerInfoDto.JSON_PROPERTY_POST_PADDING_SECONDS,
  SeriesTimerInfoDto.JSON_PROPERTY_IS_PRE_PADDING_REQUIRED,
  SeriesTimerInfoDto.JSON_PROPERTY_PARENT_BACKDROP_ITEM_ID,
  SeriesTimerInfoDto.JSON_PROPERTY_PARENT_BACKDROP_IMAGE_TAGS,
  SeriesTimerInfoDto.JSON_PROPERTY_IS_POST_PADDING_REQUIRED,
  SeriesTimerInfoDto.JSON_PROPERTY_KEEP_UNTIL,
  SeriesTimerInfoDto.JSON_PROPERTY_RECORD_ANY_TIME,
  SeriesTimerInfoDto.JSON_PROPERTY_SKIP_EPISODES_IN_LIBRARY,
  SeriesTimerInfoDto.JSON_PROPERTY_RECORD_ANY_CHANNEL,
  SeriesTimerInfoDto.JSON_PROPERTY_KEEP_UP_TO,
  SeriesTimerInfoDto.JSON_PROPERTY_RECORD_NEW_ONLY,
  SeriesTimerInfoDto.JSON_PROPERTY_DAYS,
  SeriesTimerInfoDto.JSON_PROPERTY_DAY_PATTERN,
  SeriesTimerInfoDto.JSON_PROPERTY_IMAGE_TAGS,
  SeriesTimerInfoDto.JSON_PROPERTY_PARENT_THUMB_ITEM_ID,
  SeriesTimerInfoDto.JSON_PROPERTY_PARENT_THUMB_IMAGE_TAG,
  SeriesTimerInfoDto.JSON_PROPERTY_PARENT_PRIMARY_IMAGE_ITEM_ID,
  SeriesTimerInfoDto.JSON_PROPERTY_PARENT_PRIMARY_IMAGE_TAG
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-16T17:52:19.001411110Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class SeriesTimerInfoDto {
  public static final String JSON_PROPERTY_ID = "Id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TYPE = "Type";
  private JsonNullable<String> type = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERVER_ID = "ServerId";
  private JsonNullable<String> serverId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EXTERNAL_ID = "ExternalId";
  private JsonNullable<String> externalId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CHANNEL_ID = "ChannelId";
  @javax.annotation.Nullable
  private UUID channelId;

  public static final String JSON_PROPERTY_EXTERNAL_CHANNEL_ID = "ExternalChannelId";
  private JsonNullable<String> externalChannelId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CHANNEL_NAME = "ChannelName";
  private JsonNullable<String> channelName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CHANNEL_PRIMARY_IMAGE_TAG = "ChannelPrimaryImageTag";
  private JsonNullable<String> channelPrimaryImageTag = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PROGRAM_ID = "ProgramId";
  private JsonNullable<String> programId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EXTERNAL_PROGRAM_ID = "ExternalProgramId";
  private JsonNullable<String> externalProgramId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "Name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OVERVIEW = "Overview";
  private JsonNullable<String> overview = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_START_DATE = "StartDate";
  @javax.annotation.Nullable
  private OffsetDateTime startDate;

  public static final String JSON_PROPERTY_END_DATE = "EndDate";
  @javax.annotation.Nullable
  private OffsetDateTime endDate;

  public static final String JSON_PROPERTY_SERVICE_NAME = "ServiceName";
  private JsonNullable<String> serviceName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRIORITY = "Priority";
  @javax.annotation.Nullable
  private Integer priority;

  public static final String JSON_PROPERTY_PRE_PADDING_SECONDS = "PrePaddingSeconds";
  @javax.annotation.Nullable
  private Integer prePaddingSeconds;

  public static final String JSON_PROPERTY_POST_PADDING_SECONDS = "PostPaddingSeconds";
  @javax.annotation.Nullable
  private Integer postPaddingSeconds;

  public static final String JSON_PROPERTY_IS_PRE_PADDING_REQUIRED = "IsPrePaddingRequired";
  @javax.annotation.Nullable
  private Boolean isPrePaddingRequired;

  public static final String JSON_PROPERTY_PARENT_BACKDROP_ITEM_ID = "ParentBackdropItemId";
  private JsonNullable<String> parentBackdropItemId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PARENT_BACKDROP_IMAGE_TAGS = "ParentBackdropImageTags";
  private JsonNullable<List<String>> parentBackdropImageTags = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_IS_POST_PADDING_REQUIRED = "IsPostPaddingRequired";
  @javax.annotation.Nullable
  private Boolean isPostPaddingRequired;

  public static final String JSON_PROPERTY_KEEP_UNTIL = "KeepUntil";
  @javax.annotation.Nullable
  private KeepUntil keepUntil;

  public static final String JSON_PROPERTY_RECORD_ANY_TIME = "RecordAnyTime";
  @javax.annotation.Nullable
  private Boolean recordAnyTime;

  public static final String JSON_PROPERTY_SKIP_EPISODES_IN_LIBRARY = "SkipEpisodesInLibrary";
  @javax.annotation.Nullable
  private Boolean skipEpisodesInLibrary;

  public static final String JSON_PROPERTY_RECORD_ANY_CHANNEL = "RecordAnyChannel";
  @javax.annotation.Nullable
  private Boolean recordAnyChannel;

  public static final String JSON_PROPERTY_KEEP_UP_TO = "KeepUpTo";
  @javax.annotation.Nullable
  private Integer keepUpTo;

  public static final String JSON_PROPERTY_RECORD_NEW_ONLY = "RecordNewOnly";
  @javax.annotation.Nullable
  private Boolean recordNewOnly;

  public static final String JSON_PROPERTY_DAYS = "Days";
  private JsonNullable<List<DayOfWeek>> days = JsonNullable.<List<DayOfWeek>>undefined();

  public static final String JSON_PROPERTY_DAY_PATTERN = "DayPattern";
  private JsonNullable<DayPattern> dayPattern = JsonNullable.<DayPattern>undefined();

  public static final String JSON_PROPERTY_IMAGE_TAGS = "ImageTags";
  private JsonNullable<Map<String, String>> imageTags = JsonNullable.<Map<String, String>>undefined();

  public static final String JSON_PROPERTY_PARENT_THUMB_ITEM_ID = "ParentThumbItemId";
  private JsonNullable<String> parentThumbItemId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PARENT_THUMB_IMAGE_TAG = "ParentThumbImageTag";
  private JsonNullable<String> parentThumbImageTag = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PARENT_PRIMARY_IMAGE_ITEM_ID = "ParentPrimaryImageItemId";
  private JsonNullable<String> parentPrimaryImageItemId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PARENT_PRIMARY_IMAGE_TAG = "ParentPrimaryImageTag";
  private JsonNullable<String> parentPrimaryImageTag = JsonNullable.<String>undefined();

  public SeriesTimerInfoDto() { 
  }

  public SeriesTimerInfoDto id(@javax.annotation.Nullable String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

  /**
   * Gets or sets the Id of the recording.
   * @return id
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public SeriesTimerInfoDto type(@javax.annotation.Nullable String type) {
    this.type = JsonNullable.<String>of(type);
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getType() {
        return type.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getType_JsonNullable() {
    return type;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE)
  public void setType_JsonNullable(JsonNullable<String> type) {
    this.type = type;
  }

  public void setType(@javax.annotation.Nullable String type) {
    this.type = JsonNullable.<String>of(type);
  }


  public SeriesTimerInfoDto serverId(@javax.annotation.Nullable String serverId) {
    this.serverId = JsonNullable.<String>of(serverId);
    return this;
  }

  /**
   * Gets or sets the server identifier.
   * @return serverId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getServerId() {
        return serverId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERVER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getServerId_JsonNullable() {
    return serverId;
  }
  
  @JsonProperty(JSON_PROPERTY_SERVER_ID)
  public void setServerId_JsonNullable(JsonNullable<String> serverId) {
    this.serverId = serverId;
  }

  public void setServerId(@javax.annotation.Nullable String serverId) {
    this.serverId = JsonNullable.<String>of(serverId);
  }


  public SeriesTimerInfoDto externalId(@javax.annotation.Nullable String externalId) {
    this.externalId = JsonNullable.<String>of(externalId);
    return this;
  }

  /**
   * Gets or sets the external identifier.
   * @return externalId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getExternalId() {
        return externalId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getExternalId_JsonNullable() {
    return externalId;
  }
  
  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  public void setExternalId_JsonNullable(JsonNullable<String> externalId) {
    this.externalId = externalId;
  }

  public void setExternalId(@javax.annotation.Nullable String externalId) {
    this.externalId = JsonNullable.<String>of(externalId);
  }


  public SeriesTimerInfoDto channelId(@javax.annotation.Nullable UUID channelId) {
    this.channelId = channelId;
    return this;
  }

  /**
   * Gets or sets the channel id of the recording.
   * @return channelId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public UUID getChannelId() {
    return channelId;
  }


  @JsonProperty(JSON_PROPERTY_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChannelId(@javax.annotation.Nullable UUID channelId) {
    this.channelId = channelId;
  }


  public SeriesTimerInfoDto externalChannelId(@javax.annotation.Nullable String externalChannelId) {
    this.externalChannelId = JsonNullable.<String>of(externalChannelId);
    return this;
  }

  /**
   * Gets or sets the external channel identifier.
   * @return externalChannelId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getExternalChannelId() {
        return externalChannelId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXTERNAL_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getExternalChannelId_JsonNullable() {
    return externalChannelId;
  }
  
  @JsonProperty(JSON_PROPERTY_EXTERNAL_CHANNEL_ID)
  public void setExternalChannelId_JsonNullable(JsonNullable<String> externalChannelId) {
    this.externalChannelId = externalChannelId;
  }

  public void setExternalChannelId(@javax.annotation.Nullable String externalChannelId) {
    this.externalChannelId = JsonNullable.<String>of(externalChannelId);
  }


  public SeriesTimerInfoDto channelName(@javax.annotation.Nullable String channelName) {
    this.channelName = JsonNullable.<String>of(channelName);
    return this;
  }

  /**
   * Gets or sets the channel name of the recording.
   * @return channelName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getChannelName() {
        return channelName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CHANNEL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getChannelName_JsonNullable() {
    return channelName;
  }
  
  @JsonProperty(JSON_PROPERTY_CHANNEL_NAME)
  public void setChannelName_JsonNullable(JsonNullable<String> channelName) {
    this.channelName = channelName;
  }

  public void setChannelName(@javax.annotation.Nullable String channelName) {
    this.channelName = JsonNullable.<String>of(channelName);
  }


  public SeriesTimerInfoDto channelPrimaryImageTag(@javax.annotation.Nullable String channelPrimaryImageTag) {
    this.channelPrimaryImageTag = JsonNullable.<String>of(channelPrimaryImageTag);
    return this;
  }

  /**
   * Get channelPrimaryImageTag
   * @return channelPrimaryImageTag
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getChannelPrimaryImageTag() {
        return channelPrimaryImageTag.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CHANNEL_PRIMARY_IMAGE_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getChannelPrimaryImageTag_JsonNullable() {
    return channelPrimaryImageTag;
  }
  
  @JsonProperty(JSON_PROPERTY_CHANNEL_PRIMARY_IMAGE_TAG)
  public void setChannelPrimaryImageTag_JsonNullable(JsonNullable<String> channelPrimaryImageTag) {
    this.channelPrimaryImageTag = channelPrimaryImageTag;
  }

  public void setChannelPrimaryImageTag(@javax.annotation.Nullable String channelPrimaryImageTag) {
    this.channelPrimaryImageTag = JsonNullable.<String>of(channelPrimaryImageTag);
  }


  public SeriesTimerInfoDto programId(@javax.annotation.Nullable String programId) {
    this.programId = JsonNullable.<String>of(programId);
    return this;
  }

  /**
   * Gets or sets the program identifier.
   * @return programId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getProgramId() {
        return programId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROGRAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getProgramId_JsonNullable() {
    return programId;
  }
  
  @JsonProperty(JSON_PROPERTY_PROGRAM_ID)
  public void setProgramId_JsonNullable(JsonNullable<String> programId) {
    this.programId = programId;
  }

  public void setProgramId(@javax.annotation.Nullable String programId) {
    this.programId = JsonNullable.<String>of(programId);
  }


  public SeriesTimerInfoDto externalProgramId(@javax.annotation.Nullable String externalProgramId) {
    this.externalProgramId = JsonNullable.<String>of(externalProgramId);
    return this;
  }

  /**
   * Gets or sets the external program identifier.
   * @return externalProgramId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getExternalProgramId() {
        return externalProgramId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXTERNAL_PROGRAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getExternalProgramId_JsonNullable() {
    return externalProgramId;
  }
  
  @JsonProperty(JSON_PROPERTY_EXTERNAL_PROGRAM_ID)
  public void setExternalProgramId_JsonNullable(JsonNullable<String> externalProgramId) {
    this.externalProgramId = externalProgramId;
  }

  public void setExternalProgramId(@javax.annotation.Nullable String externalProgramId) {
    this.externalProgramId = JsonNullable.<String>of(externalProgramId);
  }


  public SeriesTimerInfoDto name(@javax.annotation.Nullable String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

  /**
   * Gets or sets the name of the recording.
   * @return name
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public SeriesTimerInfoDto overview(@javax.annotation.Nullable String overview) {
    this.overview = JsonNullable.<String>of(overview);
    return this;
  }

  /**
   * Gets or sets the description of the recording.
   * @return overview
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getOverview() {
        return overview.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OVERVIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOverview_JsonNullable() {
    return overview;
  }
  
  @JsonProperty(JSON_PROPERTY_OVERVIEW)
  public void setOverview_JsonNullable(JsonNullable<String> overview) {
    this.overview = overview;
  }

  public void setOverview(@javax.annotation.Nullable String overview) {
    this.overview = JsonNullable.<String>of(overview);
  }


  public SeriesTimerInfoDto startDate(@javax.annotation.Nullable OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Gets or sets the start date of the recording, in UTC.
   * @return startDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getStartDate() {
    return startDate;
  }


  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartDate(@javax.annotation.Nullable OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public SeriesTimerInfoDto endDate(@javax.annotation.Nullable OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * Gets or sets the end date of the recording, in UTC.
   * @return endDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getEndDate() {
    return endDate;
  }


  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndDate(@javax.annotation.Nullable OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  public SeriesTimerInfoDto serviceName(@javax.annotation.Nullable String serviceName) {
    this.serviceName = JsonNullable.<String>of(serviceName);
    return this;
  }

  /**
   * Gets or sets the name of the service.
   * @return serviceName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getServiceName() {
        return serviceName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERVICE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getServiceName_JsonNullable() {
    return serviceName;
  }
  
  @JsonProperty(JSON_PROPERTY_SERVICE_NAME)
  public void setServiceName_JsonNullable(JsonNullable<String> serviceName) {
    this.serviceName = serviceName;
  }

  public void setServiceName(@javax.annotation.Nullable String serviceName) {
    this.serviceName = JsonNullable.<String>of(serviceName);
  }


  public SeriesTimerInfoDto priority(@javax.annotation.Nullable Integer priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Gets or sets the priority.
   * @return priority
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRIORITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getPriority() {
    return priority;
  }


  @JsonProperty(JSON_PROPERTY_PRIORITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPriority(@javax.annotation.Nullable Integer priority) {
    this.priority = priority;
  }


  public SeriesTimerInfoDto prePaddingSeconds(@javax.annotation.Nullable Integer prePaddingSeconds) {
    this.prePaddingSeconds = prePaddingSeconds;
    return this;
  }

  /**
   * Gets or sets the pre padding seconds.
   * @return prePaddingSeconds
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRE_PADDING_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getPrePaddingSeconds() {
    return prePaddingSeconds;
  }


  @JsonProperty(JSON_PROPERTY_PRE_PADDING_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrePaddingSeconds(@javax.annotation.Nullable Integer prePaddingSeconds) {
    this.prePaddingSeconds = prePaddingSeconds;
  }


  public SeriesTimerInfoDto postPaddingSeconds(@javax.annotation.Nullable Integer postPaddingSeconds) {
    this.postPaddingSeconds = postPaddingSeconds;
    return this;
  }

  /**
   * Gets or sets the post padding seconds.
   * @return postPaddingSeconds
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POST_PADDING_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getPostPaddingSeconds() {
    return postPaddingSeconds;
  }


  @JsonProperty(JSON_PROPERTY_POST_PADDING_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostPaddingSeconds(@javax.annotation.Nullable Integer postPaddingSeconds) {
    this.postPaddingSeconds = postPaddingSeconds;
  }


  public SeriesTimerInfoDto isPrePaddingRequired(@javax.annotation.Nullable Boolean isPrePaddingRequired) {
    this.isPrePaddingRequired = isPrePaddingRequired;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance is pre padding required.
   * @return isPrePaddingRequired
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_PRE_PADDING_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getIsPrePaddingRequired() {
    return isPrePaddingRequired;
  }


  @JsonProperty(JSON_PROPERTY_IS_PRE_PADDING_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsPrePaddingRequired(@javax.annotation.Nullable Boolean isPrePaddingRequired) {
    this.isPrePaddingRequired = isPrePaddingRequired;
  }


  public SeriesTimerInfoDto parentBackdropItemId(@javax.annotation.Nullable String parentBackdropItemId) {
    this.parentBackdropItemId = JsonNullable.<String>of(parentBackdropItemId);
    return this;
  }

  /**
   * Gets or sets the Id of the Parent that has a backdrop if the item does not have one.
   * @return parentBackdropItemId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getParentBackdropItemId() {
        return parentBackdropItemId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARENT_BACKDROP_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getParentBackdropItemId_JsonNullable() {
    return parentBackdropItemId;
  }
  
  @JsonProperty(JSON_PROPERTY_PARENT_BACKDROP_ITEM_ID)
  public void setParentBackdropItemId_JsonNullable(JsonNullable<String> parentBackdropItemId) {
    this.parentBackdropItemId = parentBackdropItemId;
  }

  public void setParentBackdropItemId(@javax.annotation.Nullable String parentBackdropItemId) {
    this.parentBackdropItemId = JsonNullable.<String>of(parentBackdropItemId);
  }


  public SeriesTimerInfoDto parentBackdropImageTags(@javax.annotation.Nullable List<String> parentBackdropImageTags) {
    this.parentBackdropImageTags = JsonNullable.<List<String>>of(parentBackdropImageTags);
    return this;
  }

  public SeriesTimerInfoDto addParentBackdropImageTagsItem(String parentBackdropImageTagsItem) {
    if (this.parentBackdropImageTags == null || !this.parentBackdropImageTags.isPresent()) {
      this.parentBackdropImageTags = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.parentBackdropImageTags.get().add(parentBackdropImageTagsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Gets or sets the parent backdrop image tags.
   * @return parentBackdropImageTags
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<String> getParentBackdropImageTags() {
        return parentBackdropImageTags.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARENT_BACKDROP_IMAGE_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getParentBackdropImageTags_JsonNullable() {
    return parentBackdropImageTags;
  }
  
  @JsonProperty(JSON_PROPERTY_PARENT_BACKDROP_IMAGE_TAGS)
  public void setParentBackdropImageTags_JsonNullable(JsonNullable<List<String>> parentBackdropImageTags) {
    this.parentBackdropImageTags = parentBackdropImageTags;
  }

  public void setParentBackdropImageTags(@javax.annotation.Nullable List<String> parentBackdropImageTags) {
    this.parentBackdropImageTags = JsonNullable.<List<String>>of(parentBackdropImageTags);
  }


  public SeriesTimerInfoDto isPostPaddingRequired(@javax.annotation.Nullable Boolean isPostPaddingRequired) {
    this.isPostPaddingRequired = isPostPaddingRequired;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance is post padding required.
   * @return isPostPaddingRequired
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_POST_PADDING_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getIsPostPaddingRequired() {
    return isPostPaddingRequired;
  }


  @JsonProperty(JSON_PROPERTY_IS_POST_PADDING_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsPostPaddingRequired(@javax.annotation.Nullable Boolean isPostPaddingRequired) {
    this.isPostPaddingRequired = isPostPaddingRequired;
  }


  public SeriesTimerInfoDto keepUntil(@javax.annotation.Nullable KeepUntil keepUntil) {
    this.keepUntil = keepUntil;
    return this;
  }

  /**
   * Get keepUntil
   * @return keepUntil
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KEEP_UNTIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public KeepUntil getKeepUntil() {
    return keepUntil;
  }


  @JsonProperty(JSON_PROPERTY_KEEP_UNTIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKeepUntil(@javax.annotation.Nullable KeepUntil keepUntil) {
    this.keepUntil = keepUntil;
  }


  public SeriesTimerInfoDto recordAnyTime(@javax.annotation.Nullable Boolean recordAnyTime) {
    this.recordAnyTime = recordAnyTime;
    return this;
  }

  /**
   * Gets or sets a value indicating whether [record any time].
   * @return recordAnyTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECORD_ANY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getRecordAnyTime() {
    return recordAnyTime;
  }


  @JsonProperty(JSON_PROPERTY_RECORD_ANY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecordAnyTime(@javax.annotation.Nullable Boolean recordAnyTime) {
    this.recordAnyTime = recordAnyTime;
  }


  public SeriesTimerInfoDto skipEpisodesInLibrary(@javax.annotation.Nullable Boolean skipEpisodesInLibrary) {
    this.skipEpisodesInLibrary = skipEpisodesInLibrary;
    return this;
  }

  /**
   * Get skipEpisodesInLibrary
   * @return skipEpisodesInLibrary
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SKIP_EPISODES_IN_LIBRARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getSkipEpisodesInLibrary() {
    return skipEpisodesInLibrary;
  }


  @JsonProperty(JSON_PROPERTY_SKIP_EPISODES_IN_LIBRARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSkipEpisodesInLibrary(@javax.annotation.Nullable Boolean skipEpisodesInLibrary) {
    this.skipEpisodesInLibrary = skipEpisodesInLibrary;
  }


  public SeriesTimerInfoDto recordAnyChannel(@javax.annotation.Nullable Boolean recordAnyChannel) {
    this.recordAnyChannel = recordAnyChannel;
    return this;
  }

  /**
   * Gets or sets a value indicating whether [record any channel].
   * @return recordAnyChannel
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECORD_ANY_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getRecordAnyChannel() {
    return recordAnyChannel;
  }


  @JsonProperty(JSON_PROPERTY_RECORD_ANY_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecordAnyChannel(@javax.annotation.Nullable Boolean recordAnyChannel) {
    this.recordAnyChannel = recordAnyChannel;
  }


  public SeriesTimerInfoDto keepUpTo(@javax.annotation.Nullable Integer keepUpTo) {
    this.keepUpTo = keepUpTo;
    return this;
  }

  /**
   * Get keepUpTo
   * @return keepUpTo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KEEP_UP_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getKeepUpTo() {
    return keepUpTo;
  }


  @JsonProperty(JSON_PROPERTY_KEEP_UP_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKeepUpTo(@javax.annotation.Nullable Integer keepUpTo) {
    this.keepUpTo = keepUpTo;
  }


  public SeriesTimerInfoDto recordNewOnly(@javax.annotation.Nullable Boolean recordNewOnly) {
    this.recordNewOnly = recordNewOnly;
    return this;
  }

  /**
   * Gets or sets a value indicating whether [record new only].
   * @return recordNewOnly
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECORD_NEW_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getRecordNewOnly() {
    return recordNewOnly;
  }


  @JsonProperty(JSON_PROPERTY_RECORD_NEW_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecordNewOnly(@javax.annotation.Nullable Boolean recordNewOnly) {
    this.recordNewOnly = recordNewOnly;
  }


  public SeriesTimerInfoDto days(@javax.annotation.Nullable List<DayOfWeek> days) {
    this.days = JsonNullable.<List<DayOfWeek>>of(days);
    return this;
  }

  public SeriesTimerInfoDto addDaysItem(DayOfWeek daysItem) {
    if (this.days == null || !this.days.isPresent()) {
      this.days = JsonNullable.<List<DayOfWeek>>of(new ArrayList<>());
    }
    try {
      this.days.get().add(daysItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Gets or sets the days.
   * @return days
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<DayOfWeek> getDays() {
        return days.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<DayOfWeek>> getDays_JsonNullable() {
    return days;
  }
  
  @JsonProperty(JSON_PROPERTY_DAYS)
  public void setDays_JsonNullable(JsonNullable<List<DayOfWeek>> days) {
    this.days = days;
  }

  public void setDays(@javax.annotation.Nullable List<DayOfWeek> days) {
    this.days = JsonNullable.<List<DayOfWeek>>of(days);
  }


  public SeriesTimerInfoDto dayPattern(@javax.annotation.Nullable DayPattern dayPattern) {
    this.dayPattern = JsonNullable.<DayPattern>of(dayPattern);
    return this;
  }

  /**
   * Gets or sets the day pattern.
   * @return dayPattern
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public DayPattern getDayPattern() {
        return dayPattern.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DAY_PATTERN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DayPattern> getDayPattern_JsonNullable() {
    return dayPattern;
  }
  
  @JsonProperty(JSON_PROPERTY_DAY_PATTERN)
  public void setDayPattern_JsonNullable(JsonNullable<DayPattern> dayPattern) {
    this.dayPattern = dayPattern;
  }

  public void setDayPattern(@javax.annotation.Nullable DayPattern dayPattern) {
    this.dayPattern = JsonNullable.<DayPattern>of(dayPattern);
  }


  public SeriesTimerInfoDto imageTags(@javax.annotation.Nullable Map<String, String> imageTags) {
    this.imageTags = JsonNullable.<Map<String, String>>of(imageTags);
    return this;
  }

  public SeriesTimerInfoDto putImageTagsItem(String key, String imageTagsItem) {
    if (this.imageTags == null || !this.imageTags.isPresent()) {
      this.imageTags = JsonNullable.<Map<String, String>>of(new HashMap<>());
    }
    try {
      this.imageTags.get().put(key, imageTagsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Gets or sets the image tags.
   * @return imageTags
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Map<String, String> getImageTags() {
        return imageTags.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMAGE_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, String>> getImageTags_JsonNullable() {
    return imageTags;
  }
  
  @JsonProperty(JSON_PROPERTY_IMAGE_TAGS)
  public void setImageTags_JsonNullable(JsonNullable<Map<String, String>> imageTags) {
    this.imageTags = imageTags;
  }

  public void setImageTags(@javax.annotation.Nullable Map<String, String> imageTags) {
    this.imageTags = JsonNullable.<Map<String, String>>of(imageTags);
  }


  public SeriesTimerInfoDto parentThumbItemId(@javax.annotation.Nullable String parentThumbItemId) {
    this.parentThumbItemId = JsonNullable.<String>of(parentThumbItemId);
    return this;
  }

  /**
   * Gets or sets the parent thumb item id.
   * @return parentThumbItemId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getParentThumbItemId() {
        return parentThumbItemId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARENT_THUMB_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getParentThumbItemId_JsonNullable() {
    return parentThumbItemId;
  }
  
  @JsonProperty(JSON_PROPERTY_PARENT_THUMB_ITEM_ID)
  public void setParentThumbItemId_JsonNullable(JsonNullable<String> parentThumbItemId) {
    this.parentThumbItemId = parentThumbItemId;
  }

  public void setParentThumbItemId(@javax.annotation.Nullable String parentThumbItemId) {
    this.parentThumbItemId = JsonNullable.<String>of(parentThumbItemId);
  }


  public SeriesTimerInfoDto parentThumbImageTag(@javax.annotation.Nullable String parentThumbImageTag) {
    this.parentThumbImageTag = JsonNullable.<String>of(parentThumbImageTag);
    return this;
  }

  /**
   * Gets or sets the parent thumb image tag.
   * @return parentThumbImageTag
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getParentThumbImageTag() {
        return parentThumbImageTag.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARENT_THUMB_IMAGE_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getParentThumbImageTag_JsonNullable() {
    return parentThumbImageTag;
  }
  
  @JsonProperty(JSON_PROPERTY_PARENT_THUMB_IMAGE_TAG)
  public void setParentThumbImageTag_JsonNullable(JsonNullable<String> parentThumbImageTag) {
    this.parentThumbImageTag = parentThumbImageTag;
  }

  public void setParentThumbImageTag(@javax.annotation.Nullable String parentThumbImageTag) {
    this.parentThumbImageTag = JsonNullable.<String>of(parentThumbImageTag);
  }


  public SeriesTimerInfoDto parentPrimaryImageItemId(@javax.annotation.Nullable String parentPrimaryImageItemId) {
    this.parentPrimaryImageItemId = JsonNullable.<String>of(parentPrimaryImageItemId);
    return this;
  }

  /**
   * Gets or sets the parent primary image item identifier.
   * @return parentPrimaryImageItemId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getParentPrimaryImageItemId() {
        return parentPrimaryImageItemId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARENT_PRIMARY_IMAGE_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getParentPrimaryImageItemId_JsonNullable() {
    return parentPrimaryImageItemId;
  }
  
  @JsonProperty(JSON_PROPERTY_PARENT_PRIMARY_IMAGE_ITEM_ID)
  public void setParentPrimaryImageItemId_JsonNullable(JsonNullable<String> parentPrimaryImageItemId) {
    this.parentPrimaryImageItemId = parentPrimaryImageItemId;
  }

  public void setParentPrimaryImageItemId(@javax.annotation.Nullable String parentPrimaryImageItemId) {
    this.parentPrimaryImageItemId = JsonNullable.<String>of(parentPrimaryImageItemId);
  }


  public SeriesTimerInfoDto parentPrimaryImageTag(@javax.annotation.Nullable String parentPrimaryImageTag) {
    this.parentPrimaryImageTag = JsonNullable.<String>of(parentPrimaryImageTag);
    return this;
  }

  /**
   * Gets or sets the parent primary image tag.
   * @return parentPrimaryImageTag
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getParentPrimaryImageTag() {
        return parentPrimaryImageTag.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARENT_PRIMARY_IMAGE_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getParentPrimaryImageTag_JsonNullable() {
    return parentPrimaryImageTag;
  }
  
  @JsonProperty(JSON_PROPERTY_PARENT_PRIMARY_IMAGE_TAG)
  public void setParentPrimaryImageTag_JsonNullable(JsonNullable<String> parentPrimaryImageTag) {
    this.parentPrimaryImageTag = parentPrimaryImageTag;
  }

  public void setParentPrimaryImageTag(@javax.annotation.Nullable String parentPrimaryImageTag) {
    this.parentPrimaryImageTag = JsonNullable.<String>of(parentPrimaryImageTag);
  }


  /**
   * Return true if this SeriesTimerInfoDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SeriesTimerInfoDto seriesTimerInfoDto = (SeriesTimerInfoDto) o;
    return equalsNullable(this.id, seriesTimerInfoDto.id) &&
        equalsNullable(this.type, seriesTimerInfoDto.type) &&
        equalsNullable(this.serverId, seriesTimerInfoDto.serverId) &&
        equalsNullable(this.externalId, seriesTimerInfoDto.externalId) &&
        Objects.equals(this.channelId, seriesTimerInfoDto.channelId) &&
        equalsNullable(this.externalChannelId, seriesTimerInfoDto.externalChannelId) &&
        equalsNullable(this.channelName, seriesTimerInfoDto.channelName) &&
        equalsNullable(this.channelPrimaryImageTag, seriesTimerInfoDto.channelPrimaryImageTag) &&
        equalsNullable(this.programId, seriesTimerInfoDto.programId) &&
        equalsNullable(this.externalProgramId, seriesTimerInfoDto.externalProgramId) &&
        equalsNullable(this.name, seriesTimerInfoDto.name) &&
        equalsNullable(this.overview, seriesTimerInfoDto.overview) &&
        Objects.equals(this.startDate, seriesTimerInfoDto.startDate) &&
        Objects.equals(this.endDate, seriesTimerInfoDto.endDate) &&
        equalsNullable(this.serviceName, seriesTimerInfoDto.serviceName) &&
        Objects.equals(this.priority, seriesTimerInfoDto.priority) &&
        Objects.equals(this.prePaddingSeconds, seriesTimerInfoDto.prePaddingSeconds) &&
        Objects.equals(this.postPaddingSeconds, seriesTimerInfoDto.postPaddingSeconds) &&
        Objects.equals(this.isPrePaddingRequired, seriesTimerInfoDto.isPrePaddingRequired) &&
        equalsNullable(this.parentBackdropItemId, seriesTimerInfoDto.parentBackdropItemId) &&
        equalsNullable(this.parentBackdropImageTags, seriesTimerInfoDto.parentBackdropImageTags) &&
        Objects.equals(this.isPostPaddingRequired, seriesTimerInfoDto.isPostPaddingRequired) &&
        Objects.equals(this.keepUntil, seriesTimerInfoDto.keepUntil) &&
        Objects.equals(this.recordAnyTime, seriesTimerInfoDto.recordAnyTime) &&
        Objects.equals(this.skipEpisodesInLibrary, seriesTimerInfoDto.skipEpisodesInLibrary) &&
        Objects.equals(this.recordAnyChannel, seriesTimerInfoDto.recordAnyChannel) &&
        Objects.equals(this.keepUpTo, seriesTimerInfoDto.keepUpTo) &&
        Objects.equals(this.recordNewOnly, seriesTimerInfoDto.recordNewOnly) &&
        equalsNullable(this.days, seriesTimerInfoDto.days) &&
        equalsNullable(this.dayPattern, seriesTimerInfoDto.dayPattern) &&
        equalsNullable(this.imageTags, seriesTimerInfoDto.imageTags) &&
        equalsNullable(this.parentThumbItemId, seriesTimerInfoDto.parentThumbItemId) &&
        equalsNullable(this.parentThumbImageTag, seriesTimerInfoDto.parentThumbImageTag) &&
        equalsNullable(this.parentPrimaryImageItemId, seriesTimerInfoDto.parentPrimaryImageItemId) &&
        equalsNullable(this.parentPrimaryImageTag, seriesTimerInfoDto.parentPrimaryImageTag);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(id), hashCodeNullable(type), hashCodeNullable(serverId), hashCodeNullable(externalId), channelId, hashCodeNullable(externalChannelId), hashCodeNullable(channelName), hashCodeNullable(channelPrimaryImageTag), hashCodeNullable(programId), hashCodeNullable(externalProgramId), hashCodeNullable(name), hashCodeNullable(overview), startDate, endDate, hashCodeNullable(serviceName), priority, prePaddingSeconds, postPaddingSeconds, isPrePaddingRequired, hashCodeNullable(parentBackdropItemId), hashCodeNullable(parentBackdropImageTags), isPostPaddingRequired, keepUntil, recordAnyTime, skipEpisodesInLibrary, recordAnyChannel, keepUpTo, recordNewOnly, hashCodeNullable(days), hashCodeNullable(dayPattern), hashCodeNullable(imageTags), hashCodeNullable(parentThumbItemId), hashCodeNullable(parentThumbImageTag), hashCodeNullable(parentPrimaryImageItemId), hashCodeNullable(parentPrimaryImageTag));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SeriesTimerInfoDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    serverId: ").append(toIndentedString(serverId)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    externalChannelId: ").append(toIndentedString(externalChannelId)).append("\n");
    sb.append("    channelName: ").append(toIndentedString(channelName)).append("\n");
    sb.append("    channelPrimaryImageTag: ").append(toIndentedString(channelPrimaryImageTag)).append("\n");
    sb.append("    programId: ").append(toIndentedString(programId)).append("\n");
    sb.append("    externalProgramId: ").append(toIndentedString(externalProgramId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    overview: ").append(toIndentedString(overview)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    serviceName: ").append(toIndentedString(serviceName)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    prePaddingSeconds: ").append(toIndentedString(prePaddingSeconds)).append("\n");
    sb.append("    postPaddingSeconds: ").append(toIndentedString(postPaddingSeconds)).append("\n");
    sb.append("    isPrePaddingRequired: ").append(toIndentedString(isPrePaddingRequired)).append("\n");
    sb.append("    parentBackdropItemId: ").append(toIndentedString(parentBackdropItemId)).append("\n");
    sb.append("    parentBackdropImageTags: ").append(toIndentedString(parentBackdropImageTags)).append("\n");
    sb.append("    isPostPaddingRequired: ").append(toIndentedString(isPostPaddingRequired)).append("\n");
    sb.append("    keepUntil: ").append(toIndentedString(keepUntil)).append("\n");
    sb.append("    recordAnyTime: ").append(toIndentedString(recordAnyTime)).append("\n");
    sb.append("    skipEpisodesInLibrary: ").append(toIndentedString(skipEpisodesInLibrary)).append("\n");
    sb.append("    recordAnyChannel: ").append(toIndentedString(recordAnyChannel)).append("\n");
    sb.append("    keepUpTo: ").append(toIndentedString(keepUpTo)).append("\n");
    sb.append("    recordNewOnly: ").append(toIndentedString(recordNewOnly)).append("\n");
    sb.append("    days: ").append(toIndentedString(days)).append("\n");
    sb.append("    dayPattern: ").append(toIndentedString(dayPattern)).append("\n");
    sb.append("    imageTags: ").append(toIndentedString(imageTags)).append("\n");
    sb.append("    parentThumbItemId: ").append(toIndentedString(parentThumbItemId)).append("\n");
    sb.append("    parentThumbImageTag: ").append(toIndentedString(parentThumbImageTag)).append("\n");
    sb.append("    parentPrimaryImageItemId: ").append(toIndentedString(parentPrimaryImageItemId)).append("\n");
    sb.append("    parentPrimaryImageTag: ").append(toIndentedString(parentPrimaryImageTag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `Id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `Type` to the URL query string
    if (getType() != null) {
      joiner.add(String.format("%sType%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getType()))));
    }

    // add `ServerId` to the URL query string
    if (getServerId() != null) {
      joiner.add(String.format("%sServerId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getServerId()))));
    }

    // add `ExternalId` to the URL query string
    if (getExternalId() != null) {
      joiner.add(String.format("%sExternalId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getExternalId()))));
    }

    // add `ChannelId` to the URL query string
    if (getChannelId() != null) {
      joiner.add(String.format("%sChannelId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getChannelId()))));
    }

    // add `ExternalChannelId` to the URL query string
    if (getExternalChannelId() != null) {
      joiner.add(String.format("%sExternalChannelId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getExternalChannelId()))));
    }

    // add `ChannelName` to the URL query string
    if (getChannelName() != null) {
      joiner.add(String.format("%sChannelName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getChannelName()))));
    }

    // add `ChannelPrimaryImageTag` to the URL query string
    if (getChannelPrimaryImageTag() != null) {
      joiner.add(String.format("%sChannelPrimaryImageTag%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getChannelPrimaryImageTag()))));
    }

    // add `ProgramId` to the URL query string
    if (getProgramId() != null) {
      joiner.add(String.format("%sProgramId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getProgramId()))));
    }

    // add `ExternalProgramId` to the URL query string
    if (getExternalProgramId() != null) {
      joiner.add(String.format("%sExternalProgramId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getExternalProgramId()))));
    }

    // add `Name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getName()))));
    }

    // add `Overview` to the URL query string
    if (getOverview() != null) {
      joiner.add(String.format("%sOverview%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOverview()))));
    }

    // add `StartDate` to the URL query string
    if (getStartDate() != null) {
      joiner.add(String.format("%sStartDate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStartDate()))));
    }

    // add `EndDate` to the URL query string
    if (getEndDate() != null) {
      joiner.add(String.format("%sEndDate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEndDate()))));
    }

    // add `ServiceName` to the URL query string
    if (getServiceName() != null) {
      joiner.add(String.format("%sServiceName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getServiceName()))));
    }

    // add `Priority` to the URL query string
    if (getPriority() != null) {
      joiner.add(String.format("%sPriority%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPriority()))));
    }

    // add `PrePaddingSeconds` to the URL query string
    if (getPrePaddingSeconds() != null) {
      joiner.add(String.format("%sPrePaddingSeconds%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPrePaddingSeconds()))));
    }

    // add `PostPaddingSeconds` to the URL query string
    if (getPostPaddingSeconds() != null) {
      joiner.add(String.format("%sPostPaddingSeconds%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPostPaddingSeconds()))));
    }

    // add `IsPrePaddingRequired` to the URL query string
    if (getIsPrePaddingRequired() != null) {
      joiner.add(String.format("%sIsPrePaddingRequired%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsPrePaddingRequired()))));
    }

    // add `ParentBackdropItemId` to the URL query string
    if (getParentBackdropItemId() != null) {
      joiner.add(String.format("%sParentBackdropItemId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getParentBackdropItemId()))));
    }

    // add `ParentBackdropImageTags` to the URL query string
    if (getParentBackdropImageTags() != null) {
      for (int i = 0; i < getParentBackdropImageTags().size(); i++) {
        joiner.add(String.format("%sParentBackdropImageTags%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getParentBackdropImageTags().get(i)))));
      }
    }

    // add `IsPostPaddingRequired` to the URL query string
    if (getIsPostPaddingRequired() != null) {
      joiner.add(String.format("%sIsPostPaddingRequired%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsPostPaddingRequired()))));
    }

    // add `KeepUntil` to the URL query string
    if (getKeepUntil() != null) {
      joiner.add(String.format("%sKeepUntil%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getKeepUntil()))));
    }

    // add `RecordAnyTime` to the URL query string
    if (getRecordAnyTime() != null) {
      joiner.add(String.format("%sRecordAnyTime%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRecordAnyTime()))));
    }

    // add `SkipEpisodesInLibrary` to the URL query string
    if (getSkipEpisodesInLibrary() != null) {
      joiner.add(String.format("%sSkipEpisodesInLibrary%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSkipEpisodesInLibrary()))));
    }

    // add `RecordAnyChannel` to the URL query string
    if (getRecordAnyChannel() != null) {
      joiner.add(String.format("%sRecordAnyChannel%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRecordAnyChannel()))));
    }

    // add `KeepUpTo` to the URL query string
    if (getKeepUpTo() != null) {
      joiner.add(String.format("%sKeepUpTo%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getKeepUpTo()))));
    }

    // add `RecordNewOnly` to the URL query string
    if (getRecordNewOnly() != null) {
      joiner.add(String.format("%sRecordNewOnly%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRecordNewOnly()))));
    }

    // add `Days` to the URL query string
    if (getDays() != null) {
      for (int i = 0; i < getDays().size(); i++) {
        if (getDays().get(i) != null) {
          joiner.add(String.format("%sDays%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getDays().get(i)))));
        }
      }
    }

    // add `DayPattern` to the URL query string
    if (getDayPattern() != null) {
      joiner.add(String.format("%sDayPattern%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDayPattern()))));
    }

    // add `ImageTags` to the URL query string
    if (getImageTags() != null) {
      for (String _key : getImageTags().keySet()) {
        joiner.add(String.format("%sImageTags%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getImageTags().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getImageTags().get(_key)))));
      }
    }

    // add `ParentThumbItemId` to the URL query string
    if (getParentThumbItemId() != null) {
      joiner.add(String.format("%sParentThumbItemId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getParentThumbItemId()))));
    }

    // add `ParentThumbImageTag` to the URL query string
    if (getParentThumbImageTag() != null) {
      joiner.add(String.format("%sParentThumbImageTag%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getParentThumbImageTag()))));
    }

    // add `ParentPrimaryImageItemId` to the URL query string
    if (getParentPrimaryImageItemId() != null) {
      joiner.add(String.format("%sParentPrimaryImageItemId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getParentPrimaryImageItemId()))));
    }

    // add `ParentPrimaryImageTag` to the URL query string
    if (getParentPrimaryImageTag() != null) {
      joiner.add(String.format("%sParentPrimaryImageTag%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getParentPrimaryImageTag()))));
    }

    return joiner.toString();
  }
}

