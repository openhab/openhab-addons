/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.client.model.DayOfWeek;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * Class TaskTriggerInfo.
 */
@JsonPropertyOrder({
  TaskTriggerInfo.JSON_PROPERTY_TYPE,
  TaskTriggerInfo.JSON_PROPERTY_TIME_OF_DAY_TICKS,
  TaskTriggerInfo.JSON_PROPERTY_INTERVAL_TICKS,
  TaskTriggerInfo.JSON_PROPERTY_DAY_OF_WEEK,
  TaskTriggerInfo.JSON_PROPERTY_MAX_RUNTIME_TICKS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-16T17:51:31.285278872Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class TaskTriggerInfo {
  public static final String JSON_PROPERTY_TYPE = "Type";
  private JsonNullable<String> type = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TIME_OF_DAY_TICKS = "TimeOfDayTicks";
  private JsonNullable<Long> timeOfDayTicks = JsonNullable.<Long>undefined();

  public static final String JSON_PROPERTY_INTERVAL_TICKS = "IntervalTicks";
  private JsonNullable<Long> intervalTicks = JsonNullable.<Long>undefined();

  public static final String JSON_PROPERTY_DAY_OF_WEEK = "DayOfWeek";
  private JsonNullable<DayOfWeek> dayOfWeek = JsonNullable.<DayOfWeek>undefined();

  public static final String JSON_PROPERTY_MAX_RUNTIME_TICKS = "MaxRuntimeTicks";
  private JsonNullable<Long> maxRuntimeTicks = JsonNullable.<Long>undefined();

  public TaskTriggerInfo() { 
  }

  public TaskTriggerInfo type(@javax.annotation.Nullable String type) {
    this.type = JsonNullable.<String>of(type);
    return this;
  }

  /**
   * Gets or sets the type.
   * @return type
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getType() {
        return type.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getType_JsonNullable() {
    return type;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE)
  public void setType_JsonNullable(JsonNullable<String> type) {
    this.type = type;
  }

  public void setType(@javax.annotation.Nullable String type) {
    this.type = JsonNullable.<String>of(type);
  }


  public TaskTriggerInfo timeOfDayTicks(@javax.annotation.Nullable Long timeOfDayTicks) {
    this.timeOfDayTicks = JsonNullable.<Long>of(timeOfDayTicks);
    return this;
  }

  /**
   * Gets or sets the time of day.
   * @return timeOfDayTicks
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Long getTimeOfDayTicks() {
        return timeOfDayTicks.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIME_OF_DAY_TICKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getTimeOfDayTicks_JsonNullable() {
    return timeOfDayTicks;
  }
  
  @JsonProperty(JSON_PROPERTY_TIME_OF_DAY_TICKS)
  public void setTimeOfDayTicks_JsonNullable(JsonNullable<Long> timeOfDayTicks) {
    this.timeOfDayTicks = timeOfDayTicks;
  }

  public void setTimeOfDayTicks(@javax.annotation.Nullable Long timeOfDayTicks) {
    this.timeOfDayTicks = JsonNullable.<Long>of(timeOfDayTicks);
  }


  public TaskTriggerInfo intervalTicks(@javax.annotation.Nullable Long intervalTicks) {
    this.intervalTicks = JsonNullable.<Long>of(intervalTicks);
    return this;
  }

  /**
   * Gets or sets the interval.
   * @return intervalTicks
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Long getIntervalTicks() {
        return intervalTicks.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INTERVAL_TICKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getIntervalTicks_JsonNullable() {
    return intervalTicks;
  }
  
  @JsonProperty(JSON_PROPERTY_INTERVAL_TICKS)
  public void setIntervalTicks_JsonNullable(JsonNullable<Long> intervalTicks) {
    this.intervalTicks = intervalTicks;
  }

  public void setIntervalTicks(@javax.annotation.Nullable Long intervalTicks) {
    this.intervalTicks = JsonNullable.<Long>of(intervalTicks);
  }


  public TaskTriggerInfo dayOfWeek(@javax.annotation.Nullable DayOfWeek dayOfWeek) {
    this.dayOfWeek = JsonNullable.<DayOfWeek>of(dayOfWeek);
    return this;
  }

  /**
   * Gets or sets the day of week.
   * @return dayOfWeek
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public DayOfWeek getDayOfWeek() {
        return dayOfWeek.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DAY_OF_WEEK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DayOfWeek> getDayOfWeek_JsonNullable() {
    return dayOfWeek;
  }
  
  @JsonProperty(JSON_PROPERTY_DAY_OF_WEEK)
  public void setDayOfWeek_JsonNullable(JsonNullable<DayOfWeek> dayOfWeek) {
    this.dayOfWeek = dayOfWeek;
  }

  public void setDayOfWeek(@javax.annotation.Nullable DayOfWeek dayOfWeek) {
    this.dayOfWeek = JsonNullable.<DayOfWeek>of(dayOfWeek);
  }


  public TaskTriggerInfo maxRuntimeTicks(@javax.annotation.Nullable Long maxRuntimeTicks) {
    this.maxRuntimeTicks = JsonNullable.<Long>of(maxRuntimeTicks);
    return this;
  }

  /**
   * Gets or sets the maximum runtime ticks.
   * @return maxRuntimeTicks
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Long getMaxRuntimeTicks() {
        return maxRuntimeTicks.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_RUNTIME_TICKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getMaxRuntimeTicks_JsonNullable() {
    return maxRuntimeTicks;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_RUNTIME_TICKS)
  public void setMaxRuntimeTicks_JsonNullable(JsonNullable<Long> maxRuntimeTicks) {
    this.maxRuntimeTicks = maxRuntimeTicks;
  }

  public void setMaxRuntimeTicks(@javax.annotation.Nullable Long maxRuntimeTicks) {
    this.maxRuntimeTicks = JsonNullable.<Long>of(maxRuntimeTicks);
  }


  /**
   * Return true if this TaskTriggerInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskTriggerInfo taskTriggerInfo = (TaskTriggerInfo) o;
    return equalsNullable(this.type, taskTriggerInfo.type) &&
        equalsNullable(this.timeOfDayTicks, taskTriggerInfo.timeOfDayTicks) &&
        equalsNullable(this.intervalTicks, taskTriggerInfo.intervalTicks) &&
        equalsNullable(this.dayOfWeek, taskTriggerInfo.dayOfWeek) &&
        equalsNullable(this.maxRuntimeTicks, taskTriggerInfo.maxRuntimeTicks);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(type), hashCodeNullable(timeOfDayTicks), hashCodeNullable(intervalTicks), hashCodeNullable(dayOfWeek), hashCodeNullable(maxRuntimeTicks));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskTriggerInfo {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    timeOfDayTicks: ").append(toIndentedString(timeOfDayTicks)).append("\n");
    sb.append("    intervalTicks: ").append(toIndentedString(intervalTicks)).append("\n");
    sb.append("    dayOfWeek: ").append(toIndentedString(dayOfWeek)).append("\n");
    sb.append("    maxRuntimeTicks: ").append(toIndentedString(maxRuntimeTicks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `Type` to the URL query string
    if (getType() != null) {
      joiner.add(String.format("%sType%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getType()))));
    }

    // add `TimeOfDayTicks` to the URL query string
    if (getTimeOfDayTicks() != null) {
      joiner.add(String.format("%sTimeOfDayTicks%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTimeOfDayTicks()))));
    }

    // add `IntervalTicks` to the URL query string
    if (getIntervalTicks() != null) {
      joiner.add(String.format("%sIntervalTicks%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIntervalTicks()))));
    }

    // add `DayOfWeek` to the URL query string
    if (getDayOfWeek() != null) {
      joiner.add(String.format("%sDayOfWeek%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDayOfWeek()))));
    }

    // add `MaxRuntimeTicks` to the URL query string
    if (getMaxRuntimeTicks() != null) {
      joiner.add(String.format("%sMaxRuntimeTicks%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMaxRuntimeTicks()))));
    }

    return joiner.toString();
  }
}

