/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.client.model.SessionInfo;
import org.openapitools.client.model.UserDto;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * AuthenticationResult
 */
@JsonPropertyOrder({
  AuthenticationResult.JSON_PROPERTY_USER,
  AuthenticationResult.JSON_PROPERTY_SESSION_INFO,
  AuthenticationResult.JSON_PROPERTY_ACCESS_TOKEN,
  AuthenticationResult.JSON_PROPERTY_SERVER_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-28T21:48:40.061690683Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class AuthenticationResult {
  public static final String JSON_PROPERTY_USER = "User";
  private JsonNullable<UserDto> user = JsonNullable.<UserDto>undefined();

  public static final String JSON_PROPERTY_SESSION_INFO = "SessionInfo";
  private JsonNullable<SessionInfo> sessionInfo = JsonNullable.<SessionInfo>undefined();

  public static final String JSON_PROPERTY_ACCESS_TOKEN = "AccessToken";
  private JsonNullable<String> accessToken = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERVER_ID = "ServerId";
  private JsonNullable<String> serverId = JsonNullable.<String>undefined();

  public AuthenticationResult() { 
  }

  public AuthenticationResult user(@javax.annotation.Nullable UserDto user) {
    this.user = JsonNullable.<UserDto>of(user);
    return this;
  }

  /**
   * Class UserDto.
   * @return user
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UserDto getUser() {
        return user.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UserDto> getUser_JsonNullable() {
    return user;
  }
  
  @JsonProperty(JSON_PROPERTY_USER)
  public void setUser_JsonNullable(JsonNullable<UserDto> user) {
    this.user = user;
  }

  public void setUser(@javax.annotation.Nullable UserDto user) {
    this.user = JsonNullable.<UserDto>of(user);
  }


  public AuthenticationResult sessionInfo(@javax.annotation.Nullable SessionInfo sessionInfo) {
    this.sessionInfo = JsonNullable.<SessionInfo>of(sessionInfo);
    return this;
  }

  /**
   * Class SessionInfo.
   * @return sessionInfo
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public SessionInfo getSessionInfo() {
        return sessionInfo.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SESSION_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SessionInfo> getSessionInfo_JsonNullable() {
    return sessionInfo;
  }
  
  @JsonProperty(JSON_PROPERTY_SESSION_INFO)
  public void setSessionInfo_JsonNullable(JsonNullable<SessionInfo> sessionInfo) {
    this.sessionInfo = sessionInfo;
  }

  public void setSessionInfo(@javax.annotation.Nullable SessionInfo sessionInfo) {
    this.sessionInfo = JsonNullable.<SessionInfo>of(sessionInfo);
  }


  public AuthenticationResult accessToken(@javax.annotation.Nullable String accessToken) {
    this.accessToken = JsonNullable.<String>of(accessToken);
    return this;
  }

  /**
   * Get accessToken
   * @return accessToken
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getAccessToken() {
        return accessToken.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ACCESS_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAccessToken_JsonNullable() {
    return accessToken;
  }
  
  @JsonProperty(JSON_PROPERTY_ACCESS_TOKEN)
  public void setAccessToken_JsonNullable(JsonNullable<String> accessToken) {
    this.accessToken = accessToken;
  }

  public void setAccessToken(@javax.annotation.Nullable String accessToken) {
    this.accessToken = JsonNullable.<String>of(accessToken);
  }


  public AuthenticationResult serverId(@javax.annotation.Nullable String serverId) {
    this.serverId = JsonNullable.<String>of(serverId);
    return this;
  }

  /**
   * Get serverId
   * @return serverId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getServerId() {
        return serverId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERVER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getServerId_JsonNullable() {
    return serverId;
  }
  
  @JsonProperty(JSON_PROPERTY_SERVER_ID)
  public void setServerId_JsonNullable(JsonNullable<String> serverId) {
    this.serverId = serverId;
  }

  public void setServerId(@javax.annotation.Nullable String serverId) {
    this.serverId = JsonNullable.<String>of(serverId);
  }


  /**
   * Return true if this AuthenticationResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthenticationResult authenticationResult = (AuthenticationResult) o;
    return equalsNullable(this.user, authenticationResult.user) &&
        equalsNullable(this.sessionInfo, authenticationResult.sessionInfo) &&
        equalsNullable(this.accessToken, authenticationResult.accessToken) &&
        equalsNullable(this.serverId, authenticationResult.serverId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(user), hashCodeNullable(sessionInfo), hashCodeNullable(accessToken), hashCodeNullable(serverId));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthenticationResult {\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    sessionInfo: ").append(toIndentedString(sessionInfo)).append("\n");
    sb.append("    accessToken: ").append(toIndentedString(accessToken)).append("\n");
    sb.append("    serverId: ").append(toIndentedString(serverId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `User` to the URL query string
    if (getUser() != null) {
      joiner.add(getUser().toUrlQueryString(prefix + "User" + suffix));
    }

    // add `SessionInfo` to the URL query string
    if (getSessionInfo() != null) {
      joiner.add(getSessionInfo().toUrlQueryString(prefix + "SessionInfo" + suffix));
    }

    // add `AccessToken` to the URL query string
    if (getAccessToken() != null) {
      joiner.add(String.format("%sAccessToken%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAccessToken()))));
    }

    // add `ServerId` to the URL query string
    if (getServerId() != null) {
      joiner.add(String.format("%sServerId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getServerId()))));
    }

    return joiner.toString();
  }
}

