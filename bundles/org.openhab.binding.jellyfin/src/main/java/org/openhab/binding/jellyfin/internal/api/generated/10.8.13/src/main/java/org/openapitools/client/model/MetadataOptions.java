/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Class MetadataOptions.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-27T20:32:44.334408221+01:00[Europe/Zurich]", comments = "Generator version: 7.10.0")
public class MetadataOptions {
  public static final String SERIALIZED_NAME_ITEM_TYPE = "ItemType";
  @SerializedName(SERIALIZED_NAME_ITEM_TYPE)
  @javax.annotation.Nullable
  private String itemType;

  public static final String SERIALIZED_NAME_DISABLED_METADATA_SAVERS = "DisabledMetadataSavers";
  @SerializedName(SERIALIZED_NAME_DISABLED_METADATA_SAVERS)
  @javax.annotation.Nullable
  private List<String> disabledMetadataSavers;

  public static final String SERIALIZED_NAME_LOCAL_METADATA_READER_ORDER = "LocalMetadataReaderOrder";
  @SerializedName(SERIALIZED_NAME_LOCAL_METADATA_READER_ORDER)
  @javax.annotation.Nullable
  private List<String> localMetadataReaderOrder;

  public static final String SERIALIZED_NAME_DISABLED_METADATA_FETCHERS = "DisabledMetadataFetchers";
  @SerializedName(SERIALIZED_NAME_DISABLED_METADATA_FETCHERS)
  @javax.annotation.Nullable
  private List<String> disabledMetadataFetchers;

  public static final String SERIALIZED_NAME_METADATA_FETCHER_ORDER = "MetadataFetcherOrder";
  @SerializedName(SERIALIZED_NAME_METADATA_FETCHER_ORDER)
  @javax.annotation.Nullable
  private List<String> metadataFetcherOrder;

  public static final String SERIALIZED_NAME_DISABLED_IMAGE_FETCHERS = "DisabledImageFetchers";
  @SerializedName(SERIALIZED_NAME_DISABLED_IMAGE_FETCHERS)
  @javax.annotation.Nullable
  private List<String> disabledImageFetchers;

  public static final String SERIALIZED_NAME_IMAGE_FETCHER_ORDER = "ImageFetcherOrder";
  @SerializedName(SERIALIZED_NAME_IMAGE_FETCHER_ORDER)
  @javax.annotation.Nullable
  private List<String> imageFetcherOrder;

  public MetadataOptions() {
  }

  public MetadataOptions itemType(@javax.annotation.Nullable String itemType) {
    this.itemType = itemType;
    return this;
  }

  /**
   * Get itemType
   * @return itemType
   */
  @javax.annotation.Nullable
  public String getItemType() {
    return itemType;
  }

  public void setItemType(@javax.annotation.Nullable String itemType) {
    this.itemType = itemType;
  }


  public MetadataOptions disabledMetadataSavers(@javax.annotation.Nullable List<String> disabledMetadataSavers) {
    this.disabledMetadataSavers = disabledMetadataSavers;
    return this;
  }

  public MetadataOptions addDisabledMetadataSaversItem(String disabledMetadataSaversItem) {
    if (this.disabledMetadataSavers == null) {
      this.disabledMetadataSavers = new ArrayList<>();
    }
    this.disabledMetadataSavers.add(disabledMetadataSaversItem);
    return this;
  }

  /**
   * Get disabledMetadataSavers
   * @return disabledMetadataSavers
   */
  @javax.annotation.Nullable
  public List<String> getDisabledMetadataSavers() {
    return disabledMetadataSavers;
  }

  public void setDisabledMetadataSavers(@javax.annotation.Nullable List<String> disabledMetadataSavers) {
    this.disabledMetadataSavers = disabledMetadataSavers;
  }


  public MetadataOptions localMetadataReaderOrder(@javax.annotation.Nullable List<String> localMetadataReaderOrder) {
    this.localMetadataReaderOrder = localMetadataReaderOrder;
    return this;
  }

  public MetadataOptions addLocalMetadataReaderOrderItem(String localMetadataReaderOrderItem) {
    if (this.localMetadataReaderOrder == null) {
      this.localMetadataReaderOrder = new ArrayList<>();
    }
    this.localMetadataReaderOrder.add(localMetadataReaderOrderItem);
    return this;
  }

  /**
   * Get localMetadataReaderOrder
   * @return localMetadataReaderOrder
   */
  @javax.annotation.Nullable
  public List<String> getLocalMetadataReaderOrder() {
    return localMetadataReaderOrder;
  }

  public void setLocalMetadataReaderOrder(@javax.annotation.Nullable List<String> localMetadataReaderOrder) {
    this.localMetadataReaderOrder = localMetadataReaderOrder;
  }


  public MetadataOptions disabledMetadataFetchers(@javax.annotation.Nullable List<String> disabledMetadataFetchers) {
    this.disabledMetadataFetchers = disabledMetadataFetchers;
    return this;
  }

  public MetadataOptions addDisabledMetadataFetchersItem(String disabledMetadataFetchersItem) {
    if (this.disabledMetadataFetchers == null) {
      this.disabledMetadataFetchers = new ArrayList<>();
    }
    this.disabledMetadataFetchers.add(disabledMetadataFetchersItem);
    return this;
  }

  /**
   * Get disabledMetadataFetchers
   * @return disabledMetadataFetchers
   */
  @javax.annotation.Nullable
  public List<String> getDisabledMetadataFetchers() {
    return disabledMetadataFetchers;
  }

  public void setDisabledMetadataFetchers(@javax.annotation.Nullable List<String> disabledMetadataFetchers) {
    this.disabledMetadataFetchers = disabledMetadataFetchers;
  }


  public MetadataOptions metadataFetcherOrder(@javax.annotation.Nullable List<String> metadataFetcherOrder) {
    this.metadataFetcherOrder = metadataFetcherOrder;
    return this;
  }

  public MetadataOptions addMetadataFetcherOrderItem(String metadataFetcherOrderItem) {
    if (this.metadataFetcherOrder == null) {
      this.metadataFetcherOrder = new ArrayList<>();
    }
    this.metadataFetcherOrder.add(metadataFetcherOrderItem);
    return this;
  }

  /**
   * Get metadataFetcherOrder
   * @return metadataFetcherOrder
   */
  @javax.annotation.Nullable
  public List<String> getMetadataFetcherOrder() {
    return metadataFetcherOrder;
  }

  public void setMetadataFetcherOrder(@javax.annotation.Nullable List<String> metadataFetcherOrder) {
    this.metadataFetcherOrder = metadataFetcherOrder;
  }


  public MetadataOptions disabledImageFetchers(@javax.annotation.Nullable List<String> disabledImageFetchers) {
    this.disabledImageFetchers = disabledImageFetchers;
    return this;
  }

  public MetadataOptions addDisabledImageFetchersItem(String disabledImageFetchersItem) {
    if (this.disabledImageFetchers == null) {
      this.disabledImageFetchers = new ArrayList<>();
    }
    this.disabledImageFetchers.add(disabledImageFetchersItem);
    return this;
  }

  /**
   * Get disabledImageFetchers
   * @return disabledImageFetchers
   */
  @javax.annotation.Nullable
  public List<String> getDisabledImageFetchers() {
    return disabledImageFetchers;
  }

  public void setDisabledImageFetchers(@javax.annotation.Nullable List<String> disabledImageFetchers) {
    this.disabledImageFetchers = disabledImageFetchers;
  }


  public MetadataOptions imageFetcherOrder(@javax.annotation.Nullable List<String> imageFetcherOrder) {
    this.imageFetcherOrder = imageFetcherOrder;
    return this;
  }

  public MetadataOptions addImageFetcherOrderItem(String imageFetcherOrderItem) {
    if (this.imageFetcherOrder == null) {
      this.imageFetcherOrder = new ArrayList<>();
    }
    this.imageFetcherOrder.add(imageFetcherOrderItem);
    return this;
  }

  /**
   * Get imageFetcherOrder
   * @return imageFetcherOrder
   */
  @javax.annotation.Nullable
  public List<String> getImageFetcherOrder() {
    return imageFetcherOrder;
  }

  public void setImageFetcherOrder(@javax.annotation.Nullable List<String> imageFetcherOrder) {
    this.imageFetcherOrder = imageFetcherOrder;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetadataOptions metadataOptions = (MetadataOptions) o;
    return Objects.equals(this.itemType, metadataOptions.itemType) &&
        Objects.equals(this.disabledMetadataSavers, metadataOptions.disabledMetadataSavers) &&
        Objects.equals(this.localMetadataReaderOrder, metadataOptions.localMetadataReaderOrder) &&
        Objects.equals(this.disabledMetadataFetchers, metadataOptions.disabledMetadataFetchers) &&
        Objects.equals(this.metadataFetcherOrder, metadataOptions.metadataFetcherOrder) &&
        Objects.equals(this.disabledImageFetchers, metadataOptions.disabledImageFetchers) &&
        Objects.equals(this.imageFetcherOrder, metadataOptions.imageFetcherOrder);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemType, disabledMetadataSavers, localMetadataReaderOrder, disabledMetadataFetchers, metadataFetcherOrder, disabledImageFetchers, imageFetcherOrder);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetadataOptions {\n");
    sb.append("    itemType: ").append(toIndentedString(itemType)).append("\n");
    sb.append("    disabledMetadataSavers: ").append(toIndentedString(disabledMetadataSavers)).append("\n");
    sb.append("    localMetadataReaderOrder: ").append(toIndentedString(localMetadataReaderOrder)).append("\n");
    sb.append("    disabledMetadataFetchers: ").append(toIndentedString(disabledMetadataFetchers)).append("\n");
    sb.append("    metadataFetcherOrder: ").append(toIndentedString(metadataFetcherOrder)).append("\n");
    sb.append("    disabledImageFetchers: ").append(toIndentedString(disabledImageFetchers)).append("\n");
    sb.append("    imageFetcherOrder: ").append(toIndentedString(imageFetcherOrder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ItemType");
    openapiFields.add("DisabledMetadataSavers");
    openapiFields.add("LocalMetadataReaderOrder");
    openapiFields.add("DisabledMetadataFetchers");
    openapiFields.add("MetadataFetcherOrder");
    openapiFields.add("DisabledImageFetchers");
    openapiFields.add("ImageFetcherOrder");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MetadataOptions
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MetadataOptions.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MetadataOptions is not found in the empty JSON string", MetadataOptions.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MetadataOptions.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MetadataOptions` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("ItemType") != null && !jsonObj.get("ItemType").isJsonNull()) && !jsonObj.get("ItemType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ItemType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ItemType").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("DisabledMetadataSavers") != null && !jsonObj.get("DisabledMetadataSavers").isJsonNull() && !jsonObj.get("DisabledMetadataSavers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `DisabledMetadataSavers` to be an array in the JSON string but got `%s`", jsonObj.get("DisabledMetadataSavers").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("LocalMetadataReaderOrder") != null && !jsonObj.get("LocalMetadataReaderOrder").isJsonNull() && !jsonObj.get("LocalMetadataReaderOrder").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `LocalMetadataReaderOrder` to be an array in the JSON string but got `%s`", jsonObj.get("LocalMetadataReaderOrder").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("DisabledMetadataFetchers") != null && !jsonObj.get("DisabledMetadataFetchers").isJsonNull() && !jsonObj.get("DisabledMetadataFetchers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `DisabledMetadataFetchers` to be an array in the JSON string but got `%s`", jsonObj.get("DisabledMetadataFetchers").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("MetadataFetcherOrder") != null && !jsonObj.get("MetadataFetcherOrder").isJsonNull() && !jsonObj.get("MetadataFetcherOrder").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `MetadataFetcherOrder` to be an array in the JSON string but got `%s`", jsonObj.get("MetadataFetcherOrder").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("DisabledImageFetchers") != null && !jsonObj.get("DisabledImageFetchers").isJsonNull() && !jsonObj.get("DisabledImageFetchers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `DisabledImageFetchers` to be an array in the JSON string but got `%s`", jsonObj.get("DisabledImageFetchers").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("ImageFetcherOrder") != null && !jsonObj.get("ImageFetcherOrder").isJsonNull() && !jsonObj.get("ImageFetcherOrder").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ImageFetcherOrder` to be an array in the JSON string but got `%s`", jsonObj.get("ImageFetcherOrder").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MetadataOptions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MetadataOptions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MetadataOptions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MetadataOptions.class));

       return (TypeAdapter<T>) new TypeAdapter<MetadataOptions>() {
           @Override
           public void write(JsonWriter out, MetadataOptions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MetadataOptions read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MetadataOptions given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MetadataOptions
   * @throws IOException if the JSON string is invalid with respect to MetadataOptions
   */
  public static MetadataOptions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MetadataOptions.class);
  }

  /**
   * Convert an instance of MetadataOptions to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

