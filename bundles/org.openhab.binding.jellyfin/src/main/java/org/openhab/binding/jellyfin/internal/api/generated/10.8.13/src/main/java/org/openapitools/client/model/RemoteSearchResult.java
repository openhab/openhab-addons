/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * RemoteSearchResult
 */
@JsonPropertyOrder({
  RemoteSearchResult.JSON_PROPERTY_NAME,
  RemoteSearchResult.JSON_PROPERTY_PROVIDER_IDS,
  RemoteSearchResult.JSON_PROPERTY_PRODUCTION_YEAR,
  RemoteSearchResult.JSON_PROPERTY_INDEX_NUMBER,
  RemoteSearchResult.JSON_PROPERTY_INDEX_NUMBER_END,
  RemoteSearchResult.JSON_PROPERTY_PARENT_INDEX_NUMBER,
  RemoteSearchResult.JSON_PROPERTY_PREMIERE_DATE,
  RemoteSearchResult.JSON_PROPERTY_IMAGE_URL,
  RemoteSearchResult.JSON_PROPERTY_SEARCH_PROVIDER_NAME,
  RemoteSearchResult.JSON_PROPERTY_OVERVIEW,
  RemoteSearchResult.JSON_PROPERTY_ALBUM_ARTIST,
  RemoteSearchResult.JSON_PROPERTY_ARTISTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-28T21:48:40.061690683Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class RemoteSearchResult {
  public static final String JSON_PROPERTY_NAME = "Name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PROVIDER_IDS = "ProviderIds";
  private JsonNullable<Map<String, String>> providerIds = JsonNullable.<Map<String, String>>undefined();

  public static final String JSON_PROPERTY_PRODUCTION_YEAR = "ProductionYear";
  private JsonNullable<Integer> productionYear = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_INDEX_NUMBER = "IndexNumber";
  private JsonNullable<Integer> indexNumber = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_INDEX_NUMBER_END = "IndexNumberEnd";
  private JsonNullable<Integer> indexNumberEnd = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_PARENT_INDEX_NUMBER = "ParentIndexNumber";
  private JsonNullable<Integer> parentIndexNumber = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_PREMIERE_DATE = "PremiereDate";
  private JsonNullable<OffsetDateTime> premiereDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_IMAGE_URL = "ImageUrl";
  private JsonNullable<String> imageUrl = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SEARCH_PROVIDER_NAME = "SearchProviderName";
  private JsonNullable<String> searchProviderName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OVERVIEW = "Overview";
  private JsonNullable<String> overview = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ALBUM_ARTIST = "AlbumArtist";
  private JsonNullable<RemoteSearchResult> albumArtist = JsonNullable.<RemoteSearchResult>undefined();

  public static final String JSON_PROPERTY_ARTISTS = "Artists";
  private JsonNullable<List<RemoteSearchResult>> artists = JsonNullable.<List<RemoteSearchResult>>undefined();

  public RemoteSearchResult() { 
  }

  public RemoteSearchResult name(@javax.annotation.Nullable String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

  /**
   * Gets or sets the name.
   * @return name
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public RemoteSearchResult providerIds(@javax.annotation.Nullable Map<String, String> providerIds) {
    this.providerIds = JsonNullable.<Map<String, String>>of(providerIds);
    return this;
  }

  public RemoteSearchResult putProviderIdsItem(String key, String providerIdsItem) {
    if (this.providerIds == null || !this.providerIds.isPresent()) {
      this.providerIds = JsonNullable.<Map<String, String>>of(new HashMap<>());
    }
    try {
      this.providerIds.get().put(key, providerIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Gets or sets the provider ids.
   * @return providerIds
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Map<String, String> getProviderIds() {
        return providerIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROVIDER_IDS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, String>> getProviderIds_JsonNullable() {
    return providerIds;
  }
  
  @JsonProperty(JSON_PROPERTY_PROVIDER_IDS)
  public void setProviderIds_JsonNullable(JsonNullable<Map<String, String>> providerIds) {
    this.providerIds = providerIds;
  }

  public void setProviderIds(@javax.annotation.Nullable Map<String, String> providerIds) {
    this.providerIds = JsonNullable.<Map<String, String>>of(providerIds);
  }


  public RemoteSearchResult productionYear(@javax.annotation.Nullable Integer productionYear) {
    this.productionYear = JsonNullable.<Integer>of(productionYear);
    return this;
  }

  /**
   * Gets or sets the year.
   * @return productionYear
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getProductionYear() {
        return productionYear.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRODUCTION_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getProductionYear_JsonNullable() {
    return productionYear;
  }
  
  @JsonProperty(JSON_PROPERTY_PRODUCTION_YEAR)
  public void setProductionYear_JsonNullable(JsonNullable<Integer> productionYear) {
    this.productionYear = productionYear;
  }

  public void setProductionYear(@javax.annotation.Nullable Integer productionYear) {
    this.productionYear = JsonNullable.<Integer>of(productionYear);
  }


  public RemoteSearchResult indexNumber(@javax.annotation.Nullable Integer indexNumber) {
    this.indexNumber = JsonNullable.<Integer>of(indexNumber);
    return this;
  }

  /**
   * Get indexNumber
   * @return indexNumber
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getIndexNumber() {
        return indexNumber.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INDEX_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getIndexNumber_JsonNullable() {
    return indexNumber;
  }
  
  @JsonProperty(JSON_PROPERTY_INDEX_NUMBER)
  public void setIndexNumber_JsonNullable(JsonNullable<Integer> indexNumber) {
    this.indexNumber = indexNumber;
  }

  public void setIndexNumber(@javax.annotation.Nullable Integer indexNumber) {
    this.indexNumber = JsonNullable.<Integer>of(indexNumber);
  }


  public RemoteSearchResult indexNumberEnd(@javax.annotation.Nullable Integer indexNumberEnd) {
    this.indexNumberEnd = JsonNullable.<Integer>of(indexNumberEnd);
    return this;
  }

  /**
   * Get indexNumberEnd
   * @return indexNumberEnd
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getIndexNumberEnd() {
        return indexNumberEnd.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INDEX_NUMBER_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getIndexNumberEnd_JsonNullable() {
    return indexNumberEnd;
  }
  
  @JsonProperty(JSON_PROPERTY_INDEX_NUMBER_END)
  public void setIndexNumberEnd_JsonNullable(JsonNullable<Integer> indexNumberEnd) {
    this.indexNumberEnd = indexNumberEnd;
  }

  public void setIndexNumberEnd(@javax.annotation.Nullable Integer indexNumberEnd) {
    this.indexNumberEnd = JsonNullable.<Integer>of(indexNumberEnd);
  }


  public RemoteSearchResult parentIndexNumber(@javax.annotation.Nullable Integer parentIndexNumber) {
    this.parentIndexNumber = JsonNullable.<Integer>of(parentIndexNumber);
    return this;
  }

  /**
   * Get parentIndexNumber
   * @return parentIndexNumber
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getParentIndexNumber() {
        return parentIndexNumber.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARENT_INDEX_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getParentIndexNumber_JsonNullable() {
    return parentIndexNumber;
  }
  
  @JsonProperty(JSON_PROPERTY_PARENT_INDEX_NUMBER)
  public void setParentIndexNumber_JsonNullable(JsonNullable<Integer> parentIndexNumber) {
    this.parentIndexNumber = parentIndexNumber;
  }

  public void setParentIndexNumber(@javax.annotation.Nullable Integer parentIndexNumber) {
    this.parentIndexNumber = JsonNullable.<Integer>of(parentIndexNumber);
  }


  public RemoteSearchResult premiereDate(@javax.annotation.Nullable OffsetDateTime premiereDate) {
    this.premiereDate = JsonNullable.<OffsetDateTime>of(premiereDate);
    return this;
  }

  /**
   * Get premiereDate
   * @return premiereDate
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getPremiereDate() {
        return premiereDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PREMIERE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getPremiereDate_JsonNullable() {
    return premiereDate;
  }
  
  @JsonProperty(JSON_PROPERTY_PREMIERE_DATE)
  public void setPremiereDate_JsonNullable(JsonNullable<OffsetDateTime> premiereDate) {
    this.premiereDate = premiereDate;
  }

  public void setPremiereDate(@javax.annotation.Nullable OffsetDateTime premiereDate) {
    this.premiereDate = JsonNullable.<OffsetDateTime>of(premiereDate);
  }


  public RemoteSearchResult imageUrl(@javax.annotation.Nullable String imageUrl) {
    this.imageUrl = JsonNullable.<String>of(imageUrl);
    return this;
  }

  /**
   * Get imageUrl
   * @return imageUrl
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getImageUrl() {
        return imageUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMAGE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getImageUrl_JsonNullable() {
    return imageUrl;
  }
  
  @JsonProperty(JSON_PROPERTY_IMAGE_URL)
  public void setImageUrl_JsonNullable(JsonNullable<String> imageUrl) {
    this.imageUrl = imageUrl;
  }

  public void setImageUrl(@javax.annotation.Nullable String imageUrl) {
    this.imageUrl = JsonNullable.<String>of(imageUrl);
  }


  public RemoteSearchResult searchProviderName(@javax.annotation.Nullable String searchProviderName) {
    this.searchProviderName = JsonNullable.<String>of(searchProviderName);
    return this;
  }

  /**
   * Get searchProviderName
   * @return searchProviderName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getSearchProviderName() {
        return searchProviderName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SEARCH_PROVIDER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSearchProviderName_JsonNullable() {
    return searchProviderName;
  }
  
  @JsonProperty(JSON_PROPERTY_SEARCH_PROVIDER_NAME)
  public void setSearchProviderName_JsonNullable(JsonNullable<String> searchProviderName) {
    this.searchProviderName = searchProviderName;
  }

  public void setSearchProviderName(@javax.annotation.Nullable String searchProviderName) {
    this.searchProviderName = JsonNullable.<String>of(searchProviderName);
  }


  public RemoteSearchResult overview(@javax.annotation.Nullable String overview) {
    this.overview = JsonNullable.<String>of(overview);
    return this;
  }

  /**
   * Get overview
   * @return overview
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getOverview() {
        return overview.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OVERVIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOverview_JsonNullable() {
    return overview;
  }
  
  @JsonProperty(JSON_PROPERTY_OVERVIEW)
  public void setOverview_JsonNullable(JsonNullable<String> overview) {
    this.overview = overview;
  }

  public void setOverview(@javax.annotation.Nullable String overview) {
    this.overview = JsonNullable.<String>of(overview);
  }


  public RemoteSearchResult albumArtist(@javax.annotation.Nullable RemoteSearchResult albumArtist) {
    this.albumArtist = JsonNullable.<RemoteSearchResult>of(albumArtist);
    return this;
  }

  /**
   * Get albumArtist
   * @return albumArtist
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public RemoteSearchResult getAlbumArtist() {
        return albumArtist.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ALBUM_ARTIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<RemoteSearchResult> getAlbumArtist_JsonNullable() {
    return albumArtist;
  }
  
  @JsonProperty(JSON_PROPERTY_ALBUM_ARTIST)
  public void setAlbumArtist_JsonNullable(JsonNullable<RemoteSearchResult> albumArtist) {
    this.albumArtist = albumArtist;
  }

  public void setAlbumArtist(@javax.annotation.Nullable RemoteSearchResult albumArtist) {
    this.albumArtist = JsonNullable.<RemoteSearchResult>of(albumArtist);
  }


  public RemoteSearchResult artists(@javax.annotation.Nullable List<RemoteSearchResult> artists) {
    this.artists = JsonNullable.<List<RemoteSearchResult>>of(artists);
    return this;
  }

  public RemoteSearchResult addArtistsItem(RemoteSearchResult artistsItem) {
    if (this.artists == null || !this.artists.isPresent()) {
      this.artists = JsonNullable.<List<RemoteSearchResult>>of(new ArrayList<>());
    }
    try {
      this.artists.get().add(artistsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get artists
   * @return artists
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<RemoteSearchResult> getArtists() {
        return artists.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ARTISTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<RemoteSearchResult>> getArtists_JsonNullable() {
    return artists;
  }
  
  @JsonProperty(JSON_PROPERTY_ARTISTS)
  public void setArtists_JsonNullable(JsonNullable<List<RemoteSearchResult>> artists) {
    this.artists = artists;
  }

  public void setArtists(@javax.annotation.Nullable List<RemoteSearchResult> artists) {
    this.artists = JsonNullable.<List<RemoteSearchResult>>of(artists);
  }


  /**
   * Return true if this RemoteSearchResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RemoteSearchResult remoteSearchResult = (RemoteSearchResult) o;
    return equalsNullable(this.name, remoteSearchResult.name) &&
        equalsNullable(this.providerIds, remoteSearchResult.providerIds) &&
        equalsNullable(this.productionYear, remoteSearchResult.productionYear) &&
        equalsNullable(this.indexNumber, remoteSearchResult.indexNumber) &&
        equalsNullable(this.indexNumberEnd, remoteSearchResult.indexNumberEnd) &&
        equalsNullable(this.parentIndexNumber, remoteSearchResult.parentIndexNumber) &&
        equalsNullable(this.premiereDate, remoteSearchResult.premiereDate) &&
        equalsNullable(this.imageUrl, remoteSearchResult.imageUrl) &&
        equalsNullable(this.searchProviderName, remoteSearchResult.searchProviderName) &&
        equalsNullable(this.overview, remoteSearchResult.overview) &&
        equalsNullable(this.albumArtist, remoteSearchResult.albumArtist) &&
        equalsNullable(this.artists, remoteSearchResult.artists);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(name), hashCodeNullable(providerIds), hashCodeNullable(productionYear), hashCodeNullable(indexNumber), hashCodeNullable(indexNumberEnd), hashCodeNullable(parentIndexNumber), hashCodeNullable(premiereDate), hashCodeNullable(imageUrl), hashCodeNullable(searchProviderName), hashCodeNullable(overview), hashCodeNullable(albumArtist), hashCodeNullable(artists));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RemoteSearchResult {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    providerIds: ").append(toIndentedString(providerIds)).append("\n");
    sb.append("    productionYear: ").append(toIndentedString(productionYear)).append("\n");
    sb.append("    indexNumber: ").append(toIndentedString(indexNumber)).append("\n");
    sb.append("    indexNumberEnd: ").append(toIndentedString(indexNumberEnd)).append("\n");
    sb.append("    parentIndexNumber: ").append(toIndentedString(parentIndexNumber)).append("\n");
    sb.append("    premiereDate: ").append(toIndentedString(premiereDate)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    searchProviderName: ").append(toIndentedString(searchProviderName)).append("\n");
    sb.append("    overview: ").append(toIndentedString(overview)).append("\n");
    sb.append("    albumArtist: ").append(toIndentedString(albumArtist)).append("\n");
    sb.append("    artists: ").append(toIndentedString(artists)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `Name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getName()))));
    }

    // add `ProviderIds` to the URL query string
    if (getProviderIds() != null) {
      for (String _key : getProviderIds().keySet()) {
        joiner.add(String.format("%sProviderIds%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getProviderIds().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getProviderIds().get(_key)))));
      }
    }

    // add `ProductionYear` to the URL query string
    if (getProductionYear() != null) {
      joiner.add(String.format("%sProductionYear%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getProductionYear()))));
    }

    // add `IndexNumber` to the URL query string
    if (getIndexNumber() != null) {
      joiner.add(String.format("%sIndexNumber%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIndexNumber()))));
    }

    // add `IndexNumberEnd` to the URL query string
    if (getIndexNumberEnd() != null) {
      joiner.add(String.format("%sIndexNumberEnd%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIndexNumberEnd()))));
    }

    // add `ParentIndexNumber` to the URL query string
    if (getParentIndexNumber() != null) {
      joiner.add(String.format("%sParentIndexNumber%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getParentIndexNumber()))));
    }

    // add `PremiereDate` to the URL query string
    if (getPremiereDate() != null) {
      joiner.add(String.format("%sPremiereDate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPremiereDate()))));
    }

    // add `ImageUrl` to the URL query string
    if (getImageUrl() != null) {
      joiner.add(String.format("%sImageUrl%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getImageUrl()))));
    }

    // add `SearchProviderName` to the URL query string
    if (getSearchProviderName() != null) {
      joiner.add(String.format("%sSearchProviderName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSearchProviderName()))));
    }

    // add `Overview` to the URL query string
    if (getOverview() != null) {
      joiner.add(String.format("%sOverview%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOverview()))));
    }

    // add `AlbumArtist` to the URL query string
    if (getAlbumArtist() != null) {
      joiner.add(getAlbumArtist().toUrlQueryString(prefix + "AlbumArtist" + suffix));
    }

    // add `Artists` to the URL query string
    if (getArtists() != null) {
      for (int i = 0; i < getArtists().size(); i++) {
        if (getArtists().get(i) != null) {
          joiner.add(getArtists().get(i).toUrlQueryString(String.format("%sArtists%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }
}

