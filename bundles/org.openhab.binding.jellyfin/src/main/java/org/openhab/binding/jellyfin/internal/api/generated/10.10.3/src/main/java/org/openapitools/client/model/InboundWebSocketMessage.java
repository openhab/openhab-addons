/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ActivityLogEntryStartMessage;
import org.openapitools.client.model.ActivityLogEntryStopMessage;
import org.openapitools.client.model.InboundKeepAliveMessage;
import org.openapitools.client.model.ScheduledTasksInfoStartMessage;
import org.openapitools.client.model.ScheduledTasksInfoStopMessage;
import org.openapitools.client.model.SessionMessageType;
import org.openapitools.client.model.SessionsStartMessage;
import org.openapitools.client.model.SessionsStopMessage;
import org.openapitools.jackson.nullable.JsonNullable;



import java.io.IOException;
import java.lang.reflect.Type;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.JsonPrimitive;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonSerializationContext;
import com.google.gson.JsonSerializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonArray;
import com.google.gson.JsonParseException;

import org.openapitools.client.JSON;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-27T20:32:56.699980679+01:00[Europe/Zurich]", comments = "Generator version: 7.10.0")
public class InboundWebSocketMessage extends AbstractOpenApiSchema {
    private static final Logger log = Logger.getLogger(InboundWebSocketMessage.class.getName());

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!InboundWebSocketMessage.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'InboundWebSocketMessage' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<ActivityLogEntryStartMessage> adapterActivityLogEntryStartMessage = gson.getDelegateAdapter(this, TypeToken.get(ActivityLogEntryStartMessage.class));
            final TypeAdapter<ActivityLogEntryStopMessage> adapterActivityLogEntryStopMessage = gson.getDelegateAdapter(this, TypeToken.get(ActivityLogEntryStopMessage.class));
            final TypeAdapter<InboundKeepAliveMessage> adapterInboundKeepAliveMessage = gson.getDelegateAdapter(this, TypeToken.get(InboundKeepAliveMessage.class));
            final TypeAdapter<ScheduledTasksInfoStartMessage> adapterScheduledTasksInfoStartMessage = gson.getDelegateAdapter(this, TypeToken.get(ScheduledTasksInfoStartMessage.class));
            final TypeAdapter<ScheduledTasksInfoStopMessage> adapterScheduledTasksInfoStopMessage = gson.getDelegateAdapter(this, TypeToken.get(ScheduledTasksInfoStopMessage.class));
            final TypeAdapter<SessionsStartMessage> adapterSessionsStartMessage = gson.getDelegateAdapter(this, TypeToken.get(SessionsStartMessage.class));
            final TypeAdapter<SessionsStopMessage> adapterSessionsStopMessage = gson.getDelegateAdapter(this, TypeToken.get(SessionsStopMessage.class));

            return (TypeAdapter<T>) new TypeAdapter<InboundWebSocketMessage>() {
                @Override
                public void write(JsonWriter out, InboundWebSocketMessage value) throws IOException {
                    if (value == null || value.getActualInstance() == null) {
                        elementAdapter.write(out, null);
                        return;
                    }

                    // check if the actual instance is of the type `ActivityLogEntryStartMessage`
                    if (value.getActualInstance() instanceof ActivityLogEntryStartMessage) {
                        JsonElement element = adapterActivityLogEntryStartMessage.toJsonTree((ActivityLogEntryStartMessage)value.getActualInstance());
                        elementAdapter.write(out, element);
                        return;
                    }
                    // check if the actual instance is of the type `ActivityLogEntryStopMessage`
                    if (value.getActualInstance() instanceof ActivityLogEntryStopMessage) {
                        JsonElement element = adapterActivityLogEntryStopMessage.toJsonTree((ActivityLogEntryStopMessage)value.getActualInstance());
                        elementAdapter.write(out, element);
                        return;
                    }
                    // check if the actual instance is of the type `InboundKeepAliveMessage`
                    if (value.getActualInstance() instanceof InboundKeepAliveMessage) {
                        JsonElement element = adapterInboundKeepAliveMessage.toJsonTree((InboundKeepAliveMessage)value.getActualInstance());
                        elementAdapter.write(out, element);
                        return;
                    }
                    // check if the actual instance is of the type `ScheduledTasksInfoStartMessage`
                    if (value.getActualInstance() instanceof ScheduledTasksInfoStartMessage) {
                        JsonElement element = adapterScheduledTasksInfoStartMessage.toJsonTree((ScheduledTasksInfoStartMessage)value.getActualInstance());
                        elementAdapter.write(out, element);
                        return;
                    }
                    // check if the actual instance is of the type `ScheduledTasksInfoStopMessage`
                    if (value.getActualInstance() instanceof ScheduledTasksInfoStopMessage) {
                        JsonElement element = adapterScheduledTasksInfoStopMessage.toJsonTree((ScheduledTasksInfoStopMessage)value.getActualInstance());
                        elementAdapter.write(out, element);
                        return;
                    }
                    // check if the actual instance is of the type `SessionsStartMessage`
                    if (value.getActualInstance() instanceof SessionsStartMessage) {
                        JsonElement element = adapterSessionsStartMessage.toJsonTree((SessionsStartMessage)value.getActualInstance());
                        elementAdapter.write(out, element);
                        return;
                    }
                    // check if the actual instance is of the type `SessionsStopMessage`
                    if (value.getActualInstance() instanceof SessionsStopMessage) {
                        JsonElement element = adapterSessionsStopMessage.toJsonTree((SessionsStopMessage)value.getActualInstance());
                        elementAdapter.write(out, element);
                        return;
                    }
                    throw new IOException("Failed to serialize as the type doesn't match oneOf schemas: ActivityLogEntryStartMessage, ActivityLogEntryStopMessage, InboundKeepAliveMessage, ScheduledTasksInfoStartMessage, ScheduledTasksInfoStopMessage, SessionsStartMessage, SessionsStopMessage");
                }

                @Override
                public InboundWebSocketMessage read(JsonReader in) throws IOException {
                    Object deserialized = null;
                    JsonElement jsonElement = elementAdapter.read(in);

                    int match = 0;
                    ArrayList<String> errorMessages = new ArrayList<>();
                    TypeAdapter actualAdapter = elementAdapter;

                    // deserialize ActivityLogEntryStartMessage
                    try {
                        // validate the JSON object to see if any exception is thrown
                        ActivityLogEntryStartMessage.validateJsonElement(jsonElement);
                        actualAdapter = adapterActivityLogEntryStartMessage;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'ActivityLogEntryStartMessage'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for ActivityLogEntryStartMessage failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'ActivityLogEntryStartMessage'", e);
                    }
                    // deserialize ActivityLogEntryStopMessage
                    try {
                        // validate the JSON object to see if any exception is thrown
                        ActivityLogEntryStopMessage.validateJsonElement(jsonElement);
                        actualAdapter = adapterActivityLogEntryStopMessage;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'ActivityLogEntryStopMessage'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for ActivityLogEntryStopMessage failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'ActivityLogEntryStopMessage'", e);
                    }
                    // deserialize InboundKeepAliveMessage
                    try {
                        // validate the JSON object to see if any exception is thrown
                        InboundKeepAliveMessage.validateJsonElement(jsonElement);
                        actualAdapter = adapterInboundKeepAliveMessage;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'InboundKeepAliveMessage'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for InboundKeepAliveMessage failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'InboundKeepAliveMessage'", e);
                    }
                    // deserialize ScheduledTasksInfoStartMessage
                    try {
                        // validate the JSON object to see if any exception is thrown
                        ScheduledTasksInfoStartMessage.validateJsonElement(jsonElement);
                        actualAdapter = adapterScheduledTasksInfoStartMessage;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'ScheduledTasksInfoStartMessage'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for ScheduledTasksInfoStartMessage failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'ScheduledTasksInfoStartMessage'", e);
                    }
                    // deserialize ScheduledTasksInfoStopMessage
                    try {
                        // validate the JSON object to see if any exception is thrown
                        ScheduledTasksInfoStopMessage.validateJsonElement(jsonElement);
                        actualAdapter = adapterScheduledTasksInfoStopMessage;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'ScheduledTasksInfoStopMessage'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for ScheduledTasksInfoStopMessage failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'ScheduledTasksInfoStopMessage'", e);
                    }
                    // deserialize SessionsStartMessage
                    try {
                        // validate the JSON object to see if any exception is thrown
                        SessionsStartMessage.validateJsonElement(jsonElement);
                        actualAdapter = adapterSessionsStartMessage;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'SessionsStartMessage'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for SessionsStartMessage failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'SessionsStartMessage'", e);
                    }
                    // deserialize SessionsStopMessage
                    try {
                        // validate the JSON object to see if any exception is thrown
                        SessionsStopMessage.validateJsonElement(jsonElement);
                        actualAdapter = adapterSessionsStopMessage;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'SessionsStopMessage'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for SessionsStopMessage failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'SessionsStopMessage'", e);
                    }

                    if (match == 1) {
                        InboundWebSocketMessage ret = new InboundWebSocketMessage();
                        ret.setActualInstance(actualAdapter.fromJsonTree(jsonElement));
                        return ret;
                    }

                    throw new IOException(String.format("Failed deserialization for InboundWebSocketMessage: %d classes match result, expected 1. Detailed failure message for oneOf schemas: %s. JSON: %s", match, errorMessages, jsonElement.toString()));
                }
            }.nullSafe();
        }
    }

    // store a list of schema names defined in oneOf
    public static final Map<String, Class<?>> schemas = new HashMap<String, Class<?>>();

    public InboundWebSocketMessage() {
        super("oneOf", Boolean.FALSE);
    }

    public InboundWebSocketMessage(Object o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    static {
        schemas.put("ActivityLogEntryStartMessage", ActivityLogEntryStartMessage.class);
        schemas.put("ActivityLogEntryStopMessage", ActivityLogEntryStopMessage.class);
        schemas.put("InboundKeepAliveMessage", InboundKeepAliveMessage.class);
        schemas.put("ScheduledTasksInfoStartMessage", ScheduledTasksInfoStartMessage.class);
        schemas.put("ScheduledTasksInfoStopMessage", ScheduledTasksInfoStopMessage.class);
        schemas.put("SessionsStartMessage", SessionsStartMessage.class);
        schemas.put("SessionsStopMessage", SessionsStopMessage.class);
    }

    @Override
    public Map<String, Class<?>> getSchemas() {
        return InboundWebSocketMessage.schemas;
    }

    /**
     * Set the instance that matches the oneOf child schema, check
     * the instance parameter is valid against the oneOf child schemas:
     * ActivityLogEntryStartMessage, ActivityLogEntryStopMessage, InboundKeepAliveMessage, ScheduledTasksInfoStartMessage, ScheduledTasksInfoStopMessage, SessionsStartMessage, SessionsStopMessage
     *
     * It could be an instance of the 'oneOf' schemas.
     */
    @Override
    public void setActualInstance(Object instance) {
        if (instance instanceof ActivityLogEntryStartMessage) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof ActivityLogEntryStopMessage) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof InboundKeepAliveMessage) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof ScheduledTasksInfoStartMessage) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof ScheduledTasksInfoStopMessage) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof SessionsStartMessage) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof SessionsStopMessage) {
            super.setActualInstance(instance);
            return;
        }

        throw new RuntimeException("Invalid instance type. Must be ActivityLogEntryStartMessage, ActivityLogEntryStopMessage, InboundKeepAliveMessage, ScheduledTasksInfoStartMessage, ScheduledTasksInfoStopMessage, SessionsStartMessage, SessionsStopMessage");
    }

    /**
     * Get the actual instance, which can be the following:
     * ActivityLogEntryStartMessage, ActivityLogEntryStopMessage, InboundKeepAliveMessage, ScheduledTasksInfoStartMessage, ScheduledTasksInfoStopMessage, SessionsStartMessage, SessionsStopMessage
     *
     * @return The actual instance (ActivityLogEntryStartMessage, ActivityLogEntryStopMessage, InboundKeepAliveMessage, ScheduledTasksInfoStartMessage, ScheduledTasksInfoStopMessage, SessionsStartMessage, SessionsStopMessage)
     */
    @SuppressWarnings("unchecked")
    @Override
    public Object getActualInstance() {
        return super.getActualInstance();
    }

    /**
     * Get the actual instance of `ActivityLogEntryStartMessage`. If the actual instance is not `ActivityLogEntryStartMessage`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `ActivityLogEntryStartMessage`
     * @throws ClassCastException if the instance is not `ActivityLogEntryStartMessage`
     */
    public ActivityLogEntryStartMessage getActivityLogEntryStartMessage() throws ClassCastException {
        return (ActivityLogEntryStartMessage)super.getActualInstance();
    }

    /**
     * Get the actual instance of `ActivityLogEntryStopMessage`. If the actual instance is not `ActivityLogEntryStopMessage`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `ActivityLogEntryStopMessage`
     * @throws ClassCastException if the instance is not `ActivityLogEntryStopMessage`
     */
    public ActivityLogEntryStopMessage getActivityLogEntryStopMessage() throws ClassCastException {
        return (ActivityLogEntryStopMessage)super.getActualInstance();
    }

    /**
     * Get the actual instance of `InboundKeepAliveMessage`. If the actual instance is not `InboundKeepAliveMessage`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `InboundKeepAliveMessage`
     * @throws ClassCastException if the instance is not `InboundKeepAliveMessage`
     */
    public InboundKeepAliveMessage getInboundKeepAliveMessage() throws ClassCastException {
        return (InboundKeepAliveMessage)super.getActualInstance();
    }

    /**
     * Get the actual instance of `ScheduledTasksInfoStartMessage`. If the actual instance is not `ScheduledTasksInfoStartMessage`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `ScheduledTasksInfoStartMessage`
     * @throws ClassCastException if the instance is not `ScheduledTasksInfoStartMessage`
     */
    public ScheduledTasksInfoStartMessage getScheduledTasksInfoStartMessage() throws ClassCastException {
        return (ScheduledTasksInfoStartMessage)super.getActualInstance();
    }

    /**
     * Get the actual instance of `ScheduledTasksInfoStopMessage`. If the actual instance is not `ScheduledTasksInfoStopMessage`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `ScheduledTasksInfoStopMessage`
     * @throws ClassCastException if the instance is not `ScheduledTasksInfoStopMessage`
     */
    public ScheduledTasksInfoStopMessage getScheduledTasksInfoStopMessage() throws ClassCastException {
        return (ScheduledTasksInfoStopMessage)super.getActualInstance();
    }

    /**
     * Get the actual instance of `SessionsStartMessage`. If the actual instance is not `SessionsStartMessage`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `SessionsStartMessage`
     * @throws ClassCastException if the instance is not `SessionsStartMessage`
     */
    public SessionsStartMessage getSessionsStartMessage() throws ClassCastException {
        return (SessionsStartMessage)super.getActualInstance();
    }

    /**
     * Get the actual instance of `SessionsStopMessage`. If the actual instance is not `SessionsStopMessage`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `SessionsStopMessage`
     * @throws ClassCastException if the instance is not `SessionsStopMessage`
     */
    public SessionsStopMessage getSessionsStopMessage() throws ClassCastException {
        return (SessionsStopMessage)super.getActualInstance();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to InboundWebSocketMessage
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        // validate oneOf schemas one by one
        int validCount = 0;
        ArrayList<String> errorMessages = new ArrayList<>();
        // validate the json string with ActivityLogEntryStartMessage
        try {
            ActivityLogEntryStartMessage.validateJsonElement(jsonElement);
            validCount++;
        } catch (Exception e) {
            errorMessages.add(String.format("Deserialization for ActivityLogEntryStartMessage failed with `%s`.", e.getMessage()));
            // continue to the next one
        }
        // validate the json string with ActivityLogEntryStopMessage
        try {
            ActivityLogEntryStopMessage.validateJsonElement(jsonElement);
            validCount++;
        } catch (Exception e) {
            errorMessages.add(String.format("Deserialization for ActivityLogEntryStopMessage failed with `%s`.", e.getMessage()));
            // continue to the next one
        }
        // validate the json string with InboundKeepAliveMessage
        try {
            InboundKeepAliveMessage.validateJsonElement(jsonElement);
            validCount++;
        } catch (Exception e) {
            errorMessages.add(String.format("Deserialization for InboundKeepAliveMessage failed with `%s`.", e.getMessage()));
            // continue to the next one
        }
        // validate the json string with ScheduledTasksInfoStartMessage
        try {
            ScheduledTasksInfoStartMessage.validateJsonElement(jsonElement);
            validCount++;
        } catch (Exception e) {
            errorMessages.add(String.format("Deserialization for ScheduledTasksInfoStartMessage failed with `%s`.", e.getMessage()));
            // continue to the next one
        }
        // validate the json string with ScheduledTasksInfoStopMessage
        try {
            ScheduledTasksInfoStopMessage.validateJsonElement(jsonElement);
            validCount++;
        } catch (Exception e) {
            errorMessages.add(String.format("Deserialization for ScheduledTasksInfoStopMessage failed with `%s`.", e.getMessage()));
            // continue to the next one
        }
        // validate the json string with SessionsStartMessage
        try {
            SessionsStartMessage.validateJsonElement(jsonElement);
            validCount++;
        } catch (Exception e) {
            errorMessages.add(String.format("Deserialization for SessionsStartMessage failed with `%s`.", e.getMessage()));
            // continue to the next one
        }
        // validate the json string with SessionsStopMessage
        try {
            SessionsStopMessage.validateJsonElement(jsonElement);
            validCount++;
        } catch (Exception e) {
            errorMessages.add(String.format("Deserialization for SessionsStopMessage failed with `%s`.", e.getMessage()));
            // continue to the next one
        }
        if (validCount != 1) {
            throw new IOException(String.format("The JSON string is invalid for InboundWebSocketMessage with oneOf schemas: ActivityLogEntryStartMessage, ActivityLogEntryStopMessage, InboundKeepAliveMessage, ScheduledTasksInfoStartMessage, ScheduledTasksInfoStopMessage, SessionsStartMessage, SessionsStopMessage. %d class(es) match the result, expected 1. Detailed failure message for oneOf schemas: %s. JSON: %s", validCount, errorMessages, jsonElement.toString()));
        }
    }

    /**
     * Create an instance of InboundWebSocketMessage given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of InboundWebSocketMessage
     * @throws IOException if the JSON string is invalid with respect to InboundWebSocketMessage
     */
    public static InboundWebSocketMessage fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, InboundWebSocketMessage.class);
    }

    /**
     * Convert an instance of InboundWebSocketMessage to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}

