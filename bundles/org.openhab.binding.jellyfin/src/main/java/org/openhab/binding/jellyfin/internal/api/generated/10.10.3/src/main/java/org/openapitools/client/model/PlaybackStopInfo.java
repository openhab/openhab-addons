/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.BaseItemDto;
import org.openapitools.client.model.QueueItem;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * Class PlaybackStopInfo.
 */
@JsonPropertyOrder({
  PlaybackStopInfo.JSON_PROPERTY_ITEM,
  PlaybackStopInfo.JSON_PROPERTY_ITEM_ID,
  PlaybackStopInfo.JSON_PROPERTY_SESSION_ID,
  PlaybackStopInfo.JSON_PROPERTY_MEDIA_SOURCE_ID,
  PlaybackStopInfo.JSON_PROPERTY_POSITION_TICKS,
  PlaybackStopInfo.JSON_PROPERTY_LIVE_STREAM_ID,
  PlaybackStopInfo.JSON_PROPERTY_PLAY_SESSION_ID,
  PlaybackStopInfo.JSON_PROPERTY_FAILED,
  PlaybackStopInfo.JSON_PROPERTY_NEXT_MEDIA_TYPE,
  PlaybackStopInfo.JSON_PROPERTY_PLAYLIST_ITEM_ID,
  PlaybackStopInfo.JSON_PROPERTY_NOW_PLAYING_QUEUE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-28T21:48:48.410245241Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class PlaybackStopInfo {
  public static final String JSON_PROPERTY_ITEM = "Item";
  private JsonNullable<BaseItemDto> item = JsonNullable.<BaseItemDto>undefined();

  public static final String JSON_PROPERTY_ITEM_ID = "ItemId";
  @javax.annotation.Nullable
  private UUID itemId;

  public static final String JSON_PROPERTY_SESSION_ID = "SessionId";
  private JsonNullable<String> sessionId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MEDIA_SOURCE_ID = "MediaSourceId";
  private JsonNullable<String> mediaSourceId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_POSITION_TICKS = "PositionTicks";
  private JsonNullable<Long> positionTicks = JsonNullable.<Long>undefined();

  public static final String JSON_PROPERTY_LIVE_STREAM_ID = "LiveStreamId";
  private JsonNullable<String> liveStreamId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PLAY_SESSION_ID = "PlaySessionId";
  private JsonNullable<String> playSessionId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FAILED = "Failed";
  @javax.annotation.Nullable
  private Boolean failed;

  public static final String JSON_PROPERTY_NEXT_MEDIA_TYPE = "NextMediaType";
  private JsonNullable<String> nextMediaType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PLAYLIST_ITEM_ID = "PlaylistItemId";
  private JsonNullable<String> playlistItemId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NOW_PLAYING_QUEUE = "NowPlayingQueue";
  private JsonNullable<List<QueueItem>> nowPlayingQueue = JsonNullable.<List<QueueItem>>undefined();

  public PlaybackStopInfo() { 
  }

  public PlaybackStopInfo item(@javax.annotation.Nullable BaseItemDto item) {
    this.item = JsonNullable.<BaseItemDto>of(item);
    return this;
  }

  /**
   * Gets or sets the item.
   * @return item
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public BaseItemDto getItem() {
        return item.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ITEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BaseItemDto> getItem_JsonNullable() {
    return item;
  }
  
  @JsonProperty(JSON_PROPERTY_ITEM)
  public void setItem_JsonNullable(JsonNullable<BaseItemDto> item) {
    this.item = item;
  }

  public void setItem(@javax.annotation.Nullable BaseItemDto item) {
    this.item = JsonNullable.<BaseItemDto>of(item);
  }


  public PlaybackStopInfo itemId(@javax.annotation.Nullable UUID itemId) {
    this.itemId = itemId;
    return this;
  }

  /**
   * Gets or sets the item identifier.
   * @return itemId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public UUID getItemId() {
    return itemId;
  }


  @JsonProperty(JSON_PROPERTY_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setItemId(@javax.annotation.Nullable UUID itemId) {
    this.itemId = itemId;
  }


  public PlaybackStopInfo sessionId(@javax.annotation.Nullable String sessionId) {
    this.sessionId = JsonNullable.<String>of(sessionId);
    return this;
  }

  /**
   * Gets or sets the session id.
   * @return sessionId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getSessionId() {
        return sessionId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSessionId_JsonNullable() {
    return sessionId;
  }
  
  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  public void setSessionId_JsonNullable(JsonNullable<String> sessionId) {
    this.sessionId = sessionId;
  }

  public void setSessionId(@javax.annotation.Nullable String sessionId) {
    this.sessionId = JsonNullable.<String>of(sessionId);
  }


  public PlaybackStopInfo mediaSourceId(@javax.annotation.Nullable String mediaSourceId) {
    this.mediaSourceId = JsonNullable.<String>of(mediaSourceId);
    return this;
  }

  /**
   * Gets or sets the media version identifier.
   * @return mediaSourceId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getMediaSourceId() {
        return mediaSourceId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MEDIA_SOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMediaSourceId_JsonNullable() {
    return mediaSourceId;
  }
  
  @JsonProperty(JSON_PROPERTY_MEDIA_SOURCE_ID)
  public void setMediaSourceId_JsonNullable(JsonNullable<String> mediaSourceId) {
    this.mediaSourceId = mediaSourceId;
  }

  public void setMediaSourceId(@javax.annotation.Nullable String mediaSourceId) {
    this.mediaSourceId = JsonNullable.<String>of(mediaSourceId);
  }


  public PlaybackStopInfo positionTicks(@javax.annotation.Nullable Long positionTicks) {
    this.positionTicks = JsonNullable.<Long>of(positionTicks);
    return this;
  }

  /**
   * Gets or sets the position ticks.
   * @return positionTicks
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Long getPositionTicks() {
        return positionTicks.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POSITION_TICKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getPositionTicks_JsonNullable() {
    return positionTicks;
  }
  
  @JsonProperty(JSON_PROPERTY_POSITION_TICKS)
  public void setPositionTicks_JsonNullable(JsonNullable<Long> positionTicks) {
    this.positionTicks = positionTicks;
  }

  public void setPositionTicks(@javax.annotation.Nullable Long positionTicks) {
    this.positionTicks = JsonNullable.<Long>of(positionTicks);
  }


  public PlaybackStopInfo liveStreamId(@javax.annotation.Nullable String liveStreamId) {
    this.liveStreamId = JsonNullable.<String>of(liveStreamId);
    return this;
  }

  /**
   * Gets or sets the live stream identifier.
   * @return liveStreamId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getLiveStreamId() {
        return liveStreamId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LIVE_STREAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLiveStreamId_JsonNullable() {
    return liveStreamId;
  }
  
  @JsonProperty(JSON_PROPERTY_LIVE_STREAM_ID)
  public void setLiveStreamId_JsonNullable(JsonNullable<String> liveStreamId) {
    this.liveStreamId = liveStreamId;
  }

  public void setLiveStreamId(@javax.annotation.Nullable String liveStreamId) {
    this.liveStreamId = JsonNullable.<String>of(liveStreamId);
  }


  public PlaybackStopInfo playSessionId(@javax.annotation.Nullable String playSessionId) {
    this.playSessionId = JsonNullable.<String>of(playSessionId);
    return this;
  }

  /**
   * Gets or sets the play session identifier.
   * @return playSessionId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getPlaySessionId() {
        return playSessionId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLAY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPlaySessionId_JsonNullable() {
    return playSessionId;
  }
  
  @JsonProperty(JSON_PROPERTY_PLAY_SESSION_ID)
  public void setPlaySessionId_JsonNullable(JsonNullable<String> playSessionId) {
    this.playSessionId = playSessionId;
  }

  public void setPlaySessionId(@javax.annotation.Nullable String playSessionId) {
    this.playSessionId = JsonNullable.<String>of(playSessionId);
  }


  public PlaybackStopInfo failed(@javax.annotation.Nullable Boolean failed) {
    this.failed = failed;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this MediaBrowser.Model.Session.PlaybackStopInfo is failed.
   * @return failed
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FAILED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getFailed() {
    return failed;
  }


  @JsonProperty(JSON_PROPERTY_FAILED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFailed(@javax.annotation.Nullable Boolean failed) {
    this.failed = failed;
  }


  public PlaybackStopInfo nextMediaType(@javax.annotation.Nullable String nextMediaType) {
    this.nextMediaType = JsonNullable.<String>of(nextMediaType);
    return this;
  }

  /**
   * Get nextMediaType
   * @return nextMediaType
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getNextMediaType() {
        return nextMediaType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NEXT_MEDIA_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNextMediaType_JsonNullable() {
    return nextMediaType;
  }
  
  @JsonProperty(JSON_PROPERTY_NEXT_MEDIA_TYPE)
  public void setNextMediaType_JsonNullable(JsonNullable<String> nextMediaType) {
    this.nextMediaType = nextMediaType;
  }

  public void setNextMediaType(@javax.annotation.Nullable String nextMediaType) {
    this.nextMediaType = JsonNullable.<String>of(nextMediaType);
  }


  public PlaybackStopInfo playlistItemId(@javax.annotation.Nullable String playlistItemId) {
    this.playlistItemId = JsonNullable.<String>of(playlistItemId);
    return this;
  }

  /**
   * Get playlistItemId
   * @return playlistItemId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getPlaylistItemId() {
        return playlistItemId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLAYLIST_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPlaylistItemId_JsonNullable() {
    return playlistItemId;
  }
  
  @JsonProperty(JSON_PROPERTY_PLAYLIST_ITEM_ID)
  public void setPlaylistItemId_JsonNullable(JsonNullable<String> playlistItemId) {
    this.playlistItemId = playlistItemId;
  }

  public void setPlaylistItemId(@javax.annotation.Nullable String playlistItemId) {
    this.playlistItemId = JsonNullable.<String>of(playlistItemId);
  }


  public PlaybackStopInfo nowPlayingQueue(@javax.annotation.Nullable List<QueueItem> nowPlayingQueue) {
    this.nowPlayingQueue = JsonNullable.<List<QueueItem>>of(nowPlayingQueue);
    return this;
  }

  public PlaybackStopInfo addNowPlayingQueueItem(QueueItem nowPlayingQueueItem) {
    if (this.nowPlayingQueue == null || !this.nowPlayingQueue.isPresent()) {
      this.nowPlayingQueue = JsonNullable.<List<QueueItem>>of(new ArrayList<>());
    }
    try {
      this.nowPlayingQueue.get().add(nowPlayingQueueItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get nowPlayingQueue
   * @return nowPlayingQueue
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<QueueItem> getNowPlayingQueue() {
        return nowPlayingQueue.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NOW_PLAYING_QUEUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<QueueItem>> getNowPlayingQueue_JsonNullable() {
    return nowPlayingQueue;
  }
  
  @JsonProperty(JSON_PROPERTY_NOW_PLAYING_QUEUE)
  public void setNowPlayingQueue_JsonNullable(JsonNullable<List<QueueItem>> nowPlayingQueue) {
    this.nowPlayingQueue = nowPlayingQueue;
  }

  public void setNowPlayingQueue(@javax.annotation.Nullable List<QueueItem> nowPlayingQueue) {
    this.nowPlayingQueue = JsonNullable.<List<QueueItem>>of(nowPlayingQueue);
  }


  /**
   * Return true if this PlaybackStopInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlaybackStopInfo playbackStopInfo = (PlaybackStopInfo) o;
    return equalsNullable(this.item, playbackStopInfo.item) &&
        Objects.equals(this.itemId, playbackStopInfo.itemId) &&
        equalsNullable(this.sessionId, playbackStopInfo.sessionId) &&
        equalsNullable(this.mediaSourceId, playbackStopInfo.mediaSourceId) &&
        equalsNullable(this.positionTicks, playbackStopInfo.positionTicks) &&
        equalsNullable(this.liveStreamId, playbackStopInfo.liveStreamId) &&
        equalsNullable(this.playSessionId, playbackStopInfo.playSessionId) &&
        Objects.equals(this.failed, playbackStopInfo.failed) &&
        equalsNullable(this.nextMediaType, playbackStopInfo.nextMediaType) &&
        equalsNullable(this.playlistItemId, playbackStopInfo.playlistItemId) &&
        equalsNullable(this.nowPlayingQueue, playbackStopInfo.nowPlayingQueue);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(item), itemId, hashCodeNullable(sessionId), hashCodeNullable(mediaSourceId), hashCodeNullable(positionTicks), hashCodeNullable(liveStreamId), hashCodeNullable(playSessionId), failed, hashCodeNullable(nextMediaType), hashCodeNullable(playlistItemId), hashCodeNullable(nowPlayingQueue));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlaybackStopInfo {\n");
    sb.append("    item: ").append(toIndentedString(item)).append("\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    mediaSourceId: ").append(toIndentedString(mediaSourceId)).append("\n");
    sb.append("    positionTicks: ").append(toIndentedString(positionTicks)).append("\n");
    sb.append("    liveStreamId: ").append(toIndentedString(liveStreamId)).append("\n");
    sb.append("    playSessionId: ").append(toIndentedString(playSessionId)).append("\n");
    sb.append("    failed: ").append(toIndentedString(failed)).append("\n");
    sb.append("    nextMediaType: ").append(toIndentedString(nextMediaType)).append("\n");
    sb.append("    playlistItemId: ").append(toIndentedString(playlistItemId)).append("\n");
    sb.append("    nowPlayingQueue: ").append(toIndentedString(nowPlayingQueue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `Item` to the URL query string
    if (getItem() != null) {
      joiner.add(getItem().toUrlQueryString(prefix + "Item" + suffix));
    }

    // add `ItemId` to the URL query string
    if (getItemId() != null) {
      joiner.add(String.format("%sItemId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getItemId()))));
    }

    // add `SessionId` to the URL query string
    if (getSessionId() != null) {
      joiner.add(String.format("%sSessionId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSessionId()))));
    }

    // add `MediaSourceId` to the URL query string
    if (getMediaSourceId() != null) {
      joiner.add(String.format("%sMediaSourceId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMediaSourceId()))));
    }

    // add `PositionTicks` to the URL query string
    if (getPositionTicks() != null) {
      joiner.add(String.format("%sPositionTicks%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPositionTicks()))));
    }

    // add `LiveStreamId` to the URL query string
    if (getLiveStreamId() != null) {
      joiner.add(String.format("%sLiveStreamId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLiveStreamId()))));
    }

    // add `PlaySessionId` to the URL query string
    if (getPlaySessionId() != null) {
      joiner.add(String.format("%sPlaySessionId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPlaySessionId()))));
    }

    // add `Failed` to the URL query string
    if (getFailed() != null) {
      joiner.add(String.format("%sFailed%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFailed()))));
    }

    // add `NextMediaType` to the URL query string
    if (getNextMediaType() != null) {
      joiner.add(String.format("%sNextMediaType%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getNextMediaType()))));
    }

    // add `PlaylistItemId` to the URL query string
    if (getPlaylistItemId() != null) {
      joiner.add(String.format("%sPlaylistItemId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPlaylistItemId()))));
    }

    // add `NowPlayingQueue` to the URL query string
    if (getNowPlayingQueue() != null) {
      for (int i = 0; i < getNowPlayingQueue().size(); i++) {
        if (getNowPlayingQueue().get(i) != null) {
          joiner.add(getNowPlayingQueue().get(i).toUrlQueryString(String.format("%sNowPlayingQueue%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }
}

