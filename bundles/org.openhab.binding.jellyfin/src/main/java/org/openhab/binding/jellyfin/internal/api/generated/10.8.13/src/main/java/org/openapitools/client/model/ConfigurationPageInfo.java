/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * The configuration page info.
 */
@JsonPropertyOrder({
  ConfigurationPageInfo.JSON_PROPERTY_NAME,
  ConfigurationPageInfo.JSON_PROPERTY_ENABLE_IN_MAIN_MENU,
  ConfigurationPageInfo.JSON_PROPERTY_MENU_SECTION,
  ConfigurationPageInfo.JSON_PROPERTY_MENU_ICON,
  ConfigurationPageInfo.JSON_PROPERTY_DISPLAY_NAME,
  ConfigurationPageInfo.JSON_PROPERTY_PLUGIN_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-28T21:48:40.061690683Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class ConfigurationPageInfo {
  public static final String JSON_PROPERTY_NAME = "Name";
  @javax.annotation.Nullable
  private String name;

  public static final String JSON_PROPERTY_ENABLE_IN_MAIN_MENU = "EnableInMainMenu";
  @javax.annotation.Nullable
  private Boolean enableInMainMenu;

  public static final String JSON_PROPERTY_MENU_SECTION = "MenuSection";
  private JsonNullable<String> menuSection = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MENU_ICON = "MenuIcon";
  private JsonNullable<String> menuIcon = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DISPLAY_NAME = "DisplayName";
  private JsonNullable<String> displayName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PLUGIN_ID = "PluginId";
  private JsonNullable<UUID> pluginId = JsonNullable.<UUID>undefined();

  public ConfigurationPageInfo() { 
  }

  public ConfigurationPageInfo name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Gets or sets the name.
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public ConfigurationPageInfo enableInMainMenu(@javax.annotation.Nullable Boolean enableInMainMenu) {
    this.enableInMainMenu = enableInMainMenu;
    return this;
  }

  /**
   * Gets or sets a value indicating whether the configurations page is enabled in the main menu.
   * @return enableInMainMenu
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_IN_MAIN_MENU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableInMainMenu() {
    return enableInMainMenu;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_IN_MAIN_MENU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableInMainMenu(@javax.annotation.Nullable Boolean enableInMainMenu) {
    this.enableInMainMenu = enableInMainMenu;
  }


  public ConfigurationPageInfo menuSection(@javax.annotation.Nullable String menuSection) {
    this.menuSection = JsonNullable.<String>of(menuSection);
    return this;
  }

  /**
   * Gets or sets the menu section.
   * @return menuSection
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getMenuSection() {
        return menuSection.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MENU_SECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMenuSection_JsonNullable() {
    return menuSection;
  }
  
  @JsonProperty(JSON_PROPERTY_MENU_SECTION)
  public void setMenuSection_JsonNullable(JsonNullable<String> menuSection) {
    this.menuSection = menuSection;
  }

  public void setMenuSection(@javax.annotation.Nullable String menuSection) {
    this.menuSection = JsonNullable.<String>of(menuSection);
  }


  public ConfigurationPageInfo menuIcon(@javax.annotation.Nullable String menuIcon) {
    this.menuIcon = JsonNullable.<String>of(menuIcon);
    return this;
  }

  /**
   * Gets or sets the menu icon.
   * @return menuIcon
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getMenuIcon() {
        return menuIcon.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MENU_ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMenuIcon_JsonNullable() {
    return menuIcon;
  }
  
  @JsonProperty(JSON_PROPERTY_MENU_ICON)
  public void setMenuIcon_JsonNullable(JsonNullable<String> menuIcon) {
    this.menuIcon = menuIcon;
  }

  public void setMenuIcon(@javax.annotation.Nullable String menuIcon) {
    this.menuIcon = JsonNullable.<String>of(menuIcon);
  }


  public ConfigurationPageInfo displayName(@javax.annotation.Nullable String displayName) {
    this.displayName = JsonNullable.<String>of(displayName);
    return this;
  }

  /**
   * Gets or sets the display name.
   * @return displayName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getDisplayName() {
        return displayName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDisplayName_JsonNullable() {
    return displayName;
  }
  
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  public void setDisplayName_JsonNullable(JsonNullable<String> displayName) {
    this.displayName = displayName;
  }

  public void setDisplayName(@javax.annotation.Nullable String displayName) {
    this.displayName = JsonNullable.<String>of(displayName);
  }


  public ConfigurationPageInfo pluginId(@javax.annotation.Nullable UUID pluginId) {
    this.pluginId = JsonNullable.<UUID>of(pluginId);
    return this;
  }

  /**
   * Gets or sets the plugin id.
   * @return pluginId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getPluginId() {
        return pluginId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLUGIN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getPluginId_JsonNullable() {
    return pluginId;
  }
  
  @JsonProperty(JSON_PROPERTY_PLUGIN_ID)
  public void setPluginId_JsonNullable(JsonNullable<UUID> pluginId) {
    this.pluginId = pluginId;
  }

  public void setPluginId(@javax.annotation.Nullable UUID pluginId) {
    this.pluginId = JsonNullable.<UUID>of(pluginId);
  }


  /**
   * Return true if this ConfigurationPageInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigurationPageInfo configurationPageInfo = (ConfigurationPageInfo) o;
    return Objects.equals(this.name, configurationPageInfo.name) &&
        Objects.equals(this.enableInMainMenu, configurationPageInfo.enableInMainMenu) &&
        equalsNullable(this.menuSection, configurationPageInfo.menuSection) &&
        equalsNullable(this.menuIcon, configurationPageInfo.menuIcon) &&
        equalsNullable(this.displayName, configurationPageInfo.displayName) &&
        equalsNullable(this.pluginId, configurationPageInfo.pluginId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, enableInMainMenu, hashCodeNullable(menuSection), hashCodeNullable(menuIcon), hashCodeNullable(displayName), hashCodeNullable(pluginId));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigurationPageInfo {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    enableInMainMenu: ").append(toIndentedString(enableInMainMenu)).append("\n");
    sb.append("    menuSection: ").append(toIndentedString(menuSection)).append("\n");
    sb.append("    menuIcon: ").append(toIndentedString(menuIcon)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    pluginId: ").append(toIndentedString(pluginId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `Name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getName()))));
    }

    // add `EnableInMainMenu` to the URL query string
    if (getEnableInMainMenu() != null) {
      joiner.add(String.format("%sEnableInMainMenu%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableInMainMenu()))));
    }

    // add `MenuSection` to the URL query string
    if (getMenuSection() != null) {
      joiner.add(String.format("%sMenuSection%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMenuSection()))));
    }

    // add `MenuIcon` to the URL query string
    if (getMenuIcon() != null) {
      joiner.add(String.format("%sMenuIcon%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMenuIcon()))));
    }

    // add `DisplayName` to the URL query string
    if (getDisplayName() != null) {
      joiner.add(String.format("%sDisplayName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDisplayName()))));
    }

    // add `PluginId` to the URL query string
    if (getPluginId() != null) {
      joiner.add(String.format("%sPluginId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPluginId()))));
    }

    return joiner.toString();
  }
}

