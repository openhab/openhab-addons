/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.LiveTvServiceInfo;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * LiveTvInfo
 */
@JsonPropertyOrder({
  LiveTvInfo.JSON_PROPERTY_SERVICES,
  LiveTvInfo.JSON_PROPERTY_IS_ENABLED,
  LiveTvInfo.JSON_PROPERTY_ENABLED_USERS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class LiveTvInfo {
  public static final String JSON_PROPERTY_SERVICES = "Services";
  @javax.annotation.Nullable
  private List<LiveTvServiceInfo> services = new ArrayList<>();

  public static final String JSON_PROPERTY_IS_ENABLED = "IsEnabled";
  @javax.annotation.Nullable
  private Boolean isEnabled;

  public static final String JSON_PROPERTY_ENABLED_USERS = "EnabledUsers";
  @javax.annotation.Nullable
  private List<String> enabledUsers = new ArrayList<>();

  public LiveTvInfo() { 
  }

  public LiveTvInfo services(@javax.annotation.Nullable List<LiveTvServiceInfo> services) {
    this.services = services;
    return this;
  }

  public LiveTvInfo addServicesItem(LiveTvServiceInfo servicesItem) {
    if (this.services == null) {
      this.services = new ArrayList<>();
    }
    this.services.add(servicesItem);
    return this;
  }

  /**
   * Gets or sets the services.
   * @return services
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<LiveTvServiceInfo> getServices() {
    return services;
  }


  @JsonProperty(JSON_PROPERTY_SERVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServices(@javax.annotation.Nullable List<LiveTvServiceInfo> services) {
    this.services = services;
  }


  public LiveTvInfo isEnabled(@javax.annotation.Nullable Boolean isEnabled) {
    this.isEnabled = isEnabled;
    return this;
  }

  /**
   * Gets or sets a value indicating whether this instance is enabled.
   * @return isEnabled
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getIsEnabled() {
    return isEnabled;
  }


  @JsonProperty(JSON_PROPERTY_IS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsEnabled(@javax.annotation.Nullable Boolean isEnabled) {
    this.isEnabled = isEnabled;
  }


  public LiveTvInfo enabledUsers(@javax.annotation.Nullable List<String> enabledUsers) {
    this.enabledUsers = enabledUsers;
    return this;
  }

  public LiveTvInfo addEnabledUsersItem(String enabledUsersItem) {
    if (this.enabledUsers == null) {
      this.enabledUsers = new ArrayList<>();
    }
    this.enabledUsers.add(enabledUsersItem);
    return this;
  }

  /**
   * Gets or sets the enabled users.
   * @return enabledUsers
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLED_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getEnabledUsers() {
    return enabledUsers;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabledUsers(@javax.annotation.Nullable List<String> enabledUsers) {
    this.enabledUsers = enabledUsers;
  }


  /**
   * Return true if this LiveTvInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LiveTvInfo liveTvInfo = (LiveTvInfo) o;
    return Objects.equals(this.services, liveTvInfo.services) &&
        Objects.equals(this.isEnabled, liveTvInfo.isEnabled) &&
        Objects.equals(this.enabledUsers, liveTvInfo.enabledUsers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(services, isEnabled, enabledUsers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LiveTvInfo {\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("    isEnabled: ").append(toIndentedString(isEnabled)).append("\n");
    sb.append("    enabledUsers: ").append(toIndentedString(enabledUsers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `Services` to the URL query string
    if (getServices() != null) {
      for (int i = 0; i < getServices().size(); i++) {
        if (getServices().get(i) != null) {
          joiner.add(getServices().get(i).toUrlQueryString(String.format("%sServices%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `IsEnabled` to the URL query string
    if (getIsEnabled() != null) {
      joiner.add(String.format("%sIsEnabled%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsEnabled()))));
    }

    // add `EnabledUsers` to the URL query string
    if (getEnabledUsers() != null) {
      for (int i = 0; i < getEnabledUsers().size(); i++) {
        joiner.add(String.format("%sEnabledUsers%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getEnabledUsers().get(i)))));
      }
    }

    return joiner.toString();
  }
}

