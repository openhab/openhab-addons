/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.client.model.BookInfo;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * BookInfoRemoteSearchQuery
 */
@JsonPropertyOrder({
  BookInfoRemoteSearchQuery.JSON_PROPERTY_SEARCH_INFO,
  BookInfoRemoteSearchQuery.JSON_PROPERTY_ITEM_ID,
  BookInfoRemoteSearchQuery.JSON_PROPERTY_SEARCH_PROVIDER_NAME,
  BookInfoRemoteSearchQuery.JSON_PROPERTY_INCLUDE_DISABLED_PROVIDERS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-28T21:48:48.410245241Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class BookInfoRemoteSearchQuery {
  public static final String JSON_PROPERTY_SEARCH_INFO = "SearchInfo";
  private JsonNullable<BookInfo> searchInfo = JsonNullable.<BookInfo>undefined();

  public static final String JSON_PROPERTY_ITEM_ID = "ItemId";
  @javax.annotation.Nullable
  private UUID itemId;

  public static final String JSON_PROPERTY_SEARCH_PROVIDER_NAME = "SearchProviderName";
  private JsonNullable<String> searchProviderName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INCLUDE_DISABLED_PROVIDERS = "IncludeDisabledProviders";
  @javax.annotation.Nullable
  private Boolean includeDisabledProviders;

  public BookInfoRemoteSearchQuery() { 
  }

  public BookInfoRemoteSearchQuery searchInfo(@javax.annotation.Nullable BookInfo searchInfo) {
    this.searchInfo = JsonNullable.<BookInfo>of(searchInfo);
    return this;
  }

  /**
   * Get searchInfo
   * @return searchInfo
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public BookInfo getSearchInfo() {
        return searchInfo.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SEARCH_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BookInfo> getSearchInfo_JsonNullable() {
    return searchInfo;
  }
  
  @JsonProperty(JSON_PROPERTY_SEARCH_INFO)
  public void setSearchInfo_JsonNullable(JsonNullable<BookInfo> searchInfo) {
    this.searchInfo = searchInfo;
  }

  public void setSearchInfo(@javax.annotation.Nullable BookInfo searchInfo) {
    this.searchInfo = JsonNullable.<BookInfo>of(searchInfo);
  }


  public BookInfoRemoteSearchQuery itemId(@javax.annotation.Nullable UUID itemId) {
    this.itemId = itemId;
    return this;
  }

  /**
   * Get itemId
   * @return itemId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public UUID getItemId() {
    return itemId;
  }


  @JsonProperty(JSON_PROPERTY_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setItemId(@javax.annotation.Nullable UUID itemId) {
    this.itemId = itemId;
  }


  public BookInfoRemoteSearchQuery searchProviderName(@javax.annotation.Nullable String searchProviderName) {
    this.searchProviderName = JsonNullable.<String>of(searchProviderName);
    return this;
  }

  /**
   * Gets or sets the provider name to search within if set.
   * @return searchProviderName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getSearchProviderName() {
        return searchProviderName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SEARCH_PROVIDER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSearchProviderName_JsonNullable() {
    return searchProviderName;
  }
  
  @JsonProperty(JSON_PROPERTY_SEARCH_PROVIDER_NAME)
  public void setSearchProviderName_JsonNullable(JsonNullable<String> searchProviderName) {
    this.searchProviderName = searchProviderName;
  }

  public void setSearchProviderName(@javax.annotation.Nullable String searchProviderName) {
    this.searchProviderName = JsonNullable.<String>of(searchProviderName);
  }


  public BookInfoRemoteSearchQuery includeDisabledProviders(@javax.annotation.Nullable Boolean includeDisabledProviders) {
    this.includeDisabledProviders = includeDisabledProviders;
    return this;
  }

  /**
   * Gets or sets a value indicating whether disabled providers should be included.
   * @return includeDisabledProviders
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCLUDE_DISABLED_PROVIDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getIncludeDisabledProviders() {
    return includeDisabledProviders;
  }


  @JsonProperty(JSON_PROPERTY_INCLUDE_DISABLED_PROVIDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncludeDisabledProviders(@javax.annotation.Nullable Boolean includeDisabledProviders) {
    this.includeDisabledProviders = includeDisabledProviders;
  }


  /**
   * Return true if this BookInfoRemoteSearchQuery object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BookInfoRemoteSearchQuery bookInfoRemoteSearchQuery = (BookInfoRemoteSearchQuery) o;
    return equalsNullable(this.searchInfo, bookInfoRemoteSearchQuery.searchInfo) &&
        Objects.equals(this.itemId, bookInfoRemoteSearchQuery.itemId) &&
        equalsNullable(this.searchProviderName, bookInfoRemoteSearchQuery.searchProviderName) &&
        Objects.equals(this.includeDisabledProviders, bookInfoRemoteSearchQuery.includeDisabledProviders);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(searchInfo), itemId, hashCodeNullable(searchProviderName), includeDisabledProviders);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BookInfoRemoteSearchQuery {\n");
    sb.append("    searchInfo: ").append(toIndentedString(searchInfo)).append("\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    searchProviderName: ").append(toIndentedString(searchProviderName)).append("\n");
    sb.append("    includeDisabledProviders: ").append(toIndentedString(includeDisabledProviders)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `SearchInfo` to the URL query string
    if (getSearchInfo() != null) {
      joiner.add(getSearchInfo().toUrlQueryString(prefix + "SearchInfo" + suffix));
    }

    // add `ItemId` to the URL query string
    if (getItemId() != null) {
      joiner.add(String.format("%sItemId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getItemId()))));
    }

    // add `SearchProviderName` to the URL query string
    if (getSearchProviderName() != null) {
      joiner.add(String.format("%sSearchProviderName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSearchProviderName()))));
    }

    // add `IncludeDisabledProviders` to the URL query string
    if (getIncludeDisabledProviders() != null) {
      joiner.add(String.format("%sIncludeDisabledProviders%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIncludeDisabledProviders()))));
    }

    return joiner.toString();
  }
}

