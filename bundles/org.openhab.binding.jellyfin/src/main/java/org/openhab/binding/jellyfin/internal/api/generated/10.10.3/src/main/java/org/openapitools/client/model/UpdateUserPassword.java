/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * The update user password request body.
 */
@JsonPropertyOrder({
  UpdateUserPassword.JSON_PROPERTY_CURRENT_PASSWORD,
  UpdateUserPassword.JSON_PROPERTY_CURRENT_PW,
  UpdateUserPassword.JSON_PROPERTY_NEW_PW,
  UpdateUserPassword.JSON_PROPERTY_RESET_PASSWORD
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class UpdateUserPassword {
  public static final String JSON_PROPERTY_CURRENT_PASSWORD = "CurrentPassword";
  private JsonNullable<String> currentPassword = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CURRENT_PW = "CurrentPw";
  private JsonNullable<String> currentPw = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NEW_PW = "NewPw";
  private JsonNullable<String> newPw = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RESET_PASSWORD = "ResetPassword";
  @javax.annotation.Nullable
  private Boolean resetPassword;

  public UpdateUserPassword() { 
  }

  public UpdateUserPassword currentPassword(@javax.annotation.Nullable String currentPassword) {
    this.currentPassword = JsonNullable.<String>of(currentPassword);
    return this;
  }

  /**
   * Gets or sets the current sha1-hashed password.
   * @return currentPassword
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getCurrentPassword() {
        return currentPassword.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENT_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCurrentPassword_JsonNullable() {
    return currentPassword;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENT_PASSWORD)
  public void setCurrentPassword_JsonNullable(JsonNullable<String> currentPassword) {
    this.currentPassword = currentPassword;
  }

  public void setCurrentPassword(@javax.annotation.Nullable String currentPassword) {
    this.currentPassword = JsonNullable.<String>of(currentPassword);
  }


  public UpdateUserPassword currentPw(@javax.annotation.Nullable String currentPw) {
    this.currentPw = JsonNullable.<String>of(currentPw);
    return this;
  }

  /**
   * Gets or sets the current plain text password.
   * @return currentPw
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getCurrentPw() {
        return currentPw.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENT_PW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCurrentPw_JsonNullable() {
    return currentPw;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENT_PW)
  public void setCurrentPw_JsonNullable(JsonNullable<String> currentPw) {
    this.currentPw = currentPw;
  }

  public void setCurrentPw(@javax.annotation.Nullable String currentPw) {
    this.currentPw = JsonNullable.<String>of(currentPw);
  }


  public UpdateUserPassword newPw(@javax.annotation.Nullable String newPw) {
    this.newPw = JsonNullable.<String>of(newPw);
    return this;
  }

  /**
   * Gets or sets the new plain text password.
   * @return newPw
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getNewPw() {
        return newPw.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NEW_PW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNewPw_JsonNullable() {
    return newPw;
  }
  
  @JsonProperty(JSON_PROPERTY_NEW_PW)
  public void setNewPw_JsonNullable(JsonNullable<String> newPw) {
    this.newPw = newPw;
  }

  public void setNewPw(@javax.annotation.Nullable String newPw) {
    this.newPw = JsonNullable.<String>of(newPw);
  }


  public UpdateUserPassword resetPassword(@javax.annotation.Nullable Boolean resetPassword) {
    this.resetPassword = resetPassword;
    return this;
  }

  /**
   * Gets or sets a value indicating whether to reset the password.
   * @return resetPassword
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESET_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getResetPassword() {
    return resetPassword;
  }


  @JsonProperty(JSON_PROPERTY_RESET_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResetPassword(@javax.annotation.Nullable Boolean resetPassword) {
    this.resetPassword = resetPassword;
  }


  /**
   * Return true if this UpdateUserPassword object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateUserPassword updateUserPassword = (UpdateUserPassword) o;
    return equalsNullable(this.currentPassword, updateUserPassword.currentPassword) &&
        equalsNullable(this.currentPw, updateUserPassword.currentPw) &&
        equalsNullable(this.newPw, updateUserPassword.newPw) &&
        Objects.equals(this.resetPassword, updateUserPassword.resetPassword);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(currentPassword), hashCodeNullable(currentPw), hashCodeNullable(newPw), resetPassword);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateUserPassword {\n");
    sb.append("    currentPassword: ").append(toIndentedString(currentPassword)).append("\n");
    sb.append("    currentPw: ").append(toIndentedString(currentPw)).append("\n");
    sb.append("    newPw: ").append(toIndentedString(newPw)).append("\n");
    sb.append("    resetPassword: ").append(toIndentedString(resetPassword)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `CurrentPassword` to the URL query string
    if (getCurrentPassword() != null) {
      joiner.add(String.format("%sCurrentPassword%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCurrentPassword()))));
    }

    // add `CurrentPw` to the URL query string
    if (getCurrentPw() != null) {
      joiner.add(String.format("%sCurrentPw%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCurrentPw()))));
    }

    // add `NewPw` to the URL query string
    if (getNewPw() != null) {
      joiner.add(String.format("%sNewPw%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getNewPw()))));
    }

    // add `ResetPassword` to the URL query string
    if (getResetPassword() != null) {
      joiner.add(String.format("%sResetPassword%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getResetPassword()))));
    }

    return joiner.toString();
  }
}

