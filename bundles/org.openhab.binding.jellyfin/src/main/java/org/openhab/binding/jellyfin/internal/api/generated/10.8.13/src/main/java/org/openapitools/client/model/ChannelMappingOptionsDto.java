/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.NameIdPair;
import org.openapitools.client.model.NameValuePair;
import org.openapitools.client.model.TunerChannelMapping;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * Channel mapping options dto.
 */
@JsonPropertyOrder({
  ChannelMappingOptionsDto.JSON_PROPERTY_TUNER_CHANNELS,
  ChannelMappingOptionsDto.JSON_PROPERTY_PROVIDER_CHANNELS,
  ChannelMappingOptionsDto.JSON_PROPERTY_MAPPINGS,
  ChannelMappingOptionsDto.JSON_PROPERTY_PROVIDER_NAME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-28T21:48:40.061690683Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class ChannelMappingOptionsDto {
  public static final String JSON_PROPERTY_TUNER_CHANNELS = "TunerChannels";
  @javax.annotation.Nullable
  private List<TunerChannelMapping> tunerChannels = new ArrayList<>();

  public static final String JSON_PROPERTY_PROVIDER_CHANNELS = "ProviderChannels";
  @javax.annotation.Nullable
  private List<NameIdPair> providerChannels = new ArrayList<>();

  public static final String JSON_PROPERTY_MAPPINGS = "Mappings";
  @javax.annotation.Nullable
  private List<NameValuePair> mappings = new ArrayList<>();

  public static final String JSON_PROPERTY_PROVIDER_NAME = "ProviderName";
  private JsonNullable<String> providerName = JsonNullable.<String>undefined();

  public ChannelMappingOptionsDto() { 
  }

  public ChannelMappingOptionsDto tunerChannels(@javax.annotation.Nullable List<TunerChannelMapping> tunerChannels) {
    this.tunerChannels = tunerChannels;
    return this;
  }

  public ChannelMappingOptionsDto addTunerChannelsItem(TunerChannelMapping tunerChannelsItem) {
    if (this.tunerChannels == null) {
      this.tunerChannels = new ArrayList<>();
    }
    this.tunerChannels.add(tunerChannelsItem);
    return this;
  }

  /**
   * Gets or sets list of tuner channels.
   * @return tunerChannels
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TUNER_CHANNELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<TunerChannelMapping> getTunerChannels() {
    return tunerChannels;
  }


  @JsonProperty(JSON_PROPERTY_TUNER_CHANNELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTunerChannels(@javax.annotation.Nullable List<TunerChannelMapping> tunerChannels) {
    this.tunerChannels = tunerChannels;
  }


  public ChannelMappingOptionsDto providerChannels(@javax.annotation.Nullable List<NameIdPair> providerChannels) {
    this.providerChannels = providerChannels;
    return this;
  }

  public ChannelMappingOptionsDto addProviderChannelsItem(NameIdPair providerChannelsItem) {
    if (this.providerChannels == null) {
      this.providerChannels = new ArrayList<>();
    }
    this.providerChannels.add(providerChannelsItem);
    return this;
  }

  /**
   * Gets or sets list of provider channels.
   * @return providerChannels
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROVIDER_CHANNELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<NameIdPair> getProviderChannels() {
    return providerChannels;
  }


  @JsonProperty(JSON_PROPERTY_PROVIDER_CHANNELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProviderChannels(@javax.annotation.Nullable List<NameIdPair> providerChannels) {
    this.providerChannels = providerChannels;
  }


  public ChannelMappingOptionsDto mappings(@javax.annotation.Nullable List<NameValuePair> mappings) {
    this.mappings = mappings;
    return this;
  }

  public ChannelMappingOptionsDto addMappingsItem(NameValuePair mappingsItem) {
    if (this.mappings == null) {
      this.mappings = new ArrayList<>();
    }
    this.mappings.add(mappingsItem);
    return this;
  }

  /**
   * Gets or sets list of mappings.
   * @return mappings
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAPPINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<NameValuePair> getMappings() {
    return mappings;
  }


  @JsonProperty(JSON_PROPERTY_MAPPINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMappings(@javax.annotation.Nullable List<NameValuePair> mappings) {
    this.mappings = mappings;
  }


  public ChannelMappingOptionsDto providerName(@javax.annotation.Nullable String providerName) {
    this.providerName = JsonNullable.<String>of(providerName);
    return this;
  }

  /**
   * Gets or sets provider name.
   * @return providerName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getProviderName() {
        return providerName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROVIDER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getProviderName_JsonNullable() {
    return providerName;
  }
  
  @JsonProperty(JSON_PROPERTY_PROVIDER_NAME)
  public void setProviderName_JsonNullable(JsonNullable<String> providerName) {
    this.providerName = providerName;
  }

  public void setProviderName(@javax.annotation.Nullable String providerName) {
    this.providerName = JsonNullable.<String>of(providerName);
  }


  /**
   * Return true if this ChannelMappingOptionsDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChannelMappingOptionsDto channelMappingOptionsDto = (ChannelMappingOptionsDto) o;
    return Objects.equals(this.tunerChannels, channelMappingOptionsDto.tunerChannels) &&
        Objects.equals(this.providerChannels, channelMappingOptionsDto.providerChannels) &&
        Objects.equals(this.mappings, channelMappingOptionsDto.mappings) &&
        equalsNullable(this.providerName, channelMappingOptionsDto.providerName);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(tunerChannels, providerChannels, mappings, hashCodeNullable(providerName));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChannelMappingOptionsDto {\n");
    sb.append("    tunerChannels: ").append(toIndentedString(tunerChannels)).append("\n");
    sb.append("    providerChannels: ").append(toIndentedString(providerChannels)).append("\n");
    sb.append("    mappings: ").append(toIndentedString(mappings)).append("\n");
    sb.append("    providerName: ").append(toIndentedString(providerName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `TunerChannels` to the URL query string
    if (getTunerChannels() != null) {
      for (int i = 0; i < getTunerChannels().size(); i++) {
        if (getTunerChannels().get(i) != null) {
          joiner.add(getTunerChannels().get(i).toUrlQueryString(String.format("%sTunerChannels%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `ProviderChannels` to the URL query string
    if (getProviderChannels() != null) {
      for (int i = 0; i < getProviderChannels().size(); i++) {
        if (getProviderChannels().get(i) != null) {
          joiner.add(getProviderChannels().get(i).toUrlQueryString(String.format("%sProviderChannels%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `Mappings` to the URL query string
    if (getMappings() != null) {
      for (int i = 0; i < getMappings().size(); i++) {
        if (getMappings().get(i) != null) {
          joiner.add(getMappings().get(i).toUrlQueryString(String.format("%sMappings%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `ProviderName` to the URL query string
    if (getProviderName() != null) {
      joiner.add(String.format("%sProviderName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getProviderName()))));
    }

    return joiner.toString();
  }
}

