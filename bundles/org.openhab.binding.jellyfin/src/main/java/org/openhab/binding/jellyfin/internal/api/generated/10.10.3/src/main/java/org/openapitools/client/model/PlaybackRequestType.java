/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Enum PlaybackRequestType.
 */
public enum PlaybackRequestType {
  
  PLAY("Play"),
  
  SET_PLAYLIST_ITEM("SetPlaylistItem"),
  
  REMOVE_FROM_PLAYLIST("RemoveFromPlaylist"),
  
  MOVE_PLAYLIST_ITEM("MovePlaylistItem"),
  
  QUEUE("Queue"),
  
  UNPAUSE("Unpause"),
  
  PAUSE("Pause"),
  
  STOP("Stop"),
  
  SEEK("Seek"),
  
  BUFFER("Buffer"),
  
  READY("Ready"),
  
  NEXT_ITEM("NextItem"),
  
  PREVIOUS_ITEM("PreviousItem"),
  
  SET_REPEAT_MODE("SetRepeatMode"),
  
  SET_SHUFFLE_MODE("SetShuffleMode"),
  
  PING("Ping"),
  
  IGNORE_WAIT("IgnoreWait");

  private String value;

  PlaybackRequestType(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static PlaybackRequestType fromValue(String value) {
    for (PlaybackRequestType b : PlaybackRequestType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    if (prefix == null) {
      prefix = "";
    }

    return String.format("%s=%s", prefix, this.toString());
  }

}

