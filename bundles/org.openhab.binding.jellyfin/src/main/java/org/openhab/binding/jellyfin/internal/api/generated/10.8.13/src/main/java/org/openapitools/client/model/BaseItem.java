/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.MediaUrl;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * Class BaseItem.
 */
@JsonPropertyOrder({
  BaseItem.JSON_PROPERTY_SIZE,
  BaseItem.JSON_PROPERTY_CONTAINER,
  BaseItem.JSON_PROPERTY_IS_H_D,
  BaseItem.JSON_PROPERTY_IS_SHORTCUT,
  BaseItem.JSON_PROPERTY_SHORTCUT_PATH,
  BaseItem.JSON_PROPERTY_WIDTH,
  BaseItem.JSON_PROPERTY_HEIGHT,
  BaseItem.JSON_PROPERTY_EXTRA_IDS,
  BaseItem.JSON_PROPERTY_DATE_LAST_SAVED,
  BaseItem.JSON_PROPERTY_REMOTE_TRAILERS,
  BaseItem.JSON_PROPERTY_SUPPORTS_EXTERNAL_TRANSFER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-16T17:51:31.285278872Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class BaseItem {
  public static final String JSON_PROPERTY_SIZE = "Size";
  private JsonNullable<Long> size = JsonNullable.<Long>undefined();

  public static final String JSON_PROPERTY_CONTAINER = "Container";
  private JsonNullable<String> container = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IS_H_D = "IsHD";
  @javax.annotation.Nullable
  private Boolean isHD;

  public static final String JSON_PROPERTY_IS_SHORTCUT = "IsShortcut";
  @javax.annotation.Nullable
  private Boolean isShortcut;

  public static final String JSON_PROPERTY_SHORTCUT_PATH = "ShortcutPath";
  private JsonNullable<String> shortcutPath = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_WIDTH = "Width";
  @javax.annotation.Nullable
  private Integer width;

  public static final String JSON_PROPERTY_HEIGHT = "Height";
  @javax.annotation.Nullable
  private Integer height;

  public static final String JSON_PROPERTY_EXTRA_IDS = "ExtraIds";
  private JsonNullable<List<UUID>> extraIds = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_DATE_LAST_SAVED = "DateLastSaved";
  @javax.annotation.Nullable
  private OffsetDateTime dateLastSaved;

  public static final String JSON_PROPERTY_REMOTE_TRAILERS = "RemoteTrailers";
  private JsonNullable<List<MediaUrl>> remoteTrailers = JsonNullable.<List<MediaUrl>>undefined();

  public static final String JSON_PROPERTY_SUPPORTS_EXTERNAL_TRANSFER = "SupportsExternalTransfer";
  @javax.annotation.Nullable
  private Boolean supportsExternalTransfer;

  public BaseItem() { 
  }

  @JsonCreator
  public BaseItem(
    @JsonProperty(JSON_PROPERTY_IS_H_D) Boolean isHD, 
    @JsonProperty(JSON_PROPERTY_SUPPORTS_EXTERNAL_TRANSFER) Boolean supportsExternalTransfer
  ) {
  this();
    this.isHD = isHD;
    this.supportsExternalTransfer = supportsExternalTransfer;
  }

  public BaseItem size(@javax.annotation.Nullable Long size) {
    this.size = JsonNullable.<Long>of(size);
    return this;
  }

  /**
   * Get size
   * @return size
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Long getSize() {
        return size.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getSize_JsonNullable() {
    return size;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE)
  public void setSize_JsonNullable(JsonNullable<Long> size) {
    this.size = size;
  }

  public void setSize(@javax.annotation.Nullable Long size) {
    this.size = JsonNullable.<Long>of(size);
  }


  public BaseItem container(@javax.annotation.Nullable String container) {
    this.container = JsonNullable.<String>of(container);
    return this;
  }

  /**
   * Get container
   * @return container
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getContainer() {
        return container.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONTAINER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getContainer_JsonNullable() {
    return container;
  }
  
  @JsonProperty(JSON_PROPERTY_CONTAINER)
  public void setContainer_JsonNullable(JsonNullable<String> container) {
    this.container = container;
  }

  public void setContainer(@javax.annotation.Nullable String container) {
    this.container = JsonNullable.<String>of(container);
  }


  /**
   * Get isHD
   * @return isHD
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_H_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getIsHD() {
    return isHD;
  }




  public BaseItem isShortcut(@javax.annotation.Nullable Boolean isShortcut) {
    this.isShortcut = isShortcut;
    return this;
  }

  /**
   * Get isShortcut
   * @return isShortcut
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_SHORTCUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getIsShortcut() {
    return isShortcut;
  }


  @JsonProperty(JSON_PROPERTY_IS_SHORTCUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsShortcut(@javax.annotation.Nullable Boolean isShortcut) {
    this.isShortcut = isShortcut;
  }


  public BaseItem shortcutPath(@javax.annotation.Nullable String shortcutPath) {
    this.shortcutPath = JsonNullable.<String>of(shortcutPath);
    return this;
  }

  /**
   * Get shortcutPath
   * @return shortcutPath
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getShortcutPath() {
        return shortcutPath.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SHORTCUT_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getShortcutPath_JsonNullable() {
    return shortcutPath;
  }
  
  @JsonProperty(JSON_PROPERTY_SHORTCUT_PATH)
  public void setShortcutPath_JsonNullable(JsonNullable<String> shortcutPath) {
    this.shortcutPath = shortcutPath;
  }

  public void setShortcutPath(@javax.annotation.Nullable String shortcutPath) {
    this.shortcutPath = JsonNullable.<String>of(shortcutPath);
  }


  public BaseItem width(@javax.annotation.Nullable Integer width) {
    this.width = width;
    return this;
  }

  /**
   * Get width
   * @return width
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getWidth() {
    return width;
  }


  @JsonProperty(JSON_PROPERTY_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWidth(@javax.annotation.Nullable Integer width) {
    this.width = width;
  }


  public BaseItem height(@javax.annotation.Nullable Integer height) {
    this.height = height;
    return this;
  }

  /**
   * Get height
   * @return height
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getHeight() {
    return height;
  }


  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHeight(@javax.annotation.Nullable Integer height) {
    this.height = height;
  }


  public BaseItem extraIds(@javax.annotation.Nullable List<UUID> extraIds) {
    this.extraIds = JsonNullable.<List<UUID>>of(extraIds);
    return this;
  }

  public BaseItem addExtraIdsItem(UUID extraIdsItem) {
    if (this.extraIds == null || !this.extraIds.isPresent()) {
      this.extraIds = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.extraIds.get().add(extraIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get extraIds
   * @return extraIds
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<UUID> getExtraIds() {
        return extraIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXTRA_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getExtraIds_JsonNullable() {
    return extraIds;
  }
  
  @JsonProperty(JSON_PROPERTY_EXTRA_IDS)
  public void setExtraIds_JsonNullable(JsonNullable<List<UUID>> extraIds) {
    this.extraIds = extraIds;
  }

  public void setExtraIds(@javax.annotation.Nullable List<UUID> extraIds) {
    this.extraIds = JsonNullable.<List<UUID>>of(extraIds);
  }


  public BaseItem dateLastSaved(@javax.annotation.Nullable OffsetDateTime dateLastSaved) {
    this.dateLastSaved = dateLastSaved;
    return this;
  }

  /**
   * Get dateLastSaved
   * @return dateLastSaved
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_LAST_SAVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getDateLastSaved() {
    return dateLastSaved;
  }


  @JsonProperty(JSON_PROPERTY_DATE_LAST_SAVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateLastSaved(@javax.annotation.Nullable OffsetDateTime dateLastSaved) {
    this.dateLastSaved = dateLastSaved;
  }


  public BaseItem remoteTrailers(@javax.annotation.Nullable List<MediaUrl> remoteTrailers) {
    this.remoteTrailers = JsonNullable.<List<MediaUrl>>of(remoteTrailers);
    return this;
  }

  public BaseItem addRemoteTrailersItem(MediaUrl remoteTrailersItem) {
    if (this.remoteTrailers == null || !this.remoteTrailers.isPresent()) {
      this.remoteTrailers = JsonNullable.<List<MediaUrl>>of(new ArrayList<>());
    }
    try {
      this.remoteTrailers.get().add(remoteTrailersItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Gets or sets the remote trailers.
   * @return remoteTrailers
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<MediaUrl> getRemoteTrailers() {
        return remoteTrailers.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REMOTE_TRAILERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<MediaUrl>> getRemoteTrailers_JsonNullable() {
    return remoteTrailers;
  }
  
  @JsonProperty(JSON_PROPERTY_REMOTE_TRAILERS)
  public void setRemoteTrailers_JsonNullable(JsonNullable<List<MediaUrl>> remoteTrailers) {
    this.remoteTrailers = remoteTrailers;
  }

  public void setRemoteTrailers(@javax.annotation.Nullable List<MediaUrl> remoteTrailers) {
    this.remoteTrailers = JsonNullable.<List<MediaUrl>>of(remoteTrailers);
  }


  /**
   * Get supportsExternalTransfer
   * @return supportsExternalTransfer
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUPPORTS_EXTERNAL_TRANSFER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getSupportsExternalTransfer() {
    return supportsExternalTransfer;
  }




  /**
   * Return true if this BaseItem object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BaseItem baseItem = (BaseItem) o;
    return equalsNullable(this.size, baseItem.size) &&
        equalsNullable(this.container, baseItem.container) &&
        Objects.equals(this.isHD, baseItem.isHD) &&
        Objects.equals(this.isShortcut, baseItem.isShortcut) &&
        equalsNullable(this.shortcutPath, baseItem.shortcutPath) &&
        Objects.equals(this.width, baseItem.width) &&
        Objects.equals(this.height, baseItem.height) &&
        equalsNullable(this.extraIds, baseItem.extraIds) &&
        Objects.equals(this.dateLastSaved, baseItem.dateLastSaved) &&
        equalsNullable(this.remoteTrailers, baseItem.remoteTrailers) &&
        Objects.equals(this.supportsExternalTransfer, baseItem.supportsExternalTransfer);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(size), hashCodeNullable(container), isHD, isShortcut, hashCodeNullable(shortcutPath), width, height, hashCodeNullable(extraIds), dateLastSaved, hashCodeNullable(remoteTrailers), supportsExternalTransfer);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BaseItem {\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    container: ").append(toIndentedString(container)).append("\n");
    sb.append("    isHD: ").append(toIndentedString(isHD)).append("\n");
    sb.append("    isShortcut: ").append(toIndentedString(isShortcut)).append("\n");
    sb.append("    shortcutPath: ").append(toIndentedString(shortcutPath)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    extraIds: ").append(toIndentedString(extraIds)).append("\n");
    sb.append("    dateLastSaved: ").append(toIndentedString(dateLastSaved)).append("\n");
    sb.append("    remoteTrailers: ").append(toIndentedString(remoteTrailers)).append("\n");
    sb.append("    supportsExternalTransfer: ").append(toIndentedString(supportsExternalTransfer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `Size` to the URL query string
    if (getSize() != null) {
      joiner.add(String.format("%sSize%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSize()))));
    }

    // add `Container` to the URL query string
    if (getContainer() != null) {
      joiner.add(String.format("%sContainer%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getContainer()))));
    }

    // add `IsHD` to the URL query string
    if (getIsHD() != null) {
      joiner.add(String.format("%sIsHD%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsHD()))));
    }

    // add `IsShortcut` to the URL query string
    if (getIsShortcut() != null) {
      joiner.add(String.format("%sIsShortcut%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsShortcut()))));
    }

    // add `ShortcutPath` to the URL query string
    if (getShortcutPath() != null) {
      joiner.add(String.format("%sShortcutPath%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getShortcutPath()))));
    }

    // add `Width` to the URL query string
    if (getWidth() != null) {
      joiner.add(String.format("%sWidth%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getWidth()))));
    }

    // add `Height` to the URL query string
    if (getHeight() != null) {
      joiner.add(String.format("%sHeight%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getHeight()))));
    }

    // add `ExtraIds` to the URL query string
    if (getExtraIds() != null) {
      for (int i = 0; i < getExtraIds().size(); i++) {
        if (getExtraIds().get(i) != null) {
          joiner.add(String.format("%sExtraIds%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getExtraIds().get(i)))));
        }
      }
    }

    // add `DateLastSaved` to the URL query string
    if (getDateLastSaved() != null) {
      joiner.add(String.format("%sDateLastSaved%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDateLastSaved()))));
    }

    // add `RemoteTrailers` to the URL query string
    if (getRemoteTrailers() != null) {
      for (int i = 0; i < getRemoteTrailers().size(); i++) {
        if (getRemoteTrailers().get(i) != null) {
          joiner.add(getRemoteTrailers().get(i).toUrlQueryString(String.format("%sRemoteTrailers%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `SupportsExternalTransfer` to the URL query string
    if (getSupportsExternalTransfer() != null) {
      joiner.add(String.format("%sSupportsExternalTransfer%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSupportsExternalTransfer()))));
    }

    return joiner.toString();
  }
}

