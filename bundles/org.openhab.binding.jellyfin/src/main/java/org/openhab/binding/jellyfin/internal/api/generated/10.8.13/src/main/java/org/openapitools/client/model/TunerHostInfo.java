/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * TunerHostInfo
 */
@JsonPropertyOrder({
  TunerHostInfo.JSON_PROPERTY_ID,
  TunerHostInfo.JSON_PROPERTY_URL,
  TunerHostInfo.JSON_PROPERTY_TYPE,
  TunerHostInfo.JSON_PROPERTY_DEVICE_ID,
  TunerHostInfo.JSON_PROPERTY_FRIENDLY_NAME,
  TunerHostInfo.JSON_PROPERTY_IMPORT_FAVORITES_ONLY,
  TunerHostInfo.JSON_PROPERTY_ALLOW_H_W_TRANSCODING,
  TunerHostInfo.JSON_PROPERTY_ENABLE_STREAM_LOOPING,
  TunerHostInfo.JSON_PROPERTY_SOURCE,
  TunerHostInfo.JSON_PROPERTY_TUNER_COUNT,
  TunerHostInfo.JSON_PROPERTY_USER_AGENT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-28T21:48:40.061690683Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class TunerHostInfo {
  public static final String JSON_PROPERTY_ID = "Id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_URL = "Url";
  private JsonNullable<String> url = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TYPE = "Type";
  private JsonNullable<String> type = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DEVICE_ID = "DeviceId";
  private JsonNullable<String> deviceId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FRIENDLY_NAME = "FriendlyName";
  private JsonNullable<String> friendlyName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IMPORT_FAVORITES_ONLY = "ImportFavoritesOnly";
  @javax.annotation.Nullable
  private Boolean importFavoritesOnly;

  public static final String JSON_PROPERTY_ALLOW_H_W_TRANSCODING = "AllowHWTranscoding";
  @javax.annotation.Nullable
  private Boolean allowHWTranscoding;

  public static final String JSON_PROPERTY_ENABLE_STREAM_LOOPING = "EnableStreamLooping";
  @javax.annotation.Nullable
  private Boolean enableStreamLooping;

  public static final String JSON_PROPERTY_SOURCE = "Source";
  private JsonNullable<String> source = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TUNER_COUNT = "TunerCount";
  @javax.annotation.Nullable
  private Integer tunerCount;

  public static final String JSON_PROPERTY_USER_AGENT = "UserAgent";
  private JsonNullable<String> userAgent = JsonNullable.<String>undefined();

  public TunerHostInfo() { 
  }

  public TunerHostInfo id(@javax.annotation.Nullable String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public TunerHostInfo url(@javax.annotation.Nullable String url) {
    this.url = JsonNullable.<String>of(url);
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getUrl() {
        return url.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUrl_JsonNullable() {
    return url;
  }
  
  @JsonProperty(JSON_PROPERTY_URL)
  public void setUrl_JsonNullable(JsonNullable<String> url) {
    this.url = url;
  }

  public void setUrl(@javax.annotation.Nullable String url) {
    this.url = JsonNullable.<String>of(url);
  }


  public TunerHostInfo type(@javax.annotation.Nullable String type) {
    this.type = JsonNullable.<String>of(type);
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getType() {
        return type.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getType_JsonNullable() {
    return type;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE)
  public void setType_JsonNullable(JsonNullable<String> type) {
    this.type = type;
  }

  public void setType(@javax.annotation.Nullable String type) {
    this.type = JsonNullable.<String>of(type);
  }


  public TunerHostInfo deviceId(@javax.annotation.Nullable String deviceId) {
    this.deviceId = JsonNullable.<String>of(deviceId);
    return this;
  }

  /**
   * Get deviceId
   * @return deviceId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getDeviceId() {
        return deviceId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DEVICE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDeviceId_JsonNullable() {
    return deviceId;
  }
  
  @JsonProperty(JSON_PROPERTY_DEVICE_ID)
  public void setDeviceId_JsonNullable(JsonNullable<String> deviceId) {
    this.deviceId = deviceId;
  }

  public void setDeviceId(@javax.annotation.Nullable String deviceId) {
    this.deviceId = JsonNullable.<String>of(deviceId);
  }


  public TunerHostInfo friendlyName(@javax.annotation.Nullable String friendlyName) {
    this.friendlyName = JsonNullable.<String>of(friendlyName);
    return this;
  }

  /**
   * Get friendlyName
   * @return friendlyName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getFriendlyName() {
        return friendlyName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FRIENDLY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFriendlyName_JsonNullable() {
    return friendlyName;
  }
  
  @JsonProperty(JSON_PROPERTY_FRIENDLY_NAME)
  public void setFriendlyName_JsonNullable(JsonNullable<String> friendlyName) {
    this.friendlyName = friendlyName;
  }

  public void setFriendlyName(@javax.annotation.Nullable String friendlyName) {
    this.friendlyName = JsonNullable.<String>of(friendlyName);
  }


  public TunerHostInfo importFavoritesOnly(@javax.annotation.Nullable Boolean importFavoritesOnly) {
    this.importFavoritesOnly = importFavoritesOnly;
    return this;
  }

  /**
   * Get importFavoritesOnly
   * @return importFavoritesOnly
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMPORT_FAVORITES_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getImportFavoritesOnly() {
    return importFavoritesOnly;
  }


  @JsonProperty(JSON_PROPERTY_IMPORT_FAVORITES_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImportFavoritesOnly(@javax.annotation.Nullable Boolean importFavoritesOnly) {
    this.importFavoritesOnly = importFavoritesOnly;
  }


  public TunerHostInfo allowHWTranscoding(@javax.annotation.Nullable Boolean allowHWTranscoding) {
    this.allowHWTranscoding = allowHWTranscoding;
    return this;
  }

  /**
   * Get allowHWTranscoding
   * @return allowHWTranscoding
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALLOW_H_W_TRANSCODING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getAllowHWTranscoding() {
    return allowHWTranscoding;
  }


  @JsonProperty(JSON_PROPERTY_ALLOW_H_W_TRANSCODING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllowHWTranscoding(@javax.annotation.Nullable Boolean allowHWTranscoding) {
    this.allowHWTranscoding = allowHWTranscoding;
  }


  public TunerHostInfo enableStreamLooping(@javax.annotation.Nullable Boolean enableStreamLooping) {
    this.enableStreamLooping = enableStreamLooping;
    return this;
  }

  /**
   * Get enableStreamLooping
   * @return enableStreamLooping
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_STREAM_LOOPING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableStreamLooping() {
    return enableStreamLooping;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_STREAM_LOOPING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableStreamLooping(@javax.annotation.Nullable Boolean enableStreamLooping) {
    this.enableStreamLooping = enableStreamLooping;
  }


  public TunerHostInfo source(@javax.annotation.Nullable String source) {
    this.source = JsonNullable.<String>of(source);
    return this;
  }

  /**
   * Get source
   * @return source
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getSource() {
        return source.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSource_JsonNullable() {
    return source;
  }
  
  @JsonProperty(JSON_PROPERTY_SOURCE)
  public void setSource_JsonNullable(JsonNullable<String> source) {
    this.source = source;
  }

  public void setSource(@javax.annotation.Nullable String source) {
    this.source = JsonNullable.<String>of(source);
  }


  public TunerHostInfo tunerCount(@javax.annotation.Nullable Integer tunerCount) {
    this.tunerCount = tunerCount;
    return this;
  }

  /**
   * Get tunerCount
   * @return tunerCount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TUNER_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getTunerCount() {
    return tunerCount;
  }


  @JsonProperty(JSON_PROPERTY_TUNER_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTunerCount(@javax.annotation.Nullable Integer tunerCount) {
    this.tunerCount = tunerCount;
  }


  public TunerHostInfo userAgent(@javax.annotation.Nullable String userAgent) {
    this.userAgent = JsonNullable.<String>of(userAgent);
    return this;
  }

  /**
   * Get userAgent
   * @return userAgent
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getUserAgent() {
        return userAgent.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USER_AGENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUserAgent_JsonNullable() {
    return userAgent;
  }
  
  @JsonProperty(JSON_PROPERTY_USER_AGENT)
  public void setUserAgent_JsonNullable(JsonNullable<String> userAgent) {
    this.userAgent = userAgent;
  }

  public void setUserAgent(@javax.annotation.Nullable String userAgent) {
    this.userAgent = JsonNullable.<String>of(userAgent);
  }


  /**
   * Return true if this TunerHostInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TunerHostInfo tunerHostInfo = (TunerHostInfo) o;
    return equalsNullable(this.id, tunerHostInfo.id) &&
        equalsNullable(this.url, tunerHostInfo.url) &&
        equalsNullable(this.type, tunerHostInfo.type) &&
        equalsNullable(this.deviceId, tunerHostInfo.deviceId) &&
        equalsNullable(this.friendlyName, tunerHostInfo.friendlyName) &&
        Objects.equals(this.importFavoritesOnly, tunerHostInfo.importFavoritesOnly) &&
        Objects.equals(this.allowHWTranscoding, tunerHostInfo.allowHWTranscoding) &&
        Objects.equals(this.enableStreamLooping, tunerHostInfo.enableStreamLooping) &&
        equalsNullable(this.source, tunerHostInfo.source) &&
        Objects.equals(this.tunerCount, tunerHostInfo.tunerCount) &&
        equalsNullable(this.userAgent, tunerHostInfo.userAgent);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(id), hashCodeNullable(url), hashCodeNullable(type), hashCodeNullable(deviceId), hashCodeNullable(friendlyName), importFavoritesOnly, allowHWTranscoding, enableStreamLooping, hashCodeNullable(source), tunerCount, hashCodeNullable(userAgent));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TunerHostInfo {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    importFavoritesOnly: ").append(toIndentedString(importFavoritesOnly)).append("\n");
    sb.append("    allowHWTranscoding: ").append(toIndentedString(allowHWTranscoding)).append("\n");
    sb.append("    enableStreamLooping: ").append(toIndentedString(enableStreamLooping)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    tunerCount: ").append(toIndentedString(tunerCount)).append("\n");
    sb.append("    userAgent: ").append(toIndentedString(userAgent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `Id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `Url` to the URL query string
    if (getUrl() != null) {
      joiner.add(String.format("%sUrl%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getUrl()))));
    }

    // add `Type` to the URL query string
    if (getType() != null) {
      joiner.add(String.format("%sType%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getType()))));
    }

    // add `DeviceId` to the URL query string
    if (getDeviceId() != null) {
      joiner.add(String.format("%sDeviceId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDeviceId()))));
    }

    // add `FriendlyName` to the URL query string
    if (getFriendlyName() != null) {
      joiner.add(String.format("%sFriendlyName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFriendlyName()))));
    }

    // add `ImportFavoritesOnly` to the URL query string
    if (getImportFavoritesOnly() != null) {
      joiner.add(String.format("%sImportFavoritesOnly%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getImportFavoritesOnly()))));
    }

    // add `AllowHWTranscoding` to the URL query string
    if (getAllowHWTranscoding() != null) {
      joiner.add(String.format("%sAllowHWTranscoding%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAllowHWTranscoding()))));
    }

    // add `EnableStreamLooping` to the URL query string
    if (getEnableStreamLooping() != null) {
      joiner.add(String.format("%sEnableStreamLooping%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableStreamLooping()))));
    }

    // add `Source` to the URL query string
    if (getSource() != null) {
      joiner.add(String.format("%sSource%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSource()))));
    }

    // add `TunerCount` to the URL query string
    if (getTunerCount() != null) {
      joiner.add(String.format("%sTunerCount%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTunerCount()))));
    }

    // add `UserAgent` to the URL query string
    if (getUserAgent() != null) {
      joiner.add(String.format("%sUserAgent%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getUserAgent()))));
    }

    return joiner.toString();
  }
}

