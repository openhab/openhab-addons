/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.client.model.GroupUpdateType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * Class GroupUpdate.
 */
@JsonPropertyOrder({
  StringGroupUpdate.JSON_PROPERTY_GROUP_ID,
  StringGroupUpdate.JSON_PROPERTY_TYPE,
  StringGroupUpdate.JSON_PROPERTY_DATA
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class StringGroupUpdate {
  public static final String JSON_PROPERTY_GROUP_ID = "GroupId";
  @javax.annotation.Nullable
  private UUID groupId;

  public static final String JSON_PROPERTY_TYPE = "Type";
  @javax.annotation.Nullable
  private GroupUpdateType type;

  public static final String JSON_PROPERTY_DATA = "Data";
  @javax.annotation.Nullable
  private String data;

  public StringGroupUpdate() { 
  }

  @JsonCreator
  public StringGroupUpdate(
    @JsonProperty(JSON_PROPERTY_GROUP_ID) UUID groupId
  ) {
  this();
    this.groupId = groupId;
  }

  /**
   * Gets the group identifier.
   * @return groupId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public UUID getGroupId() {
    return groupId;
  }




  public StringGroupUpdate type(@javax.annotation.Nullable GroupUpdateType type) {
    this.type = type;
    return this;
  }

  /**
   * Gets the update type.
   * @return type
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public GroupUpdateType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(@javax.annotation.Nullable GroupUpdateType type) {
    this.type = type;
  }


  public StringGroupUpdate data(@javax.annotation.Nullable String data) {
    this.data = data;
    return this;
  }

  /**
   * Gets the update data.
   * @return data
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getData() {
    return data;
  }


  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setData(@javax.annotation.Nullable String data) {
    this.data = data;
  }


  /**
   * Return true if this StringGroupUpdate object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StringGroupUpdate stringGroupUpdate = (StringGroupUpdate) o;
    return Objects.equals(this.groupId, stringGroupUpdate.groupId) &&
        Objects.equals(this.type, stringGroupUpdate.type) &&
        Objects.equals(this.data, stringGroupUpdate.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(groupId, type, data);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StringGroupUpdate {\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `GroupId` to the URL query string
    if (getGroupId() != null) {
      joiner.add(String.format("%sGroupId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getGroupId()))));
    }

    // add `Type` to the URL query string
    if (getType() != null) {
      joiner.add(String.format("%sType%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getType()))));
    }

    // add `Data` to the URL query string
    if (getData() != null) {
      joiner.add(String.format("%sData%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getData()))));
    }

    return joiner.toString();
  }
}

