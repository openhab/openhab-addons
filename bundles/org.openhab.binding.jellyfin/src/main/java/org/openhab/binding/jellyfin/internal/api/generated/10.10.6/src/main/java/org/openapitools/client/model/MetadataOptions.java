/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * Class MetadataOptions.
 */
@JsonPropertyOrder({
  MetadataOptions.JSON_PROPERTY_ITEM_TYPE,
  MetadataOptions.JSON_PROPERTY_DISABLED_METADATA_SAVERS,
  MetadataOptions.JSON_PROPERTY_LOCAL_METADATA_READER_ORDER,
  MetadataOptions.JSON_PROPERTY_DISABLED_METADATA_FETCHERS,
  MetadataOptions.JSON_PROPERTY_METADATA_FETCHER_ORDER,
  MetadataOptions.JSON_PROPERTY_DISABLED_IMAGE_FETCHERS,
  MetadataOptions.JSON_PROPERTY_IMAGE_FETCHER_ORDER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class MetadataOptions {
  public static final String JSON_PROPERTY_ITEM_TYPE = "ItemType";
  private JsonNullable<String> itemType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DISABLED_METADATA_SAVERS = "DisabledMetadataSavers";
  private JsonNullable<List<String>> disabledMetadataSavers = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_METADATA_READER_ORDER = "LocalMetadataReaderOrder";
  private JsonNullable<List<String>> localMetadataReaderOrder = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_DISABLED_METADATA_FETCHERS = "DisabledMetadataFetchers";
  private JsonNullable<List<String>> disabledMetadataFetchers = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_METADATA_FETCHER_ORDER = "MetadataFetcherOrder";
  private JsonNullable<List<String>> metadataFetcherOrder = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_DISABLED_IMAGE_FETCHERS = "DisabledImageFetchers";
  private JsonNullable<List<String>> disabledImageFetchers = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_IMAGE_FETCHER_ORDER = "ImageFetcherOrder";
  private JsonNullable<List<String>> imageFetcherOrder = JsonNullable.<List<String>>undefined();

  public MetadataOptions() { 
  }

  public MetadataOptions itemType(@javax.annotation.Nullable String itemType) {
    this.itemType = JsonNullable.<String>of(itemType);
    return this;
  }

  /**
   * Get itemType
   * @return itemType
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getItemType() {
        return itemType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ITEM_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getItemType_JsonNullable() {
    return itemType;
  }
  
  @JsonProperty(JSON_PROPERTY_ITEM_TYPE)
  public void setItemType_JsonNullable(JsonNullable<String> itemType) {
    this.itemType = itemType;
  }

  public void setItemType(@javax.annotation.Nullable String itemType) {
    this.itemType = JsonNullable.<String>of(itemType);
  }


  public MetadataOptions disabledMetadataSavers(@javax.annotation.Nullable List<String> disabledMetadataSavers) {
    this.disabledMetadataSavers = JsonNullable.<List<String>>of(disabledMetadataSavers);
    return this;
  }

  public MetadataOptions addDisabledMetadataSaversItem(String disabledMetadataSaversItem) {
    if (this.disabledMetadataSavers == null || !this.disabledMetadataSavers.isPresent()) {
      this.disabledMetadataSavers = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.disabledMetadataSavers.get().add(disabledMetadataSaversItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get disabledMetadataSavers
   * @return disabledMetadataSavers
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<String> getDisabledMetadataSavers() {
        return disabledMetadataSavers.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISABLED_METADATA_SAVERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getDisabledMetadataSavers_JsonNullable() {
    return disabledMetadataSavers;
  }
  
  @JsonProperty(JSON_PROPERTY_DISABLED_METADATA_SAVERS)
  public void setDisabledMetadataSavers_JsonNullable(JsonNullable<List<String>> disabledMetadataSavers) {
    this.disabledMetadataSavers = disabledMetadataSavers;
  }

  public void setDisabledMetadataSavers(@javax.annotation.Nullable List<String> disabledMetadataSavers) {
    this.disabledMetadataSavers = JsonNullable.<List<String>>of(disabledMetadataSavers);
  }


  public MetadataOptions localMetadataReaderOrder(@javax.annotation.Nullable List<String> localMetadataReaderOrder) {
    this.localMetadataReaderOrder = JsonNullable.<List<String>>of(localMetadataReaderOrder);
    return this;
  }

  public MetadataOptions addLocalMetadataReaderOrderItem(String localMetadataReaderOrderItem) {
    if (this.localMetadataReaderOrder == null || !this.localMetadataReaderOrder.isPresent()) {
      this.localMetadataReaderOrder = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localMetadataReaderOrder.get().add(localMetadataReaderOrderItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get localMetadataReaderOrder
   * @return localMetadataReaderOrder
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<String> getLocalMetadataReaderOrder() {
        return localMetadataReaderOrder.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_METADATA_READER_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalMetadataReaderOrder_JsonNullable() {
    return localMetadataReaderOrder;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_METADATA_READER_ORDER)
  public void setLocalMetadataReaderOrder_JsonNullable(JsonNullable<List<String>> localMetadataReaderOrder) {
    this.localMetadataReaderOrder = localMetadataReaderOrder;
  }

  public void setLocalMetadataReaderOrder(@javax.annotation.Nullable List<String> localMetadataReaderOrder) {
    this.localMetadataReaderOrder = JsonNullable.<List<String>>of(localMetadataReaderOrder);
  }


  public MetadataOptions disabledMetadataFetchers(@javax.annotation.Nullable List<String> disabledMetadataFetchers) {
    this.disabledMetadataFetchers = JsonNullable.<List<String>>of(disabledMetadataFetchers);
    return this;
  }

  public MetadataOptions addDisabledMetadataFetchersItem(String disabledMetadataFetchersItem) {
    if (this.disabledMetadataFetchers == null || !this.disabledMetadataFetchers.isPresent()) {
      this.disabledMetadataFetchers = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.disabledMetadataFetchers.get().add(disabledMetadataFetchersItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get disabledMetadataFetchers
   * @return disabledMetadataFetchers
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<String> getDisabledMetadataFetchers() {
        return disabledMetadataFetchers.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISABLED_METADATA_FETCHERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getDisabledMetadataFetchers_JsonNullable() {
    return disabledMetadataFetchers;
  }
  
  @JsonProperty(JSON_PROPERTY_DISABLED_METADATA_FETCHERS)
  public void setDisabledMetadataFetchers_JsonNullable(JsonNullable<List<String>> disabledMetadataFetchers) {
    this.disabledMetadataFetchers = disabledMetadataFetchers;
  }

  public void setDisabledMetadataFetchers(@javax.annotation.Nullable List<String> disabledMetadataFetchers) {
    this.disabledMetadataFetchers = JsonNullable.<List<String>>of(disabledMetadataFetchers);
  }


  public MetadataOptions metadataFetcherOrder(@javax.annotation.Nullable List<String> metadataFetcherOrder) {
    this.metadataFetcherOrder = JsonNullable.<List<String>>of(metadataFetcherOrder);
    return this;
  }

  public MetadataOptions addMetadataFetcherOrderItem(String metadataFetcherOrderItem) {
    if (this.metadataFetcherOrder == null || !this.metadataFetcherOrder.isPresent()) {
      this.metadataFetcherOrder = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.metadataFetcherOrder.get().add(metadataFetcherOrderItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get metadataFetcherOrder
   * @return metadataFetcherOrder
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<String> getMetadataFetcherOrder() {
        return metadataFetcherOrder.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METADATA_FETCHER_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getMetadataFetcherOrder_JsonNullable() {
    return metadataFetcherOrder;
  }
  
  @JsonProperty(JSON_PROPERTY_METADATA_FETCHER_ORDER)
  public void setMetadataFetcherOrder_JsonNullable(JsonNullable<List<String>> metadataFetcherOrder) {
    this.metadataFetcherOrder = metadataFetcherOrder;
  }

  public void setMetadataFetcherOrder(@javax.annotation.Nullable List<String> metadataFetcherOrder) {
    this.metadataFetcherOrder = JsonNullable.<List<String>>of(metadataFetcherOrder);
  }


  public MetadataOptions disabledImageFetchers(@javax.annotation.Nullable List<String> disabledImageFetchers) {
    this.disabledImageFetchers = JsonNullable.<List<String>>of(disabledImageFetchers);
    return this;
  }

  public MetadataOptions addDisabledImageFetchersItem(String disabledImageFetchersItem) {
    if (this.disabledImageFetchers == null || !this.disabledImageFetchers.isPresent()) {
      this.disabledImageFetchers = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.disabledImageFetchers.get().add(disabledImageFetchersItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get disabledImageFetchers
   * @return disabledImageFetchers
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<String> getDisabledImageFetchers() {
        return disabledImageFetchers.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISABLED_IMAGE_FETCHERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getDisabledImageFetchers_JsonNullable() {
    return disabledImageFetchers;
  }
  
  @JsonProperty(JSON_PROPERTY_DISABLED_IMAGE_FETCHERS)
  public void setDisabledImageFetchers_JsonNullable(JsonNullable<List<String>> disabledImageFetchers) {
    this.disabledImageFetchers = disabledImageFetchers;
  }

  public void setDisabledImageFetchers(@javax.annotation.Nullable List<String> disabledImageFetchers) {
    this.disabledImageFetchers = JsonNullable.<List<String>>of(disabledImageFetchers);
  }


  public MetadataOptions imageFetcherOrder(@javax.annotation.Nullable List<String> imageFetcherOrder) {
    this.imageFetcherOrder = JsonNullable.<List<String>>of(imageFetcherOrder);
    return this;
  }

  public MetadataOptions addImageFetcherOrderItem(String imageFetcherOrderItem) {
    if (this.imageFetcherOrder == null || !this.imageFetcherOrder.isPresent()) {
      this.imageFetcherOrder = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.imageFetcherOrder.get().add(imageFetcherOrderItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get imageFetcherOrder
   * @return imageFetcherOrder
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<String> getImageFetcherOrder() {
        return imageFetcherOrder.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMAGE_FETCHER_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getImageFetcherOrder_JsonNullable() {
    return imageFetcherOrder;
  }
  
  @JsonProperty(JSON_PROPERTY_IMAGE_FETCHER_ORDER)
  public void setImageFetcherOrder_JsonNullable(JsonNullable<List<String>> imageFetcherOrder) {
    this.imageFetcherOrder = imageFetcherOrder;
  }

  public void setImageFetcherOrder(@javax.annotation.Nullable List<String> imageFetcherOrder) {
    this.imageFetcherOrder = JsonNullable.<List<String>>of(imageFetcherOrder);
  }


  /**
   * Return true if this MetadataOptions object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetadataOptions metadataOptions = (MetadataOptions) o;
    return equalsNullable(this.itemType, metadataOptions.itemType) &&
        equalsNullable(this.disabledMetadataSavers, metadataOptions.disabledMetadataSavers) &&
        equalsNullable(this.localMetadataReaderOrder, metadataOptions.localMetadataReaderOrder) &&
        equalsNullable(this.disabledMetadataFetchers, metadataOptions.disabledMetadataFetchers) &&
        equalsNullable(this.metadataFetcherOrder, metadataOptions.metadataFetcherOrder) &&
        equalsNullable(this.disabledImageFetchers, metadataOptions.disabledImageFetchers) &&
        equalsNullable(this.imageFetcherOrder, metadataOptions.imageFetcherOrder);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(itemType), hashCodeNullable(disabledMetadataSavers), hashCodeNullable(localMetadataReaderOrder), hashCodeNullable(disabledMetadataFetchers), hashCodeNullable(metadataFetcherOrder), hashCodeNullable(disabledImageFetchers), hashCodeNullable(imageFetcherOrder));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetadataOptions {\n");
    sb.append("    itemType: ").append(toIndentedString(itemType)).append("\n");
    sb.append("    disabledMetadataSavers: ").append(toIndentedString(disabledMetadataSavers)).append("\n");
    sb.append("    localMetadataReaderOrder: ").append(toIndentedString(localMetadataReaderOrder)).append("\n");
    sb.append("    disabledMetadataFetchers: ").append(toIndentedString(disabledMetadataFetchers)).append("\n");
    sb.append("    metadataFetcherOrder: ").append(toIndentedString(metadataFetcherOrder)).append("\n");
    sb.append("    disabledImageFetchers: ").append(toIndentedString(disabledImageFetchers)).append("\n");
    sb.append("    imageFetcherOrder: ").append(toIndentedString(imageFetcherOrder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `ItemType` to the URL query string
    if (getItemType() != null) {
      joiner.add(String.format("%sItemType%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getItemType()))));
    }

    // add `DisabledMetadataSavers` to the URL query string
    if (getDisabledMetadataSavers() != null) {
      for (int i = 0; i < getDisabledMetadataSavers().size(); i++) {
        joiner.add(String.format("%sDisabledMetadataSavers%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getDisabledMetadataSavers().get(i)))));
      }
    }

    // add `LocalMetadataReaderOrder` to the URL query string
    if (getLocalMetadataReaderOrder() != null) {
      for (int i = 0; i < getLocalMetadataReaderOrder().size(); i++) {
        joiner.add(String.format("%sLocalMetadataReaderOrder%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getLocalMetadataReaderOrder().get(i)))));
      }
    }

    // add `DisabledMetadataFetchers` to the URL query string
    if (getDisabledMetadataFetchers() != null) {
      for (int i = 0; i < getDisabledMetadataFetchers().size(); i++) {
        joiner.add(String.format("%sDisabledMetadataFetchers%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getDisabledMetadataFetchers().get(i)))));
      }
    }

    // add `MetadataFetcherOrder` to the URL query string
    if (getMetadataFetcherOrder() != null) {
      for (int i = 0; i < getMetadataFetcherOrder().size(); i++) {
        joiner.add(String.format("%sMetadataFetcherOrder%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getMetadataFetcherOrder().get(i)))));
      }
    }

    // add `DisabledImageFetchers` to the URL query string
    if (getDisabledImageFetchers() != null) {
      for (int i = 0; i < getDisabledImageFetchers().size(); i++) {
        joiner.add(String.format("%sDisabledImageFetchers%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getDisabledImageFetchers().get(i)))));
      }
    }

    // add `ImageFetcherOrder` to the URL query string
    if (getImageFetcherOrder() != null) {
      for (int i = 0; i < getImageFetcherOrder().size(); i++) {
        joiner.add(String.format("%sImageFetcherOrder%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getImageFetcherOrder().get(i)))));
      }
    }

    return joiner.toString();
  }
}

