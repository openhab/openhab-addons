/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * Class CultureDto.
 */
@JsonPropertyOrder({
  CultureDto.JSON_PROPERTY_NAME,
  CultureDto.JSON_PROPERTY_DISPLAY_NAME,
  CultureDto.JSON_PROPERTY_TWO_LETTER_I_S_O_LANGUAGE_NAME,
  CultureDto.JSON_PROPERTY_THREE_LETTER_I_S_O_LANGUAGE_NAME,
  CultureDto.JSON_PROPERTY_THREE_LETTER_I_S_O_LANGUAGE_NAMES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-28T21:48:48.410245241Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class CultureDto {
  public static final String JSON_PROPERTY_NAME = "Name";
  @javax.annotation.Nullable
  private String name;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "DisplayName";
  @javax.annotation.Nullable
  private String displayName;

  public static final String JSON_PROPERTY_TWO_LETTER_I_S_O_LANGUAGE_NAME = "TwoLetterISOLanguageName";
  @javax.annotation.Nullable
  private String twoLetterISOLanguageName;

  public static final String JSON_PROPERTY_THREE_LETTER_I_S_O_LANGUAGE_NAME = "ThreeLetterISOLanguageName";
  private JsonNullable<String> threeLetterISOLanguageName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_THREE_LETTER_I_S_O_LANGUAGE_NAMES = "ThreeLetterISOLanguageNames";
  @javax.annotation.Nullable
  private List<String> threeLetterISOLanguageNames = new ArrayList<>();

  public CultureDto() { 
  }

  @JsonCreator
  public CultureDto(
    @JsonProperty(JSON_PROPERTY_THREE_LETTER_I_S_O_LANGUAGE_NAME) String threeLetterISOLanguageName
  ) {
  this();
    this.threeLetterISOLanguageName = threeLetterISOLanguageName == null ? JsonNullable.<String>undefined() : JsonNullable.of(threeLetterISOLanguageName);
  }

  public CultureDto name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Gets the name.
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public CultureDto displayName(@javax.annotation.Nullable String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Gets the display name.
   * @return displayName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(@javax.annotation.Nullable String displayName) {
    this.displayName = displayName;
  }


  public CultureDto twoLetterISOLanguageName(@javax.annotation.Nullable String twoLetterISOLanguageName) {
    this.twoLetterISOLanguageName = twoLetterISOLanguageName;
    return this;
  }

  /**
   * Gets the name of the two letter ISO language.
   * @return twoLetterISOLanguageName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TWO_LETTER_I_S_O_LANGUAGE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getTwoLetterISOLanguageName() {
    return twoLetterISOLanguageName;
  }


  @JsonProperty(JSON_PROPERTY_TWO_LETTER_I_S_O_LANGUAGE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTwoLetterISOLanguageName(@javax.annotation.Nullable String twoLetterISOLanguageName) {
    this.twoLetterISOLanguageName = twoLetterISOLanguageName;
  }


  /**
   * Gets the name of the three letter ISO language.
   * @return threeLetterISOLanguageName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getThreeLetterISOLanguageName() {
    
    if (threeLetterISOLanguageName == null) {
      threeLetterISOLanguageName = JsonNullable.<String>undefined();
    }
    return threeLetterISOLanguageName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_THREE_LETTER_I_S_O_LANGUAGE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getThreeLetterISOLanguageName_JsonNullable() {
    return threeLetterISOLanguageName;
  }
  
  @JsonProperty(JSON_PROPERTY_THREE_LETTER_I_S_O_LANGUAGE_NAME)
  private void setThreeLetterISOLanguageName_JsonNullable(JsonNullable<String> threeLetterISOLanguageName) {
    this.threeLetterISOLanguageName = threeLetterISOLanguageName;
  }



  public CultureDto threeLetterISOLanguageNames(@javax.annotation.Nullable List<String> threeLetterISOLanguageNames) {
    this.threeLetterISOLanguageNames = threeLetterISOLanguageNames;
    return this;
  }

  public CultureDto addThreeLetterISOLanguageNamesItem(String threeLetterISOLanguageNamesItem) {
    if (this.threeLetterISOLanguageNames == null) {
      this.threeLetterISOLanguageNames = new ArrayList<>();
    }
    this.threeLetterISOLanguageNames.add(threeLetterISOLanguageNamesItem);
    return this;
  }

  /**
   * Get threeLetterISOLanguageNames
   * @return threeLetterISOLanguageNames
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_THREE_LETTER_I_S_O_LANGUAGE_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getThreeLetterISOLanguageNames() {
    return threeLetterISOLanguageNames;
  }


  @JsonProperty(JSON_PROPERTY_THREE_LETTER_I_S_O_LANGUAGE_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setThreeLetterISOLanguageNames(@javax.annotation.Nullable List<String> threeLetterISOLanguageNames) {
    this.threeLetterISOLanguageNames = threeLetterISOLanguageNames;
  }


  /**
   * Return true if this CultureDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CultureDto cultureDto = (CultureDto) o;
    return Objects.equals(this.name, cultureDto.name) &&
        Objects.equals(this.displayName, cultureDto.displayName) &&
        Objects.equals(this.twoLetterISOLanguageName, cultureDto.twoLetterISOLanguageName) &&
        equalsNullable(this.threeLetterISOLanguageName, cultureDto.threeLetterISOLanguageName) &&
        Objects.equals(this.threeLetterISOLanguageNames, cultureDto.threeLetterISOLanguageNames);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, displayName, twoLetterISOLanguageName, hashCodeNullable(threeLetterISOLanguageName), threeLetterISOLanguageNames);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CultureDto {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    twoLetterISOLanguageName: ").append(toIndentedString(twoLetterISOLanguageName)).append("\n");
    sb.append("    threeLetterISOLanguageName: ").append(toIndentedString(threeLetterISOLanguageName)).append("\n");
    sb.append("    threeLetterISOLanguageNames: ").append(toIndentedString(threeLetterISOLanguageNames)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `Name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getName()))));
    }

    // add `DisplayName` to the URL query string
    if (getDisplayName() != null) {
      joiner.add(String.format("%sDisplayName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDisplayName()))));
    }

    // add `TwoLetterISOLanguageName` to the URL query string
    if (getTwoLetterISOLanguageName() != null) {
      joiner.add(String.format("%sTwoLetterISOLanguageName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTwoLetterISOLanguageName()))));
    }

    // add `ThreeLetterISOLanguageName` to the URL query string
    if (getThreeLetterISOLanguageName() != null) {
      joiner.add(String.format("%sThreeLetterISOLanguageName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getThreeLetterISOLanguageName()))));
    }

    // add `ThreeLetterISOLanguageNames` to the URL query string
    if (getThreeLetterISOLanguageNames() != null) {
      for (int i = 0; i < getThreeLetterISOLanguageNames().size(); i++) {
        joiner.add(String.format("%sThreeLetterISOLanguageNames%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getThreeLetterISOLanguageNames().get(i)))));
      }
    }

    return joiner.toString();
  }
}

