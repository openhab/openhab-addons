/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.ImageType;
import org.openapitools.client.model.ItemFields;
import org.openapitools.client.model.ItemSortBy;
import org.openapitools.client.model.SortOrder;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * Get programs dto.
 */
@JsonPropertyOrder({
  GetProgramsDto.JSON_PROPERTY_CHANNEL_IDS,
  GetProgramsDto.JSON_PROPERTY_USER_ID,
  GetProgramsDto.JSON_PROPERTY_MIN_START_DATE,
  GetProgramsDto.JSON_PROPERTY_HAS_AIRED,
  GetProgramsDto.JSON_PROPERTY_IS_AIRING,
  GetProgramsDto.JSON_PROPERTY_MAX_START_DATE,
  GetProgramsDto.JSON_PROPERTY_MIN_END_DATE,
  GetProgramsDto.JSON_PROPERTY_MAX_END_DATE,
  GetProgramsDto.JSON_PROPERTY_IS_MOVIE,
  GetProgramsDto.JSON_PROPERTY_IS_SERIES,
  GetProgramsDto.JSON_PROPERTY_IS_NEWS,
  GetProgramsDto.JSON_PROPERTY_IS_KIDS,
  GetProgramsDto.JSON_PROPERTY_IS_SPORTS,
  GetProgramsDto.JSON_PROPERTY_START_INDEX,
  GetProgramsDto.JSON_PROPERTY_LIMIT,
  GetProgramsDto.JSON_PROPERTY_SORT_BY,
  GetProgramsDto.JSON_PROPERTY_SORT_ORDER,
  GetProgramsDto.JSON_PROPERTY_GENRES,
  GetProgramsDto.JSON_PROPERTY_GENRE_IDS,
  GetProgramsDto.JSON_PROPERTY_ENABLE_IMAGES,
  GetProgramsDto.JSON_PROPERTY_ENABLE_TOTAL_RECORD_COUNT,
  GetProgramsDto.JSON_PROPERTY_IMAGE_TYPE_LIMIT,
  GetProgramsDto.JSON_PROPERTY_ENABLE_IMAGE_TYPES,
  GetProgramsDto.JSON_PROPERTY_ENABLE_USER_DATA,
  GetProgramsDto.JSON_PROPERTY_SERIES_TIMER_ID,
  GetProgramsDto.JSON_PROPERTY_LIBRARY_SERIES_ID,
  GetProgramsDto.JSON_PROPERTY_FIELDS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-16T17:52:19.001411110Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class GetProgramsDto {
  public static final String JSON_PROPERTY_CHANNEL_IDS = "ChannelIds";
  private JsonNullable<List<UUID>> channelIds = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_USER_ID = "UserId";
  private JsonNullable<UUID> userId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_MIN_START_DATE = "MinStartDate";
  private JsonNullable<OffsetDateTime> minStartDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_HAS_AIRED = "HasAired";
  private JsonNullable<Boolean> hasAired = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_IS_AIRING = "IsAiring";
  private JsonNullable<Boolean> isAiring = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_MAX_START_DATE = "MaxStartDate";
  private JsonNullable<OffsetDateTime> maxStartDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_MIN_END_DATE = "MinEndDate";
  private JsonNullable<OffsetDateTime> minEndDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_MAX_END_DATE = "MaxEndDate";
  private JsonNullable<OffsetDateTime> maxEndDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_IS_MOVIE = "IsMovie";
  private JsonNullable<Boolean> isMovie = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_IS_SERIES = "IsSeries";
  private JsonNullable<Boolean> isSeries = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_IS_NEWS = "IsNews";
  private JsonNullable<Boolean> isNews = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_IS_KIDS = "IsKids";
  private JsonNullable<Boolean> isKids = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_IS_SPORTS = "IsSports";
  private JsonNullable<Boolean> isSports = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_START_INDEX = "StartIndex";
  private JsonNullable<Integer> startIndex = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_LIMIT = "Limit";
  private JsonNullable<Integer> limit = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_SORT_BY = "SortBy";
  private JsonNullable<List<ItemSortBy>> sortBy = JsonNullable.<List<ItemSortBy>>undefined();

  public static final String JSON_PROPERTY_SORT_ORDER = "SortOrder";
  private JsonNullable<List<SortOrder>> sortOrder = JsonNullable.<List<SortOrder>>undefined();

  public static final String JSON_PROPERTY_GENRES = "Genres";
  private JsonNullable<List<String>> genres = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_GENRE_IDS = "GenreIds";
  private JsonNullable<List<UUID>> genreIds = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_ENABLE_IMAGES = "EnableImages";
  private JsonNullable<Boolean> enableImages = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_ENABLE_TOTAL_RECORD_COUNT = "EnableTotalRecordCount";
  @javax.annotation.Nullable
  private Boolean enableTotalRecordCount = true;

  public static final String JSON_PROPERTY_IMAGE_TYPE_LIMIT = "ImageTypeLimit";
  private JsonNullable<Integer> imageTypeLimit = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_ENABLE_IMAGE_TYPES = "EnableImageTypes";
  private JsonNullable<List<ImageType>> enableImageTypes = JsonNullable.<List<ImageType>>undefined();

  public static final String JSON_PROPERTY_ENABLE_USER_DATA = "EnableUserData";
  private JsonNullable<Boolean> enableUserData = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_SERIES_TIMER_ID = "SeriesTimerId";
  private JsonNullable<String> seriesTimerId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LIBRARY_SERIES_ID = "LibrarySeriesId";
  private JsonNullable<UUID> librarySeriesId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_FIELDS = "Fields";
  private JsonNullable<List<ItemFields>> fields = JsonNullable.<List<ItemFields>>undefined();

  public GetProgramsDto() { 
  }

  public GetProgramsDto channelIds(@javax.annotation.Nullable List<UUID> channelIds) {
    this.channelIds = JsonNullable.<List<UUID>>of(channelIds);
    return this;
  }

  public GetProgramsDto addChannelIdsItem(UUID channelIdsItem) {
    if (this.channelIds == null || !this.channelIds.isPresent()) {
      this.channelIds = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.channelIds.get().add(channelIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Gets or sets the channels to return guide information for.
   * @return channelIds
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<UUID> getChannelIds() {
        return channelIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CHANNEL_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getChannelIds_JsonNullable() {
    return channelIds;
  }
  
  @JsonProperty(JSON_PROPERTY_CHANNEL_IDS)
  public void setChannelIds_JsonNullable(JsonNullable<List<UUID>> channelIds) {
    this.channelIds = channelIds;
  }

  public void setChannelIds(@javax.annotation.Nullable List<UUID> channelIds) {
    this.channelIds = JsonNullable.<List<UUID>>of(channelIds);
  }


  public GetProgramsDto userId(@javax.annotation.Nullable UUID userId) {
    this.userId = JsonNullable.<UUID>of(userId);
    return this;
  }

  /**
   * Gets or sets optional. Filter by user id.
   * @return userId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getUserId() {
        return userId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getUserId_JsonNullable() {
    return userId;
  }
  
  @JsonProperty(JSON_PROPERTY_USER_ID)
  public void setUserId_JsonNullable(JsonNullable<UUID> userId) {
    this.userId = userId;
  }

  public void setUserId(@javax.annotation.Nullable UUID userId) {
    this.userId = JsonNullable.<UUID>of(userId);
  }


  public GetProgramsDto minStartDate(@javax.annotation.Nullable OffsetDateTime minStartDate) {
    this.minStartDate = JsonNullable.<OffsetDateTime>of(minStartDate);
    return this;
  }

  /**
   * Gets or sets the minimum premiere start date.
   * @return minStartDate
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getMinStartDate() {
        return minStartDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MIN_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getMinStartDate_JsonNullable() {
    return minStartDate;
  }
  
  @JsonProperty(JSON_PROPERTY_MIN_START_DATE)
  public void setMinStartDate_JsonNullable(JsonNullable<OffsetDateTime> minStartDate) {
    this.minStartDate = minStartDate;
  }

  public void setMinStartDate(@javax.annotation.Nullable OffsetDateTime minStartDate) {
    this.minStartDate = JsonNullable.<OffsetDateTime>of(minStartDate);
  }


  public GetProgramsDto hasAired(@javax.annotation.Nullable Boolean hasAired) {
    this.hasAired = JsonNullable.<Boolean>of(hasAired);
    return this;
  }

  /**
   * Gets or sets filter by programs that have completed airing, or not.
   * @return hasAired
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Boolean getHasAired() {
        return hasAired.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HAS_AIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getHasAired_JsonNullable() {
    return hasAired;
  }
  
  @JsonProperty(JSON_PROPERTY_HAS_AIRED)
  public void setHasAired_JsonNullable(JsonNullable<Boolean> hasAired) {
    this.hasAired = hasAired;
  }

  public void setHasAired(@javax.annotation.Nullable Boolean hasAired) {
    this.hasAired = JsonNullable.<Boolean>of(hasAired);
  }


  public GetProgramsDto isAiring(@javax.annotation.Nullable Boolean isAiring) {
    this.isAiring = JsonNullable.<Boolean>of(isAiring);
    return this;
  }

  /**
   * Gets or sets filter by programs that are currently airing, or not.
   * @return isAiring
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Boolean getIsAiring() {
        return isAiring.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_AIRING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsAiring_JsonNullable() {
    return isAiring;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_AIRING)
  public void setIsAiring_JsonNullable(JsonNullable<Boolean> isAiring) {
    this.isAiring = isAiring;
  }

  public void setIsAiring(@javax.annotation.Nullable Boolean isAiring) {
    this.isAiring = JsonNullable.<Boolean>of(isAiring);
  }


  public GetProgramsDto maxStartDate(@javax.annotation.Nullable OffsetDateTime maxStartDate) {
    this.maxStartDate = JsonNullable.<OffsetDateTime>of(maxStartDate);
    return this;
  }

  /**
   * Gets or sets the maximum premiere start date.
   * @return maxStartDate
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getMaxStartDate() {
        return maxStartDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getMaxStartDate_JsonNullable() {
    return maxStartDate;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_START_DATE)
  public void setMaxStartDate_JsonNullable(JsonNullable<OffsetDateTime> maxStartDate) {
    this.maxStartDate = maxStartDate;
  }

  public void setMaxStartDate(@javax.annotation.Nullable OffsetDateTime maxStartDate) {
    this.maxStartDate = JsonNullable.<OffsetDateTime>of(maxStartDate);
  }


  public GetProgramsDto minEndDate(@javax.annotation.Nullable OffsetDateTime minEndDate) {
    this.minEndDate = JsonNullable.<OffsetDateTime>of(minEndDate);
    return this;
  }

  /**
   * Gets or sets the minimum premiere end date.
   * @return minEndDate
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getMinEndDate() {
        return minEndDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MIN_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getMinEndDate_JsonNullable() {
    return minEndDate;
  }
  
  @JsonProperty(JSON_PROPERTY_MIN_END_DATE)
  public void setMinEndDate_JsonNullable(JsonNullable<OffsetDateTime> minEndDate) {
    this.minEndDate = minEndDate;
  }

  public void setMinEndDate(@javax.annotation.Nullable OffsetDateTime minEndDate) {
    this.minEndDate = JsonNullable.<OffsetDateTime>of(minEndDate);
  }


  public GetProgramsDto maxEndDate(@javax.annotation.Nullable OffsetDateTime maxEndDate) {
    this.maxEndDate = JsonNullable.<OffsetDateTime>of(maxEndDate);
    return this;
  }

  /**
   * Gets or sets the maximum premiere end date.
   * @return maxEndDate
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getMaxEndDate() {
        return maxEndDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getMaxEndDate_JsonNullable() {
    return maxEndDate;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_END_DATE)
  public void setMaxEndDate_JsonNullable(JsonNullable<OffsetDateTime> maxEndDate) {
    this.maxEndDate = maxEndDate;
  }

  public void setMaxEndDate(@javax.annotation.Nullable OffsetDateTime maxEndDate) {
    this.maxEndDate = JsonNullable.<OffsetDateTime>of(maxEndDate);
  }


  public GetProgramsDto isMovie(@javax.annotation.Nullable Boolean isMovie) {
    this.isMovie = JsonNullable.<Boolean>of(isMovie);
    return this;
  }

  /**
   * Gets or sets filter for movies.
   * @return isMovie
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Boolean getIsMovie() {
        return isMovie.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_MOVIE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsMovie_JsonNullable() {
    return isMovie;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_MOVIE)
  public void setIsMovie_JsonNullable(JsonNullable<Boolean> isMovie) {
    this.isMovie = isMovie;
  }

  public void setIsMovie(@javax.annotation.Nullable Boolean isMovie) {
    this.isMovie = JsonNullable.<Boolean>of(isMovie);
  }


  public GetProgramsDto isSeries(@javax.annotation.Nullable Boolean isSeries) {
    this.isSeries = JsonNullable.<Boolean>of(isSeries);
    return this;
  }

  /**
   * Gets or sets filter for series.
   * @return isSeries
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Boolean getIsSeries() {
        return isSeries.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_SERIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsSeries_JsonNullable() {
    return isSeries;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_SERIES)
  public void setIsSeries_JsonNullable(JsonNullable<Boolean> isSeries) {
    this.isSeries = isSeries;
  }

  public void setIsSeries(@javax.annotation.Nullable Boolean isSeries) {
    this.isSeries = JsonNullable.<Boolean>of(isSeries);
  }


  public GetProgramsDto isNews(@javax.annotation.Nullable Boolean isNews) {
    this.isNews = JsonNullable.<Boolean>of(isNews);
    return this;
  }

  /**
   * Gets or sets filter for news.
   * @return isNews
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Boolean getIsNews() {
        return isNews.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_NEWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsNews_JsonNullable() {
    return isNews;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_NEWS)
  public void setIsNews_JsonNullable(JsonNullable<Boolean> isNews) {
    this.isNews = isNews;
  }

  public void setIsNews(@javax.annotation.Nullable Boolean isNews) {
    this.isNews = JsonNullable.<Boolean>of(isNews);
  }


  public GetProgramsDto isKids(@javax.annotation.Nullable Boolean isKids) {
    this.isKids = JsonNullable.<Boolean>of(isKids);
    return this;
  }

  /**
   * Gets or sets filter for kids.
   * @return isKids
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Boolean getIsKids() {
        return isKids.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_KIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsKids_JsonNullable() {
    return isKids;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_KIDS)
  public void setIsKids_JsonNullable(JsonNullable<Boolean> isKids) {
    this.isKids = isKids;
  }

  public void setIsKids(@javax.annotation.Nullable Boolean isKids) {
    this.isKids = JsonNullable.<Boolean>of(isKids);
  }


  public GetProgramsDto isSports(@javax.annotation.Nullable Boolean isSports) {
    this.isSports = JsonNullable.<Boolean>of(isSports);
    return this;
  }

  /**
   * Gets or sets filter for sports.
   * @return isSports
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Boolean getIsSports() {
        return isSports.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_SPORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsSports_JsonNullable() {
    return isSports;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_SPORTS)
  public void setIsSports_JsonNullable(JsonNullable<Boolean> isSports) {
    this.isSports = isSports;
  }

  public void setIsSports(@javax.annotation.Nullable Boolean isSports) {
    this.isSports = JsonNullable.<Boolean>of(isSports);
  }


  public GetProgramsDto startIndex(@javax.annotation.Nullable Integer startIndex) {
    this.startIndex = JsonNullable.<Integer>of(startIndex);
    return this;
  }

  /**
   * Gets or sets the record index to start at. All items with a lower index will be dropped from the results.
   * @return startIndex
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getStartIndex() {
        return startIndex.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_START_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getStartIndex_JsonNullable() {
    return startIndex;
  }
  
  @JsonProperty(JSON_PROPERTY_START_INDEX)
  public void setStartIndex_JsonNullable(JsonNullable<Integer> startIndex) {
    this.startIndex = startIndex;
  }

  public void setStartIndex(@javax.annotation.Nullable Integer startIndex) {
    this.startIndex = JsonNullable.<Integer>of(startIndex);
  }


  public GetProgramsDto limit(@javax.annotation.Nullable Integer limit) {
    this.limit = JsonNullable.<Integer>of(limit);
    return this;
  }

  /**
   * Gets or sets the maximum number of records to return.
   * @return limit
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getLimit() {
        return limit.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getLimit_JsonNullable() {
    return limit;
  }
  
  @JsonProperty(JSON_PROPERTY_LIMIT)
  public void setLimit_JsonNullable(JsonNullable<Integer> limit) {
    this.limit = limit;
  }

  public void setLimit(@javax.annotation.Nullable Integer limit) {
    this.limit = JsonNullable.<Integer>of(limit);
  }


  public GetProgramsDto sortBy(@javax.annotation.Nullable List<ItemSortBy> sortBy) {
    this.sortBy = JsonNullable.<List<ItemSortBy>>of(sortBy);
    return this;
  }

  public GetProgramsDto addSortByItem(ItemSortBy sortByItem) {
    if (this.sortBy == null || !this.sortBy.isPresent()) {
      this.sortBy = JsonNullable.<List<ItemSortBy>>of(new ArrayList<>());
    }
    try {
      this.sortBy.get().add(sortByItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Gets or sets specify one or more sort orders, comma delimited. Options: Name, StartDate.
   * @return sortBy
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<ItemSortBy> getSortBy() {
        return sortBy.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SORT_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ItemSortBy>> getSortBy_JsonNullable() {
    return sortBy;
  }
  
  @JsonProperty(JSON_PROPERTY_SORT_BY)
  public void setSortBy_JsonNullable(JsonNullable<List<ItemSortBy>> sortBy) {
    this.sortBy = sortBy;
  }

  public void setSortBy(@javax.annotation.Nullable List<ItemSortBy> sortBy) {
    this.sortBy = JsonNullable.<List<ItemSortBy>>of(sortBy);
  }


  public GetProgramsDto sortOrder(@javax.annotation.Nullable List<SortOrder> sortOrder) {
    this.sortOrder = JsonNullable.<List<SortOrder>>of(sortOrder);
    return this;
  }

  public GetProgramsDto addSortOrderItem(SortOrder sortOrderItem) {
    if (this.sortOrder == null || !this.sortOrder.isPresent()) {
      this.sortOrder = JsonNullable.<List<SortOrder>>of(new ArrayList<>());
    }
    try {
      this.sortOrder.get().add(sortOrderItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Gets or sets sort order.
   * @return sortOrder
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<SortOrder> getSortOrder() {
        return sortOrder.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SORT_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SortOrder>> getSortOrder_JsonNullable() {
    return sortOrder;
  }
  
  @JsonProperty(JSON_PROPERTY_SORT_ORDER)
  public void setSortOrder_JsonNullable(JsonNullable<List<SortOrder>> sortOrder) {
    this.sortOrder = sortOrder;
  }

  public void setSortOrder(@javax.annotation.Nullable List<SortOrder> sortOrder) {
    this.sortOrder = JsonNullable.<List<SortOrder>>of(sortOrder);
  }


  public GetProgramsDto genres(@javax.annotation.Nullable List<String> genres) {
    this.genres = JsonNullable.<List<String>>of(genres);
    return this;
  }

  public GetProgramsDto addGenresItem(String genresItem) {
    if (this.genres == null || !this.genres.isPresent()) {
      this.genres = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.genres.get().add(genresItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Gets or sets the genres to return guide information for.
   * @return genres
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<String> getGenres() {
        return genres.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GENRES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getGenres_JsonNullable() {
    return genres;
  }
  
  @JsonProperty(JSON_PROPERTY_GENRES)
  public void setGenres_JsonNullable(JsonNullable<List<String>> genres) {
    this.genres = genres;
  }

  public void setGenres(@javax.annotation.Nullable List<String> genres) {
    this.genres = JsonNullable.<List<String>>of(genres);
  }


  public GetProgramsDto genreIds(@javax.annotation.Nullable List<UUID> genreIds) {
    this.genreIds = JsonNullable.<List<UUID>>of(genreIds);
    return this;
  }

  public GetProgramsDto addGenreIdsItem(UUID genreIdsItem) {
    if (this.genreIds == null || !this.genreIds.isPresent()) {
      this.genreIds = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.genreIds.get().add(genreIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Gets or sets the genre ids to return guide information for.
   * @return genreIds
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<UUID> getGenreIds() {
        return genreIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GENRE_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getGenreIds_JsonNullable() {
    return genreIds;
  }
  
  @JsonProperty(JSON_PROPERTY_GENRE_IDS)
  public void setGenreIds_JsonNullable(JsonNullable<List<UUID>> genreIds) {
    this.genreIds = genreIds;
  }

  public void setGenreIds(@javax.annotation.Nullable List<UUID> genreIds) {
    this.genreIds = JsonNullable.<List<UUID>>of(genreIds);
  }


  public GetProgramsDto enableImages(@javax.annotation.Nullable Boolean enableImages) {
    this.enableImages = JsonNullable.<Boolean>of(enableImages);
    return this;
  }

  /**
   * Gets or sets include image information in output.
   * @return enableImages
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Boolean getEnableImages() {
        return enableImages.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENABLE_IMAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getEnableImages_JsonNullable() {
    return enableImages;
  }
  
  @JsonProperty(JSON_PROPERTY_ENABLE_IMAGES)
  public void setEnableImages_JsonNullable(JsonNullable<Boolean> enableImages) {
    this.enableImages = enableImages;
  }

  public void setEnableImages(@javax.annotation.Nullable Boolean enableImages) {
    this.enableImages = JsonNullable.<Boolean>of(enableImages);
  }


  public GetProgramsDto enableTotalRecordCount(@javax.annotation.Nullable Boolean enableTotalRecordCount) {
    this.enableTotalRecordCount = enableTotalRecordCount;
    return this;
  }

  /**
   * Gets or sets a value indicating whether retrieve total record count.
   * @return enableTotalRecordCount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_TOTAL_RECORD_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableTotalRecordCount() {
    return enableTotalRecordCount;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_TOTAL_RECORD_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableTotalRecordCount(@javax.annotation.Nullable Boolean enableTotalRecordCount) {
    this.enableTotalRecordCount = enableTotalRecordCount;
  }


  public GetProgramsDto imageTypeLimit(@javax.annotation.Nullable Integer imageTypeLimit) {
    this.imageTypeLimit = JsonNullable.<Integer>of(imageTypeLimit);
    return this;
  }

  /**
   * Gets or sets the max number of images to return, per image type.
   * @return imageTypeLimit
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getImageTypeLimit() {
        return imageTypeLimit.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMAGE_TYPE_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getImageTypeLimit_JsonNullable() {
    return imageTypeLimit;
  }
  
  @JsonProperty(JSON_PROPERTY_IMAGE_TYPE_LIMIT)
  public void setImageTypeLimit_JsonNullable(JsonNullable<Integer> imageTypeLimit) {
    this.imageTypeLimit = imageTypeLimit;
  }

  public void setImageTypeLimit(@javax.annotation.Nullable Integer imageTypeLimit) {
    this.imageTypeLimit = JsonNullable.<Integer>of(imageTypeLimit);
  }


  public GetProgramsDto enableImageTypes(@javax.annotation.Nullable List<ImageType> enableImageTypes) {
    this.enableImageTypes = JsonNullable.<List<ImageType>>of(enableImageTypes);
    return this;
  }

  public GetProgramsDto addEnableImageTypesItem(ImageType enableImageTypesItem) {
    if (this.enableImageTypes == null || !this.enableImageTypes.isPresent()) {
      this.enableImageTypes = JsonNullable.<List<ImageType>>of(new ArrayList<>());
    }
    try {
      this.enableImageTypes.get().add(enableImageTypesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Gets or sets the image types to include in the output.
   * @return enableImageTypes
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<ImageType> getEnableImageTypes() {
        return enableImageTypes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENABLE_IMAGE_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ImageType>> getEnableImageTypes_JsonNullable() {
    return enableImageTypes;
  }
  
  @JsonProperty(JSON_PROPERTY_ENABLE_IMAGE_TYPES)
  public void setEnableImageTypes_JsonNullable(JsonNullable<List<ImageType>> enableImageTypes) {
    this.enableImageTypes = enableImageTypes;
  }

  public void setEnableImageTypes(@javax.annotation.Nullable List<ImageType> enableImageTypes) {
    this.enableImageTypes = JsonNullable.<List<ImageType>>of(enableImageTypes);
  }


  public GetProgramsDto enableUserData(@javax.annotation.Nullable Boolean enableUserData) {
    this.enableUserData = JsonNullable.<Boolean>of(enableUserData);
    return this;
  }

  /**
   * Gets or sets include user data.
   * @return enableUserData
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Boolean getEnableUserData() {
        return enableUserData.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENABLE_USER_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getEnableUserData_JsonNullable() {
    return enableUserData;
  }
  
  @JsonProperty(JSON_PROPERTY_ENABLE_USER_DATA)
  public void setEnableUserData_JsonNullable(JsonNullable<Boolean> enableUserData) {
    this.enableUserData = enableUserData;
  }

  public void setEnableUserData(@javax.annotation.Nullable Boolean enableUserData) {
    this.enableUserData = JsonNullable.<Boolean>of(enableUserData);
  }


  public GetProgramsDto seriesTimerId(@javax.annotation.Nullable String seriesTimerId) {
    this.seriesTimerId = JsonNullable.<String>of(seriesTimerId);
    return this;
  }

  /**
   * Gets or sets filter by series timer id.
   * @return seriesTimerId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getSeriesTimerId() {
        return seriesTimerId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERIES_TIMER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSeriesTimerId_JsonNullable() {
    return seriesTimerId;
  }
  
  @JsonProperty(JSON_PROPERTY_SERIES_TIMER_ID)
  public void setSeriesTimerId_JsonNullable(JsonNullable<String> seriesTimerId) {
    this.seriesTimerId = seriesTimerId;
  }

  public void setSeriesTimerId(@javax.annotation.Nullable String seriesTimerId) {
    this.seriesTimerId = JsonNullable.<String>of(seriesTimerId);
  }


  public GetProgramsDto librarySeriesId(@javax.annotation.Nullable UUID librarySeriesId) {
    this.librarySeriesId = JsonNullable.<UUID>of(librarySeriesId);
    return this;
  }

  /**
   * Gets or sets filter by library series id.
   * @return librarySeriesId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public UUID getLibrarySeriesId() {
        return librarySeriesId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LIBRARY_SERIES_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getLibrarySeriesId_JsonNullable() {
    return librarySeriesId;
  }
  
  @JsonProperty(JSON_PROPERTY_LIBRARY_SERIES_ID)
  public void setLibrarySeriesId_JsonNullable(JsonNullable<UUID> librarySeriesId) {
    this.librarySeriesId = librarySeriesId;
  }

  public void setLibrarySeriesId(@javax.annotation.Nullable UUID librarySeriesId) {
    this.librarySeriesId = JsonNullable.<UUID>of(librarySeriesId);
  }


  public GetProgramsDto fields(@javax.annotation.Nullable List<ItemFields> fields) {
    this.fields = JsonNullable.<List<ItemFields>>of(fields);
    return this;
  }

  public GetProgramsDto addFieldsItem(ItemFields fieldsItem) {
    if (this.fields == null || !this.fields.isPresent()) {
      this.fields = JsonNullable.<List<ItemFields>>of(new ArrayList<>());
    }
    try {
      this.fields.get().add(fieldsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Gets or sets specify additional fields of information to return in the output.
   * @return fields
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<ItemFields> getFields() {
        return fields.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ItemFields>> getFields_JsonNullable() {
    return fields;
  }
  
  @JsonProperty(JSON_PROPERTY_FIELDS)
  public void setFields_JsonNullable(JsonNullable<List<ItemFields>> fields) {
    this.fields = fields;
  }

  public void setFields(@javax.annotation.Nullable List<ItemFields> fields) {
    this.fields = JsonNullable.<List<ItemFields>>of(fields);
  }


  /**
   * Return true if this GetProgramsDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetProgramsDto getProgramsDto = (GetProgramsDto) o;
    return equalsNullable(this.channelIds, getProgramsDto.channelIds) &&
        equalsNullable(this.userId, getProgramsDto.userId) &&
        equalsNullable(this.minStartDate, getProgramsDto.minStartDate) &&
        equalsNullable(this.hasAired, getProgramsDto.hasAired) &&
        equalsNullable(this.isAiring, getProgramsDto.isAiring) &&
        equalsNullable(this.maxStartDate, getProgramsDto.maxStartDate) &&
        equalsNullable(this.minEndDate, getProgramsDto.minEndDate) &&
        equalsNullable(this.maxEndDate, getProgramsDto.maxEndDate) &&
        equalsNullable(this.isMovie, getProgramsDto.isMovie) &&
        equalsNullable(this.isSeries, getProgramsDto.isSeries) &&
        equalsNullable(this.isNews, getProgramsDto.isNews) &&
        equalsNullable(this.isKids, getProgramsDto.isKids) &&
        equalsNullable(this.isSports, getProgramsDto.isSports) &&
        equalsNullable(this.startIndex, getProgramsDto.startIndex) &&
        equalsNullable(this.limit, getProgramsDto.limit) &&
        equalsNullable(this.sortBy, getProgramsDto.sortBy) &&
        equalsNullable(this.sortOrder, getProgramsDto.sortOrder) &&
        equalsNullable(this.genres, getProgramsDto.genres) &&
        equalsNullable(this.genreIds, getProgramsDto.genreIds) &&
        equalsNullable(this.enableImages, getProgramsDto.enableImages) &&
        Objects.equals(this.enableTotalRecordCount, getProgramsDto.enableTotalRecordCount) &&
        equalsNullable(this.imageTypeLimit, getProgramsDto.imageTypeLimit) &&
        equalsNullable(this.enableImageTypes, getProgramsDto.enableImageTypes) &&
        equalsNullable(this.enableUserData, getProgramsDto.enableUserData) &&
        equalsNullable(this.seriesTimerId, getProgramsDto.seriesTimerId) &&
        equalsNullable(this.librarySeriesId, getProgramsDto.librarySeriesId) &&
        equalsNullable(this.fields, getProgramsDto.fields);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(channelIds), hashCodeNullable(userId), hashCodeNullable(minStartDate), hashCodeNullable(hasAired), hashCodeNullable(isAiring), hashCodeNullable(maxStartDate), hashCodeNullable(minEndDate), hashCodeNullable(maxEndDate), hashCodeNullable(isMovie), hashCodeNullable(isSeries), hashCodeNullable(isNews), hashCodeNullable(isKids), hashCodeNullable(isSports), hashCodeNullable(startIndex), hashCodeNullable(limit), hashCodeNullable(sortBy), hashCodeNullable(sortOrder), hashCodeNullable(genres), hashCodeNullable(genreIds), hashCodeNullable(enableImages), enableTotalRecordCount, hashCodeNullable(imageTypeLimit), hashCodeNullable(enableImageTypes), hashCodeNullable(enableUserData), hashCodeNullable(seriesTimerId), hashCodeNullable(librarySeriesId), hashCodeNullable(fields));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetProgramsDto {\n");
    sb.append("    channelIds: ").append(toIndentedString(channelIds)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    minStartDate: ").append(toIndentedString(minStartDate)).append("\n");
    sb.append("    hasAired: ").append(toIndentedString(hasAired)).append("\n");
    sb.append("    isAiring: ").append(toIndentedString(isAiring)).append("\n");
    sb.append("    maxStartDate: ").append(toIndentedString(maxStartDate)).append("\n");
    sb.append("    minEndDate: ").append(toIndentedString(minEndDate)).append("\n");
    sb.append("    maxEndDate: ").append(toIndentedString(maxEndDate)).append("\n");
    sb.append("    isMovie: ").append(toIndentedString(isMovie)).append("\n");
    sb.append("    isSeries: ").append(toIndentedString(isSeries)).append("\n");
    sb.append("    isNews: ").append(toIndentedString(isNews)).append("\n");
    sb.append("    isKids: ").append(toIndentedString(isKids)).append("\n");
    sb.append("    isSports: ").append(toIndentedString(isSports)).append("\n");
    sb.append("    startIndex: ").append(toIndentedString(startIndex)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    genres: ").append(toIndentedString(genres)).append("\n");
    sb.append("    genreIds: ").append(toIndentedString(genreIds)).append("\n");
    sb.append("    enableImages: ").append(toIndentedString(enableImages)).append("\n");
    sb.append("    enableTotalRecordCount: ").append(toIndentedString(enableTotalRecordCount)).append("\n");
    sb.append("    imageTypeLimit: ").append(toIndentedString(imageTypeLimit)).append("\n");
    sb.append("    enableImageTypes: ").append(toIndentedString(enableImageTypes)).append("\n");
    sb.append("    enableUserData: ").append(toIndentedString(enableUserData)).append("\n");
    sb.append("    seriesTimerId: ").append(toIndentedString(seriesTimerId)).append("\n");
    sb.append("    librarySeriesId: ").append(toIndentedString(librarySeriesId)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `ChannelIds` to the URL query string
    if (getChannelIds() != null) {
      for (int i = 0; i < getChannelIds().size(); i++) {
        if (getChannelIds().get(i) != null) {
          joiner.add(String.format("%sChannelIds%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getChannelIds().get(i)))));
        }
      }
    }

    // add `UserId` to the URL query string
    if (getUserId() != null) {
      joiner.add(String.format("%sUserId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getUserId()))));
    }

    // add `MinStartDate` to the URL query string
    if (getMinStartDate() != null) {
      joiner.add(String.format("%sMinStartDate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMinStartDate()))));
    }

    // add `HasAired` to the URL query string
    if (getHasAired() != null) {
      joiner.add(String.format("%sHasAired%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getHasAired()))));
    }

    // add `IsAiring` to the URL query string
    if (getIsAiring() != null) {
      joiner.add(String.format("%sIsAiring%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsAiring()))));
    }

    // add `MaxStartDate` to the URL query string
    if (getMaxStartDate() != null) {
      joiner.add(String.format("%sMaxStartDate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMaxStartDate()))));
    }

    // add `MinEndDate` to the URL query string
    if (getMinEndDate() != null) {
      joiner.add(String.format("%sMinEndDate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMinEndDate()))));
    }

    // add `MaxEndDate` to the URL query string
    if (getMaxEndDate() != null) {
      joiner.add(String.format("%sMaxEndDate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMaxEndDate()))));
    }

    // add `IsMovie` to the URL query string
    if (getIsMovie() != null) {
      joiner.add(String.format("%sIsMovie%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsMovie()))));
    }

    // add `IsSeries` to the URL query string
    if (getIsSeries() != null) {
      joiner.add(String.format("%sIsSeries%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsSeries()))));
    }

    // add `IsNews` to the URL query string
    if (getIsNews() != null) {
      joiner.add(String.format("%sIsNews%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsNews()))));
    }

    // add `IsKids` to the URL query string
    if (getIsKids() != null) {
      joiner.add(String.format("%sIsKids%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsKids()))));
    }

    // add `IsSports` to the URL query string
    if (getIsSports() != null) {
      joiner.add(String.format("%sIsSports%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsSports()))));
    }

    // add `StartIndex` to the URL query string
    if (getStartIndex() != null) {
      joiner.add(String.format("%sStartIndex%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStartIndex()))));
    }

    // add `Limit` to the URL query string
    if (getLimit() != null) {
      joiner.add(String.format("%sLimit%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLimit()))));
    }

    // add `SortBy` to the URL query string
    if (getSortBy() != null) {
      for (int i = 0; i < getSortBy().size(); i++) {
        if (getSortBy().get(i) != null) {
          joiner.add(String.format("%sSortBy%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getSortBy().get(i)))));
        }
      }
    }

    // add `SortOrder` to the URL query string
    if (getSortOrder() != null) {
      for (int i = 0; i < getSortOrder().size(); i++) {
        if (getSortOrder().get(i) != null) {
          joiner.add(String.format("%sSortOrder%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getSortOrder().get(i)))));
        }
      }
    }

    // add `Genres` to the URL query string
    if (getGenres() != null) {
      for (int i = 0; i < getGenres().size(); i++) {
        joiner.add(String.format("%sGenres%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getGenres().get(i)))));
      }
    }

    // add `GenreIds` to the URL query string
    if (getGenreIds() != null) {
      for (int i = 0; i < getGenreIds().size(); i++) {
        if (getGenreIds().get(i) != null) {
          joiner.add(String.format("%sGenreIds%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getGenreIds().get(i)))));
        }
      }
    }

    // add `EnableImages` to the URL query string
    if (getEnableImages() != null) {
      joiner.add(String.format("%sEnableImages%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableImages()))));
    }

    // add `EnableTotalRecordCount` to the URL query string
    if (getEnableTotalRecordCount() != null) {
      joiner.add(String.format("%sEnableTotalRecordCount%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableTotalRecordCount()))));
    }

    // add `ImageTypeLimit` to the URL query string
    if (getImageTypeLimit() != null) {
      joiner.add(String.format("%sImageTypeLimit%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getImageTypeLimit()))));
    }

    // add `EnableImageTypes` to the URL query string
    if (getEnableImageTypes() != null) {
      for (int i = 0; i < getEnableImageTypes().size(); i++) {
        if (getEnableImageTypes().get(i) != null) {
          joiner.add(String.format("%sEnableImageTypes%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getEnableImageTypes().get(i)))));
        }
      }
    }

    // add `EnableUserData` to the URL query string
    if (getEnableUserData() != null) {
      joiner.add(String.format("%sEnableUserData%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableUserData()))));
    }

    // add `SeriesTimerId` to the URL query string
    if (getSeriesTimerId() != null) {
      joiner.add(String.format("%sSeriesTimerId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSeriesTimerId()))));
    }

    // add `LibrarySeriesId` to the URL query string
    if (getLibrarySeriesId() != null) {
      joiner.add(String.format("%sLibrarySeriesId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLibrarySeriesId()))));
    }

    // add `Fields` to the URL query string
    if (getFields() != null) {
      for (int i = 0; i < getFields().size(); i++) {
        if (getFields().get(i) != null) {
          joiner.add(String.format("%sFields%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getFields().get(i)))));
        }
      }
    }

    return joiner.toString();
  }
}

