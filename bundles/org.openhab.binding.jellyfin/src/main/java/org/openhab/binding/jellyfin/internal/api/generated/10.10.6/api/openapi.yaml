openapi: 3.0.1
info:
  title: Jellyfin API
  version: 10.10.6
  x-jellyfin-version: 10.10.6
servers:
- url: http://localhost
paths:
  /System/ActivityLog/Entries:
    get:
      operationId: GetLogEntries
      parameters:
      - description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The minimum date. Format = ISO.
        explode: true
        in: query
        name: minDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Optional. Filter log entries if it has user id, or not."
        explode: true
        in: query
        name: hasUserId
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityLogEntryQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ActivityLogEntryQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ActivityLogEntryQueryResult'
          description: Activity log returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Gets activity log entries.
      tags:
      - ActivityLog
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Auth/Keys:
    get:
      operationId: GetKeys
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationInfoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/AuthenticationInfoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/AuthenticationInfoQueryResult'
          description: Api keys retrieved.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Get all keys.
      tags:
      - ApiKey
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: CreateKey
      parameters:
      - description: Name of the app using the authentication key.
        explode: true
        in: query
        name: app
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Api key created.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Create a new api key.
      tags:
      - ApiKey
      x-accepts:
      - application/json
  /Auth/Keys/{key}:
    delete:
      operationId: RevokeKey
      parameters:
      - description: The access token to delete.
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Api key deleted.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Remove an api key.
      tags:
      - ApiKey
      x-accepts:
      - application/json
  /Artists:
    get:
      operationId: GetArtists
      parameters:
      - description: Optional filter by minimum community rating.
        explode: true
        in: query
        name: minCommunityRating
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Search term.
        explode: true
        in: query
        name: searchTerm
        required: false
        schema:
          type: string
        style: form
      - description: Specify this to localize the search to a specific item or folder.
          Omit to use the root.
        explode: true
        in: query
        name: parentId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered out based on\
          \ item type. This allows multiple, comma delimited."
        explode: true
        in: query
        name: excludeItemTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/BaseItemKind'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimited."
        explode: true
        in: query
        name: includeItemTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/BaseItemKind'
          type: array
        style: form
      - description: Optional. Specify additional filters to apply.
        explode: true
        in: query
        name: filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFilter'
          type: array
        style: form
      - description: "Optional filter by items that are marked as favorite, or not."
        explode: true
        in: query
        name: isFavorite
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional filter by MediaType. Allows multiple, comma delimited."
        explode: true
        in: query
        name: mediaTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/MediaType'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimited."
        explode: true
        in: query
        name: genres
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on genre\
          \ id. This allows multiple, pipe delimited."
        explode: true
        in: query
        name: genreIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimited."
        explode: true
        in: query
        name: officialRatings
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimited."
        explode: true
        in: query
        name: tags
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimited."
        explode: true
        in: query
        name: years
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - description: "Optional, include user data."
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional, the max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        explode: true
        in: query
        name: person
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person ids."
        explode: true
        in: query
        name: personIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited."
        explode: true
        in: query
        name: personTypes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimited."
        explode: true
        in: query
        name: studios
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on studio\
          \ id. This allows multiple, pipe delimited."
        explode: true
        in: query
        name: studioIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        explode: true
        in: query
        name: nameStartsWithOrGreater
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter by items whose name is sorted equally than a
          given input string.
        explode: true
        in: query
        name: nameStartsWith
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter by items whose name is equally or lesser than
          a given input string.
        explode: true
        in: query
        name: nameLessThan
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify one or more sort orders, comma delimited."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemSortBy'
          type: array
        style: form
      - description: "Sort Order - Ascending,Descending."
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          items:
            $ref: '#/components/schemas/SortOrder'
          type: array
        style: form
      - description: "Optional, include image information in output."
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Total record count.
        explode: true
        in: query
        name: enableTotalRecordCount
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Artists returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: "Gets all artists from a given item, folder, or the entire library."
      tags:
      - Artists
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Artists/{name}:
    get:
      operationId: GetArtistByName
      parameters:
      - description: Studio name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDto'
          description: Artist returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets an artist by name.
      tags:
      - Artists
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Artists/AlbumArtists:
    get:
      operationId: GetAlbumArtists
      parameters:
      - description: Optional filter by minimum community rating.
        explode: true
        in: query
        name: minCommunityRating
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Search term.
        explode: true
        in: query
        name: searchTerm
        required: false
        schema:
          type: string
        style: form
      - description: Specify this to localize the search to a specific item or folder.
          Omit to use the root.
        explode: true
        in: query
        name: parentId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered out based on\
          \ item type. This allows multiple, comma delimited."
        explode: true
        in: query
        name: excludeItemTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/BaseItemKind'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimited."
        explode: true
        in: query
        name: includeItemTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/BaseItemKind'
          type: array
        style: form
      - description: Optional. Specify additional filters to apply.
        explode: true
        in: query
        name: filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFilter'
          type: array
        style: form
      - description: "Optional filter by items that are marked as favorite, or not."
        explode: true
        in: query
        name: isFavorite
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional filter by MediaType. Allows multiple, comma delimited."
        explode: true
        in: query
        name: mediaTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/MediaType'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimited."
        explode: true
        in: query
        name: genres
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on genre\
          \ id. This allows multiple, pipe delimited."
        explode: true
        in: query
        name: genreIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimited."
        explode: true
        in: query
        name: officialRatings
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimited."
        explode: true
        in: query
        name: tags
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimited."
        explode: true
        in: query
        name: years
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - description: "Optional, include user data."
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional, the max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        explode: true
        in: query
        name: person
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person ids."
        explode: true
        in: query
        name: personIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited."
        explode: true
        in: query
        name: personTypes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimited."
        explode: true
        in: query
        name: studios
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on studio\
          \ id. This allows multiple, pipe delimited."
        explode: true
        in: query
        name: studioIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        explode: true
        in: query
        name: nameStartsWithOrGreater
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter by items whose name is sorted equally than a
          given input string.
        explode: true
        in: query
        name: nameStartsWith
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter by items whose name is equally or lesser than
          a given input string.
        explode: true
        in: query
        name: nameLessThan
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify one or more sort orders, comma delimited."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemSortBy'
          type: array
        style: form
      - description: "Sort Order - Ascending,Descending."
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          items:
            $ref: '#/components/schemas/SortOrder'
          type: array
        style: form
      - description: "Optional, include image information in output."
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Total record count.
        explode: true
        in: query
        name: enableTotalRecordCount
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Album artists returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: "Gets all album artists from a given item, folder, or the entire library."
      tags:
      - Artists
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Audio/{itemId}/stream:
    get:
      operationId: GetAudioStream
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The audio container.
        explode: true
        in: query
        name: container
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false."
        explode: true
        in: query
        name: static
        required: false
        schema:
          type: boolean
        style: form
      - description: The streaming parameters.
        explode: true
        in: query
        name: params
        required: false
        schema:
          type: string
        style: form
      - description: The tag.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: Optional. The dlna device profile id to utilize.
        explode: true
        in: query
        name: deviceProfileId
        required: false
        schema:
          type: string
        style: form
      - description: The play session id.
        explode: true
        in: query
        name: playSessionId
        required: false
        schema:
          type: string
        style: form
      - description: The segment container.
        explode: true
        in: query
        name: segmentContainer
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: The segment length.
        explode: true
        in: query
        name: segmentLength
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The minimum number of segments.
        explode: true
        in: query
        name: minSegments
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "The media version id, if playing an alternate version."
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          type: string
        style: form
      - description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify an audio codec to encode to, e.g. mp3. If\
          \ omitted the server will auto-select using the url's extension."
        explode: true
        in: query
        name: audioCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        explode: true
        in: query
        name: enableAutoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the video stream url.
        explode: true
        in: query
        name: allowVideoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the audio stream url.
        explode: true
        in: query
        name: allowAudioStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to break on non key frames.
        explode: true
        in: query
        name: breakOnNonKeyFrames
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a specific audio sample rate, e.g. 44100."
        explode: true
        in: query
        name: audioSampleRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum audio bit depth.
        explode: true
        in: query
        name: maxAudioBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: audioBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: audioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: maxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific an encoder profile (varies by encoder),\
          \ e.g. main, baseline, high."
        explode: true
        in: query
        name: profile
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify a level for the encoder profile (varies by\
          \ encoder), e.g. 3, 3.1."
        explode: true
        in: query
        name: level
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. A specific video framerate to encode to, e.g. 23.976.\
          \ Generally this should be omitted unless the device has specific requirements."
        explode: true
        in: query
        name: framerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "Optional. A specific maximum video framerate to encode to, e.g.\
          \ 23.976. Generally this should be omitted unless the device has specific\
          \ requirements."
        explode: true
        in: query
        name: maxFramerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        explode: true
        in: query
        name: copyTimestamps
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a starting offset, in ticks. 1 tick = 10000\
          \ ms."
        explode: true
        in: query
        name: startTimeTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Optional. The fixed horizontal resolution of the encoded video.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The fixed vertical resolution of the encoded video.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: videoBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        explode: true
        in: query
        name: subtitleStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify the subtitle delivery method.
        explode: true
        in: query
        name: subtitleMethod
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SubtitleDeliveryMethod'
          enum:
          - Encode
          - Embed
          - External
          - Hls
          - Drop
          type: string
        style: form
      - description: Optional.
        explode: true
        in: query
        name: maxRefFrames
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum video bit depth.
        explode: true
        in: query
        name: maxVideoBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Whether to require avc.
        explode: true
        in: query
        name: requireAvc
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to deinterlace the video.
        explode: true
        in: query
        name: deInterlace
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to require a non anamorphic stream.
        explode: true
        in: query
        name: requireNonAnamorphic
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. The maximum number of audio channels to transcode.
        explode: true
        in: query
        name: transcodingMaxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The limit of how many cpu cores to use.
        explode: true
        in: query
        name: cpuCoreLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The live stream id.
        explode: true
        in: query
        name: liveStreamId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Whether to enable the MpegtsM2Ts mode.
        explode: true
        in: query
        name: enableMpegtsM2TsMode
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension."
        explode: true
        in: query
        name: videoCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. Specify a subtitle codec to encode to.
        explode: true
        in: query
        name: subtitleCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. The transcoding reason.
        explode: true
        in: query
        name: transcodeReasons
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        explode: true
        in: query
        name: audioStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        explode: true
        in: query
        name: videoStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
        explode: true
        in: query
        name: context
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/EncodingContext'
          enum:
          - Streaming
          - Static
          type: string
        style: form
      - description: Optional. The streaming options.
        explode: true
        in: query
        name: streamOptions
        required: false
        schema:
          additionalProperties:
            nullable: true
            type: string
          type: object
        style: form
      - description: Optional. Whether to enable Audio Encoding.
        explode: true
        in: query
        name: enableAudioVbrEncoding
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            audio/*:
              schema:
                format: binary
                type: string
          description: Audio stream returned.
      summary: Gets an audio stream.
      tags:
      - Audio
      x-accepts:
      - audio/*
    head:
      operationId: HeadAudioStream
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The audio container.
        explode: true
        in: query
        name: container
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false."
        explode: true
        in: query
        name: static
        required: false
        schema:
          type: boolean
        style: form
      - description: The streaming parameters.
        explode: true
        in: query
        name: params
        required: false
        schema:
          type: string
        style: form
      - description: The tag.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: Optional. The dlna device profile id to utilize.
        explode: true
        in: query
        name: deviceProfileId
        required: false
        schema:
          type: string
        style: form
      - description: The play session id.
        explode: true
        in: query
        name: playSessionId
        required: false
        schema:
          type: string
        style: form
      - description: The segment container.
        explode: true
        in: query
        name: segmentContainer
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: The segment length.
        explode: true
        in: query
        name: segmentLength
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The minimum number of segments.
        explode: true
        in: query
        name: minSegments
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "The media version id, if playing an alternate version."
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          type: string
        style: form
      - description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify an audio codec to encode to, e.g. mp3. If\
          \ omitted the server will auto-select using the url's extension."
        explode: true
        in: query
        name: audioCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        explode: true
        in: query
        name: enableAutoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the video stream url.
        explode: true
        in: query
        name: allowVideoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the audio stream url.
        explode: true
        in: query
        name: allowAudioStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to break on non key frames.
        explode: true
        in: query
        name: breakOnNonKeyFrames
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a specific audio sample rate, e.g. 44100."
        explode: true
        in: query
        name: audioSampleRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum audio bit depth.
        explode: true
        in: query
        name: maxAudioBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: audioBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: audioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: maxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific an encoder profile (varies by encoder),\
          \ e.g. main, baseline, high."
        explode: true
        in: query
        name: profile
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify a level for the encoder profile (varies by\
          \ encoder), e.g. 3, 3.1."
        explode: true
        in: query
        name: level
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. A specific video framerate to encode to, e.g. 23.976.\
          \ Generally this should be omitted unless the device has specific requirements."
        explode: true
        in: query
        name: framerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "Optional. A specific maximum video framerate to encode to, e.g.\
          \ 23.976. Generally this should be omitted unless the device has specific\
          \ requirements."
        explode: true
        in: query
        name: maxFramerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        explode: true
        in: query
        name: copyTimestamps
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a starting offset, in ticks. 1 tick = 10000\
          \ ms."
        explode: true
        in: query
        name: startTimeTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Optional. The fixed horizontal resolution of the encoded video.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The fixed vertical resolution of the encoded video.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: videoBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        explode: true
        in: query
        name: subtitleStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify the subtitle delivery method.
        explode: true
        in: query
        name: subtitleMethod
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SubtitleDeliveryMethod'
          enum:
          - Encode
          - Embed
          - External
          - Hls
          - Drop
          type: string
        style: form
      - description: Optional.
        explode: true
        in: query
        name: maxRefFrames
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum video bit depth.
        explode: true
        in: query
        name: maxVideoBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Whether to require avc.
        explode: true
        in: query
        name: requireAvc
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to deinterlace the video.
        explode: true
        in: query
        name: deInterlace
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to require a non anamorphic stream.
        explode: true
        in: query
        name: requireNonAnamorphic
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. The maximum number of audio channels to transcode.
        explode: true
        in: query
        name: transcodingMaxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The limit of how many cpu cores to use.
        explode: true
        in: query
        name: cpuCoreLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The live stream id.
        explode: true
        in: query
        name: liveStreamId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Whether to enable the MpegtsM2Ts mode.
        explode: true
        in: query
        name: enableMpegtsM2TsMode
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension."
        explode: true
        in: query
        name: videoCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. Specify a subtitle codec to encode to.
        explode: true
        in: query
        name: subtitleCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. The transcoding reason.
        explode: true
        in: query
        name: transcodeReasons
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        explode: true
        in: query
        name: audioStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        explode: true
        in: query
        name: videoStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
        explode: true
        in: query
        name: context
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/EncodingContext'
          enum:
          - Streaming
          - Static
          type: string
        style: form
      - description: Optional. The streaming options.
        explode: true
        in: query
        name: streamOptions
        required: false
        schema:
          additionalProperties:
            nullable: true
            type: string
          type: object
        style: form
      - description: Optional. Whether to enable Audio Encoding.
        explode: true
        in: query
        name: enableAudioVbrEncoding
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            audio/*:
              schema:
                format: binary
                type: string
          description: Audio stream returned.
      summary: Gets an audio stream.
      tags:
      - Audio
      x-accepts:
      - audio/*
  /Audio/{itemId}/stream.{container}:
    get:
      operationId: GetAudioStreamByContainer
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The audio container.
        explode: false
        in: path
        name: container
        required: true
        schema:
          type: string
        style: simple
      - description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false."
        explode: true
        in: query
        name: static
        required: false
        schema:
          type: boolean
        style: form
      - description: The streaming parameters.
        explode: true
        in: query
        name: params
        required: false
        schema:
          type: string
        style: form
      - description: The tag.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: Optional. The dlna device profile id to utilize.
        explode: true
        in: query
        name: deviceProfileId
        required: false
        schema:
          type: string
        style: form
      - description: The play session id.
        explode: true
        in: query
        name: playSessionId
        required: false
        schema:
          type: string
        style: form
      - description: The segment container.
        explode: true
        in: query
        name: segmentContainer
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: The segment length.
        explode: true
        in: query
        name: segmentLength
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The minimum number of segments.
        explode: true
        in: query
        name: minSegments
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "The media version id, if playing an alternate version."
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          type: string
        style: form
      - description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify an audio codec to encode to, e.g. mp3. If\
          \ omitted the server will auto-select using the url's extension."
        explode: true
        in: query
        name: audioCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        explode: true
        in: query
        name: enableAutoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the video stream url.
        explode: true
        in: query
        name: allowVideoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the audio stream url.
        explode: true
        in: query
        name: allowAudioStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to break on non key frames.
        explode: true
        in: query
        name: breakOnNonKeyFrames
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a specific audio sample rate, e.g. 44100."
        explode: true
        in: query
        name: audioSampleRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum audio bit depth.
        explode: true
        in: query
        name: maxAudioBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: audioBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: audioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: maxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific an encoder profile (varies by encoder),\
          \ e.g. main, baseline, high."
        explode: true
        in: query
        name: profile
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify a level for the encoder profile (varies by\
          \ encoder), e.g. 3, 3.1."
        explode: true
        in: query
        name: level
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. A specific video framerate to encode to, e.g. 23.976.\
          \ Generally this should be omitted unless the device has specific requirements."
        explode: true
        in: query
        name: framerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "Optional. A specific maximum video framerate to encode to, e.g.\
          \ 23.976. Generally this should be omitted unless the device has specific\
          \ requirements."
        explode: true
        in: query
        name: maxFramerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        explode: true
        in: query
        name: copyTimestamps
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a starting offset, in ticks. 1 tick = 10000\
          \ ms."
        explode: true
        in: query
        name: startTimeTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Optional. The fixed horizontal resolution of the encoded video.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The fixed vertical resolution of the encoded video.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: videoBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        explode: true
        in: query
        name: subtitleStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify the subtitle delivery method.
        explode: true
        in: query
        name: subtitleMethod
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SubtitleDeliveryMethod'
          enum:
          - Encode
          - Embed
          - External
          - Hls
          - Drop
          type: string
        style: form
      - description: Optional.
        explode: true
        in: query
        name: maxRefFrames
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum video bit depth.
        explode: true
        in: query
        name: maxVideoBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Whether to require avc.
        explode: true
        in: query
        name: requireAvc
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to deinterlace the video.
        explode: true
        in: query
        name: deInterlace
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to require a non anamporphic stream.
        explode: true
        in: query
        name: requireNonAnamorphic
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. The maximum number of audio channels to transcode.
        explode: true
        in: query
        name: transcodingMaxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The limit of how many cpu cores to use.
        explode: true
        in: query
        name: cpuCoreLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The live stream id.
        explode: true
        in: query
        name: liveStreamId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Whether to enable the MpegtsM2Ts mode.
        explode: true
        in: query
        name: enableMpegtsM2TsMode
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension."
        explode: true
        in: query
        name: videoCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. Specify a subtitle codec to encode to.
        explode: true
        in: query
        name: subtitleCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. The transcoding reason.
        explode: true
        in: query
        name: transcodeReasons
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        explode: true
        in: query
        name: audioStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        explode: true
        in: query
        name: videoStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
        explode: true
        in: query
        name: context
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/EncodingContext'
          enum:
          - Streaming
          - Static
          type: string
        style: form
      - description: Optional. The streaming options.
        explode: true
        in: query
        name: streamOptions
        required: false
        schema:
          additionalProperties:
            nullable: true
            type: string
          type: object
        style: form
      - description: Optional. Whether to enable Audio Encoding.
        explode: true
        in: query
        name: enableAudioVbrEncoding
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            audio/*:
              schema:
                format: binary
                type: string
          description: Audio stream returned.
      summary: Gets an audio stream.
      tags:
      - Audio
      x-accepts:
      - audio/*
    head:
      operationId: HeadAudioStreamByContainer
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The audio container.
        explode: false
        in: path
        name: container
        required: true
        schema:
          type: string
        style: simple
      - description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false."
        explode: true
        in: query
        name: static
        required: false
        schema:
          type: boolean
        style: form
      - description: The streaming parameters.
        explode: true
        in: query
        name: params
        required: false
        schema:
          type: string
        style: form
      - description: The tag.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: Optional. The dlna device profile id to utilize.
        explode: true
        in: query
        name: deviceProfileId
        required: false
        schema:
          type: string
        style: form
      - description: The play session id.
        explode: true
        in: query
        name: playSessionId
        required: false
        schema:
          type: string
        style: form
      - description: The segment container.
        explode: true
        in: query
        name: segmentContainer
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: The segment length.
        explode: true
        in: query
        name: segmentLength
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The minimum number of segments.
        explode: true
        in: query
        name: minSegments
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "The media version id, if playing an alternate version."
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          type: string
        style: form
      - description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify an audio codec to encode to, e.g. mp3. If\
          \ omitted the server will auto-select using the url's extension."
        explode: true
        in: query
        name: audioCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        explode: true
        in: query
        name: enableAutoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the video stream url.
        explode: true
        in: query
        name: allowVideoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the audio stream url.
        explode: true
        in: query
        name: allowAudioStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to break on non key frames.
        explode: true
        in: query
        name: breakOnNonKeyFrames
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a specific audio sample rate, e.g. 44100."
        explode: true
        in: query
        name: audioSampleRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum audio bit depth.
        explode: true
        in: query
        name: maxAudioBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: audioBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: audioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: maxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific an encoder profile (varies by encoder),\
          \ e.g. main, baseline, high."
        explode: true
        in: query
        name: profile
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify a level for the encoder profile (varies by\
          \ encoder), e.g. 3, 3.1."
        explode: true
        in: query
        name: level
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. A specific video framerate to encode to, e.g. 23.976.\
          \ Generally this should be omitted unless the device has specific requirements."
        explode: true
        in: query
        name: framerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "Optional. A specific maximum video framerate to encode to, e.g.\
          \ 23.976. Generally this should be omitted unless the device has specific\
          \ requirements."
        explode: true
        in: query
        name: maxFramerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        explode: true
        in: query
        name: copyTimestamps
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a starting offset, in ticks. 1 tick = 10000\
          \ ms."
        explode: true
        in: query
        name: startTimeTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Optional. The fixed horizontal resolution of the encoded video.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The fixed vertical resolution of the encoded video.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: videoBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        explode: true
        in: query
        name: subtitleStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify the subtitle delivery method.
        explode: true
        in: query
        name: subtitleMethod
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SubtitleDeliveryMethod'
          enum:
          - Encode
          - Embed
          - External
          - Hls
          - Drop
          type: string
        style: form
      - description: Optional.
        explode: true
        in: query
        name: maxRefFrames
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum video bit depth.
        explode: true
        in: query
        name: maxVideoBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Whether to require avc.
        explode: true
        in: query
        name: requireAvc
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to deinterlace the video.
        explode: true
        in: query
        name: deInterlace
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to require a non anamporphic stream.
        explode: true
        in: query
        name: requireNonAnamorphic
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. The maximum number of audio channels to transcode.
        explode: true
        in: query
        name: transcodingMaxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The limit of how many cpu cores to use.
        explode: true
        in: query
        name: cpuCoreLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The live stream id.
        explode: true
        in: query
        name: liveStreamId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Whether to enable the MpegtsM2Ts mode.
        explode: true
        in: query
        name: enableMpegtsM2TsMode
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension."
        explode: true
        in: query
        name: videoCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. Specify a subtitle codec to encode to.
        explode: true
        in: query
        name: subtitleCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. The transcoding reason.
        explode: true
        in: query
        name: transcodeReasons
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        explode: true
        in: query
        name: audioStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        explode: true
        in: query
        name: videoStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
        explode: true
        in: query
        name: context
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/EncodingContext'
          enum:
          - Streaming
          - Static
          type: string
        style: form
      - description: Optional. The streaming options.
        explode: true
        in: query
        name: streamOptions
        required: false
        schema:
          additionalProperties:
            nullable: true
            type: string
          type: object
        style: form
      - description: Optional. Whether to enable Audio Encoding.
        explode: true
        in: query
        name: enableAudioVbrEncoding
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            audio/*:
              schema:
                format: binary
                type: string
          description: Audio stream returned.
      summary: Gets an audio stream.
      tags:
      - Audio
      x-accepts:
      - audio/*
  /Branding/Configuration:
    get:
      operationId: GetBrandingOptions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandingOptions'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BrandingOptions'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BrandingOptions'
          description: Branding configuration returned.
      summary: Gets branding configuration.
      tags:
      - Branding
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Branding/Css:
    get:
      operationId: GetBrandingCss
      responses:
        "200":
          content:
            text/css:
              schema:
                type: string
            application/json:
              schema:
                type: string
            application/json; profile="CamelCase":
              schema:
                type: string
            application/json; profile="PascalCase":
              schema:
                type: string
          description: Branding css returned.
        "204":
          description: No branding css configured.
      summary: Gets branding css.
      tags:
      - Branding
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - text/css
  /Branding/Css.css:
    get:
      operationId: GetBrandingCss_2
      responses:
        "200":
          content:
            text/css:
              schema:
                type: string
            application/json:
              schema:
                type: string
            application/json; profile="CamelCase":
              schema:
                type: string
            application/json; profile="PascalCase":
              schema:
                type: string
          description: Branding css returned.
        "204":
          description: No branding css configured.
      summary: Gets branding css.
      tags:
      - Branding
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - text/css
  /Channels:
    get:
      operationId: GetChannels
      parameters:
      - description: User Id to filter by. Use System.Guid.Empty to not filter by
          user.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Filter by channels that support getting latest items.
        explode: true
        in: query
        name: supportsLatestItems
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter by channels that support media deletion.
        explode: true
        in: query
        name: supportsMediaDeletion
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter by channels that are favorite.
        explode: true
        in: query
        name: isFavorite
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Channels returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets available channels.
      tags:
      - Channels
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Channels/{channelId}/Features:
    get:
      operationId: GetChannelFeatures
      parameters:
      - description: Channel id.
        explode: false
        in: path
        name: channelId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelFeatures'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ChannelFeatures'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ChannelFeatures'
          description: Channel features returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get channel features.
      tags:
      - Channels
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Channels/{channelId}/Items:
    get:
      operationId: GetChannelItems
      parameters:
      - description: Channel Id.
        explode: false
        in: path
        name: channelId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Optional. Folder Id.
        explode: true
        in: query
        name: folderId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. User Id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Sort Order - Ascending,Descending."
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          items:
            $ref: '#/components/schemas/SortOrder'
          type: array
        style: form
      - description: Optional. Specify additional filters to apply.
        explode: true
        in: query
        name: filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFilter'
          type: array
        style: form
      - description: "Optional. Specify one or more sort orders, comma delimited.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemSortBy'
          type: array
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Channel items returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get channel items.
      tags:
      - Channels
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Channels/Features:
    get:
      operationId: GetAllChannelFeatures
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChannelFeatures'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/ChannelFeatures'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/ChannelFeatures'
                type: array
          description: All channel features returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get all channel features.
      tags:
      - Channels
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Channels/Items/Latest:
    get:
      operationId: GetLatestChannelItems
      parameters:
      - description: Optional. User Id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify additional filters to apply.
        explode: true
        in: query
        name: filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFilter'
          type: array
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: "Optional. Specify one or more channel id's, comma delimited."
        explode: true
        in: query
        name: channelIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Latest channel items returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets latest channel items.
      tags:
      - Channels
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /ClientLog/Document:
    post:
      operationId: LogFile
      requestBody:
        content:
          text/plain:
            schema:
              format: binary
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLogDocumentResponseDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ClientLogDocumentResponseDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ClientLogDocumentResponseDto'
          description: Document saved.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Event logging disabled.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Upload size too large.
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Upload a document.
      tags:
      - ClientLog
      x-content-type: text/plain
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Collections:
    post:
      operationId: CreateCollection
      parameters:
      - description: The name of the collection.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Item Ids to add to the collection.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional. Create the collection within a specific folder.
        explode: true
        in: query
        name: parentId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Whether or not to lock the new collection.
        explode: true
        in: query
        name: isLocked
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionCreationResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/CollectionCreationResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/CollectionCreationResult'
          description: Collection created.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - CollectionManagement
        - DefaultAuthorization
      summary: Creates a new collection.
      tags:
      - Collection
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Collections/{collectionId}/Items:
    delete:
      operationId: RemoveFromCollection
      parameters:
      - description: The collection id.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Item ids, comma delimited."
        explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      responses:
        "204":
          description: Items removed from collection.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - CollectionManagement
        - DefaultAuthorization
      summary: Removes items from a collection.
      tags:
      - Collection
      x-accepts:
      - application/json
    post:
      operationId: AddToCollection
      parameters:
      - description: The collection id.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Item ids, comma delimited."
        explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      responses:
        "204":
          description: Items added to collection.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - CollectionManagement
        - DefaultAuthorization
      summary: Adds items to a collection.
      tags:
      - Collection
      x-accepts:
      - application/json
  /System/Configuration:
    get:
      operationId: GetConfiguration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfiguration'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ServerConfiguration'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ServerConfiguration'
          description: Application configuration returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets application configuration.
      tags:
      - Configuration
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: UpdateConfiguration
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ServerConfiguration'
              description: Represents the server configuration.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ServerConfiguration'
              description: Represents the server configuration.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ServerConfiguration'
              description: Represents the server configuration.
        description: Configuration.
        required: true
      responses:
        "204":
          description: Configuration updated.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
        - DefaultAuthorization
      summary: Updates application configuration.
      tags:
      - Configuration
      x-content-type: application/json
      x-accepts:
      - application/json
  /System/Configuration/{key}:
    get:
      operationId: GetNamedConfiguration
      parameters:
      - description: Configuration key.
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: Configuration returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets a named configuration.
      tags:
      - Configuration
      x-accepts:
      - application/json
    post:
      operationId: UpdateNamedConfiguration
      parameters:
      - description: Configuration key.
        explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema: {}
          text/json:
            schema: {}
          application/*+json:
            schema: {}
        description: Configuration.
        required: true
      responses:
        "204":
          description: Named configuration updated.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
        - DefaultAuthorization
      summary: Updates named configuration.
      tags:
      - Configuration
      x-content-type: application/json
      x-accepts:
      - application/json
  /System/Configuration/MetadataOptions/Default:
    get:
      operationId: GetDefaultMetadataOptions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataOptions'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/MetadataOptions'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/MetadataOptions'
          description: Metadata options returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
        - DefaultAuthorization
      summary: Gets a default MetadataOptions object.
      tags:
      - Configuration
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /web/ConfigurationPage:
    get:
      operationId: GetDashboardConfigurationPage
      parameters:
      - description: The name of the page.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/html:
              schema:
                format: binary
                type: string
            application/x-javascript:
              schema:
                format: binary
                type: string
          description: ConfigurationPage returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Plugin configuration page not found.
      summary: Gets a dashboard configuration page.
      tags:
      - Dashboard
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - application/x-javascript
      - text/html
  /web/ConfigurationPages:
    get:
      operationId: GetConfigurationPages
      parameters:
      - description: Whether to enable in the main menu.
        explode: true
        in: query
        name: enableInMainMenu
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConfigurationPageInfo'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/ConfigurationPageInfo'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/ConfigurationPageInfo'
                type: array
          description: ConfigurationPages returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Server still loading.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Gets the configuration pages.
      tags:
      - Dashboard
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Devices:
    delete:
      operationId: DeleteDevice
      parameters:
      - description: Device Id.
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Device deleted.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Device not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Deletes a device.
      tags:
      - Devices
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    get:
      operationId: GetDevices
      parameters:
      - description: Gets or sets the user identifier.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceInfoDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/DeviceInfoDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/DeviceInfoDtoQueryResult'
          description: Devices retrieved.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Get Devices.
      tags:
      - Devices
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Devices/Info:
    get:
      operationId: GetDeviceInfo
      parameters:
      - description: Device Id.
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceInfoDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/DeviceInfoDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/DeviceInfoDto'
          description: Device info retrieved.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Device not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Get info for a device.
      tags:
      - Devices
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Devices/Options:
    get:
      operationId: GetDeviceOptions
      parameters:
      - description: Device Id.
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceOptionsDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/DeviceOptionsDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/DeviceOptionsDto'
          description: Device options retrieved.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Device not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Get options for a device.
      tags:
      - Devices
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: UpdateDeviceOptions
      parameters:
      - description: Device Id.
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeviceOptionsDto'
              description: A dto representing custom options for a device.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeviceOptionsDto'
              description: A dto representing custom options for a device.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeviceOptionsDto'
              description: A dto representing custom options for a device.
        description: Device Options.
        required: true
      responses:
        "204":
          description: Device options updated.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Update device options.
      tags:
      - Devices
      x-content-type: application/json
      x-accepts:
      - application/json
  /DisplayPreferences/{displayPreferencesId}:
    get:
      operationId: GetDisplayPreferences
      parameters:
      - description: Display preferences id.
        explode: false
        in: path
        name: displayPreferencesId
        required: true
        schema:
          type: string
        style: simple
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Client.
        explode: true
        in: query
        name: client
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisplayPreferencesDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/DisplayPreferencesDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/DisplayPreferencesDto'
          description: Display preferences retrieved.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get Display Preferences.
      tags:
      - DisplayPreferences
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: UpdateDisplayPreferences
      parameters:
      - description: Display preferences id.
        explode: false
        in: path
        name: displayPreferencesId
        required: true
        schema:
          type: string
        style: simple
      - description: User Id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Client.
        explode: true
        in: query
        name: client
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DisplayPreferencesDto'
              description: Defines the display preferences for any item that supports
                them (usually Folders).
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DisplayPreferencesDto'
              description: Defines the display preferences for any item that supports
                them (usually Folders).
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DisplayPreferencesDto'
              description: Defines the display preferences for any item that supports
                them (usually Folders).
        description: New Display Preferences object.
        required: true
      responses:
        "204":
          description: Display preferences updated.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Update Display Preferences.
      tags:
      - DisplayPreferences
      x-content-type: application/json
      x-accepts:
      - application/json
  /Audio/{itemId}/hls1/{playlistId}/{segmentId}.{container}:
    get:
      operationId: GetHlsAudioSegment
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The playlist id.
        explode: false
        in: path
        name: playlistId
        required: true
        schema:
          type: string
        style: simple
      - description: The segment id.
        explode: false
        in: path
        name: segmentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "The video container. Possible values are: ts, webm, asf, wmv,\
          \ ogv, mp4, m4v, mkv, mpeg, mpg, avi, 3gp, wmv, wtv, m2ts, mov, iso, flv."
        explode: false
        in: path
        name: container
        required: true
        schema:
          type: string
        style: simple
      - description: The position of the requested segment in ticks.
        explode: true
        in: query
        name: runtimeTicks
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: The length of the requested segment in ticks.
        explode: true
        in: query
        name: actualSegmentLengthTicks
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false."
        explode: true
        in: query
        name: static
        required: false
        schema:
          type: boolean
        style: form
      - description: The streaming parameters.
        explode: true
        in: query
        name: params
        required: false
        schema:
          type: string
        style: form
      - description: The tag.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: Optional. The dlna device profile id to utilize.
        explode: true
        in: query
        name: deviceProfileId
        required: false
        schema:
          type: string
        style: form
      - description: The play session id.
        explode: true
        in: query
        name: playSessionId
        required: false
        schema:
          type: string
        style: form
      - description: The segment container.
        explode: true
        in: query
        name: segmentContainer
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: The segment length.
        explode: true
        in: query
        name: segmentLength
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The minimum number of segments.
        explode: true
        in: query
        name: minSegments
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "The media version id, if playing an alternate version."
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          type: string
        style: form
      - description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify an audio codec to encode to, e.g. mp3."
        explode: true
        in: query
        name: audioCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        explode: true
        in: query
        name: enableAutoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the video stream url.
        explode: true
        in: query
        name: allowVideoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the audio stream url.
        explode: true
        in: query
        name: allowAudioStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to break on non key frames.
        explode: true
        in: query
        name: breakOnNonKeyFrames
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a specific audio sample rate, e.g. 44100."
        explode: true
        in: query
        name: audioSampleRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum audio bit depth.
        explode: true
        in: query
        name: maxAudioBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum streaming bitrate.
        explode: true
        in: query
        name: maxStreamingBitrate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: audioBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: audioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: maxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific an encoder profile (varies by encoder),\
          \ e.g. main, baseline, high."
        explode: true
        in: query
        name: profile
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify a level for the encoder profile (varies by\
          \ encoder), e.g. 3, 3.1."
        explode: true
        in: query
        name: level
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. A specific video framerate to encode to, e.g. 23.976.\
          \ Generally this should be omitted unless the device has specific requirements."
        explode: true
        in: query
        name: framerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "Optional. A specific maximum video framerate to encode to, e.g.\
          \ 23.976. Generally this should be omitted unless the device has specific\
          \ requirements."
        explode: true
        in: query
        name: maxFramerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        explode: true
        in: query
        name: copyTimestamps
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a starting offset, in ticks. 1 tick = 10000\
          \ ms."
        explode: true
        in: query
        name: startTimeTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Optional. The fixed horizontal resolution of the encoded video.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The fixed vertical resolution of the encoded video.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: videoBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        explode: true
        in: query
        name: subtitleStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify the subtitle delivery method.
        explode: true
        in: query
        name: subtitleMethod
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SubtitleDeliveryMethod'
          enum:
          - Encode
          - Embed
          - External
          - Hls
          - Drop
          type: string
        style: form
      - description: Optional.
        explode: true
        in: query
        name: maxRefFrames
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum video bit depth.
        explode: true
        in: query
        name: maxVideoBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Whether to require avc.
        explode: true
        in: query
        name: requireAvc
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to deinterlace the video.
        explode: true
        in: query
        name: deInterlace
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to require a non anamorphic stream.
        explode: true
        in: query
        name: requireNonAnamorphic
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. The maximum number of audio channels to transcode.
        explode: true
        in: query
        name: transcodingMaxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The limit of how many cpu cores to use.
        explode: true
        in: query
        name: cpuCoreLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The live stream id.
        explode: true
        in: query
        name: liveStreamId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Whether to enable the MpegtsM2Ts mode.
        explode: true
        in: query
        name: enableMpegtsM2TsMode
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a video codec to encode to, e.g. h264."
        explode: true
        in: query
        name: videoCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. Specify a subtitle codec to encode to.
        explode: true
        in: query
        name: subtitleCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. The transcoding reason.
        explode: true
        in: query
        name: transcodeReasons
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        explode: true
        in: query
        name: audioStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        explode: true
        in: query
        name: videoStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
        explode: true
        in: query
        name: context
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/EncodingContext'
          enum:
          - Streaming
          - Static
          type: string
        style: form
      - description: Optional. The streaming options.
        explode: true
        in: query
        name: streamOptions
        required: false
        schema:
          additionalProperties:
            nullable: true
            type: string
          type: object
        style: form
      - description: Optional. Whether to enable Audio Encoding.
        explode: true
        in: query
        name: enableAudioVbrEncoding
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            audio/*:
              schema:
                format: binary
                type: string
          description: Video stream returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets a video stream using HTTP live streaming.
      tags:
      - DynamicHls
      x-accepts:
      - audio/*
  /Audio/{itemId}/main.m3u8:
    get:
      operationId: GetVariantHlsAudioPlaylist
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false."
        explode: true
        in: query
        name: static
        required: false
        schema:
          type: boolean
        style: form
      - description: The streaming parameters.
        explode: true
        in: query
        name: params
        required: false
        schema:
          type: string
        style: form
      - description: The tag.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: Optional. The dlna device profile id to utilize.
        explode: true
        in: query
        name: deviceProfileId
        required: false
        schema:
          type: string
        style: form
      - description: The play session id.
        explode: true
        in: query
        name: playSessionId
        required: false
        schema:
          type: string
        style: form
      - description: The segment container.
        explode: true
        in: query
        name: segmentContainer
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: The segment length.
        explode: true
        in: query
        name: segmentLength
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The minimum number of segments.
        explode: true
        in: query
        name: minSegments
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "The media version id, if playing an alternate version."
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          type: string
        style: form
      - description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify an audio codec to encode to, e.g. mp3."
        explode: true
        in: query
        name: audioCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        explode: true
        in: query
        name: enableAutoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the video stream url.
        explode: true
        in: query
        name: allowVideoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the audio stream url.
        explode: true
        in: query
        name: allowAudioStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to break on non key frames.
        explode: true
        in: query
        name: breakOnNonKeyFrames
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a specific audio sample rate, e.g. 44100."
        explode: true
        in: query
        name: audioSampleRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum audio bit depth.
        explode: true
        in: query
        name: maxAudioBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum streaming bitrate.
        explode: true
        in: query
        name: maxStreamingBitrate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: audioBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: audioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: maxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific an encoder profile (varies by encoder),\
          \ e.g. main, baseline, high."
        explode: true
        in: query
        name: profile
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify a level for the encoder profile (varies by\
          \ encoder), e.g. 3, 3.1."
        explode: true
        in: query
        name: level
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. A specific video framerate to encode to, e.g. 23.976.\
          \ Generally this should be omitted unless the device has specific requirements."
        explode: true
        in: query
        name: framerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "Optional. A specific maximum video framerate to encode to, e.g.\
          \ 23.976. Generally this should be omitted unless the device has specific\
          \ requirements."
        explode: true
        in: query
        name: maxFramerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        explode: true
        in: query
        name: copyTimestamps
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a starting offset, in ticks. 1 tick = 10000\
          \ ms."
        explode: true
        in: query
        name: startTimeTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Optional. The fixed horizontal resolution of the encoded video.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The fixed vertical resolution of the encoded video.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: videoBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        explode: true
        in: query
        name: subtitleStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify the subtitle delivery method.
        explode: true
        in: query
        name: subtitleMethod
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SubtitleDeliveryMethod'
          enum:
          - Encode
          - Embed
          - External
          - Hls
          - Drop
          type: string
        style: form
      - description: Optional.
        explode: true
        in: query
        name: maxRefFrames
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum video bit depth.
        explode: true
        in: query
        name: maxVideoBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Whether to require avc.
        explode: true
        in: query
        name: requireAvc
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to deinterlace the video.
        explode: true
        in: query
        name: deInterlace
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to require a non anamorphic stream.
        explode: true
        in: query
        name: requireNonAnamorphic
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. The maximum number of audio channels to transcode.
        explode: true
        in: query
        name: transcodingMaxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The limit of how many cpu cores to use.
        explode: true
        in: query
        name: cpuCoreLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The live stream id.
        explode: true
        in: query
        name: liveStreamId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Whether to enable the MpegtsM2Ts mode.
        explode: true
        in: query
        name: enableMpegtsM2TsMode
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a video codec to encode to, e.g. h264."
        explode: true
        in: query
        name: videoCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. Specify a subtitle codec to encode to.
        explode: true
        in: query
        name: subtitleCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. The transcoding reason.
        explode: true
        in: query
        name: transcodeReasons
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        explode: true
        in: query
        name: audioStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        explode: true
        in: query
        name: videoStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
        explode: true
        in: query
        name: context
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/EncodingContext'
          enum:
          - Streaming
          - Static
          type: string
        style: form
      - description: Optional. The streaming options.
        explode: true
        in: query
        name: streamOptions
        required: false
        schema:
          additionalProperties:
            nullable: true
            type: string
          type: object
        style: form
      - description: Optional. Whether to enable Audio Encoding.
        explode: true
        in: query
        name: enableAudioVbrEncoding
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/x-mpegURL:
              schema:
                format: binary
                type: string
          description: Audio stream returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets an audio stream using HTTP live streaming.
      tags:
      - DynamicHls
      x-accepts:
      - application/x-mpegURL
  /Audio/{itemId}/master.m3u8:
    get:
      operationId: GetMasterHlsAudioPlaylist
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false."
        explode: true
        in: query
        name: static
        required: false
        schema:
          type: boolean
        style: form
      - description: The streaming parameters.
        explode: true
        in: query
        name: params
        required: false
        schema:
          type: string
        style: form
      - description: The tag.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: Optional. The dlna device profile id to utilize.
        explode: true
        in: query
        name: deviceProfileId
        required: false
        schema:
          type: string
        style: form
      - description: The play session id.
        explode: true
        in: query
        name: playSessionId
        required: false
        schema:
          type: string
        style: form
      - description: The segment container.
        explode: true
        in: query
        name: segmentContainer
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: The segment length.
        explode: true
        in: query
        name: segmentLength
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The minimum number of segments.
        explode: true
        in: query
        name: minSegments
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "The media version id, if playing an alternate version."
        explode: true
        in: query
        name: mediaSourceId
        required: true
        schema:
          type: string
        style: form
      - description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify an audio codec to encode to, e.g. mp3."
        explode: true
        in: query
        name: audioCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        explode: true
        in: query
        name: enableAutoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the video stream url.
        explode: true
        in: query
        name: allowVideoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the audio stream url.
        explode: true
        in: query
        name: allowAudioStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to break on non key frames.
        explode: true
        in: query
        name: breakOnNonKeyFrames
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a specific audio sample rate, e.g. 44100."
        explode: true
        in: query
        name: audioSampleRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum audio bit depth.
        explode: true
        in: query
        name: maxAudioBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum streaming bitrate.
        explode: true
        in: query
        name: maxStreamingBitrate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: audioBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: audioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: maxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific an encoder profile (varies by encoder),\
          \ e.g. main, baseline, high."
        explode: true
        in: query
        name: profile
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify a level for the encoder profile (varies by\
          \ encoder), e.g. 3, 3.1."
        explode: true
        in: query
        name: level
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. A specific video framerate to encode to, e.g. 23.976.\
          \ Generally this should be omitted unless the device has specific requirements."
        explode: true
        in: query
        name: framerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "Optional. A specific maximum video framerate to encode to, e.g.\
          \ 23.976. Generally this should be omitted unless the device has specific\
          \ requirements."
        explode: true
        in: query
        name: maxFramerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        explode: true
        in: query
        name: copyTimestamps
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a starting offset, in ticks. 1 tick = 10000\
          \ ms."
        explode: true
        in: query
        name: startTimeTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Optional. The fixed horizontal resolution of the encoded video.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The fixed vertical resolution of the encoded video.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: videoBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        explode: true
        in: query
        name: subtitleStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify the subtitle delivery method.
        explode: true
        in: query
        name: subtitleMethod
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SubtitleDeliveryMethod'
          enum:
          - Encode
          - Embed
          - External
          - Hls
          - Drop
          type: string
        style: form
      - description: Optional.
        explode: true
        in: query
        name: maxRefFrames
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum video bit depth.
        explode: true
        in: query
        name: maxVideoBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Whether to require avc.
        explode: true
        in: query
        name: requireAvc
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to deinterlace the video.
        explode: true
        in: query
        name: deInterlace
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to require a non anamorphic stream.
        explode: true
        in: query
        name: requireNonAnamorphic
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. The maximum number of audio channels to transcode.
        explode: true
        in: query
        name: transcodingMaxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The limit of how many cpu cores to use.
        explode: true
        in: query
        name: cpuCoreLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The live stream id.
        explode: true
        in: query
        name: liveStreamId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Whether to enable the MpegtsM2Ts mode.
        explode: true
        in: query
        name: enableMpegtsM2TsMode
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a video codec to encode to, e.g. h264."
        explode: true
        in: query
        name: videoCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. Specify a subtitle codec to encode to.
        explode: true
        in: query
        name: subtitleCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. The transcoding reason.
        explode: true
        in: query
        name: transcodeReasons
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        explode: true
        in: query
        name: audioStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        explode: true
        in: query
        name: videoStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
        explode: true
        in: query
        name: context
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/EncodingContext'
          enum:
          - Streaming
          - Static
          type: string
        style: form
      - description: Optional. The streaming options.
        explode: true
        in: query
        name: streamOptions
        required: false
        schema:
          additionalProperties:
            nullable: true
            type: string
          type: object
        style: form
      - description: Enable adaptive bitrate streaming.
        explode: true
        in: query
        name: enableAdaptiveBitrateStreaming
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Optional. Whether to enable Audio Encoding.
        explode: true
        in: query
        name: enableAudioVbrEncoding
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/x-mpegURL:
              schema:
                format: binary
                type: string
          description: Audio stream returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets an audio hls playlist stream.
      tags:
      - DynamicHls
      x-accepts:
      - application/x-mpegURL
    head:
      operationId: HeadMasterHlsAudioPlaylist
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false."
        explode: true
        in: query
        name: static
        required: false
        schema:
          type: boolean
        style: form
      - description: The streaming parameters.
        explode: true
        in: query
        name: params
        required: false
        schema:
          type: string
        style: form
      - description: The tag.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: Optional. The dlna device profile id to utilize.
        explode: true
        in: query
        name: deviceProfileId
        required: false
        schema:
          type: string
        style: form
      - description: The play session id.
        explode: true
        in: query
        name: playSessionId
        required: false
        schema:
          type: string
        style: form
      - description: The segment container.
        explode: true
        in: query
        name: segmentContainer
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: The segment length.
        explode: true
        in: query
        name: segmentLength
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The minimum number of segments.
        explode: true
        in: query
        name: minSegments
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "The media version id, if playing an alternate version."
        explode: true
        in: query
        name: mediaSourceId
        required: true
        schema:
          type: string
        style: form
      - description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify an audio codec to encode to, e.g. mp3."
        explode: true
        in: query
        name: audioCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        explode: true
        in: query
        name: enableAutoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the video stream url.
        explode: true
        in: query
        name: allowVideoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the audio stream url.
        explode: true
        in: query
        name: allowAudioStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to break on non key frames.
        explode: true
        in: query
        name: breakOnNonKeyFrames
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a specific audio sample rate, e.g. 44100."
        explode: true
        in: query
        name: audioSampleRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum audio bit depth.
        explode: true
        in: query
        name: maxAudioBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum streaming bitrate.
        explode: true
        in: query
        name: maxStreamingBitrate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: audioBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: audioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: maxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific an encoder profile (varies by encoder),\
          \ e.g. main, baseline, high."
        explode: true
        in: query
        name: profile
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify a level for the encoder profile (varies by\
          \ encoder), e.g. 3, 3.1."
        explode: true
        in: query
        name: level
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. A specific video framerate to encode to, e.g. 23.976.\
          \ Generally this should be omitted unless the device has specific requirements."
        explode: true
        in: query
        name: framerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "Optional. A specific maximum video framerate to encode to, e.g.\
          \ 23.976. Generally this should be omitted unless the device has specific\
          \ requirements."
        explode: true
        in: query
        name: maxFramerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        explode: true
        in: query
        name: copyTimestamps
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a starting offset, in ticks. 1 tick = 10000\
          \ ms."
        explode: true
        in: query
        name: startTimeTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Optional. The fixed horizontal resolution of the encoded video.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The fixed vertical resolution of the encoded video.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: videoBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        explode: true
        in: query
        name: subtitleStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify the subtitle delivery method.
        explode: true
        in: query
        name: subtitleMethod
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SubtitleDeliveryMethod'
          enum:
          - Encode
          - Embed
          - External
          - Hls
          - Drop
          type: string
        style: form
      - description: Optional.
        explode: true
        in: query
        name: maxRefFrames
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum video bit depth.
        explode: true
        in: query
        name: maxVideoBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Whether to require avc.
        explode: true
        in: query
        name: requireAvc
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to deinterlace the video.
        explode: true
        in: query
        name: deInterlace
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to require a non anamorphic stream.
        explode: true
        in: query
        name: requireNonAnamorphic
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. The maximum number of audio channels to transcode.
        explode: true
        in: query
        name: transcodingMaxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The limit of how many cpu cores to use.
        explode: true
        in: query
        name: cpuCoreLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The live stream id.
        explode: true
        in: query
        name: liveStreamId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Whether to enable the MpegtsM2Ts mode.
        explode: true
        in: query
        name: enableMpegtsM2TsMode
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a video codec to encode to, e.g. h264."
        explode: true
        in: query
        name: videoCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. Specify a subtitle codec to encode to.
        explode: true
        in: query
        name: subtitleCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. The transcoding reason.
        explode: true
        in: query
        name: transcodeReasons
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        explode: true
        in: query
        name: audioStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        explode: true
        in: query
        name: videoStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
        explode: true
        in: query
        name: context
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/EncodingContext'
          enum:
          - Streaming
          - Static
          type: string
        style: form
      - description: Optional. The streaming options.
        explode: true
        in: query
        name: streamOptions
        required: false
        schema:
          additionalProperties:
            nullable: true
            type: string
          type: object
        style: form
      - description: Enable adaptive bitrate streaming.
        explode: true
        in: query
        name: enableAdaptiveBitrateStreaming
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Optional. Whether to enable Audio Encoding.
        explode: true
        in: query
        name: enableAudioVbrEncoding
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/x-mpegURL:
              schema:
                format: binary
                type: string
          description: Audio stream returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets an audio hls playlist stream.
      tags:
      - DynamicHls
      x-accepts:
      - application/x-mpegURL
  /Videos/{itemId}/hls1/{playlistId}/{segmentId}.{container}:
    get:
      operationId: GetHlsVideoSegment
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The playlist id.
        explode: false
        in: path
        name: playlistId
        required: true
        schema:
          type: string
        style: simple
      - description: The segment id.
        explode: false
        in: path
        name: segmentId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "The video container. Possible values are: ts, webm, asf, wmv,\
          \ ogv, mp4, m4v, mkv, mpeg, mpg, avi, 3gp, wmv, wtv, m2ts, mov, iso, flv."
        explode: false
        in: path
        name: container
        required: true
        schema:
          type: string
        style: simple
      - description: The position of the requested segment in ticks.
        explode: true
        in: query
        name: runtimeTicks
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: The length of the requested segment in ticks.
        explode: true
        in: query
        name: actualSegmentLengthTicks
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false."
        explode: true
        in: query
        name: static
        required: false
        schema:
          type: boolean
        style: form
      - description: The streaming parameters.
        explode: true
        in: query
        name: params
        required: false
        schema:
          type: string
        style: form
      - description: The tag.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: Optional. The dlna device profile id to utilize.
        explode: true
        in: query
        name: deviceProfileId
        required: false
        schema:
          type: string
        style: form
      - description: The play session id.
        explode: true
        in: query
        name: playSessionId
        required: false
        schema:
          type: string
        style: form
      - description: The segment container.
        explode: true
        in: query
        name: segmentContainer
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: The desired segment length.
        explode: true
        in: query
        name: segmentLength
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The minimum number of segments.
        explode: true
        in: query
        name: minSegments
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "The media version id, if playing an alternate version."
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          type: string
        style: form
      - description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify an audio codec to encode to, e.g. mp3."
        explode: true
        in: query
        name: audioCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        explode: true
        in: query
        name: enableAutoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the video stream url.
        explode: true
        in: query
        name: allowVideoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the audio stream url.
        explode: true
        in: query
        name: allowAudioStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to break on non key frames.
        explode: true
        in: query
        name: breakOnNonKeyFrames
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a specific audio sample rate, e.g. 44100."
        explode: true
        in: query
        name: audioSampleRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum audio bit depth.
        explode: true
        in: query
        name: maxAudioBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: audioBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: audioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: maxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific an encoder profile (varies by encoder),\
          \ e.g. main, baseline, high."
        explode: true
        in: query
        name: profile
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify a level for the encoder profile (varies by\
          \ encoder), e.g. 3, 3.1."
        explode: true
        in: query
        name: level
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. A specific video framerate to encode to, e.g. 23.976.\
          \ Generally this should be omitted unless the device has specific requirements."
        explode: true
        in: query
        name: framerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "Optional. A specific maximum video framerate to encode to, e.g.\
          \ 23.976. Generally this should be omitted unless the device has specific\
          \ requirements."
        explode: true
        in: query
        name: maxFramerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        explode: true
        in: query
        name: copyTimestamps
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a starting offset, in ticks. 1 tick = 10000\
          \ ms."
        explode: true
        in: query
        name: startTimeTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Optional. The fixed horizontal resolution of the encoded video.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The fixed vertical resolution of the encoded video.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum horizontal resolution of the encoded video.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum vertical resolution of the encoded video.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: videoBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        explode: true
        in: query
        name: subtitleStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify the subtitle delivery method.
        explode: true
        in: query
        name: subtitleMethod
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SubtitleDeliveryMethod'
          enum:
          - Encode
          - Embed
          - External
          - Hls
          - Drop
          type: string
        style: form
      - description: Optional.
        explode: true
        in: query
        name: maxRefFrames
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum video bit depth.
        explode: true
        in: query
        name: maxVideoBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Whether to require avc.
        explode: true
        in: query
        name: requireAvc
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to deinterlace the video.
        explode: true
        in: query
        name: deInterlace
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to require a non anamorphic stream.
        explode: true
        in: query
        name: requireNonAnamorphic
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. The maximum number of audio channels to transcode.
        explode: true
        in: query
        name: transcodingMaxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The limit of how many cpu cores to use.
        explode: true
        in: query
        name: cpuCoreLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The live stream id.
        explode: true
        in: query
        name: liveStreamId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Whether to enable the MpegtsM2Ts mode.
        explode: true
        in: query
        name: enableMpegtsM2TsMode
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a video codec to encode to, e.g. h264."
        explode: true
        in: query
        name: videoCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. Specify a subtitle codec to encode to.
        explode: true
        in: query
        name: subtitleCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. The transcoding reason.
        explode: true
        in: query
        name: transcodeReasons
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        explode: true
        in: query
        name: audioStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        explode: true
        in: query
        name: videoStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
        explode: true
        in: query
        name: context
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/EncodingContext'
          enum:
          - Streaming
          - Static
          type: string
        style: form
      - description: Optional. The streaming options.
        explode: true
        in: query
        name: streamOptions
        required: false
        schema:
          additionalProperties:
            nullable: true
            type: string
          type: object
        style: form
      - description: Optional. Whether to enable Audio Encoding.
        explode: true
        in: query
        name: enableAudioVbrEncoding
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to always burn in subtitles when transcoding.
        explode: true
        in: query
        name: alwaysBurnInSubtitleWhenTranscoding
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            video/*:
              schema:
                format: binary
                type: string
          description: Video stream returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets a video stream using HTTP live streaming.
      tags:
      - DynamicHls
      x-accepts:
      - video/*
  /Videos/{itemId}/live.m3u8:
    get:
      operationId: GetLiveHlsStream
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The audio container.
        explode: true
        in: query
        name: container
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false."
        explode: true
        in: query
        name: static
        required: false
        schema:
          type: boolean
        style: form
      - description: The streaming parameters.
        explode: true
        in: query
        name: params
        required: false
        schema:
          type: string
        style: form
      - description: The tag.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: Optional. The dlna device profile id to utilize.
        explode: true
        in: query
        name: deviceProfileId
        required: false
        schema:
          type: string
        style: form
      - description: The play session id.
        explode: true
        in: query
        name: playSessionId
        required: false
        schema:
          type: string
        style: form
      - description: The segment container.
        explode: true
        in: query
        name: segmentContainer
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: The segment length.
        explode: true
        in: query
        name: segmentLength
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The minimum number of segments.
        explode: true
        in: query
        name: minSegments
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "The media version id, if playing an alternate version."
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          type: string
        style: form
      - description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify an audio codec to encode to, e.g. mp3."
        explode: true
        in: query
        name: audioCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        explode: true
        in: query
        name: enableAutoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the video stream url.
        explode: true
        in: query
        name: allowVideoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the audio stream url.
        explode: true
        in: query
        name: allowAudioStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to break on non key frames.
        explode: true
        in: query
        name: breakOnNonKeyFrames
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a specific audio sample rate, e.g. 44100."
        explode: true
        in: query
        name: audioSampleRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum audio bit depth.
        explode: true
        in: query
        name: maxAudioBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: audioBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: audioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: maxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific an encoder profile (varies by encoder),\
          \ e.g. main, baseline, high."
        explode: true
        in: query
        name: profile
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify a level for the encoder profile (varies by\
          \ encoder), e.g. 3, 3.1."
        explode: true
        in: query
        name: level
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. A specific video framerate to encode to, e.g. 23.976.\
          \ Generally this should be omitted unless the device has specific requirements."
        explode: true
        in: query
        name: framerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "Optional. A specific maximum video framerate to encode to, e.g.\
          \ 23.976. Generally this should be omitted unless the device has specific\
          \ requirements."
        explode: true
        in: query
        name: maxFramerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        explode: true
        in: query
        name: copyTimestamps
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a starting offset, in ticks. 1 tick = 10000\
          \ ms."
        explode: true
        in: query
        name: startTimeTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Optional. The fixed horizontal resolution of the encoded video.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The fixed vertical resolution of the encoded video.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: videoBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        explode: true
        in: query
        name: subtitleStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify the subtitle delivery method.
        explode: true
        in: query
        name: subtitleMethod
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SubtitleDeliveryMethod'
          enum:
          - Encode
          - Embed
          - External
          - Hls
          - Drop
          type: string
        style: form
      - description: Optional.
        explode: true
        in: query
        name: maxRefFrames
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum video bit depth.
        explode: true
        in: query
        name: maxVideoBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Whether to require avc.
        explode: true
        in: query
        name: requireAvc
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to deinterlace the video.
        explode: true
        in: query
        name: deInterlace
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to require a non anamorphic stream.
        explode: true
        in: query
        name: requireNonAnamorphic
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. The maximum number of audio channels to transcode.
        explode: true
        in: query
        name: transcodingMaxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The limit of how many cpu cores to use.
        explode: true
        in: query
        name: cpuCoreLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The live stream id.
        explode: true
        in: query
        name: liveStreamId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Whether to enable the MpegtsM2Ts mode.
        explode: true
        in: query
        name: enableMpegtsM2TsMode
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a video codec to encode to, e.g. h264."
        explode: true
        in: query
        name: videoCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. Specify a subtitle codec to encode to.
        explode: true
        in: query
        name: subtitleCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. The transcoding reason.
        explode: true
        in: query
        name: transcodeReasons
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        explode: true
        in: query
        name: audioStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        explode: true
        in: query
        name: videoStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
        explode: true
        in: query
        name: context
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/EncodingContext'
          enum:
          - Streaming
          - Static
          type: string
        style: form
      - description: Optional. The streaming options.
        explode: true
        in: query
        name: streamOptions
        required: false
        schema:
          additionalProperties:
            nullable: true
            type: string
          type: object
        style: form
      - description: Optional. The max width.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The max height.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Whether to enable subtitles in the manifest.
        explode: true
        in: query
        name: enableSubtitlesInManifest
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to enable Audio Encoding.
        explode: true
        in: query
        name: enableAudioVbrEncoding
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to always burn in subtitles when transcoding.
        explode: true
        in: query
        name: alwaysBurnInSubtitleWhenTranscoding
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/x-mpegURL:
              schema:
                format: binary
                type: string
          description: Hls live stream retrieved.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets a hls live stream.
      tags:
      - DynamicHls
      x-accepts:
      - application/x-mpegURL
  /Videos/{itemId}/main.m3u8:
    get:
      operationId: GetVariantHlsVideoPlaylist
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false."
        explode: true
        in: query
        name: static
        required: false
        schema:
          type: boolean
        style: form
      - description: The streaming parameters.
        explode: true
        in: query
        name: params
        required: false
        schema:
          type: string
        style: form
      - description: The tag.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: Optional. The dlna device profile id to utilize.
        explode: true
        in: query
        name: deviceProfileId
        required: false
        schema:
          type: string
        style: form
      - description: The play session id.
        explode: true
        in: query
        name: playSessionId
        required: false
        schema:
          type: string
        style: form
      - description: The segment container.
        explode: true
        in: query
        name: segmentContainer
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: The segment length.
        explode: true
        in: query
        name: segmentLength
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The minimum number of segments.
        explode: true
        in: query
        name: minSegments
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "The media version id, if playing an alternate version."
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          type: string
        style: form
      - description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify an audio codec to encode to, e.g. mp3."
        explode: true
        in: query
        name: audioCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        explode: true
        in: query
        name: enableAutoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the video stream url.
        explode: true
        in: query
        name: allowVideoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the audio stream url.
        explode: true
        in: query
        name: allowAudioStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to break on non key frames.
        explode: true
        in: query
        name: breakOnNonKeyFrames
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a specific audio sample rate, e.g. 44100."
        explode: true
        in: query
        name: audioSampleRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum audio bit depth.
        explode: true
        in: query
        name: maxAudioBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: audioBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: audioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: maxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific an encoder profile (varies by encoder),\
          \ e.g. main, baseline, high."
        explode: true
        in: query
        name: profile
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify a level for the encoder profile (varies by\
          \ encoder), e.g. 3, 3.1."
        explode: true
        in: query
        name: level
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. A specific video framerate to encode to, e.g. 23.976.\
          \ Generally this should be omitted unless the device has specific requirements."
        explode: true
        in: query
        name: framerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "Optional. A specific maximum video framerate to encode to, e.g.\
          \ 23.976. Generally this should be omitted unless the device has specific\
          \ requirements."
        explode: true
        in: query
        name: maxFramerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        explode: true
        in: query
        name: copyTimestamps
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a starting offset, in ticks. 1 tick = 10000\
          \ ms."
        explode: true
        in: query
        name: startTimeTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Optional. The fixed horizontal resolution of the encoded video.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The fixed vertical resolution of the encoded video.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum horizontal resolution of the encoded video.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum vertical resolution of the encoded video.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: videoBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        explode: true
        in: query
        name: subtitleStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify the subtitle delivery method.
        explode: true
        in: query
        name: subtitleMethod
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SubtitleDeliveryMethod'
          enum:
          - Encode
          - Embed
          - External
          - Hls
          - Drop
          type: string
        style: form
      - description: Optional.
        explode: true
        in: query
        name: maxRefFrames
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum video bit depth.
        explode: true
        in: query
        name: maxVideoBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Whether to require avc.
        explode: true
        in: query
        name: requireAvc
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to deinterlace the video.
        explode: true
        in: query
        name: deInterlace
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to require a non anamorphic stream.
        explode: true
        in: query
        name: requireNonAnamorphic
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. The maximum number of audio channels to transcode.
        explode: true
        in: query
        name: transcodingMaxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The limit of how many cpu cores to use.
        explode: true
        in: query
        name: cpuCoreLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The live stream id.
        explode: true
        in: query
        name: liveStreamId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Whether to enable the MpegtsM2Ts mode.
        explode: true
        in: query
        name: enableMpegtsM2TsMode
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a video codec to encode to, e.g. h264."
        explode: true
        in: query
        name: videoCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. Specify a subtitle codec to encode to.
        explode: true
        in: query
        name: subtitleCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. The transcoding reason.
        explode: true
        in: query
        name: transcodeReasons
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        explode: true
        in: query
        name: audioStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        explode: true
        in: query
        name: videoStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
        explode: true
        in: query
        name: context
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/EncodingContext'
          enum:
          - Streaming
          - Static
          type: string
        style: form
      - description: Optional. The streaming options.
        explode: true
        in: query
        name: streamOptions
        required: false
        schema:
          additionalProperties:
            nullable: true
            type: string
          type: object
        style: form
      - description: Optional. Whether to enable Audio Encoding.
        explode: true
        in: query
        name: enableAudioVbrEncoding
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to always burn in subtitles when transcoding.
        explode: true
        in: query
        name: alwaysBurnInSubtitleWhenTranscoding
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/x-mpegURL:
              schema:
                format: binary
                type: string
          description: Video stream returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets a video stream using HTTP live streaming.
      tags:
      - DynamicHls
      x-accepts:
      - application/x-mpegURL
  /Videos/{itemId}/master.m3u8:
    get:
      operationId: GetMasterHlsVideoPlaylist
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false."
        explode: true
        in: query
        name: static
        required: false
        schema:
          type: boolean
        style: form
      - description: The streaming parameters.
        explode: true
        in: query
        name: params
        required: false
        schema:
          type: string
        style: form
      - description: The tag.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: Optional. The dlna device profile id to utilize.
        explode: true
        in: query
        name: deviceProfileId
        required: false
        schema:
          type: string
        style: form
      - description: The play session id.
        explode: true
        in: query
        name: playSessionId
        required: false
        schema:
          type: string
        style: form
      - description: The segment container.
        explode: true
        in: query
        name: segmentContainer
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: The segment length.
        explode: true
        in: query
        name: segmentLength
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The minimum number of segments.
        explode: true
        in: query
        name: minSegments
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "The media version id, if playing an alternate version."
        explode: true
        in: query
        name: mediaSourceId
        required: true
        schema:
          type: string
        style: form
      - description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify an audio codec to encode to, e.g. mp3."
        explode: true
        in: query
        name: audioCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        explode: true
        in: query
        name: enableAutoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the video stream url.
        explode: true
        in: query
        name: allowVideoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the audio stream url.
        explode: true
        in: query
        name: allowAudioStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to break on non key frames.
        explode: true
        in: query
        name: breakOnNonKeyFrames
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a specific audio sample rate, e.g. 44100."
        explode: true
        in: query
        name: audioSampleRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum audio bit depth.
        explode: true
        in: query
        name: maxAudioBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: audioBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: audioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: maxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific an encoder profile (varies by encoder),\
          \ e.g. main, baseline, high."
        explode: true
        in: query
        name: profile
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify a level for the encoder profile (varies by\
          \ encoder), e.g. 3, 3.1."
        explode: true
        in: query
        name: level
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. A specific video framerate to encode to, e.g. 23.976.\
          \ Generally this should be omitted unless the device has specific requirements."
        explode: true
        in: query
        name: framerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "Optional. A specific maximum video framerate to encode to, e.g.\
          \ 23.976. Generally this should be omitted unless the device has specific\
          \ requirements."
        explode: true
        in: query
        name: maxFramerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        explode: true
        in: query
        name: copyTimestamps
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a starting offset, in ticks. 1 tick = 10000\
          \ ms."
        explode: true
        in: query
        name: startTimeTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Optional. The fixed horizontal resolution of the encoded video.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The fixed vertical resolution of the encoded video.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum horizontal resolution of the encoded video.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum vertical resolution of the encoded video.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: videoBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        explode: true
        in: query
        name: subtitleStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify the subtitle delivery method.
        explode: true
        in: query
        name: subtitleMethod
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SubtitleDeliveryMethod'
          enum:
          - Encode
          - Embed
          - External
          - Hls
          - Drop
          type: string
        style: form
      - description: Optional.
        explode: true
        in: query
        name: maxRefFrames
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum video bit depth.
        explode: true
        in: query
        name: maxVideoBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Whether to require avc.
        explode: true
        in: query
        name: requireAvc
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to deinterlace the video.
        explode: true
        in: query
        name: deInterlace
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to require a non anamorphic stream.
        explode: true
        in: query
        name: requireNonAnamorphic
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. The maximum number of audio channels to transcode.
        explode: true
        in: query
        name: transcodingMaxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The limit of how many cpu cores to use.
        explode: true
        in: query
        name: cpuCoreLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The live stream id.
        explode: true
        in: query
        name: liveStreamId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Whether to enable the MpegtsM2Ts mode.
        explode: true
        in: query
        name: enableMpegtsM2TsMode
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a video codec to encode to, e.g. h264."
        explode: true
        in: query
        name: videoCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. Specify a subtitle codec to encode to.
        explode: true
        in: query
        name: subtitleCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. The transcoding reason.
        explode: true
        in: query
        name: transcodeReasons
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        explode: true
        in: query
        name: audioStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        explode: true
        in: query
        name: videoStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
        explode: true
        in: query
        name: context
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/EncodingContext'
          enum:
          - Streaming
          - Static
          type: string
        style: form
      - description: Optional. The streaming options.
        explode: true
        in: query
        name: streamOptions
        required: false
        schema:
          additionalProperties:
            nullable: true
            type: string
          type: object
        style: form
      - description: Enable adaptive bitrate streaming.
        explode: true
        in: query
        name: enableAdaptiveBitrateStreaming
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Enable trickplay image playlists being added to master playlist.
        explode: true
        in: query
        name: enableTrickplay
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to enable Audio Encoding.
        explode: true
        in: query
        name: enableAudioVbrEncoding
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to always burn in subtitles when transcoding.
        explode: true
        in: query
        name: alwaysBurnInSubtitleWhenTranscoding
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/x-mpegURL:
              schema:
                format: binary
                type: string
          description: Video stream returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets a video hls playlist stream.
      tags:
      - DynamicHls
      x-accepts:
      - application/x-mpegURL
    head:
      operationId: HeadMasterHlsVideoPlaylist
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false."
        explode: true
        in: query
        name: static
        required: false
        schema:
          type: boolean
        style: form
      - description: The streaming parameters.
        explode: true
        in: query
        name: params
        required: false
        schema:
          type: string
        style: form
      - description: The tag.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: Optional. The dlna device profile id to utilize.
        explode: true
        in: query
        name: deviceProfileId
        required: false
        schema:
          type: string
        style: form
      - description: The play session id.
        explode: true
        in: query
        name: playSessionId
        required: false
        schema:
          type: string
        style: form
      - description: The segment container.
        explode: true
        in: query
        name: segmentContainer
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: The segment length.
        explode: true
        in: query
        name: segmentLength
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The minimum number of segments.
        explode: true
        in: query
        name: minSegments
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "The media version id, if playing an alternate version."
        explode: true
        in: query
        name: mediaSourceId
        required: true
        schema:
          type: string
        style: form
      - description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify an audio codec to encode to, e.g. mp3."
        explode: true
        in: query
        name: audioCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        explode: true
        in: query
        name: enableAutoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the video stream url.
        explode: true
        in: query
        name: allowVideoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the audio stream url.
        explode: true
        in: query
        name: allowAudioStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to break on non key frames.
        explode: true
        in: query
        name: breakOnNonKeyFrames
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a specific audio sample rate, e.g. 44100."
        explode: true
        in: query
        name: audioSampleRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum audio bit depth.
        explode: true
        in: query
        name: maxAudioBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: audioBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: audioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: maxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific an encoder profile (varies by encoder),\
          \ e.g. main, baseline, high."
        explode: true
        in: query
        name: profile
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify a level for the encoder profile (varies by\
          \ encoder), e.g. 3, 3.1."
        explode: true
        in: query
        name: level
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. A specific video framerate to encode to, e.g. 23.976.\
          \ Generally this should be omitted unless the device has specific requirements."
        explode: true
        in: query
        name: framerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "Optional. A specific maximum video framerate to encode to, e.g.\
          \ 23.976. Generally this should be omitted unless the device has specific\
          \ requirements."
        explode: true
        in: query
        name: maxFramerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        explode: true
        in: query
        name: copyTimestamps
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a starting offset, in ticks. 1 tick = 10000\
          \ ms."
        explode: true
        in: query
        name: startTimeTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Optional. The fixed horizontal resolution of the encoded video.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The fixed vertical resolution of the encoded video.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum horizontal resolution of the encoded video.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum vertical resolution of the encoded video.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: videoBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        explode: true
        in: query
        name: subtitleStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify the subtitle delivery method.
        explode: true
        in: query
        name: subtitleMethod
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SubtitleDeliveryMethod'
          enum:
          - Encode
          - Embed
          - External
          - Hls
          - Drop
          type: string
        style: form
      - description: Optional.
        explode: true
        in: query
        name: maxRefFrames
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum video bit depth.
        explode: true
        in: query
        name: maxVideoBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Whether to require avc.
        explode: true
        in: query
        name: requireAvc
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to deinterlace the video.
        explode: true
        in: query
        name: deInterlace
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to require a non anamorphic stream.
        explode: true
        in: query
        name: requireNonAnamorphic
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. The maximum number of audio channels to transcode.
        explode: true
        in: query
        name: transcodingMaxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The limit of how many cpu cores to use.
        explode: true
        in: query
        name: cpuCoreLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The live stream id.
        explode: true
        in: query
        name: liveStreamId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Whether to enable the MpegtsM2Ts mode.
        explode: true
        in: query
        name: enableMpegtsM2TsMode
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a video codec to encode to, e.g. h264."
        explode: true
        in: query
        name: videoCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. Specify a subtitle codec to encode to.
        explode: true
        in: query
        name: subtitleCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. The transcoding reason.
        explode: true
        in: query
        name: transcodeReasons
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        explode: true
        in: query
        name: audioStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        explode: true
        in: query
        name: videoStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
        explode: true
        in: query
        name: context
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/EncodingContext'
          enum:
          - Streaming
          - Static
          type: string
        style: form
      - description: Optional. The streaming options.
        explode: true
        in: query
        name: streamOptions
        required: false
        schema:
          additionalProperties:
            nullable: true
            type: string
          type: object
        style: form
      - description: Enable adaptive bitrate streaming.
        explode: true
        in: query
        name: enableAdaptiveBitrateStreaming
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Enable trickplay image playlists being added to master playlist.
        explode: true
        in: query
        name: enableTrickplay
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to enable Audio Encoding.
        explode: true
        in: query
        name: enableAudioVbrEncoding
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to always burn in subtitles when transcoding.
        explode: true
        in: query
        name: alwaysBurnInSubtitleWhenTranscoding
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/x-mpegURL:
              schema:
                format: binary
                type: string
          description: Video stream returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets a video hls playlist stream.
      tags:
      - DynamicHls
      x-accepts:
      - application/x-mpegURL
  /Environment/DefaultDirectoryBrowser:
    get:
      operationId: GetDefaultDirectoryBrowser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultDirectoryBrowserInfoDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/DefaultDirectoryBrowserInfoDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/DefaultDirectoryBrowserInfoDto'
          description: Default directory browser returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrElevated
        - DefaultAuthorization
      summary: Get Default directory browser.
      tags:
      - Environment
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Environment/DirectoryContents:
    get:
      operationId: GetDirectoryContents
      parameters:
      - description: The path.
        explode: true
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      - description: An optional filter to include or exclude files from the results.
          true/false.
        explode: true
        in: query
        name: includeFiles
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: An optional filter to include or exclude folders from the results.
          true/false.
        explode: true
        in: query
        name: includeDirectories
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FileSystemEntryInfo'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/FileSystemEntryInfo'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/FileSystemEntryInfo'
                type: array
          description: Directory contents returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrElevated
        - DefaultAuthorization
      summary: Gets the contents of a given directory in the file system.
      tags:
      - Environment
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Environment/Drives:
    get:
      operationId: GetDrives
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FileSystemEntryInfo'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/FileSystemEntryInfo'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/FileSystemEntryInfo'
                type: array
          description: List of entries returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrElevated
        - DefaultAuthorization
      summary: Gets available drives from the server's file system.
      tags:
      - Environment
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Environment/NetworkShares:
    get:
      deprecated: true
      operationId: GetNetworkShares
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FileSystemEntryInfo'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/FileSystemEntryInfo'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/FileSystemEntryInfo'
                type: array
          description: Empty array returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrElevated
        - DefaultAuthorization
      summary: Gets network paths.
      tags:
      - Environment
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Environment/ParentPath:
    get:
      operationId: GetParentPath
      parameters:
      - description: The path.
        explode: true
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/json; profile="CamelCase":
              schema:
                type: string
            application/json; profile="PascalCase":
              schema:
                type: string
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrElevated
        - DefaultAuthorization
      summary: Gets the parent path of a given path.
      tags:
      - Environment
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Environment/ValidatePath:
    post:
      operationId: ValidatePath
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ValidatePathDto'
              description: Validate path object.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ValidatePathDto'
              description: Validate path object.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ValidatePathDto'
              description: Validate path object.
        description: Validate request object.
        required: true
      responses:
        "204":
          description: Path validated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Path not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrElevated
        - DefaultAuthorization
      summary: Validates path.
      tags:
      - Environment
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/Filters:
    get:
      operationId: GetQueryFiltersLegacy
      parameters:
      - description: Optional. User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. Parent id.
        explode: true
        in: query
        name: parentId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimited."
        explode: true
        in: query
        name: includeItemTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/BaseItemKind'
          type: array
        style: form
      - description: "Optional. Filter by MediaType. Allows multiple, comma delimited."
        explode: true
        in: query
        name: mediaTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/MediaType'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryFiltersLegacy'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/QueryFiltersLegacy'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/QueryFiltersLegacy'
          description: Legacy filters retrieved.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets legacy query filters.
      tags:
      - Filter
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/Filters2:
    get:
      operationId: GetQueryFilters
      parameters:
      - description: Optional. User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. Specify this to localize the search to a specific item
          or folder. Omit to use the root.
        explode: true
        in: query
        name: parentId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimited."
        explode: true
        in: query
        name: includeItemTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/BaseItemKind'
          type: array
        style: form
      - description: Optional. Is item airing.
        explode: true
        in: query
        name: isAiring
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Is item movie.
        explode: true
        in: query
        name: isMovie
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Is item sports.
        explode: true
        in: query
        name: isSports
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Is item kids.
        explode: true
        in: query
        name: isKids
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Is item news.
        explode: true
        in: query
        name: isNews
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Is item series.
        explode: true
        in: query
        name: isSeries
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Search recursive.
        explode: true
        in: query
        name: recursive
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryFilters'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/QueryFilters'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/QueryFilters'
          description: Filters retrieved.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets query filters.
      tags:
      - Filter
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Genres:
    get:
      operationId: GetGenres
      parameters:
      - description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The search term.
        explode: true
        in: query
        name: searchTerm
        required: false
        schema:
          type: string
        style: form
      - description: Specify this to localize the search to a specific item or folder.
          Omit to use the root.
        explode: true
        in: query
        name: parentId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered out based on\
          \ item type. This allows multiple, comma delimited."
        explode: true
        in: query
        name: excludeItemTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/BaseItemKind'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered in based on\
          \ item type. This allows multiple, comma delimited."
        explode: true
        in: query
        name: includeItemTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/BaseItemKind'
          type: array
        style: form
      - description: "Optional filter by items that are marked as favorite, or not."
        explode: true
        in: query
        name: isFavorite
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional, the max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        explode: true
        in: query
        name: nameStartsWithOrGreater
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter by items whose name is sorted equally than a
          given input string.
        explode: true
        in: query
        name: nameStartsWith
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter by items whose name is equally or lesser than
          a given input string.
        explode: true
        in: query
        name: nameLessThan
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify one or more sort orders, comma delimited."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemSortBy'
          type: array
        style: form
      - description: "Sort Order - Ascending,Descending."
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          items:
            $ref: '#/components/schemas/SortOrder'
          type: array
        style: form
      - description: "Optional, include image information in output."
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Optional. Include total record count.
        explode: true
        in: query
        name: enableTotalRecordCount
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Genres returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: "Gets all genres from a given item, folder, or the entire library."
      tags:
      - Genres
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Genres/{genreName}:
    get:
      operationId: GetGenre
      parameters:
      - description: The genre name.
        explode: false
        in: path
        name: genreName
        required: true
        schema:
          type: string
        style: simple
      - description: The user id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDto'
          description: Genres returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: "Gets a genre, by name."
      tags:
      - Genres
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Audio/{itemId}/hls/{segmentId}/stream.aac:
    get:
      operationId: GetHlsAudioSegmentLegacyAac
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          type: string
        style: simple
      - description: The segment id.
        explode: false
        in: path
        name: segmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            audio/*:
              schema:
                format: binary
                type: string
          description: Hls audio segment returned.
      summary: Gets the specified audio segment for an audio item.
      tags:
      - HlsSegment
      x-accepts:
      - audio/*
  /Audio/{itemId}/hls/{segmentId}/stream.mp3:
    get:
      operationId: GetHlsAudioSegmentLegacyMp3
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          type: string
        style: simple
      - description: The segment id.
        explode: false
        in: path
        name: segmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            audio/*:
              schema:
                format: binary
                type: string
          description: Hls audio segment returned.
      summary: Gets the specified audio segment for an audio item.
      tags:
      - HlsSegment
      x-accepts:
      - audio/*
  /Videos/{itemId}/hls/{playlistId}/{segmentId}.{segmentContainer}:
    get:
      operationId: GetHlsVideoSegmentLegacy
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          type: string
        style: simple
      - description: The playlist id.
        explode: false
        in: path
        name: playlistId
        required: true
        schema:
          type: string
        style: simple
      - description: The segment id.
        explode: false
        in: path
        name: segmentId
        required: true
        schema:
          type: string
        style: simple
      - description: The segment container.
        explode: false
        in: path
        name: segmentContainer
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            video/*:
              schema:
                format: binary
                type: string
          description: Hls video segment returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Hls segment not found.
      summary: Gets a hls video segment.
      tags:
      - HlsSegment
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - video/*
  /Videos/{itemId}/hls/{playlistId}/stream.m3u8:
    get:
      operationId: GetHlsPlaylistLegacy
      parameters:
      - description: The video id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          type: string
        style: simple
      - description: The playlist id.
        explode: false
        in: path
        name: playlistId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/x-mpegURL:
              schema:
                format: binary
                type: string
          description: Hls video playlist returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets a hls video playlist.
      tags:
      - HlsSegment
      x-accepts:
      - application/x-mpegURL
  /Videos/ActiveEncodings:
    delete:
      operationId: StopEncodingProcess
      parameters:
      - description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        explode: true
        in: query
        name: deviceId
        required: true
        schema:
          type: string
        style: form
      - description: The play session id.
        explode: true
        in: query
        name: playSessionId
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Encoding stopped successfully.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Stops an active encoding.
      tags:
      - HlsSegment
      x-accepts:
      - application/json
  /Artists/{name}/Images/{imageType}/{imageIndex}:
    get:
      operationId: GetArtistImage
      parameters:
      - description: Artist name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the output format of the image - original,gif,jpg,png."
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      - description: Image index.
        explode: false
        in: path
        name: imageIndex
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Get artist image by name.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
    head:
      operationId: HeadArtistImage
      parameters:
      - description: Artist name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the output format of the image - original,gif,jpg,png."
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      - description: Image index.
        explode: false
        in: path
        name: imageIndex
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Get artist image by name.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
  /Branding/Splashscreen:
    delete:
      operationId: DeleteCustomSplashscreen
      responses:
        "204":
          description: Successfully deleted the custom splashscreen.
        "403":
          description: User does not have permission to delete splashscreen..
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Delete a custom splashscreen.
      tags:
      - Image
      x-accepts:
      - application/json
    get:
      operationId: GetSplashscreen
      parameters:
      - description: Supply the cache tag from the item object to receive strong caching
          headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the output format of the image - original,gif,jpg,png."
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      - description: "Quality setting, from 0-100."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          default: 90
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Splashscreen returned successfully.
      summary: Generates or gets the splashscreen.
      tags:
      - Image
      x-accepts:
      - image/*
    post:
      operationId: UploadCustomSplashscreen
      requestBody:
        content:
          image/*:
            schema:
              format: binary
              type: string
      responses:
        "204":
          description: Successfully uploaded new splashscreen.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error reading MimeType from uploaded image.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User does not have permission to upload splashscreen..
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: "Uploads a custom splashscreen.\r\nThe body is expected to the image\
        \ contents base64 encoded."
      tags:
      - Image
      x-content-type: image/*
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Genres/{name}/Images/{imageType}:
    get:
      operationId: GetGenreImage
      parameters:
      - description: Genre name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the output format of the image - original,gif,jpg,png."
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      - description: Image index.
        explode: true
        in: query
        name: imageIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Get genre image by name.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
    head:
      operationId: HeadGenreImage
      parameters:
      - description: Genre name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the output format of the image - original,gif,jpg,png."
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      - description: Image index.
        explode: true
        in: query
        name: imageIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Get genre image by name.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
  /Genres/{name}/Images/{imageType}/{imageIndex}:
    get:
      operationId: GetGenreImageByIndex
      parameters:
      - description: Genre name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: Image index.
        explode: false
        in: path
        name: imageIndex
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the output format of the image - original,gif,jpg,png."
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Get genre image by name.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
    head:
      operationId: HeadGenreImageByIndex
      parameters:
      - description: Genre name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: Image index.
        explode: false
        in: path
        name: imageIndex
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the output format of the image - original,gif,jpg,png."
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Get genre image by name.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
  /Items/{itemId}/Images:
    get:
      operationId: GetItemImageInfos
      parameters:
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ImageInfo'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/ImageInfo'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/ImageInfo'
                type: array
          description: Item images returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get item image infos.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/{itemId}/Images/{imageType}:
    delete:
      operationId: DeleteItemImage
      parameters:
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: The image index.
        explode: true
        in: query
        name: imageIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "204":
          description: Image deleted.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Delete an item's image.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    get:
      operationId: GetItemImage
      parameters:
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The MediaBrowser.Model.Drawing.ImageFormat of the returned
          image.
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      - description: Image index.
        explode: true
        in: query
        name: imageIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Gets the item's image.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
    head:
      operationId: HeadItemImage
      parameters:
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The MediaBrowser.Model.Drawing.ImageFormat of the returned
          image.
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      - description: Image index.
        explode: true
        in: query
        name: imageIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Gets the item's image.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
    post:
      operationId: SetItemImage
      parameters:
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      requestBody:
        content:
          image/*:
            schema:
              format: binary
              type: string
      responses:
        "204":
          description: Image saved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Set item image.
      tags:
      - Image
      x-content-type: image/*
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/{itemId}/Images/{imageType}/{imageIndex}:
    delete:
      operationId: DeleteItemImageByIndex
      parameters:
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: The image index.
        explode: false
        in: path
        name: imageIndex
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "204":
          description: Image deleted.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Delete an item's image.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    get:
      operationId: GetItemImageByIndex
      parameters:
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: Image index.
        explode: false
        in: path
        name: imageIndex
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The MediaBrowser.Model.Drawing.ImageFormat of the returned
          image.
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Gets the item's image.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
    head:
      operationId: HeadItemImageByIndex
      parameters:
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: Image index.
        explode: false
        in: path
        name: imageIndex
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The MediaBrowser.Model.Drawing.ImageFormat of the returned
          image.
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Gets the item's image.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
    post:
      operationId: SetItemImageByIndex
      parameters:
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: (Unused) Image index.
        explode: false
        in: path
        name: imageIndex
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          image/*:
            schema:
              format: binary
              type: string
      responses:
        "204":
          description: Image saved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Set item image.
      tags:
      - Image
      x-content-type: image/*
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/{itemId}/Images/{imageType}/{imageIndex}/{tag}/{format}/{maxWidth}/{maxHeight}/{percentPlayed}/{unplayedCount}:
    get:
      operationId: GetItemImage2
      parameters:
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: The maximum image width to return.
        explode: false
        in: path
        name: maxWidth
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The maximum image height to return.
        explode: false
        in: path
        name: maxHeight
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the output format of the image - original,gif,jpg,png."
        explode: false
        in: path
        name: format
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          description: Enum ImageOutputFormat.
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: simple
      - description: Optional. Percent to render for the percent played overlay.
        explode: false
        in: path
        name: percentPlayed
        required: true
        schema:
          format: double
          type: number
        style: simple
      - description: Optional. Unplayed count overlay to render.
        explode: false
        in: path
        name: unplayedCount
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      - description: Image index.
        explode: false
        in: path
        name: imageIndex
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Gets the item's image.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
    head:
      operationId: HeadItemImage2
      parameters:
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: The maximum image width to return.
        explode: false
        in: path
        name: maxWidth
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The maximum image height to return.
        explode: false
        in: path
        name: maxHeight
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      - description: "Determines the output format of the image - original,gif,jpg,png."
        explode: false
        in: path
        name: format
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          description: Enum ImageOutputFormat.
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: simple
      - description: Optional. Percent to render for the percent played overlay.
        explode: false
        in: path
        name: percentPlayed
        required: true
        schema:
          format: double
          type: number
        style: simple
      - description: Optional. Unplayed count overlay to render.
        explode: false
        in: path
        name: unplayedCount
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      - description: Image index.
        explode: false
        in: path
        name: imageIndex
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Gets the item's image.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
  /Items/{itemId}/Images/{imageType}/{imageIndex}/Index:
    post:
      operationId: UpdateItemImageIndex
      parameters:
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: Old image index.
        explode: false
        in: path
        name: imageIndex
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: New image index.
        explode: true
        in: query
        name: newIndex
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "204":
          description: Image index updated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Updates the index for an item image.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /MusicGenres/{name}/Images/{imageType}:
    get:
      operationId: GetMusicGenreImage
      parameters:
      - description: Music genre name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the output format of the image - original,gif,jpg,png."
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      - description: Image index.
        explode: true
        in: query
        name: imageIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Get music genre image by name.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
    head:
      operationId: HeadMusicGenreImage
      parameters:
      - description: Music genre name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the output format of the image - original,gif,jpg,png."
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      - description: Image index.
        explode: true
        in: query
        name: imageIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Get music genre image by name.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
  /MusicGenres/{name}/Images/{imageType}/{imageIndex}:
    get:
      operationId: GetMusicGenreImageByIndex
      parameters:
      - description: Music genre name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: Image index.
        explode: false
        in: path
        name: imageIndex
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the output format of the image - original,gif,jpg,png."
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Get music genre image by name.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
    head:
      operationId: HeadMusicGenreImageByIndex
      parameters:
      - description: Music genre name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: Image index.
        explode: false
        in: path
        name: imageIndex
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the output format of the image - original,gif,jpg,png."
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Get music genre image by name.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
  /Persons/{name}/Images/{imageType}:
    get:
      operationId: GetPersonImage
      parameters:
      - description: Person name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the output format of the image - original,gif,jpg,png."
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      - description: Image index.
        explode: true
        in: query
        name: imageIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Get person image by name.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
    head:
      operationId: HeadPersonImage
      parameters:
      - description: Person name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the output format of the image - original,gif,jpg,png."
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      - description: Image index.
        explode: true
        in: query
        name: imageIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Get person image by name.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
  /Persons/{name}/Images/{imageType}/{imageIndex}:
    get:
      operationId: GetPersonImageByIndex
      parameters:
      - description: Person name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: Image index.
        explode: false
        in: path
        name: imageIndex
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the output format of the image - original,gif,jpg,png."
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Get person image by name.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
    head:
      operationId: HeadPersonImageByIndex
      parameters:
      - description: Person name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: Image index.
        explode: false
        in: path
        name: imageIndex
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the output format of the image - original,gif,jpg,png."
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Get person image by name.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
  /Studios/{name}/Images/{imageType}:
    get:
      operationId: GetStudioImage
      parameters:
      - description: Studio name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the output format of the image - original,gif,jpg,png."
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      - description: Image index.
        explode: true
        in: query
        name: imageIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Get studio image by name.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
    head:
      operationId: HeadStudioImage
      parameters:
      - description: Studio name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the output format of the image - original,gif,jpg,png."
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      - description: Image index.
        explode: true
        in: query
        name: imageIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Get studio image by name.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
  /Studios/{name}/Images/{imageType}/{imageIndex}:
    get:
      operationId: GetStudioImageByIndex
      parameters:
      - description: Studio name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: Image index.
        explode: false
        in: path
        name: imageIndex
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the output format of the image - original,gif,jpg,png."
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Get studio image by name.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
    head:
      operationId: HeadStudioImageByIndex
      parameters:
      - description: Studio name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Image type.
        explode: false
        in: path
        name: imageType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: simple
      - description: Image index.
        explode: false
        in: path
        name: imageIndex
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the output format of the image - original,gif,jpg,png."
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Get studio image by name.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
  /UserImage:
    delete:
      operationId: DeleteUserImage
      parameters:
      - description: User Id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "204":
          description: Image deleted.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User does not have permission to delete the image.
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Delete the user's image.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    get:
      operationId: GetUserImage
      parameters:
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the output format of the image - original,gif,jpg,png."
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      - description: Image index.
        explode: true
        in: query
        name: imageIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User id not provided.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Get user profile image.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
    head:
      operationId: HeadUserImage
      parameters:
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: "Determines the output format of the image - original,gif,jpg,png."
        explode: true
        in: query
        name: format
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          enum:
          - Bmp
          - Gif
          - Jpg
          - Png
          - Webp
          - Svg
          type: string
        style: form
      - description: The maximum image width to return.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum image height to return.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Percent to render for the percent played overlay.
        explode: true
        in: query
        name: percentPlayed
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. Unplayed count overlay to render.
        explode: true
        in: query
        name: unplayedCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image width to return.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The fixed image height to return.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        explode: true
        in: query
        name: quality
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Width of box to fill.
        explode: true
        in: query
        name: fillWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Height of box to fill.
        explode: true
        in: query
        name: fillHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Blur image.
        explode: true
        in: query
        name: blur
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Apply a background color for transparent images.
        explode: true
        in: query
        name: backgroundColor
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Apply a foreground layer on top of the image.
        explode: true
        in: query
        name: foregroundLayer
        required: false
        schema:
          type: string
        style: form
      - description: Image index.
        explode: true
        in: query
        name: imageIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Image stream returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User id not provided.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
      summary: Get user profile image.
      tags:
      - Image
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
    post:
      operationId: PostUserImage
      parameters:
      - description: User Id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      requestBody:
        content:
          image/*:
            schema:
              format: binary
              type: string
      responses:
        "204":
          description: Image updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User does not have permission to delete the image.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Sets the user image.
      tags:
      - Image
      x-content-type: image/*
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Albums/{itemId}/InstantMix:
    get:
      operationId: GetInstantMixFromAlbum
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: Optional. Include image information in output.
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Include user data.
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. The max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Instant playlist returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Creates an instant playlist based on a given album.
      tags:
      - InstantMix
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Artists/{itemId}/InstantMix:
    get:
      operationId: GetInstantMixFromArtists
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: Optional. Include image information in output.
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Include user data.
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. The max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Instant playlist returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Creates an instant playlist based on a given artist.
      tags:
      - InstantMix
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Artists/InstantMix:
    get:
      deprecated: true
      operationId: GetInstantMixFromArtists2
      parameters:
      - description: The item id.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: Optional. Include image information in output.
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Include user data.
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. The max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Instant playlist returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Creates an instant playlist based on a given artist.
      tags:
      - InstantMix
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/{itemId}/InstantMix:
    get:
      operationId: GetInstantMixFromItem
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: Optional. Include image information in output.
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Include user data.
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. The max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Instant playlist returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Creates an instant playlist based on a given item.
      tags:
      - InstantMix
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /MusicGenres/{name}/InstantMix:
    get:
      operationId: GetInstantMixFromMusicGenreByName
      parameters:
      - description: The genre name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: Optional. Include image information in output.
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Include user data.
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. The max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Instant playlist returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Creates an instant playlist based on a given genre.
      tags:
      - InstantMix
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /MusicGenres/InstantMix:
    get:
      operationId: GetInstantMixFromMusicGenreById
      parameters:
      - description: The item id.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: Optional. Include image information in output.
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Include user data.
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. The max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Instant playlist returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Creates an instant playlist based on a given genre.
      tags:
      - InstantMix
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Playlists/{itemId}/InstantMix:
    get:
      operationId: GetInstantMixFromPlaylist
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: Optional. Include image information in output.
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Include user data.
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. The max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Instant playlist returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Creates an instant playlist based on a given playlist.
      tags:
      - InstantMix
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Songs/{itemId}/InstantMix:
    get:
      operationId: GetInstantMixFromSong
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: Optional. Include image information in output.
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Include user data.
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. The max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Instant playlist returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Creates an instant playlist based on a given song.
      tags:
      - InstantMix
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/{itemId}/ExternalIdInfos:
    get:
      operationId: GetExternalIdInfos
      parameters:
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExternalIdInfo'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/ExternalIdInfo'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/ExternalIdInfo'
                type: array
          description: External id info retrieved.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
        - DefaultAuthorization
      summary: Get the item's external id info.
      tags:
      - ItemLookup
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/RemoteSearch/Apply/{itemId}:
    post:
      operationId: ApplySearchCriteria
      parameters:
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Optional. Whether or not to replace all images. Default: True."
        explode: true
        in: query
        name: replaceAllImages
        required: false
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RemoteSearchResult'
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RemoteSearchResult'
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RemoteSearchResult'
        description: The remote search result.
        required: true
      responses:
        "204":
          description: Item metadata refreshed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
        - DefaultAuthorization
      summary: Applies search criteria to an item and refreshes metadata.
      tags:
      - ItemLookup
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/RemoteSearch/Book:
    post:
      operationId: GetBookRemoteSearchResults
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/BookInfoRemoteSearchQuery'
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/BookInfoRemoteSearchQuery'
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/BookInfoRemoteSearchQuery'
        description: Remote search query.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
          description: Book remote search executed.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get book remote search.
      tags:
      - ItemLookup
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/RemoteSearch/BoxSet:
    post:
      operationId: GetBoxSetRemoteSearchResults
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/BoxSetInfoRemoteSearchQuery'
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/BoxSetInfoRemoteSearchQuery'
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/BoxSetInfoRemoteSearchQuery'
        description: Remote search query.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
          description: Box set remote search executed.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get box set remote search.
      tags:
      - ItemLookup
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/RemoteSearch/Movie:
    post:
      operationId: GetMovieRemoteSearchResults
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/MovieInfoRemoteSearchQuery'
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/MovieInfoRemoteSearchQuery'
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/MovieInfoRemoteSearchQuery'
        description: Remote search query.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
          description: Movie remote search executed.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get movie remote search.
      tags:
      - ItemLookup
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/RemoteSearch/MusicAlbum:
    post:
      operationId: GetMusicAlbumRemoteSearchResults
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AlbumInfoRemoteSearchQuery'
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AlbumInfoRemoteSearchQuery'
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AlbumInfoRemoteSearchQuery'
        description: Remote search query.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
          description: Music album remote search executed.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get music album remote search.
      tags:
      - ItemLookup
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/RemoteSearch/MusicArtist:
    post:
      operationId: GetMusicArtistRemoteSearchResults
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ArtistInfoRemoteSearchQuery'
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ArtistInfoRemoteSearchQuery'
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ArtistInfoRemoteSearchQuery'
        description: Remote search query.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
          description: Music artist remote search executed.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get music artist remote search.
      tags:
      - ItemLookup
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/RemoteSearch/MusicVideo:
    post:
      operationId: GetMusicVideoRemoteSearchResults
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/MusicVideoInfoRemoteSearchQuery'
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/MusicVideoInfoRemoteSearchQuery'
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/MusicVideoInfoRemoteSearchQuery'
        description: Remote search query.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
          description: Music video remote search executed.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get music video remote search.
      tags:
      - ItemLookup
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/RemoteSearch/Person:
    post:
      operationId: GetPersonRemoteSearchResults
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PersonLookupInfoRemoteSearchQuery'
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PersonLookupInfoRemoteSearchQuery'
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PersonLookupInfoRemoteSearchQuery'
        description: Remote search query.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
          description: Person remote search executed.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
        - DefaultAuthorization
      summary: Get person remote search.
      tags:
      - ItemLookup
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/RemoteSearch/Series:
    post:
      operationId: GetSeriesRemoteSearchResults
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SeriesInfoRemoteSearchQuery'
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SeriesInfoRemoteSearchQuery'
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SeriesInfoRemoteSearchQuery'
        description: Remote search query.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
          description: Series remote search executed.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get series remote search.
      tags:
      - ItemLookup
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/RemoteSearch/Trailer:
    post:
      operationId: GetTrailerRemoteSearchResults
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/TrailerInfoRemoteSearchQuery'
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/TrailerInfoRemoteSearchQuery'
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/TrailerInfoRemoteSearchQuery'
        description: Remote search query.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                type: array
          description: Trailer remote search executed.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get trailer remote search.
      tags:
      - ItemLookup
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/{itemId}/Refresh:
    post:
      operationId: RefreshItem
      parameters:
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: (Optional) Specifies the metadata refresh mode.
        explode: true
        in: query
        name: metadataRefreshMode
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/MetadataRefreshMode'
          default: None
          enum:
          - None
          - ValidationOnly
          - Default
          - FullRefresh
          type: string
        style: form
      - description: (Optional) Specifies the image refresh mode.
        explode: true
        in: query
        name: imageRefreshMode
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/MetadataRefreshMode'
          default: None
          enum:
          - None
          - ValidationOnly
          - Default
          - FullRefresh
          type: string
        style: form
      - description: (Optional) Determines if metadata should be replaced. Only applicable
          if mode is FullRefresh.
        explode: true
        in: query
        name: replaceAllMetadata
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: (Optional) Determines if images should be replaced. Only applicable
          if mode is FullRefresh.
        explode: true
        in: query
        name: replaceAllImages
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: (Optional) Determines if trickplay images should be replaced.
          Only applicable if mode is FullRefresh.
        explode: true
        in: query
        name: regenerateTrickplay
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "204":
          description: Item metadata refresh queued.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item to refresh not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Refreshes metadata for an item.
      tags:
      - ItemRefresh
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items:
    delete:
      operationId: DeleteItems
      parameters:
      - description: The item ids.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      responses:
        "204":
          description: Items deleted.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized access.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Deletes items from the library and filesystem.
      tags:
      - Library
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    get:
      operationId: GetItems
      parameters:
      - description: The user id supplied as query parameter; this is required when
          not using an API key.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        explode: true
        in: query
        name: maxOfficialRating
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter by items with theme songs.
        explode: true
        in: query
        name: hasThemeSong
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items with theme videos.
        explode: true
        in: query
        name: hasThemeVideo
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items with subtitles.
        explode: true
        in: query
        name: hasSubtitles
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items with special features.
        explode: true
        in: query
        name: hasSpecialFeature
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items with trailers.
        explode: true
        in: query
        name: hasTrailer
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Return items that are siblings of a supplied item.
        explode: true
        in: query
        name: adjacentTo
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional filter by index number.
        explode: true
        in: query
        name: indexNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional filter by parent index number.
        explode: true
        in: query
        name: parentIndexNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional filter by items that have or do not have a parental
          rating.
        explode: true
        in: query
        name: hasParentalRating
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items that are HD or not.
        explode: true
        in: query
        name: isHd
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items that are 4K or not.
        explode: true
        in: query
        name: is4K
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. If specified, results will be filtered based on LocationType.\
          \ This allows multiple, comma delimited."
        explode: true
        in: query
        name: locationTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/LocationType'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on the\
          \ LocationType. This allows multiple, comma delimited."
        explode: true
        in: query
        name: excludeLocationTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/LocationType'
          type: array
        style: form
      - description: Optional filter by items that are missing episodes or not.
        explode: true
        in: query
        name: isMissing
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items that are unaired episodes or not.
        explode: true
        in: query
        name: isUnaired
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by minimum community rating.
        explode: true
        in: query
        name: minCommunityRating
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional filter by minimum critic rating.
        explode: true
        in: query
        name: minCriticRating
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. The minimum premiere date. Format = ISO.
        explode: true
        in: query
        name: minPremiereDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Optional. The minimum last saved date. Format = ISO.
        explode: true
        in: query
        name: minDateLastSaved
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Optional. The minimum last saved date for the current user. Format
          = ISO.
        explode: true
        in: query
        name: minDateLastSavedForUser
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Optional. The maximum premiere date. Format = ISO.
        explode: true
        in: query
        name: maxPremiereDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Optional filter by items that have an overview or not.
        explode: true
        in: query
        name: hasOverview
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items that have an IMDb id or not.
        explode: true
        in: query
        name: hasImdbId
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items that have a TMDb id or not.
        explode: true
        in: query
        name: hasTmdbId
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items that have a TVDb id or not.
        explode: true
        in: query
        name: hasTvdbId
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter for live tv movies.
        explode: true
        in: query
        name: isMovie
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter for live tv series.
        explode: true
        in: query
        name: isSeries
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter for live tv news.
        explode: true
        in: query
        name: isNews
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter for live tv kids.
        explode: true
        in: query
        name: isKids
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter for live tv sports.
        explode: true
        in: query
        name: isSports
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. If specified, results will be filtered by excluding\
          \ item ids. This allows multiple, comma delimited."
        explode: true
        in: query
        name: excludeItemIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false."
        explode: true
        in: query
        name: recursive
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter based on a search term.
        explode: true
        in: query
        name: searchTerm
        required: false
        schema:
          type: string
        style: form
      - description: "Sort Order - Ascending, Descending."
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          items:
            $ref: '#/components/schemas/SortOrder'
          type: array
        style: form
      - description: Specify this to localize the search to a specific item or folder.
          Omit to use the root.
        explode: true
        in: query
        name: parentId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimited. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimited."
        explode: true
        in: query
        name: excludeItemTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/BaseItemKind'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on the\
          \ item type. This allows multiple, comma delimited."
        explode: true
        in: query
        name: includeItemTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/BaseItemKind'
          type: array
        style: form
      - description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimited. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes."
        explode: true
        in: query
        name: filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFilter'
          type: array
        style: form
      - description: "Optional filter by items that are marked as favorite, or not."
        explode: true
        in: query
        name: isFavorite
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional filter by MediaType. Allows multiple, comma delimited."
        explode: true
        in: query
        name: mediaTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/MediaType'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        explode: true
        in: query
        name: imageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      - description: "Optional. Specify one or more sort orders, comma delimited.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemSortBy'
          type: array
        style: form
      - description: "Optional filter by items that are played, or not."
        explode: true
        in: query
        name: isPlayed
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimited."
        explode: true
        in: query
        name: genres
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimited."
        explode: true
        in: query
        name: officialRatings
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimited."
        explode: true
        in: query
        name: tags
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimited."
        explode: true
        in: query
        name: years
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - description: "Optional, include user data."
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional, the max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        explode: true
        in: query
        name: person
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person id."
        explode: true
        in: query
        name: personIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited."
        explode: true
        in: query
        name: personTypes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimited."
        explode: true
        in: query
        name: studios
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on artists.\
          \ This allows multiple, pipe delimited."
        explode: true
        in: query
        name: artists
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on artist\
          \ id. This allows multiple, pipe delimited."
        explode: true
        in: query
        name: excludeArtistIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified artist id."
        explode: true
        in: query
        name: artistIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified album artist id."
        explode: true
        in: query
        name: albumArtistIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified contributing artist id."
        explode: true
        in: query
        name: contributingArtistIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimited."
        explode: true
        in: query
        name: albums
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on album\
          \ id. This allows multiple, pipe delimited."
        explode: true
        in: query
        name: albumIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimited."
        explode: true
        in: query
        name: videoTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/VideoType'
          type: array
        style: form
      - description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        explode: true
        in: query
        name: minOfficialRating
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter by items that are locked.
        explode: true
        in: query
        name: isLocked
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items that are placeholders.
        explode: true
        in: query
        name: isPlaceHolder
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items that have official ratings.
        explode: true
        in: query
        name: hasOfficialRating
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to hide items behind their boxsets.
        explode: true
        in: query
        name: collapseBoxSetItems
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter by the minimum width of the item.
        explode: true
        in: query
        name: minWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Filter by the minimum height of the item.
        explode: true
        in: query
        name: minHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Filter by the maximum width of the item.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Filter by the maximum height of the item.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional filter by items that are 3D, or not."
        explode: true
        in: query
        name: is3D
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional filter by Series Status. Allows multiple, comma delimited."
        explode: true
        in: query
        name: seriesStatus
        required: false
        schema:
          items:
            $ref: '#/components/schemas/SeriesStatus'
          type: array
        style: form
      - description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        explode: true
        in: query
        name: nameStartsWithOrGreater
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter by items whose name is sorted equally than a
          given input string.
        explode: true
        in: query
        name: nameStartsWith
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter by items whose name is equally or lesser than
          a given input string.
        explode: true
        in: query
        name: nameLessThan
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. If specified, results will be filtered based on studio\
          \ id. This allows multiple, pipe delimited."
        explode: true
        in: query
        name: studioIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on genre\
          \ id. This allows multiple, pipe delimited."
        explode: true
        in: query
        name: genreIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: Optional. Enable the total record count.
        explode: true
        in: query
        name: enableTotalRecordCount
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: "Optional, include image information in output."
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets items based on a query.
      tags:
      - Items
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /UserItems/{itemId}/UserData:
    get:
      operationId: GetItemUserData
      parameters:
      - description: The user id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
          description: return item user data.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item is not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get Item User Data.
      tags:
      - Items
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: UpdateItemUserData
      parameters:
      - description: The user id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateUserItemDataDto'
              description: This is used by the api to get information about a item
                user data.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateUserItemDataDto'
              description: This is used by the api to get information about a item
                user data.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateUserItemDataDto'
              description: This is used by the api to get information about a item
                user data.
        description: New user data object.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
          description: return updated user item data.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item is not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Update Item User Data.
      tags:
      - Items
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /UserItems/Resume:
    get:
      operationId: GetResumeItems
      parameters:
      - description: The user id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The start index.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The item limit.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The search term.
        explode: true
        in: query
        name: searchTerm
        required: false
        schema:
          type: string
        style: form
      - description: Specify this to localize the search to a specific item or folder.
          Omit to use the root.
        explode: true
        in: query
        name: parentId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimited. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: "Optional. Filter by MediaType. Allows multiple, comma delimited."
        explode: true
        in: query
        name: mediaTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/MediaType'
          type: array
        style: form
      - description: Optional. Include user data.
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. The max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimited."
        explode: true
        in: query
        name: excludeItemTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/BaseItemKind'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on the\
          \ item type. This allows multiple, comma delimited."
        explode: true
        in: query
        name: includeItemTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/BaseItemKind'
          type: array
        style: form
      - description: Optional. Enable the total record count.
        explode: true
        in: query
        name: enableTotalRecordCount
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Optional. Include image information in output.
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Optional. Whether to exclude the currently active sessions.
        explode: true
        in: query
        name: excludeActiveSessions
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Items returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets items based on a query.
      tags:
      - Items
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/{itemId}:
    delete:
      operationId: DeleteItem
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Item deleted.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized access.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Deletes an item from the library and filesystem.
      tags:
      - Library
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    get:
      operationId: GetItem
      parameters:
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDto'
          description: Item returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets an item from a user's library.
      tags:
      - UserLibrary
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: UpdateItem
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/BaseItemDto'
              description: "This is strictly used as a data transfer object from the\
                \ api layer.\r\nThis holds information about a BaseItem in a format\
                \ that is convenient for the client."
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/BaseItemDto'
              description: "This is strictly used as a data transfer object from the\
                \ api layer.\r\nThis holds information about a BaseItem in a format\
                \ that is convenient for the client."
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/BaseItemDto'
              description: "This is strictly used as a data transfer object from the\
                \ api layer.\r\nThis holds information about a BaseItem in a format\
                \ that is convenient for the client."
        description: The new item properties.
        required: true
      responses:
        "204":
          description: Item updated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Updates an item.
      tags:
      - ItemUpdate
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/{itemId}/ContentType:
    post:
      operationId: UpdateItemContentType
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The content type of the item.
        explode: true
        in: query
        name: contentType
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Item content type updated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Updates an item's content type.
      tags:
      - ItemUpdate
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/{itemId}/MetadataEditor:
    get:
      operationId: GetMetadataEditorInfo
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataEditorInfo'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/MetadataEditorInfo'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/MetadataEditorInfo'
          description: Item metadata editor returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Gets metadata editor info for an item.
      tags:
      - ItemUpdate
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Albums/{itemId}/Similar:
    get:
      operationId: GetSimilarAlbums
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Exclude artist ids.
        explode: true
        in: query
        name: excludeArtistIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimited. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Similar items returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets similar items.
      tags:
      - Library
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Artists/{itemId}/Similar:
    get:
      operationId: GetSimilarArtists
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Exclude artist ids.
        explode: true
        in: query
        name: excludeArtistIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimited. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Similar items returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets similar items.
      tags:
      - Library
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/{itemId}/Ancestors:
    get:
      operationId: GetAncestors
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BaseItemDto'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/BaseItemDto'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/BaseItemDto'
                type: array
          description: Item parents returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets all parents of an item.
      tags:
      - Library
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/{itemId}/CriticReviews:
    get:
      deprecated: true
      operationId: GetCriticReviews
      parameters:
      - explode: false
        in: path
        name: itemId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Critic reviews returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets critic review for an item.
      tags:
      - Library
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/{itemId}/Download:
    get:
      operationId: GetDownload
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            video/*:
              schema:
                format: binary
                type: string
            audio/*:
              schema:
                format: binary
                type: string
          description: Media downloaded.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - Download
        - DefaultAuthorization
      summary: Downloads item media.
      tags:
      - Library
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - audio/*
      - video/*
  /Items/{itemId}/File:
    get:
      operationId: GetFile
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            video/*:
              schema:
                format: binary
                type: string
            audio/*:
              schema:
                format: binary
                type: string
          description: File stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get the original file of an item.
      tags:
      - Library
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - audio/*
      - video/*
  /Items/{itemId}/Similar:
    get:
      operationId: GetSimilarItems
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Exclude artist ids.
        explode: true
        in: query
        name: excludeArtistIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimited. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Similar items returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets similar items.
      tags:
      - Library
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/{itemId}/ThemeMedia:
    get:
      operationId: GetThemeMedia
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. Determines whether or not parent items should be searched
          for theme media.
        explode: true
        in: query
        name: inheritFromParent
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Optional. Specify one or more sort orders, comma delimited.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemSortBy'
          type: array
        style: form
      - description: "Optional. Sort Order - Ascending, Descending."
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          items:
            $ref: '#/components/schemas/SortOrder'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllThemeMediaResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/AllThemeMediaResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/AllThemeMediaResult'
          description: Theme songs and videos returned.
        "404":
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get theme songs and videos for an item.
      tags:
      - Library
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/{itemId}/ThemeSongs:
    get:
      operationId: GetThemeSongs
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. Determines whether or not parent items should be searched
          for theme media.
        explode: true
        in: query
        name: inheritFromParent
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Optional. Specify one or more sort orders, comma delimited.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemSortBy'
          type: array
        style: form
      - description: "Optional. Sort Order - Ascending, Descending."
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          items:
            $ref: '#/components/schemas/SortOrder'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeMediaResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ThemeMediaResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ThemeMediaResult'
          description: Theme songs returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get theme songs for an item.
      tags:
      - Library
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/{itemId}/ThemeVideos:
    get:
      operationId: GetThemeVideos
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. Determines whether or not parent items should be searched
          for theme media.
        explode: true
        in: query
        name: inheritFromParent
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Optional. Specify one or more sort orders, comma delimited.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemSortBy'
          type: array
        style: form
      - description: "Optional. Sort Order - Ascending, Descending."
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          items:
            $ref: '#/components/schemas/SortOrder'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeMediaResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ThemeMediaResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ThemeMediaResult'
          description: Theme videos returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get theme videos for an item.
      tags:
      - Library
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/Counts:
    get:
      operationId: GetItemCounts
      parameters:
      - description: Optional. Get counts from a specific user's library.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. Get counts of favorite items.
        explode: true
        in: query
        name: isFavorite
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemCounts'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ItemCounts'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ItemCounts'
          description: Item counts returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get item counts.
      tags:
      - Library
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Libraries/AvailableOptions:
    get:
      operationId: GetLibraryOptionsInfo
      parameters:
      - description: Library content type.
        explode: true
        in: query
        name: libraryContentType
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/CollectionType'
          enum:
          - unknown
          - movies
          - tvshows
          - music
          - musicvideos
          - trailers
          - homevideos
          - boxsets
          - books
          - photos
          - livetv
          - playlists
          - folders
          type: string
        style: form
      - description: Whether this is a new library.
        explode: true
        in: query
        name: isNewLibrary
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryOptionsResultDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/LibraryOptionsResultDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/LibraryOptionsResultDto'
          description: Library options info returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrDefault
        - DefaultAuthorization
      summary: Gets the library options info.
      tags:
      - Library
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Library/Media/Updated:
    post:
      operationId: PostUpdatedMedia
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/MediaUpdateInfoDto'
              description: Media Update Info Dto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/MediaUpdateInfoDto'
              description: Media Update Info Dto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/MediaUpdateInfoDto'
              description: Media Update Info Dto.
        description: The update paths.
        required: true
      responses:
        "204":
          description: Report success.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Reports that new movies have been added by an external source.
      tags:
      - Library
      x-content-type: application/json
      x-accepts:
      - application/json
  /Library/MediaFolders:
    get:
      operationId: GetMediaFolders
      parameters:
      - description: "Optional. Filter by folders that are marked hidden, or not."
        explode: true
        in: query
        name: isHidden
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Media folders returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Gets all user media folders.
      tags:
      - Library
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Library/Movies/Added:
    post:
      operationId: PostAddedMovies
      parameters:
      - description: The tmdbId.
        explode: true
        in: query
        name: tmdbId
        required: false
        schema:
          type: string
        style: form
      - description: The imdbId.
        explode: true
        in: query
        name: imdbId
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Report success.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Reports that new movies have been added by an external source.
      tags:
      - Library
      x-accepts:
      - application/json
  /Library/Movies/Updated:
    post:
      operationId: PostUpdatedMovies
      parameters:
      - description: The tmdbId.
        explode: true
        in: query
        name: tmdbId
        required: false
        schema:
          type: string
        style: form
      - description: The imdbId.
        explode: true
        in: query
        name: imdbId
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Report success.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Reports that new movies have been added by an external source.
      tags:
      - Library
      x-accepts:
      - application/json
  /Library/PhysicalPaths:
    get:
      operationId: GetPhysicalPaths
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  type: string
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  type: string
                type: array
          description: Physical paths returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Gets a list of physical paths from virtual folders.
      tags:
      - Library
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Library/Refresh:
    post:
      operationId: RefreshLibrary
      responses:
        "204":
          description: Library scan started.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Starts a library scan.
      tags:
      - Library
      x-accepts:
      - application/json
  /Library/Series/Added:
    post:
      operationId: PostAddedSeries
      parameters:
      - description: The tvdbId.
        explode: true
        in: query
        name: tvdbId
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Report success.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Reports that new episodes of a series have been added by an external
        source.
      tags:
      - Library
      x-accepts:
      - application/json
  /Library/Series/Updated:
    post:
      operationId: PostUpdatedSeries
      parameters:
      - description: The tvdbId.
        explode: true
        in: query
        name: tvdbId
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Report success.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Reports that new episodes of a series have been added by an external
        source.
      tags:
      - Library
      x-accepts:
      - application/json
  /Movies/{itemId}/Similar:
    get:
      operationId: GetSimilarMovies
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Exclude artist ids.
        explode: true
        in: query
        name: excludeArtistIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimited. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Similar items returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets similar items.
      tags:
      - Library
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Shows/{itemId}/Similar:
    get:
      operationId: GetSimilarShows
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Exclude artist ids.
        explode: true
        in: query
        name: excludeArtistIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimited. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Similar items returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets similar items.
      tags:
      - Library
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Trailers/{itemId}/Similar:
    get:
      operationId: GetSimilarTrailers
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Exclude artist ids.
        explode: true
        in: query
        name: excludeArtistIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimited. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Similar items returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets similar items.
      tags:
      - Library
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Library/VirtualFolders:
    delete:
      operationId: RemoveVirtualFolder
      parameters:
      - description: The name of the folder.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Whether to refresh the library.
        explode: true
        in: query
        name: refreshLibrary
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "204":
          description: Folder removed.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrElevated
        - DefaultAuthorization
      summary: Removes a virtual folder.
      tags:
      - LibraryStructure
      x-accepts:
      - application/json
    get:
      operationId: GetVirtualFolders
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VirtualFolderInfo'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/VirtualFolderInfo'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/VirtualFolderInfo'
                type: array
          description: Virtual folders retrieved.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrElevated
        - DefaultAuthorization
      summary: Gets all virtual folders.
      tags:
      - LibraryStructure
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: AddVirtualFolder
      parameters:
      - description: The name of the virtual folder.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: The type of the collection.
        explode: true
        in: query
        name: collectionType
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/CollectionTypeOptions'
          enum:
          - movies
          - tvshows
          - music
          - musicvideos
          - homevideos
          - boxsets
          - books
          - mixed
          type: string
        style: form
      - description: The paths of the virtual folder.
        explode: true
        in: query
        name: paths
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Whether to refresh the library.
        explode: true
        in: query
        name: refreshLibrary
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AddVirtualFolderDto'
              description: Add virtual folder dto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AddVirtualFolderDto'
              description: Add virtual folder dto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AddVirtualFolderDto'
              description: Add virtual folder dto.
        description: The library options.
      responses:
        "204":
          description: Folder added.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrElevated
        - DefaultAuthorization
      summary: Adds a virtual folder.
      tags:
      - LibraryStructure
      x-content-type: application/json
      x-accepts:
      - application/json
  /Library/VirtualFolders/LibraryOptions:
    post:
      operationId: UpdateLibraryOptions
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateLibraryOptionsDto'
              description: Update library options dto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateLibraryOptionsDto'
              description: Update library options dto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateLibraryOptionsDto'
              description: Update library options dto.
        description: The library name and options.
      responses:
        "204":
          description: Library updated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrElevated
        - DefaultAuthorization
      summary: Update library options.
      tags:
      - LibraryStructure
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Library/VirtualFolders/Name:
    post:
      operationId: RenameVirtualFolder
      parameters:
      - description: The name of the virtual folder.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: The new name.
        explode: true
        in: query
        name: newName
        required: false
        schema:
          type: string
        style: form
      - description: Whether to refresh the library.
        explode: true
        in: query
        name: refreshLibrary
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "204":
          description: Folder renamed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Library doesn't exist.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Library already exists.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrElevated
        - DefaultAuthorization
      summary: Renames a virtual folder.
      tags:
      - LibraryStructure
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Library/VirtualFolders/Paths:
    delete:
      operationId: RemoveMediaPath
      parameters:
      - description: The name of the library.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: The path to remove.
        explode: true
        in: query
        name: path
        required: false
        schema:
          type: string
        style: form
      - description: Whether to refresh the library.
        explode: true
        in: query
        name: refreshLibrary
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "204":
          description: Media path removed.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrElevated
        - DefaultAuthorization
      summary: Remove a media path.
      tags:
      - LibraryStructure
      x-accepts:
      - application/json
    post:
      operationId: AddMediaPath
      parameters:
      - description: Whether to refresh the library.
        explode: true
        in: query
        name: refreshLibrary
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/MediaPathDto'
              description: Media Path dto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/MediaPathDto'
              description: Media Path dto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/MediaPathDto'
              description: Media Path dto.
        description: The media path dto.
        required: true
      responses:
        "204":
          description: Media path added.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrElevated
        - DefaultAuthorization
      summary: Add a media path to a library.
      tags:
      - LibraryStructure
      x-content-type: application/json
      x-accepts:
      - application/json
  /Library/VirtualFolders/Paths/Update:
    post:
      operationId: UpdateMediaPath
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateMediaPathRequestDto'
              description: Update library options dto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateMediaPathRequestDto'
              description: Update library options dto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateMediaPathRequestDto'
              description: Update library options dto.
        description: The name of the library and path infos.
        required: true
      responses:
        "204":
          description: Media path updated.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrElevated
        - DefaultAuthorization
      summary: Updates a media path.
      tags:
      - LibraryStructure
      x-content-type: application/json
      x-accepts:
      - application/json
  /LiveTv/ChannelMappingOptions:
    get:
      operationId: GetChannelMappingOptions
      parameters:
      - description: Provider id.
        explode: true
        in: query
        name: providerId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelMappingOptionsDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ChannelMappingOptionsDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ChannelMappingOptionsDto'
          description: Channel mapping options returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Get channel mapping options.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /LiveTv/ChannelMappings:
    post:
      operationId: SetChannelMapping
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SetChannelMappingDto'
              description: Set channel mapping dto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SetChannelMappingDto'
              description: Set channel mapping dto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SetChannelMappingDto'
              description: Set channel mapping dto.
        description: The set channel mapping dto.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TunerChannelMapping'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/TunerChannelMapping'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/TunerChannelMapping'
          description: Created channel mapping returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvManagement
        - DefaultAuthorization
      summary: Set channel mappings.
      tags:
      - LiveTv
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /LiveTv/Channels:
    get:
      operationId: GetLiveTvChannels
      parameters:
      - description: Optional. Filter by channel type.
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ChannelType'
          enum:
          - TV
          - Radio
          type: string
        style: form
      - description: Optional. Filter by user and attach user data.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Filter for movies.
        explode: true
        in: query
        name: isMovie
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter for series.
        explode: true
        in: query
        name: isSeries
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter for news.
        explode: true
        in: query
        name: isNews
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter for kids.
        explode: true
        in: query
        name: isKids
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter for sports.
        explode: true
        in: query
        name: isSports
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Filter by channels that are favorites, or not."
        explode: true
        in: query
        name: isFavorite
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Filter by channels that are liked, or not."
        explode: true
        in: query
        name: isLiked
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Filter by channels that are disliked, or not."
        explode: true
        in: query
        name: isDisliked
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Include image information in output.
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. The max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: '"Optional. The image types to include in the output.'
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: Optional. Include user data.
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Key to sort by.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemSortBy'
          type: array
        style: form
      - description: Optional. Sort order.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          enum:
          - Ascending
          - Descending
          type: string
        style: form
      - description: Optional. Incorporate favorite and like status into channel sorting.
        explode: true
        in: query
        name: enableFavoriteSorting
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Optional. Adds current program info to each channel.
        explode: true
        in: query
        name: addCurrentProgram
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Available live tv channels returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Gets available live tv channels.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /LiveTv/Channels/{channelId}:
    get:
      operationId: GetChannel
      parameters:
      - description: Channel id.
        explode: false
        in: path
        name: channelId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Optional. Attach user data.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDto'
          description: Live tv channel returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Gets a live tv channel.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /LiveTv/GuideInfo:
    get:
      operationId: GetGuideInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuideInfo'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/GuideInfo'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/GuideInfo'
          description: Guid info returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Get guid info.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /LiveTv/Info:
    get:
      operationId: GetLiveTvInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveTvInfo'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/LiveTvInfo'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/LiveTvInfo'
          description: Available live tv services returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Gets available live tv services.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /LiveTv/ListingProviders:
    delete:
      operationId: DeleteListingProvider
      parameters:
      - description: Listing provider id.
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Listing provider deleted.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvManagement
        - DefaultAuthorization
      summary: Delete listing provider.
      tags:
      - LiveTv
      x-accepts:
      - application/json
    post:
      operationId: AddListingProvider
      parameters:
      - description: Password.
        explode: true
        in: query
        name: pw
        required: false
        schema:
          type: string
        style: form
      - description: Validate listings.
        explode: true
        in: query
        name: validateListings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Validate login.
        explode: true
        in: query
        name: validateLogin
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ListingsProviderInfo'
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ListingsProviderInfo'
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ListingsProviderInfo'
        description: New listings info.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingsProviderInfo'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ListingsProviderInfo'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ListingsProviderInfo'
          description: Created listings provider returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvManagement
        - DefaultAuthorization
      summary: Adds a listings provider.
      tags:
      - LiveTv
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /LiveTv/ListingProviders/Default:
    get:
      operationId: GetDefaultListingProvider
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingsProviderInfo'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ListingsProviderInfo'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ListingsProviderInfo'
          description: Default listings provider info returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Gets default listings provider info.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /LiveTv/ListingProviders/Lineups:
    get:
      operationId: GetLineups
      parameters:
      - description: Provider id.
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      - description: Provider type.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: Location.
        explode: true
        in: query
        name: location
        required: false
        schema:
          type: string
        style: form
      - description: Country.
        explode: true
        in: query
        name: country
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NameIdPair'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/NameIdPair'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/NameIdPair'
                type: array
          description: Available lineups returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Gets available lineups.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /LiveTv/ListingProviders/SchedulesDirect/Countries:
    get:
      operationId: GetSchedulesDirectCountries
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: Available countries returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Gets available countries.
      tags:
      - LiveTv
      x-accepts:
      - application/json
  /LiveTv/LiveRecordings/{recordingId}/stream:
    get:
      operationId: GetLiveRecordingFile
      parameters:
      - description: Recording id.
        explode: false
        in: path
        name: recordingId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            video/*:
              schema:
                format: binary
                type: string
          description: Recording stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Recording not found.
      summary: Gets a live tv recording stream.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - video/*
  /LiveTv/LiveStreamFiles/{streamId}/stream.{container}:
    get:
      operationId: GetLiveStreamFile
      parameters:
      - description: Stream id.
        explode: false
        in: path
        name: streamId
        required: true
        schema:
          type: string
        style: simple
      - description: Container type.
        explode: false
        in: path
        name: container
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            video/*:
              schema:
                format: binary
                type: string
          description: Stream returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Stream not found.
      summary: Gets a live tv channel stream.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - video/*
  /LiveTv/Programs:
    get:
      operationId: GetLiveTvPrograms
      parameters:
      - description: The channels to return guide information for.
        explode: true
        in: query
        name: channelIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: Optional. Filter by user id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The minimum premiere start date.
        explode: true
        in: query
        name: minStartDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Optional. Filter by programs that have completed airing, or\
          \ not."
        explode: true
        in: query
        name: hasAired
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Filter by programs that are currently airing, or not."
        explode: true
        in: query
        name: isAiring
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. The maximum premiere start date.
        explode: true
        in: query
        name: maxStartDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Optional. The minimum premiere end date.
        explode: true
        in: query
        name: minEndDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Optional. The maximum premiere end date.
        explode: true
        in: query
        name: maxEndDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Optional. Filter for movies.
        explode: true
        in: query
        name: isMovie
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter for series.
        explode: true
        in: query
        name: isSeries
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter for news.
        explode: true
        in: query
        name: isNews
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter for kids.
        explode: true
        in: query
        name: isKids
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter for sports.
        explode: true
        in: query
        name: isSports
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify one or more sort orders, comma delimited.\
          \ Options: Name, StartDate."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemSortBy'
          type: array
        style: form
      - description: "Sort Order - Ascending,Descending."
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          items:
            $ref: '#/components/schemas/SortOrder'
          type: array
        style: form
      - description: The genres to return guide information for.
        explode: true
        in: query
        name: genres
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The genre ids to return guide information for.
        explode: true
        in: query
        name: genreIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: Optional. Include image information in output.
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. The max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      - description: Optional. Include user data.
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter by series timer id.
        explode: true
        in: query
        name: seriesTimerId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Filter by library series id.
        explode: true
        in: query
        name: librarySeriesId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: Retrieve total record count.
        explode: true
        in: query
        name: enableTotalRecordCount
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Live tv epgs returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Gets available live tv epgs.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: GetPrograms
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GetProgramsDto'
              description: Get programs dto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GetProgramsDto'
              description: Get programs dto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GetProgramsDto'
              description: Get programs dto.
        description: Request body.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Live tv epgs returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Gets available live tv epgs.
      tags:
      - LiveTv
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /LiveTv/Programs/{programId}:
    get:
      operationId: GetProgram
      parameters:
      - description: Program id.
        explode: false
        in: path
        name: programId
        required: true
        schema:
          type: string
        style: simple
      - description: Optional. Attach user data.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDto'
          description: Program returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Gets a live tv program.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /LiveTv/Programs/Recommended:
    get:
      operationId: GetRecommendedPrograms
      parameters:
      - description: Optional. filter by user id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Filter by programs that are currently airing, or not."
        explode: true
        in: query
        name: isAiring
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Filter by programs that have completed airing, or\
          \ not."
        explode: true
        in: query
        name: hasAired
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter for series.
        explode: true
        in: query
        name: isSeries
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter for movies.
        explode: true
        in: query
        name: isMovie
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter for news.
        explode: true
        in: query
        name: isNews
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter for kids.
        explode: true
        in: query
        name: isKids
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter for sports.
        explode: true
        in: query
        name: isSports
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Include image information in output.
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. The max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      - description: The genres to return guide information for.
        explode: true
        in: query
        name: genreIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: Optional. include user data.
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: Retrieve total record count.
        explode: true
        in: query
        name: enableTotalRecordCount
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Recommended epgs returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Gets recommended live tv epgs.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /LiveTv/Recordings:
    get:
      operationId: GetRecordings
      parameters:
      - description: Optional. Filter by channel id.
        explode: true
        in: query
        name: channelId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Filter by user and attach user data.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Filter by recording status.
        explode: true
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/RecordingStatus'
          enum:
          - New
          - InProgress
          - Completed
          - Cancelled
          - ConflictedOk
          - ConflictedNotOk
          - Error
          type: string
        style: form
      - description: "Optional. Filter by recordings that are in progress, or not."
        explode: true
        in: query
        name: isInProgress
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter by recordings belonging to a series timer.
        explode: true
        in: query
        name: seriesTimerId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Include image information in output.
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. The max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: Optional. Include user data.
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter for movies.
        explode: true
        in: query
        name: isMovie
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter for series.
        explode: true
        in: query
        name: isSeries
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter for kids.
        explode: true
        in: query
        name: isKids
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter for sports.
        explode: true
        in: query
        name: isSports
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter for news.
        explode: true
        in: query
        name: isNews
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter for is library item.
        explode: true
        in: query
        name: isLibraryItem
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Return total record count.
        explode: true
        in: query
        name: enableTotalRecordCount
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Live tv recordings returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Gets live tv recordings.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /LiveTv/Recordings/{recordingId}:
    delete:
      operationId: DeleteRecording
      parameters:
      - description: Recording id.
        explode: false
        in: path
        name: recordingId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Recording deleted.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvManagement
        - DefaultAuthorization
      summary: Deletes a live tv recording.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    get:
      operationId: GetRecording
      parameters:
      - description: Recording id.
        explode: false
        in: path
        name: recordingId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Optional. Attach user data.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDto'
          description: Recording returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Gets a live tv recording.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /LiveTv/Recordings/Folders:
    get:
      operationId: GetRecordingFolders
      parameters:
      - description: Optional. Filter by user and attach user data.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Recording folders returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Gets recording folders.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /LiveTv/Recordings/Groups:
    get:
      deprecated: true
      operationId: GetRecordingGroups
      parameters:
      - description: Optional. Filter by user and attach user data.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Recording groups returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Gets live tv recording groups.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /LiveTv/Recordings/Groups/{groupId}:
    get:
      deprecated: true
      operationId: GetRecordingGroup
      parameters:
      - description: Group id.
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Get recording group.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /LiveTv/Recordings/Series:
    get:
      deprecated: true
      operationId: GetRecordingsSeries
      parameters:
      - description: Optional. Filter by channel id.
        explode: true
        in: query
        name: channelId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Filter by user and attach user data.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. Filter by recording group.
        explode: true
        in: query
        name: groupId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Filter by recording status.
        explode: true
        in: query
        name: status
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/RecordingStatus'
          enum:
          - New
          - InProgress
          - Completed
          - Cancelled
          - ConflictedOk
          - ConflictedNotOk
          - Error
          type: string
        style: form
      - description: "Optional. Filter by recordings that are in progress, or not."
        explode: true
        in: query
        name: isInProgress
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter by recordings belonging to a series timer.
        explode: true
        in: query
        name: seriesTimerId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Include image information in output.
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. The max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: Optional. Include user data.
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Return total record count.
        explode: true
        in: query
        name: enableTotalRecordCount
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Live tv recordings returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Gets live tv recording series.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /LiveTv/SeriesTimers:
    get:
      operationId: GetSeriesTimers
      parameters:
      - description: Optional. Sort by SortName or Priority.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Sort in Ascending or Descending order.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          enum:
          - Ascending
          - Descending
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeriesTimerInfoDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/SeriesTimerInfoDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/SeriesTimerInfoDtoQueryResult'
          description: Timers returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Gets live tv series timers.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: CreateSeriesTimer
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SeriesTimerInfoDto'
              description: Class SeriesTimerInfoDto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SeriesTimerInfoDto'
              description: Class SeriesTimerInfoDto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SeriesTimerInfoDto'
              description: Class SeriesTimerInfoDto.
        description: New series timer info.
      responses:
        "204":
          description: Series timer info created.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvManagement
        - DefaultAuthorization
      summary: Creates a live tv series timer.
      tags:
      - LiveTv
      x-content-type: application/json
      x-accepts:
      - application/json
  /LiveTv/SeriesTimers/{timerId}:
    delete:
      operationId: CancelSeriesTimer
      parameters:
      - description: Timer id.
        explode: false
        in: path
        name: timerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Timer cancelled.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvManagement
        - DefaultAuthorization
      summary: Cancels a live tv series timer.
      tags:
      - LiveTv
      x-accepts:
      - application/json
    get:
      operationId: GetSeriesTimer
      parameters:
      - description: Timer id.
        explode: false
        in: path
        name: timerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeriesTimerInfoDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/SeriesTimerInfoDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/SeriesTimerInfoDto'
          description: Series timer returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Series timer not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Gets a live tv series timer.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: UpdateSeriesTimer
      parameters:
      - description: Timer id.
        explode: false
        in: path
        name: timerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SeriesTimerInfoDto'
              description: Class SeriesTimerInfoDto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SeriesTimerInfoDto'
              description: Class SeriesTimerInfoDto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SeriesTimerInfoDto'
              description: Class SeriesTimerInfoDto.
        description: New series timer info.
      responses:
        "204":
          description: Series timer updated.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvManagement
        - DefaultAuthorization
      summary: Updates a live tv series timer.
      tags:
      - LiveTv
      x-content-type: application/json
      x-accepts:
      - application/json
  /LiveTv/Timers:
    get:
      operationId: GetTimers
      parameters:
      - description: Optional. Filter by channel id.
        explode: true
        in: query
        name: channelId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Filter by timers belonging to a series timer.
        explode: true
        in: query
        name: seriesTimerId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Filter by timers that are active.
        explode: true
        in: query
        name: isActive
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter by timers that are scheduled.
        explode: true
        in: query
        name: isScheduled
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimerInfoDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/TimerInfoDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/TimerInfoDtoQueryResult'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Gets the live tv timers.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: CreateTimer
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/TimerInfoDto'
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/TimerInfoDto'
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/TimerInfoDto'
        description: New timer info.
      responses:
        "204":
          description: Timer created.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvManagement
        - DefaultAuthorization
      summary: Creates a live tv timer.
      tags:
      - LiveTv
      x-content-type: application/json
      x-accepts:
      - application/json
  /LiveTv/Timers/{timerId}:
    delete:
      operationId: CancelTimer
      parameters:
      - description: Timer id.
        explode: false
        in: path
        name: timerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Timer deleted.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvManagement
        - DefaultAuthorization
      summary: Cancels a live tv timer.
      tags:
      - LiveTv
      x-accepts:
      - application/json
    get:
      operationId: GetTimer
      parameters:
      - description: Timer id.
        explode: false
        in: path
        name: timerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimerInfoDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/TimerInfoDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/TimerInfoDto'
          description: Timer returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Gets a timer.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: UpdateTimer
      parameters:
      - description: Timer id.
        explode: false
        in: path
        name: timerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/TimerInfoDto'
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/TimerInfoDto'
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/TimerInfoDto'
        description: New timer info.
      responses:
        "204":
          description: Timer updated.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvManagement
        - DefaultAuthorization
      summary: Updates a live tv timer.
      tags:
      - LiveTv
      x-content-type: application/json
      x-accepts:
      - application/json
  /LiveTv/Timers/Defaults:
    get:
      operationId: GetDefaultTimer
      parameters:
      - description: Optional. To attach default values based on a program.
        explode: true
        in: query
        name: programId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeriesTimerInfoDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/SeriesTimerInfoDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/SeriesTimerInfoDto'
          description: Default values returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Gets the default values for a new timer.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /LiveTv/TunerHosts:
    delete:
      operationId: DeleteTunerHost
      parameters:
      - description: Tuner host id.
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Tuner host deleted.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvManagement
        - DefaultAuthorization
      summary: Deletes a tuner host.
      tags:
      - LiveTv
      x-accepts:
      - application/json
    post:
      operationId: AddTunerHost
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/TunerHostInfo'
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/TunerHostInfo'
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/TunerHostInfo'
        description: New tuner host.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TunerHostInfo'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/TunerHostInfo'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/TunerHostInfo'
          description: Created tuner host returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvManagement
        - DefaultAuthorization
      summary: Adds a tuner host.
      tags:
      - LiveTv
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /LiveTv/TunerHosts/Types:
    get:
      operationId: GetTunerHostTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NameIdPair'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/NameIdPair'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/NameIdPair'
                type: array
          description: Tuner host types returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvAccess
        - DefaultAuthorization
      summary: Get tuner host types.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /LiveTv/Tuners/{tunerId}/Reset:
    post:
      operationId: ResetTuner
      parameters:
      - description: Tuner id.
        explode: false
        in: path
        name: tunerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Tuner reset.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvManagement
        - DefaultAuthorization
      summary: Resets a tv tuner.
      tags:
      - LiveTv
      x-accepts:
      - application/json
  /LiveTv/Tuners/Discover:
    get:
      operationId: DiscoverTuners
      parameters:
      - description: Only discover new tuners.
        explode: true
        in: query
        name: newDevicesOnly
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TunerHostInfo'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/TunerHostInfo'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/TunerHostInfo'
                type: array
          description: Tuners returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvManagement
        - DefaultAuthorization
      summary: Discover tuners.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /LiveTv/Tuners/Discvover:
    get:
      operationId: DiscvoverTuners
      parameters:
      - description: Only discover new tuners.
        explode: true
        in: query
        name: newDevicesOnly
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TunerHostInfo'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/TunerHostInfo'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/TunerHostInfo'
                type: array
          description: Tuners returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LiveTvManagement
        - DefaultAuthorization
      summary: Discover tuners.
      tags:
      - LiveTv
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Localization/Countries:
    get:
      operationId: GetCountries
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CountryInfo'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/CountryInfo'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/CountryInfo'
                type: array
          description: Known countries returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrDefault
        - DefaultAuthorization
      summary: Gets known countries.
      tags:
      - Localization
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Localization/Cultures:
    get:
      operationId: GetCultures
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CultureDto'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/CultureDto'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/CultureDto'
                type: array
          description: Known cultures returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrDefault
        - DefaultAuthorization
      summary: Gets known cultures.
      tags:
      - Localization
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Localization/Options:
    get:
      operationId: GetLocalizationOptions
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LocalizationOption'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/LocalizationOption'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/LocalizationOption'
                type: array
          description: Localization options returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrDefault
        - DefaultAuthorization
      summary: Gets localization options.
      tags:
      - Localization
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Localization/ParentalRatings:
    get:
      operationId: GetParentalRatings
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ParentalRating'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/ParentalRating'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/ParentalRating'
                type: array
          description: Known parental ratings returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrDefault
        - DefaultAuthorization
      summary: Gets known parental ratings.
      tags:
      - Localization
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Audio/{itemId}/Lyrics:
    delete:
      operationId: DeleteLyrics
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Lyric deleted.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LyricManagement
        - DefaultAuthorization
      summary: Deletes an external lyric file.
      tags:
      - Lyrics
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    get:
      operationId: GetLyrics
      parameters:
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LyricDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/LyricDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/LyricDto'
          description: Lyrics returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Something went wrong. No Lyrics will be returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets an item's lyrics.
      tags:
      - Lyrics
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: UploadLyrics
      parameters:
      - description: The item the lyric belongs to.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Name of the file being uploaded.
        explode: true
        in: query
        name: fileName
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          text/plain:
            schema:
              format: binary
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LyricDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/LyricDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/LyricDto'
          description: Lyrics uploaded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error processing upload.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LyricManagement
        - DefaultAuthorization
      summary: Upload an external lyric file.
      tags:
      - Lyrics
      x-content-type: text/plain
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Audio/{itemId}/RemoteSearch/Lyrics:
    get:
      operationId: SearchRemoteLyrics
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RemoteLyricInfoDto'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/RemoteLyricInfoDto'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/RemoteLyricInfoDto'
                type: array
          description: Lyrics retrieved.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LyricManagement
        - DefaultAuthorization
      summary: Search remote lyrics.
      tags:
      - Lyrics
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Audio/{itemId}/RemoteSearch/Lyrics/{lyricId}:
    post:
      operationId: DownloadRemoteLyrics
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The lyric id.
        explode: false
        in: path
        name: lyricId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LyricDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/LyricDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/LyricDto'
          description: Lyric downloaded.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LyricManagement
        - DefaultAuthorization
      summary: Downloads a remote lyric.
      tags:
      - Lyrics
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Providers/Lyrics/{lyricId}:
    get:
      operationId: GetRemoteLyrics
      parameters:
      - description: The remote provider item id.
        explode: false
        in: path
        name: lyricId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LyricDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/LyricDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/LyricDto'
          description: File returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Lyric not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - LyricManagement
        - DefaultAuthorization
      summary: Gets the remote lyrics.
      tags:
      - Lyrics
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/{itemId}/PlaybackInfo:
    get:
      operationId: GetPlaybackInfo
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The user id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybackInfoResponse'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/PlaybackInfoResponse'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/PlaybackInfoResponse'
          description: Playback info returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets live playback media info for an item.
      tags:
      - MediaInfo
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      description: "For backwards compatibility parameters can be sent via Query or\
        \ Body, with Query having higher precedence.\r\nQuery parameters are obsolete."
      operationId: GetPostedPlaybackInfo
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - deprecated: true
        description: The user id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - deprecated: true
        description: The maximum streaming bitrate.
        explode: true
        in: query
        name: maxStreamingBitrate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - deprecated: true
        description: The start time in ticks.
        explode: true
        in: query
        name: startTimeTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - deprecated: true
        description: The audio stream index.
        explode: true
        in: query
        name: audioStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - deprecated: true
        description: The subtitle stream index.
        explode: true
        in: query
        name: subtitleStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - deprecated: true
        description: The maximum number of audio channels.
        explode: true
        in: query
        name: maxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - deprecated: true
        description: The media source id.
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: The livestream id.
        explode: true
        in: query
        name: liveStreamId
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: Whether to auto open the livestream.
        explode: true
        in: query
        name: autoOpenLiveStream
        required: false
        schema:
          type: boolean
        style: form
      - deprecated: true
        description: "Whether to enable direct play. Default: true."
        explode: true
        in: query
        name: enableDirectPlay
        required: false
        schema:
          type: boolean
        style: form
      - deprecated: true
        description: "Whether to enable direct stream. Default: true."
        explode: true
        in: query
        name: enableDirectStream
        required: false
        schema:
          type: boolean
        style: form
      - deprecated: true
        description: "Whether to enable transcoding. Default: true."
        explode: true
        in: query
        name: enableTranscoding
        required: false
        schema:
          type: boolean
        style: form
      - deprecated: true
        description: "Whether to allow to copy the video stream. Default: true."
        explode: true
        in: query
        name: allowVideoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - deprecated: true
        description: "Whether to allow to copy the audio stream. Default: true."
        explode: true
        in: query
        name: allowAudioStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PlaybackInfoDto'
              description: Plabyback info dto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PlaybackInfoDto'
              description: Plabyback info dto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PlaybackInfoDto'
              description: Plabyback info dto.
        description: The playback info.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybackInfoResponse'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/PlaybackInfoResponse'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/PlaybackInfoResponse'
          description: Playback info returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets live playback media info for an item.
      tags:
      - MediaInfo
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /LiveStreams/Close:
    post:
      operationId: CloseLiveStream
      parameters:
      - description: The livestream id.
        explode: true
        in: query
        name: liveStreamId
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Livestream closed.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Closes a media source.
      tags:
      - MediaInfo
      x-accepts:
      - application/json
  /LiveStreams/Open:
    post:
      operationId: OpenLiveStream
      parameters:
      - description: The open token.
        explode: true
        in: query
        name: openToken
        required: false
        schema:
          type: string
        style: form
      - description: The user id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The play session id.
        explode: true
        in: query
        name: playSessionId
        required: false
        schema:
          type: string
        style: form
      - description: The maximum streaming bitrate.
        explode: true
        in: query
        name: maxStreamingBitrate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The start time in ticks.
        explode: true
        in: query
        name: startTimeTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The audio stream index.
        explode: true
        in: query
        name: audioStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The subtitle stream index.
        explode: true
        in: query
        name: subtitleStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The maximum number of audio channels.
        explode: true
        in: query
        name: maxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The item id.
        explode: true
        in: query
        name: itemId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "Whether to enable direct play. Default: true."
        explode: true
        in: query
        name: enableDirectPlay
        required: false
        schema:
          type: boolean
        style: form
      - description: "Whether to enable direct stream. Default: true."
        explode: true
        in: query
        name: enableDirectStream
        required: false
        schema:
          type: boolean
        style: form
      - description: Always burn-in subtitle when transcoding.
        explode: true
        in: query
        name: alwaysBurnInSubtitleWhenTranscoding
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/OpenLiveStreamDto'
              description: Open live stream dto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/OpenLiveStreamDto'
              description: Open live stream dto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/OpenLiveStreamDto'
              description: Open live stream dto.
        description: The open live stream dto.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStreamResponse'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/LiveStreamResponse'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/LiveStreamResponse'
          description: Media source opened.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Opens a media source.
      tags:
      - MediaInfo
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Playback/BitrateTest:
    get:
      operationId: GetBitrateTestBytes
      parameters:
      - description: The bitrate. Defaults to 102400.
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 102400
          format: int32
          maximum: 100000000
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Test buffer returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Tests the network with a request with the size of the bitrate.
      tags:
      - MediaInfo
      x-accepts:
      - application/octet-stream
  /MediaSegments/{itemId}:
    get:
      operationId: GetItemSegments
      parameters:
      - description: The ItemId.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Optional filter of requested segment types.
        explode: true
        in: query
        name: includeSegmentTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/MediaSegmentType'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaSegmentDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/MediaSegmentDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/MediaSegmentDtoQueryResult'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets all media segments based on an itemId.
      tags:
      - MediaSegments
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Movies/Recommendations:
    get:
      operationId: GetMovieRecommendations
      parameters:
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Specify this to localize the search to a specific item or folder.
          Omit to use the root.
        explode: true
        in: query
        name: parentId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The fields to return.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: The max number of categories to return.
        explode: true
        in: query
        name: categoryLimit
        required: false
        schema:
          default: 5
          format: int32
          type: integer
        style: form
      - description: The max number of items to return per category.
        explode: true
        in: query
        name: itemLimit
        required: false
        schema:
          default: 8
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RecommendationDto'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/RecommendationDto'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/RecommendationDto'
                type: array
          description: Movie recommendations returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets movie recommendations.
      tags:
      - Movies
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /MusicGenres:
    get:
      deprecated: true
      operationId: GetMusicGenres
      parameters:
      - description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The search term.
        explode: true
        in: query
        name: searchTerm
        required: false
        schema:
          type: string
        style: form
      - description: Specify this to localize the search to a specific item or folder.
          Omit to use the root.
        explode: true
        in: query
        name: parentId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered out based on\
          \ item type. This allows multiple, comma delimited."
        explode: true
        in: query
        name: excludeItemTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/BaseItemKind'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered in based on\
          \ item type. This allows multiple, comma delimited."
        explode: true
        in: query
        name: includeItemTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/BaseItemKind'
          type: array
        style: form
      - description: "Optional filter by items that are marked as favorite, or not."
        explode: true
        in: query
        name: isFavorite
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional, the max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        explode: true
        in: query
        name: nameStartsWithOrGreater
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter by items whose name is sorted equally than a
          given input string.
        explode: true
        in: query
        name: nameStartsWith
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter by items whose name is equally or lesser than
          a given input string.
        explode: true
        in: query
        name: nameLessThan
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify one or more sort orders, comma delimited."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemSortBy'
          type: array
        style: form
      - description: "Sort Order - Ascending,Descending."
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          items:
            $ref: '#/components/schemas/SortOrder'
          type: array
        style: form
      - description: "Optional, include image information in output."
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Optional. Include total record count.
        explode: true
        in: query
        name: enableTotalRecordCount
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Music genres returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: "Gets all music genres from a given item, folder, or the entire library."
      tags:
      - MusicGenres
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /MusicGenres/{genreName}:
    get:
      operationId: GetMusicGenre
      parameters:
      - description: The genre name.
        explode: false
        in: path
        name: genreName
        required: true
        schema:
          type: string
        style: simple
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDto'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: "Gets a music genre, by name."
      tags:
      - MusicGenres
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Packages:
    get:
      operationId: GetPackages
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PackageInfo'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/PackageInfo'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/PackageInfo'
                type: array
          description: Available packages returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Gets available packages.
      tags:
      - Package
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Packages/{name}:
    get:
      operationId: GetPackageInfo
      parameters:
      - description: The name of the package.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: The GUID of the associated assembly.
        explode: true
        in: query
        name: assemblyGuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageInfo'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/PackageInfo'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/PackageInfo'
          description: Package retrieved.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Gets a package by name or assembly GUID.
      tags:
      - Package
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Packages/Installed/{name}:
    post:
      operationId: InstallPackage
      parameters:
      - description: Package name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: GUID of the associated assembly.
        explode: true
        in: query
        name: assemblyGuid
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional version. Defaults to latest version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Specify the repository to install from.
        explode: true
        in: query
        name: repositoryUrl
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Package found.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Package not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Installs a package.
      tags:
      - Package
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Packages/Installing/{packageId}:
    delete:
      operationId: CancelPackageInstallation
      parameters:
      - description: Installation Id.
        explode: false
        in: path
        name: packageId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Installation cancelled.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Cancels a package installation.
      tags:
      - Package
      x-accepts:
      - application/json
  /Repositories:
    get:
      operationId: GetRepositories
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RepositoryInfo'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/RepositoryInfo'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/RepositoryInfo'
                type: array
          description: Package repositories returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Gets all package repositories.
      tags:
      - Package
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: SetRepositories
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RepositoryInfo'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/RepositoryInfo'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/RepositoryInfo'
              type: array
        description: The list of package repositories.
        required: true
      responses:
        "204":
          description: Package repositories saved.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Sets the enabled and existing package repositories.
      tags:
      - Package
      x-content-type: application/json
      x-accepts:
      - application/json
  /Persons:
    get:
      operationId: GetPersons
      parameters:
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The search term.
        explode: true
        in: query
        name: searchTerm
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: Optional. Specify additional filters to apply.
        explode: true
        in: query
        name: filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFilter'
          type: array
        style: form
      - description: "Optional filter by items that are marked as favorite, or not.\
          \ userId is required."
        explode: true
        in: query
        name: isFavorite
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional, include user data."
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional, the max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      - description: "Optional. If specified results will be filtered to exclude those\
          \ containing the specified PersonType. Allows multiple, comma-delimited."
        explode: true
        in: query
        name: excludePersonTypes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified results will be filtered to include only\
          \ those containing the specified PersonType. Allows multiple, comma-delimited."
        explode: true
        in: query
        name: personTypes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, person results will be filtered on items\
          \ related to said persons."
        explode: true
        in: query
        name: appearsInItemId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "Optional, include image information in output."
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Persons returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets all persons.
      tags:
      - Persons
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Persons/{name}:
    get:
      operationId: GetPerson
      parameters:
      - description: Person name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDto'
          description: Person returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Person not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get person by name.
      tags:
      - Persons
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Playlists:
    post:
      description: "For backwards compatibility parameters can be sent via Query or\
        \ Body, with Query having higher precedence.\r\nQuery parameters are obsolete."
      operationId: CreatePlaylist
      parameters:
      - deprecated: true
        description: The playlist name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: The item ids.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - deprecated: true
        description: The user id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - deprecated: true
        description: The media type.
        explode: true
        in: query
        name: mediaType
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/MediaType'
          enum:
          - Unknown
          - Video
          - Audio
          - Photo
          - Book
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreatePlaylistDto'
              description: Create new playlist dto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreatePlaylistDto'
              description: Create new playlist dto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreatePlaylistDto'
              description: Create new playlist dto.
        description: The create playlist payload.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistCreationResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/PlaylistCreationResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/PlaylistCreationResult'
          description: Playlist created.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Creates a new playlist.
      tags:
      - Playlists
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Playlists/{playlistId}:
    get:
      operationId: GetPlaylist
      parameters:
      - description: The playlist id.
        explode: false
        in: path
        name: playlistId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/PlaylistDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/PlaylistDto'
          description: The playlist.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Playlist not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get a playlist.
      tags:
      - Playlists
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: UpdatePlaylist
      parameters:
      - description: The playlist id.
        explode: false
        in: path
        name: playlistId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdatePlaylistDto'
              description: Update existing playlist dto. Fields set to `null` will
                not be updated and keep their current values.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdatePlaylistDto'
              description: Update existing playlist dto. Fields set to `null` will
                not be updated and keep their current values.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdatePlaylistDto'
              description: Update existing playlist dto. Fields set to `null` will
                not be updated and keep their current values.
        description: The Jellyfin.Api.Models.PlaylistDtos.UpdatePlaylistDto id.
        required: true
      responses:
        "204":
          description: Playlist updated.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Access forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Playlist not found.
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Updates a playlist.
      tags:
      - Playlists
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Playlists/{playlistId}/Items:
    delete:
      operationId: RemoveItemFromPlaylist
      parameters:
      - description: The playlist id.
        explode: false
        in: path
        name: playlistId
        required: true
        schema:
          type: string
        style: simple
      - description: "The item ids, comma delimited."
        explode: true
        in: query
        name: entryIds
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "204":
          description: Items removed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Access forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Playlist not found.
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Removes items from a playlist.
      tags:
      - Playlists
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    get:
      operationId: GetPlaylistItems
      parameters:
      - description: The playlist id.
        explode: false
        in: path
        name: playlistId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: Optional. Include image information in output.
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Include user data.
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. The max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Original playlist returned.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Playlist not found.
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets the original items of a playlist.
      tags:
      - Playlists
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: AddItemToPlaylist
      parameters:
      - description: The playlist id.
        explode: false
        in: path
        name: playlistId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Item id, comma delimited."
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: The userId.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "204":
          description: Items added to playlist.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Access forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Playlist not found.
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Adds items to a playlist.
      tags:
      - Playlists
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Playlists/{playlistId}/Items/{itemId}/Move/{newIndex}:
    post:
      operationId: MoveItem
      parameters:
      - description: The playlist id.
        explode: false
        in: path
        name: playlistId
        required: true
        schema:
          type: string
        style: simple
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          type: string
        style: simple
      - description: The new index.
        explode: false
        in: path
        name: newIndex
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "204":
          description: Item moved to new index.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Access forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Playlist not found.
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Moves a playlist item.
      tags:
      - Playlists
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Playlists/{playlistId}/Users:
    get:
      operationId: GetPlaylistUsers
      parameters:
      - description: The playlist id.
        explode: false
        in: path
        name: playlistId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PlaylistUserPermissions'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/PlaylistUserPermissions'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/PlaylistUserPermissions'
                type: array
          description: Found shares.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Access forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Playlist not found.
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get a playlist's users.
      tags:
      - Playlists
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Playlists/{playlistId}/Users/{userId}:
    delete:
      operationId: RemoveUserFromPlaylist
      parameters:
      - description: The playlist id.
        explode: false
        in: path
        name: playlistId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The user id.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: User permissions removed from playlist.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: No playlist or user permissions found.
        "401":
          description: Unauthorized access.
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Remove a user from a playlist's users.
      tags:
      - Playlists
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    get:
      operationId: GetPlaylistUser
      parameters:
      - description: The playlist id.
        explode: false
        in: path
        name: playlistId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The user id.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistUserPermissions'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/PlaylistUserPermissions'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/PlaylistUserPermissions'
          description: User permission found.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Access forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Playlist not found.
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get a playlist user.
      tags:
      - Playlists
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: UpdatePlaylistUser
      parameters:
      - description: The playlist id.
        explode: false
        in: path
        name: playlistId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The user id.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdatePlaylistUserDto'
              description: Update existing playlist user dto. Fields set to `null`
                will not be updated and keep their current values.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdatePlaylistUserDto'
              description: Update existing playlist user dto. Fields set to `null`
                will not be updated and keep their current values.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdatePlaylistUserDto'
              description: Update existing playlist user dto. Fields set to `null`
                will not be updated and keep their current values.
        description: The Jellyfin.Api.Models.PlaylistDtos.UpdatePlaylistUserDto.
        required: true
      responses:
        "204":
          description: User's permissions modified.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Access forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Playlist not found.
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Modify a user of a playlist's users.
      tags:
      - Playlists
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /PlayingItems/{itemId}:
    delete:
      operationId: OnPlaybackStopped
      parameters:
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The id of the MediaSource.
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          type: string
        style: form
      - description: The next media type that will play.
        explode: true
        in: query
        name: nextMediaType
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. The position, in ticks, where playback stopped. 1\
          \ tick = 10000 ms."
        explode: true
        in: query
        name: positionTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The live stream id.
        explode: true
        in: query
        name: liveStreamId
        required: false
        schema:
          type: string
        style: form
      - description: The play session id.
        explode: true
        in: query
        name: playSessionId
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Playback stop recorded.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Reports that a session has stopped playing an item.
      tags:
      - Playstate
      x-accepts:
      - application/json
    post:
      operationId: OnPlaybackStart
      parameters:
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The id of the MediaSource.
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          type: string
        style: form
      - description: The audio stream index.
        explode: true
        in: query
        name: audioStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The subtitle stream index.
        explode: true
        in: query
        name: subtitleStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The play method.
        explode: true
        in: query
        name: playMethod
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/PlayMethod'
          enum:
          - Transcode
          - DirectStream
          - DirectPlay
          type: string
        style: form
      - description: The live stream id.
        explode: true
        in: query
        name: liveStreamId
        required: false
        schema:
          type: string
        style: form
      - description: The play session id.
        explode: true
        in: query
        name: playSessionId
        required: false
        schema:
          type: string
        style: form
      - description: Indicates if the client can seek.
        explode: true
        in: query
        name: canSeek
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "204":
          description: Play start recorded.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Reports that a session has begun playing an item.
      tags:
      - Playstate
      x-accepts:
      - application/json
  /PlayingItems/{itemId}/Progress:
    post:
      operationId: OnPlaybackProgress
      parameters:
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The id of the MediaSource.
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. The current position, in ticks. 1 tick = 10000 ms."
        explode: true
        in: query
        name: positionTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The audio stream index.
        explode: true
        in: query
        name: audioStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The subtitle stream index.
        explode: true
        in: query
        name: subtitleStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Scale of 0-100.
        explode: true
        in: query
        name: volumeLevel
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The play method.
        explode: true
        in: query
        name: playMethod
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/PlayMethod'
          enum:
          - Transcode
          - DirectStream
          - DirectPlay
          type: string
        style: form
      - description: The live stream id.
        explode: true
        in: query
        name: liveStreamId
        required: false
        schema:
          type: string
        style: form
      - description: The play session id.
        explode: true
        in: query
        name: playSessionId
        required: false
        schema:
          type: string
        style: form
      - description: The repeat mode.
        explode: true
        in: query
        name: repeatMode
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/RepeatMode'
          enum:
          - RepeatNone
          - RepeatAll
          - RepeatOne
          type: string
        style: form
      - description: Indicates if the player is paused.
        explode: true
        in: query
        name: isPaused
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Indicates if the player is muted.
        explode: true
        in: query
        name: isMuted
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "204":
          description: Play progress recorded.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Reports a session's playback progress.
      tags:
      - Playstate
      x-accepts:
      - application/json
  /Sessions/Playing:
    post:
      operationId: ReportPlaybackStart
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PlaybackStartInfo'
              description: Class PlaybackStartInfo.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PlaybackStartInfo'
              description: Class PlaybackStartInfo.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PlaybackStartInfo'
              description: Class PlaybackStartInfo.
        description: The playback start info.
      responses:
        "204":
          description: Playback start recorded.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Reports playback has started within a session.
      tags:
      - Playstate
      x-content-type: application/json
      x-accepts:
      - application/json
  /Sessions/Playing/Ping:
    post:
      operationId: PingPlaybackSession
      parameters:
      - description: Playback session id.
        explode: true
        in: query
        name: playSessionId
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Playback session pinged.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Pings a playback session.
      tags:
      - Playstate
      x-accepts:
      - application/json
  /Sessions/Playing/Progress:
    post:
      operationId: ReportPlaybackProgress
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PlaybackProgressInfo'
              description: Class PlaybackProgressInfo.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PlaybackProgressInfo'
              description: Class PlaybackProgressInfo.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PlaybackProgressInfo'
              description: Class PlaybackProgressInfo.
        description: The playback progress info.
      responses:
        "204":
          description: Playback progress recorded.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Reports playback progress within a session.
      tags:
      - Playstate
      x-content-type: application/json
      x-accepts:
      - application/json
  /Sessions/Playing/Stopped:
    post:
      operationId: ReportPlaybackStopped
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PlaybackStopInfo'
              description: Class PlaybackStopInfo.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PlaybackStopInfo'
              description: Class PlaybackStopInfo.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PlaybackStopInfo'
              description: Class PlaybackStopInfo.
        description: The playback stop info.
      responses:
        "204":
          description: Playback stop recorded.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Reports playback has stopped within a session.
      tags:
      - Playstate
      x-content-type: application/json
      x-accepts:
      - application/json
  /UserPlayedItems/{itemId}:
    delete:
      operationId: MarkUnplayedItem
      parameters:
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
          description: Item marked as unplayed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Marks an item as unplayed for user.
      tags:
      - Playstate
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: MarkPlayedItem
      parameters:
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Optional. The date the item was played.
        explode: true
        in: query
        name: datePlayed
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
          description: Item marked as played.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Marks an item as played for user.
      tags:
      - Playstate
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Plugins:
    get:
      operationId: GetPlugins
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PluginInfo'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/PluginInfo'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/PluginInfo'
                type: array
          description: Installed plugins returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Gets a list of currently installed plugins.
      tags:
      - Plugins
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Plugins/{pluginId}:
    delete:
      deprecated: true
      operationId: UninstallPlugin
      parameters:
      - description: Plugin id.
        explode: false
        in: path
        name: pluginId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Plugin uninstalled.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Plugin not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Uninstalls a plugin.
      tags:
      - Plugins
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Plugins/{pluginId}/{version}:
    delete:
      operationId: UninstallPluginByVersion
      parameters:
      - description: Plugin id.
        explode: false
        in: path
        name: pluginId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Plugin version.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Plugin uninstalled.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Plugin not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Uninstalls a plugin by version.
      tags:
      - Plugins
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Plugins/{pluginId}/{version}/Disable:
    post:
      operationId: DisablePlugin
      parameters:
      - description: Plugin id.
        explode: false
        in: path
        name: pluginId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Plugin version.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Plugin disabled.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Plugin not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Disable a plugin.
      tags:
      - Plugins
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Plugins/{pluginId}/{version}/Enable:
    post:
      operationId: EnablePlugin
      parameters:
      - description: Plugin id.
        explode: false
        in: path
        name: pluginId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Plugin version.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Plugin enabled.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Plugin not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Enables a disabled plugin.
      tags:
      - Plugins
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Plugins/{pluginId}/{version}/Image:
    get:
      operationId: GetPluginImage
      parameters:
      - description: Plugin id.
        explode: false
        in: path
        name: pluginId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Plugin version.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Plugin image returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Gets a plugin's image.
      tags:
      - Plugins
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
  /Plugins/{pluginId}/Configuration:
    get:
      operationId: GetPluginConfiguration
      parameters:
      - description: Plugin id.
        explode: false
        in: path
        name: pluginId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasePluginConfiguration'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BasePluginConfiguration'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BasePluginConfiguration'
          description: Plugin configuration returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Plugin not found or plugin configuration not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Gets plugin configuration.
      tags:
      - Plugins
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      description: Accepts plugin configuration as JSON body.
      operationId: UpdatePluginConfiguration
      parameters:
      - description: Plugin id.
        explode: false
        in: path
        name: pluginId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Plugin configuration updated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Plugin not found or plugin does not have configuration.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Updates plugin configuration.
      tags:
      - Plugins
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Plugins/{pluginId}/Manifest:
    post:
      operationId: GetPluginManifest
      parameters:
      - description: Plugin id.
        explode: false
        in: path
        name: pluginId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Plugin manifest returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Plugin not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Gets a plugin's manifest.
      tags:
      - Plugins
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /QuickConnect/Authorize:
    post:
      operationId: AuthorizeQuickConnect
      parameters:
      - description: Quick connect code to authorize.
        explode: true
        in: query
        name: code
        required: true
        schema:
          type: string
        style: form
      - description: The user the authorize. Access to the requested user is required.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
            application/json; profile="CamelCase":
              schema:
                type: boolean
            application/json; profile="PascalCase":
              schema:
                type: boolean
          description: Quick connect result authorized successfully.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unknown user id.
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Authorizes a pending quick connect request.
      tags:
      - QuickConnect
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /QuickConnect/Connect:
    get:
      operationId: GetQuickConnectState
      parameters:
      - description: Secret previously returned from the Initiate endpoint.
        explode: true
        in: query
        name: secret
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuickConnectResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/QuickConnectResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/QuickConnectResult'
          description: Quick connect result returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unknown quick connect secret.
      summary: Attempts to retrieve authentication information.
      tags:
      - QuickConnect
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /QuickConnect/Enabled:
    get:
      operationId: GetQuickConnectEnabled
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
            application/json; profile="CamelCase":
              schema:
                type: boolean
            application/json; profile="PascalCase":
              schema:
                type: boolean
          description: Quick connect state returned.
      summary: Gets the current quick connect state.
      tags:
      - QuickConnect
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /QuickConnect/Initiate:
    post:
      operationId: InitiateQuickConnect
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuickConnectResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/QuickConnectResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/QuickConnectResult'
          description: Quick connect request successfully created.
        "401":
          description: Quick connect is not active on this server.
      summary: Initiate a new quick connect request.
      tags:
      - QuickConnect
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/{itemId}/RemoteImages:
    get:
      operationId: GetRemoteImages
      parameters:
      - description: Item Id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The image type.
        explode: true
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: form
      - description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image provider to use.
        explode: true
        in: query
        name: providerName
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Include all languages.
        explode: true
        in: query
        name: includeAllLanguages
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteImageResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/RemoteImageResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/RemoteImageResult'
          description: Remote Images returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets available remote images for an item.
      tags:
      - RemoteImage
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/{itemId}/RemoteImages/Download:
    post:
      operationId: DownloadRemoteImage
      parameters:
      - description: Item Id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The image type.
        explode: true
        in: query
        name: type
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Enum ImageType.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        style: form
      - description: The image url.
        explode: true
        in: query
        name: imageUrl
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Remote image downloaded.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Remote image not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Downloads a remote image for an item.
      tags:
      - RemoteImage
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/{itemId}/RemoteImages/Providers:
    get:
      operationId: GetRemoteImageProviders
      parameters:
      - description: Item Id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ImageProviderInfo'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/ImageProviderInfo'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/ImageProviderInfo'
                type: array
          description: Returned remote image providers.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets available remote image providers for an item.
      tags:
      - RemoteImage
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /ScheduledTasks:
    get:
      operationId: GetTasks
      parameters:
      - description: "Optional filter tasks that are hidden, or not."
        explode: true
        in: query
        name: isHidden
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional filter tasks that are enabled, or not."
        explode: true
        in: query
        name: isEnabled
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TaskInfo'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/TaskInfo'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/TaskInfo'
                type: array
          description: Scheduled tasks retrieved.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Get tasks.
      tags:
      - ScheduledTasks
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /ScheduledTasks/{taskId}:
    get:
      operationId: GetTask
      parameters:
      - description: Task Id.
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskInfo'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/TaskInfo'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/TaskInfo'
          description: Task retrieved.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Task not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Get task by id.
      tags:
      - ScheduledTasks
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /ScheduledTasks/{taskId}/Triggers:
    post:
      operationId: UpdateTask
      parameters:
      - description: Task Id.
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TaskTriggerInfo'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/TaskTriggerInfo'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/TaskTriggerInfo'
              type: array
        description: Triggers.
        required: true
      responses:
        "204":
          description: Task triggers updated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Task not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Update specified task triggers.
      tags:
      - ScheduledTasks
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /ScheduledTasks/Running/{taskId}:
    delete:
      operationId: StopTask
      parameters:
      - description: Task Id.
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Task stopped.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Task not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Stop specified task.
      tags:
      - ScheduledTasks
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: StartTask
      parameters:
      - description: Task Id.
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Task started.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Task not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Start specified task.
      tags:
      - ScheduledTasks
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Search/Hints:
    get:
      operationId: GetSearchHints
      parameters:
      - description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Supply a user id to search within a user's library
          or omit to search all.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The search term to filter on.
        explode: true
        in: query
        name: searchTerm
        required: true
        schema:
          type: string
        style: form
      - description: "If specified, only results with the specified item types are\
          \ returned. This allows multiple, comma delimited."
        explode: true
        in: query
        name: includeItemTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/BaseItemKind'
          type: array
        style: form
      - description: "If specified, results with these item types are filtered out.\
          \ This allows multiple, comma delimited."
        explode: true
        in: query
        name: excludeItemTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/BaseItemKind'
          type: array
        style: form
      - description: "If specified, only results with the specified media types are\
          \ returned. This allows multiple, comma delimited."
        explode: true
        in: query
        name: mediaTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/MediaType'
          type: array
        style: form
      - description: "If specified, only children of the parent are returned."
        explode: true
        in: query
        name: parentId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional filter for movies.
        explode: true
        in: query
        name: isMovie
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter for series.
        explode: true
        in: query
        name: isSeries
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter for news.
        explode: true
        in: query
        name: isNews
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter for kids.
        explode: true
        in: query
        name: isKids
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter for sports.
        explode: true
        in: query
        name: isSports
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter whether to include people.
        explode: true
        in: query
        name: includePeople
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Optional filter whether to include media.
        explode: true
        in: query
        name: includeMedia
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Optional filter whether to include genres.
        explode: true
        in: query
        name: includeGenres
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Optional filter whether to include studios.
        explode: true
        in: query
        name: includeStudios
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Optional filter whether to include artists.
        explode: true
        in: query
        name: includeArtists
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchHintResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/SearchHintResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/SearchHintResult'
          description: Search hint returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets the search hint result.
      tags:
      - Search
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Auth/PasswordResetProviders:
    get:
      operationId: GetPasswordResetProviders
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NameIdPair'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/NameIdPair'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/NameIdPair'
                type: array
          description: Password reset providers retrieved.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Get all password reset providers.
      tags:
      - Session
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Auth/Providers:
    get:
      operationId: GetAuthProviders
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NameIdPair'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/NameIdPair'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/NameIdPair'
                type: array
          description: Auth providers retrieved.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Get all auth providers.
      tags:
      - Session
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Sessions:
    get:
      operationId: GetSessions
      parameters:
      - description: Filter by sessions that a given user is allowed to remote control.
        explode: true
        in: query
        name: controllableByUserId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Filter by device Id.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Filter by sessions that were active in the last n seconds.
        explode: true
        in: query
        name: activeWithinSeconds
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SessionInfoDto'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/SessionInfoDto'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/SessionInfoDto'
                type: array
          description: List of sessions returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets a list of sessions.
      tags:
      - Session
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Sessions/{sessionId}/Command:
    post:
      operationId: SendFullGeneralCommand
      parameters:
      - description: The session id.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GeneralCommand'
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GeneralCommand'
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GeneralCommand'
        description: The MediaBrowser.Model.Session.GeneralCommand.
        required: true
      responses:
        "204":
          description: Full general command sent to session.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Issues a full general command to a client.
      tags:
      - Session
      x-content-type: application/json
      x-accepts:
      - application/json
  /Sessions/{sessionId}/Command/{command}:
    post:
      operationId: SendGeneralCommand
      parameters:
      - description: The session id.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      - description: The command to send.
        explode: false
        in: path
        name: command
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/GeneralCommandType'
          description: This exists simply to identify a set of known commands.
          enum:
          - MoveUp
          - MoveDown
          - MoveLeft
          - MoveRight
          - PageUp
          - PageDown
          - PreviousLetter
          - NextLetter
          - ToggleOsd
          - ToggleContextMenu
          - Select
          - Back
          - TakeScreenshot
          - SendKey
          - SendString
          - GoHome
          - GoToSettings
          - VolumeUp
          - VolumeDown
          - Mute
          - Unmute
          - ToggleMute
          - SetVolume
          - SetAudioStreamIndex
          - SetSubtitleStreamIndex
          - ToggleFullscreen
          - DisplayContent
          - GoToSearch
          - DisplayMessage
          - SetRepeatMode
          - ChannelUp
          - ChannelDown
          - Guide
          - ToggleStats
          - PlayMediaSource
          - PlayTrailers
          - SetShuffleQueue
          - PlayState
          - PlayNext
          - ToggleOsdMenu
          - Play
          - SetMaxStreamingBitrate
          - SetPlaybackOrder
          type: string
        style: simple
      responses:
        "204":
          description: General command sent to session.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Issues a general command to a client.
      tags:
      - Session
      x-accepts:
      - application/json
  /Sessions/{sessionId}/Message:
    post:
      operationId: SendMessageCommand
      parameters:
      - description: The session id.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/MessageCommand'
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/MessageCommand'
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/MessageCommand'
        description: "The MediaBrowser.Model.Session.MessageCommand object containing\
          \ Header, Message Text, and TimeoutMs."
        required: true
      responses:
        "204":
          description: Message sent.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Issues a command to a client to display a message to the user.
      tags:
      - Session
      x-content-type: application/json
      x-accepts:
      - application/json
  /Sessions/{sessionId}/Playing:
    post:
      operationId: Play
      parameters:
      - description: The session id.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      - description: "The type of play command to issue (PlayNow, PlayNext, PlayLast).\
          \ Clients who have not yet implemented play next and play last may play\
          \ now."
        explode: true
        in: query
        name: playCommand
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/PlayCommand'
          description: Enum PlayCommand.
          enum:
          - PlayNow
          - PlayNext
          - PlayLast
          - PlayInstantMix
          - PlayShuffle
          type: string
        style: form
      - description: "The ids of the items to play, comma delimited."
        explode: true
        in: query
        name: itemIds
        required: true
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: The starting position of the first item.
        explode: true
        in: query
        name: startPositionTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Optional. The media source id.
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The index of the audio stream to play.
        explode: true
        in: query
        name: audioStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the subtitle stream to play.
        explode: true
        in: query
        name: subtitleStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The start index.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "204":
          description: Instruction sent to session.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Instructs a session to play an item.
      tags:
      - Session
      x-accepts:
      - application/json
  /Sessions/{sessionId}/Playing/{command}:
    post:
      operationId: SendPlaystateCommand
      parameters:
      - description: The session id.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      - description: The MediaBrowser.Model.Session.PlaystateCommand.
        explode: false
        in: path
        name: command
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/PlaystateCommand'
          description: Enum PlaystateCommand.
          enum:
          - Stop
          - Pause
          - Unpause
          - NextTrack
          - PreviousTrack
          - Seek
          - Rewind
          - FastForward
          - PlayPause
          type: string
        style: simple
      - description: The optional position ticks.
        explode: true
        in: query
        name: seekPositionTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The optional controlling user id.
        explode: true
        in: query
        name: controllingUserId
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Playstate command sent to session.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Issues a playstate command to a client.
      tags:
      - Session
      x-accepts:
      - application/json
  /Sessions/{sessionId}/System/{command}:
    post:
      operationId: SendSystemCommand
      parameters:
      - description: The session id.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      - description: The command to send.
        explode: false
        in: path
        name: command
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/GeneralCommandType'
          description: This exists simply to identify a set of known commands.
          enum:
          - MoveUp
          - MoveDown
          - MoveLeft
          - MoveRight
          - PageUp
          - PageDown
          - PreviousLetter
          - NextLetter
          - ToggleOsd
          - ToggleContextMenu
          - Select
          - Back
          - TakeScreenshot
          - SendKey
          - SendString
          - GoHome
          - GoToSettings
          - VolumeUp
          - VolumeDown
          - Mute
          - Unmute
          - ToggleMute
          - SetVolume
          - SetAudioStreamIndex
          - SetSubtitleStreamIndex
          - ToggleFullscreen
          - DisplayContent
          - GoToSearch
          - DisplayMessage
          - SetRepeatMode
          - ChannelUp
          - ChannelDown
          - Guide
          - ToggleStats
          - PlayMediaSource
          - PlayTrailers
          - SetShuffleQueue
          - PlayState
          - PlayNext
          - ToggleOsdMenu
          - Play
          - SetMaxStreamingBitrate
          - SetPlaybackOrder
          type: string
        style: simple
      responses:
        "204":
          description: System command sent to session.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Issues a system command to a client.
      tags:
      - Session
      x-accepts:
      - application/json
  /Sessions/{sessionId}/User/{userId}:
    delete:
      operationId: RemoveUserFromSession
      parameters:
      - description: The session id.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      - description: The user id.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: User removed from session.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Removes an additional user from a session.
      tags:
      - Session
      x-accepts:
      - application/json
    post:
      operationId: AddUserToSession
      parameters:
      - description: The session id.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      - description: The user id.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: User added to session.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Adds an additional user to a session.
      tags:
      - Session
      x-accepts:
      - application/json
  /Sessions/{sessionId}/Viewing:
    post:
      operationId: DisplayContent
      parameters:
      - description: The session Id.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      - description: The type of item to browse to.
        explode: true
        in: query
        name: itemType
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/BaseItemKind'
          description: The base item kind.
          enum:
          - AggregateFolder
          - Audio
          - AudioBook
          - BasePluginFolder
          - Book
          - BoxSet
          - Channel
          - ChannelFolderItem
          - CollectionFolder
          - Episode
          - Folder
          - Genre
          - ManualPlaylistsFolder
          - Movie
          - LiveTvChannel
          - LiveTvProgram
          - MusicAlbum
          - MusicArtist
          - MusicGenre
          - MusicVideo
          - Person
          - Photo
          - PhotoAlbum
          - Playlist
          - PlaylistsFolder
          - Program
          - Recording
          - Season
          - Series
          - Studio
          - Trailer
          - TvChannel
          - TvProgram
          - UserRootFolder
          - UserView
          - Video
          - Year
          type: string
        style: form
      - description: The Id of the item.
        explode: true
        in: query
        name: itemId
        required: true
        schema:
          type: string
        style: form
      - description: The name of the item.
        explode: true
        in: query
        name: itemName
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Instruction sent to session.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Instructs a session to browse to an item or view.
      tags:
      - Session
      x-accepts:
      - application/json
  /Sessions/Capabilities:
    post:
      operationId: PostCapabilities
      parameters:
      - description: The session id.
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      - description: "A list of playable media types, comma delimited. Audio, Video,\
          \ Book, Photo."
        explode: true
        in: query
        name: playableMediaTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/MediaType'
          type: array
        style: form
      - description: "A list of supported remote control commands, comma delimited."
        explode: true
        in: query
        name: supportedCommands
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GeneralCommandType'
          type: array
        style: form
      - description: Determines whether media can be played remotely..
        explode: true
        in: query
        name: supportsMediaControl
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Determines whether the device supports a unique identifier.
        explode: true
        in: query
        name: supportsPersistentIdentifier
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "204":
          description: Capabilities posted.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Updates capabilities for a device.
      tags:
      - Session
      x-accepts:
      - application/json
  /Sessions/Capabilities/Full:
    post:
      operationId: PostFullCapabilities
      parameters:
      - description: The session id.
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ClientCapabilitiesDto'
              description: Client capabilities dto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ClientCapabilitiesDto'
              description: Client capabilities dto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ClientCapabilitiesDto'
              description: Client capabilities dto.
        description: The MediaBrowser.Model.Session.ClientCapabilities.
        required: true
      responses:
        "204":
          description: Capabilities updated.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Updates capabilities for a device.
      tags:
      - Session
      x-content-type: application/json
      x-accepts:
      - application/json
  /Sessions/Logout:
    post:
      operationId: ReportSessionEnded
      responses:
        "204":
          description: Session end reported to server.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Reports that a session has ended.
      tags:
      - Session
      x-accepts:
      - application/json
  /Sessions/Viewing:
    post:
      operationId: ReportViewing
      parameters:
      - description: The session id.
        explode: true
        in: query
        name: sessionId
        required: false
        schema:
          type: string
        style: form
      - description: The item id.
        explode: true
        in: query
        name: itemId
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: Session reported to server.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Reports that a session is viewing an item.
      tags:
      - Session
      x-accepts:
      - application/json
  /Startup/Complete:
    post:
      operationId: CompleteWizard
      responses:
        "204":
          description: Startup wizard completed.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrElevated
        - DefaultAuthorization
      summary: Completes the startup wizard.
      tags:
      - Startup
      x-accepts:
      - application/json
  /Startup/Configuration:
    get:
      operationId: GetStartupConfiguration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartupConfigurationDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/StartupConfigurationDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/StartupConfigurationDto'
          description: Initial startup wizard configuration retrieved.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrElevated
        - DefaultAuthorization
      summary: Gets the initial startup wizard configuration.
      tags:
      - Startup
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: UpdateInitialConfiguration
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/StartupConfigurationDto'
              description: The startup configuration DTO.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/StartupConfigurationDto'
              description: The startup configuration DTO.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/StartupConfigurationDto'
              description: The startup configuration DTO.
        description: The updated startup configuration.
        required: true
      responses:
        "204":
          description: Configuration saved.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrElevated
        - DefaultAuthorization
      summary: Sets the initial startup wizard configuration.
      tags:
      - Startup
      x-content-type: application/json
      x-accepts:
      - application/json
  /Startup/FirstUser:
    get:
      operationId: GetFirstUser_2
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartupUserDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/StartupUserDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/StartupUserDto'
          description: Initial user retrieved.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrElevated
        - DefaultAuthorization
      summary: Gets the first user.
      tags:
      - Startup
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Startup/RemoteAccess:
    post:
      operationId: SetRemoteAccess
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/StartupRemoteAccessDto'
              description: Startup remote access dto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/StartupRemoteAccessDto'
              description: Startup remote access dto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/StartupRemoteAccessDto'
              description: Startup remote access dto.
        description: The startup remote access dto.
        required: true
      responses:
        "204":
          description: Configuration saved.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrElevated
        - DefaultAuthorization
      summary: Sets remote access and UPnP.
      tags:
      - Startup
      x-content-type: application/json
      x-accepts:
      - application/json
  /Startup/User:
    get:
      operationId: GetFirstUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartupUserDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/StartupUserDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/StartupUserDto'
          description: Initial user retrieved.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrElevated
        - DefaultAuthorization
      summary: Gets the first user.
      tags:
      - Startup
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: UpdateStartupUser
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/StartupUserDto'
              description: The startup user DTO.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/StartupUserDto'
              description: The startup user DTO.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/StartupUserDto'
              description: The startup user DTO.
        description: The DTO containing username and password.
      responses:
        "204":
          description: Updated user name and password.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrElevated
        - DefaultAuthorization
      summary: Sets the user name and password.
      tags:
      - Startup
      x-content-type: application/json
      x-accepts:
      - application/json
  /Studios:
    get:
      operationId: GetStudios
      parameters:
      - description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Search term.
        explode: true
        in: query
        name: searchTerm
        required: false
        schema:
          type: string
        style: form
      - description: Specify this to localize the search to a specific item or folder.
          Omit to use the root.
        explode: true
        in: query
        name: parentId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered out based on\
          \ item type. This allows multiple, comma delimited."
        explode: true
        in: query
        name: excludeItemTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/BaseItemKind'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimited."
        explode: true
        in: query
        name: includeItemTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/BaseItemKind'
          type: array
        style: form
      - description: "Optional filter by items that are marked as favorite, or not."
        explode: true
        in: query
        name: isFavorite
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional, include user data."
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional, the max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        explode: true
        in: query
        name: nameStartsWithOrGreater
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter by items whose name is sorted equally than a
          given input string.
        explode: true
        in: query
        name: nameStartsWith
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter by items whose name is equally or lesser than
          a given input string.
        explode: true
        in: query
        name: nameLessThan
        required: false
        schema:
          type: string
        style: form
      - description: "Optional, include image information in output."
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Total record count.
        explode: true
        in: query
        name: enableTotalRecordCount
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Studios returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: "Gets all studios from a given item, folder, or the entire library."
      tags:
      - Studios
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Studios/{name}:
    get:
      operationId: GetStudio
      parameters:
      - description: Studio name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDto'
          description: Studio returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets a studio by name.
      tags:
      - Studios
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /FallbackFont/Fonts:
    get:
      operationId: GetFallbackFontList
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FontFile'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/FontFile'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/FontFile'
                type: array
          description: Information retrieved.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets a list of available fallback font files.
      tags:
      - Subtitle
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /FallbackFont/Fonts/{name}:
    get:
      operationId: GetFallbackFont
      parameters:
      - description: The name of the fallback font file to get.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            font/*:
              schema:
                format: binary
                type: string
          description: Fallback font file retrieved.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets a fallback font file.
      tags:
      - Subtitle
      x-accepts:
      - font/*
  /Items/{itemId}/RemoteSearch/Subtitles/{language}:
    get:
      operationId: SearchRemoteSubtitles
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The language of the subtitles.
        explode: false
        in: path
        name: language
        required: true
        schema:
          type: string
        style: simple
      - description: Optional. Only show subtitles which are a perfect match.
        explode: true
        in: query
        name: isPerfectMatch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSubtitleInfo'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSubtitleInfo'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/RemoteSubtitleInfo'
                type: array
          description: Subtitles retrieved.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SubtitleManagement
        - DefaultAuthorization
      summary: Search remote subtitles.
      tags:
      - Subtitle
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/{itemId}/RemoteSearch/Subtitles/{subtitleId}:
    post:
      operationId: DownloadRemoteSubtitles
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The subtitle id.
        explode: false
        in: path
        name: subtitleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Subtitle downloaded.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SubtitleManagement
        - DefaultAuthorization
      summary: Downloads a remote subtitle.
      tags:
      - Subtitle
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Providers/Subtitles/Subtitles/{subtitleId}:
    get:
      operationId: GetRemoteSubtitles
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: subtitleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/*:
              schema:
                format: binary
                type: string
          description: File returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SubtitleManagement
        - DefaultAuthorization
      summary: Gets the remote subtitles.
      tags:
      - Subtitle
      x-accepts:
      - text/*
  /Videos/{itemId}/{mediaSourceId}/Subtitles/{index}/subtitles.m3u8:
    get:
      operationId: GetSubtitlePlaylist
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The subtitle stream index.
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The media source id.
        explode: false
        in: path
        name: mediaSourceId
        required: true
        schema:
          type: string
        style: simple
      - description: The subtitle segment length.
        explode: true
        in: query
        name: segmentLength
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/x-mpegURL:
              schema:
                format: binary
                type: string
          description: Subtitle playlist retrieved.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets an HLS subtitle playlist.
      tags:
      - Subtitle
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - application/x-mpegURL
  /Videos/{itemId}/Subtitles:
    post:
      operationId: UploadSubtitle
      parameters:
      - description: The item the subtitle belongs to.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UploadSubtitleDto'
              description: Upload subtitles dto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UploadSubtitleDto'
              description: Upload subtitles dto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UploadSubtitleDto'
              description: Upload subtitles dto.
        description: The request body.
        required: true
      responses:
        "204":
          description: Subtitle uploaded.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SubtitleManagement
        - DefaultAuthorization
      summary: Upload an external subtitle file.
      tags:
      - Subtitle
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Videos/{itemId}/Subtitles/{index}:
    delete:
      operationId: DeleteSubtitle
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The index of the subtitle file.
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "204":
          description: Subtitle deleted.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Deletes an external subtitle file.
      tags:
      - Subtitle
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Videos/{routeItemId}/{routeMediaSourceId}/Subtitles/{routeIndex}/{routeStartPositionTicks}/Stream.{routeFormat}:
    get:
      operationId: GetSubtitleWithTicks
      parameters:
      - description: The (route) item id.
        explode: false
        in: path
        name: routeItemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The (route) media source id.
        explode: false
        in: path
        name: routeMediaSourceId
        required: true
        schema:
          type: string
        style: simple
      - description: The (route) subtitle stream index.
        explode: false
        in: path
        name: routeIndex
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The (route) start position of the subtitle in ticks.
        explode: false
        in: path
        name: routeStartPositionTicks
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The (route) format of the returned subtitle.
        explode: false
        in: path
        name: routeFormat
        required: true
        schema:
          type: string
        style: simple
      - deprecated: true
        description: The item id.
        explode: true
        in: query
        name: itemId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - deprecated: true
        description: The media source id.
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: The subtitle stream index.
        explode: true
        in: query
        name: index
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - deprecated: true
        description: The start position of the subtitle in ticks.
        explode: true
        in: query
        name: startPositionTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - deprecated: true
        description: The format of the returned subtitle.
        explode: true
        in: query
        name: format
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The end position of the subtitle in ticks.
        explode: true
        in: query
        name: endPositionTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Optional. Whether to copy the timestamps.
        explode: true
        in: query
        name: copyTimestamps
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Optional. Whether to add a VTT time map.
        explode: true
        in: query
        name: addVttTimeMap
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            text/*:
              schema:
                format: binary
                type: string
          description: File returned.
      summary: Gets subtitles in a specified format.
      tags:
      - Subtitle
      x-accepts:
      - text/*
  /Videos/{routeItemId}/{routeMediaSourceId}/Subtitles/{routeIndex}/Stream.{routeFormat}:
    get:
      operationId: GetSubtitle
      parameters:
      - description: The (route) item id.
        explode: false
        in: path
        name: routeItemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The (route) media source id.
        explode: false
        in: path
        name: routeMediaSourceId
        required: true
        schema:
          type: string
        style: simple
      - description: The (route) subtitle stream index.
        explode: false
        in: path
        name: routeIndex
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The (route) format of the returned subtitle.
        explode: false
        in: path
        name: routeFormat
        required: true
        schema:
          type: string
        style: simple
      - deprecated: true
        description: The item id.
        explode: true
        in: query
        name: itemId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - deprecated: true
        description: The media source id.
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: The subtitle stream index.
        explode: true
        in: query
        name: index
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - deprecated: true
        description: The format of the returned subtitle.
        explode: true
        in: query
        name: format
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The end position of the subtitle in ticks.
        explode: true
        in: query
        name: endPositionTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Optional. Whether to copy the timestamps.
        explode: true
        in: query
        name: copyTimestamps
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Optional. Whether to add a VTT time map.
        explode: true
        in: query
        name: addVttTimeMap
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: The start position of the subtitle in ticks.
        explode: true
        in: query
        name: startPositionTicks
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            text/*:
              schema:
                format: binary
                type: string
          description: File returned.
      summary: Gets subtitles in a specified format.
      tags:
      - Subtitle
      x-accepts:
      - text/*
  /Items/Suggestions:
    get:
      operationId: GetSuggestions
      parameters:
      - description: The user id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The media types.
        explode: true
        in: query
        name: mediaType
        required: false
        schema:
          items:
            $ref: '#/components/schemas/MediaType'
          type: array
        style: form
      - description: The type.
        explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            $ref: '#/components/schemas/BaseItemKind'
          type: array
        style: form
      - description: Optional. The start index.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The limit.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Whether to enable the total record count.
        explode: true
        in: query
        name: enableTotalRecordCount
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Suggestions returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets suggestions.
      tags:
      - Suggestions
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /SyncPlay/Buffering:
    post:
      operationId: SyncPlayBuffering
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/BufferRequestDto'
              description: Class BufferRequestDto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/BufferRequestDto'
              description: Class BufferRequestDto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/BufferRequestDto'
              description: Class BufferRequestDto.
        description: The player status.
        required: true
      responses:
        "204":
          description: Group state update sent to all group members.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SyncPlayIsInGroup
        - SyncPlayHasAccess
        - DefaultAuthorization
      summary: Notify SyncPlay group that member is buffering.
      tags:
      - SyncPlay
      x-content-type: application/json
      x-accepts:
      - application/json
  /SyncPlay/Join:
    post:
      operationId: SyncPlayJoinGroup
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/JoinGroupRequestDto'
              description: Class JoinGroupRequestDto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/JoinGroupRequestDto'
              description: Class JoinGroupRequestDto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/JoinGroupRequestDto'
              description: Class JoinGroupRequestDto.
        description: The group to join.
        required: true
      responses:
        "204":
          description: Group join successful.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SyncPlayJoinGroup
        - SyncPlayHasAccess
        - DefaultAuthorization
      summary: Join an existing SyncPlay group.
      tags:
      - SyncPlay
      x-content-type: application/json
      x-accepts:
      - application/json
  /SyncPlay/Leave:
    post:
      operationId: SyncPlayLeaveGroup
      responses:
        "204":
          description: Group leave successful.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SyncPlayIsInGroup
        - SyncPlayHasAccess
        - DefaultAuthorization
      summary: Leave the joined SyncPlay group.
      tags:
      - SyncPlay
      x-accepts:
      - application/json
  /SyncPlay/List:
    get:
      operationId: SyncPlayGetGroups
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupInfoDto'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/GroupInfoDto'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/GroupInfoDto'
                type: array
          description: Groups returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SyncPlayJoinGroup
        - SyncPlayHasAccess
        - DefaultAuthorization
      summary: Gets all SyncPlay groups.
      tags:
      - SyncPlay
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /SyncPlay/MovePlaylistItem:
    post:
      operationId: SyncPlayMovePlaylistItem
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/MovePlaylistItemRequestDto'
              description: Class MovePlaylistItemRequestDto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/MovePlaylistItemRequestDto'
              description: Class MovePlaylistItemRequestDto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/MovePlaylistItemRequestDto'
              description: Class MovePlaylistItemRequestDto.
        description: The new position for the item.
        required: true
      responses:
        "204":
          description: Queue update sent to all group members.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SyncPlayIsInGroup
        - SyncPlayHasAccess
        - DefaultAuthorization
      summary: Request to move an item in the playlist in SyncPlay group.
      tags:
      - SyncPlay
      x-content-type: application/json
      x-accepts:
      - application/json
  /SyncPlay/New:
    post:
      operationId: SyncPlayCreateGroup
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/NewGroupRequestDto'
              description: Class NewGroupRequestDto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/NewGroupRequestDto'
              description: Class NewGroupRequestDto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/NewGroupRequestDto'
              description: Class NewGroupRequestDto.
        description: The settings of the new group.
        required: true
      responses:
        "204":
          description: New group created.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SyncPlayCreateGroup
        - SyncPlayHasAccess
        - DefaultAuthorization
      summary: Create a new SyncPlay group.
      tags:
      - SyncPlay
      x-content-type: application/json
      x-accepts:
      - application/json
  /SyncPlay/NextItem:
    post:
      operationId: SyncPlayNextItem
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/NextItemRequestDto'
              description: Class NextItemRequestDto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/NextItemRequestDto'
              description: Class NextItemRequestDto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/NextItemRequestDto'
              description: Class NextItemRequestDto.
        description: The current item information.
        required: true
      responses:
        "204":
          description: Next item update sent to all group members.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SyncPlayIsInGroup
        - SyncPlayHasAccess
        - DefaultAuthorization
      summary: Request next item in SyncPlay group.
      tags:
      - SyncPlay
      x-content-type: application/json
      x-accepts:
      - application/json
  /SyncPlay/Pause:
    post:
      operationId: SyncPlayPause
      responses:
        "204":
          description: Pause update sent to all group members.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SyncPlayIsInGroup
        - SyncPlayHasAccess
        - DefaultAuthorization
      summary: Request pause in SyncPlay group.
      tags:
      - SyncPlay
      x-accepts:
      - application/json
  /SyncPlay/Ping:
    post:
      operationId: SyncPlayPing
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PingRequestDto'
              description: Class PingRequestDto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PingRequestDto'
              description: Class PingRequestDto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PingRequestDto'
              description: Class PingRequestDto.
        description: The new ping.
        required: true
      responses:
        "204":
          description: Ping updated.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SyncPlayHasAccess
        - DefaultAuthorization
      summary: Update session ping.
      tags:
      - SyncPlay
      x-content-type: application/json
      x-accepts:
      - application/json
  /SyncPlay/PreviousItem:
    post:
      operationId: SyncPlayPreviousItem
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PreviousItemRequestDto'
              description: Class PreviousItemRequestDto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PreviousItemRequestDto'
              description: Class PreviousItemRequestDto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PreviousItemRequestDto'
              description: Class PreviousItemRequestDto.
        description: The current item information.
        required: true
      responses:
        "204":
          description: Previous item update sent to all group members.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SyncPlayIsInGroup
        - SyncPlayHasAccess
        - DefaultAuthorization
      summary: Request previous item in SyncPlay group.
      tags:
      - SyncPlay
      x-content-type: application/json
      x-accepts:
      - application/json
  /SyncPlay/Queue:
    post:
      operationId: SyncPlayQueue
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/QueueRequestDto'
              description: Class QueueRequestDto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/QueueRequestDto'
              description: Class QueueRequestDto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/QueueRequestDto'
              description: Class QueueRequestDto.
        description: The items to add.
        required: true
      responses:
        "204":
          description: Queue update sent to all group members.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SyncPlayIsInGroup
        - SyncPlayHasAccess
        - DefaultAuthorization
      summary: Request to queue items to the playlist of a SyncPlay group.
      tags:
      - SyncPlay
      x-content-type: application/json
      x-accepts:
      - application/json
  /SyncPlay/Ready:
    post:
      operationId: SyncPlayReady
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ReadyRequestDto'
              description: Class ReadyRequest.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ReadyRequestDto'
              description: Class ReadyRequest.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ReadyRequestDto'
              description: Class ReadyRequest.
        description: The player status.
        required: true
      responses:
        "204":
          description: Group state update sent to all group members.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SyncPlayIsInGroup
        - SyncPlayHasAccess
        - DefaultAuthorization
      summary: Notify SyncPlay group that member is ready for playback.
      tags:
      - SyncPlay
      x-content-type: application/json
      x-accepts:
      - application/json
  /SyncPlay/RemoveFromPlaylist:
    post:
      operationId: SyncPlayRemoveFromPlaylist
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RemoveFromPlaylistRequestDto'
              description: Class RemoveFromPlaylistRequestDto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RemoveFromPlaylistRequestDto'
              description: Class RemoveFromPlaylistRequestDto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RemoveFromPlaylistRequestDto'
              description: Class RemoveFromPlaylistRequestDto.
        description: The items to remove.
        required: true
      responses:
        "204":
          description: Queue update sent to all group members.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SyncPlayIsInGroup
        - SyncPlayHasAccess
        - DefaultAuthorization
      summary: Request to remove items from the playlist in SyncPlay group.
      tags:
      - SyncPlay
      x-content-type: application/json
      x-accepts:
      - application/json
  /SyncPlay/Seek:
    post:
      operationId: SyncPlaySeek
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SeekRequestDto'
              description: Class SeekRequestDto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SeekRequestDto'
              description: Class SeekRequestDto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SeekRequestDto'
              description: Class SeekRequestDto.
        description: The new playback position.
        required: true
      responses:
        "204":
          description: Seek update sent to all group members.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SyncPlayIsInGroup
        - SyncPlayHasAccess
        - DefaultAuthorization
      summary: Request seek in SyncPlay group.
      tags:
      - SyncPlay
      x-content-type: application/json
      x-accepts:
      - application/json
  /SyncPlay/SetIgnoreWait:
    post:
      operationId: SyncPlaySetIgnoreWait
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/IgnoreWaitRequestDto'
              description: Class IgnoreWaitRequestDto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/IgnoreWaitRequestDto'
              description: Class IgnoreWaitRequestDto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/IgnoreWaitRequestDto'
              description: Class IgnoreWaitRequestDto.
        description: The settings to set.
        required: true
      responses:
        "204":
          description: Member state updated.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SyncPlayIsInGroup
        - SyncPlayHasAccess
        - DefaultAuthorization
      summary: Request SyncPlay group to ignore member during group-wait.
      tags:
      - SyncPlay
      x-content-type: application/json
      x-accepts:
      - application/json
  /SyncPlay/SetNewQueue:
    post:
      operationId: SyncPlaySetNewQueue
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PlayRequestDto'
              description: Class PlayRequestDto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PlayRequestDto'
              description: Class PlayRequestDto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PlayRequestDto'
              description: Class PlayRequestDto.
        description: The new playlist to play in the group.
        required: true
      responses:
        "204":
          description: Queue update sent to all group members.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SyncPlayIsInGroup
        - SyncPlayHasAccess
        - DefaultAuthorization
      summary: Request to set new playlist in SyncPlay group.
      tags:
      - SyncPlay
      x-content-type: application/json
      x-accepts:
      - application/json
  /SyncPlay/SetPlaylistItem:
    post:
      operationId: SyncPlaySetPlaylistItem
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SetPlaylistItemRequestDto'
              description: Class SetPlaylistItemRequestDto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SetPlaylistItemRequestDto'
              description: Class SetPlaylistItemRequestDto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SetPlaylistItemRequestDto'
              description: Class SetPlaylistItemRequestDto.
        description: The new item to play.
        required: true
      responses:
        "204":
          description: Queue update sent to all group members.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SyncPlayIsInGroup
        - SyncPlayHasAccess
        - DefaultAuthorization
      summary: Request to change playlist item in SyncPlay group.
      tags:
      - SyncPlay
      x-content-type: application/json
      x-accepts:
      - application/json
  /SyncPlay/SetRepeatMode:
    post:
      operationId: SyncPlaySetRepeatMode
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SetRepeatModeRequestDto'
              description: Class SetRepeatModeRequestDto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SetRepeatModeRequestDto'
              description: Class SetRepeatModeRequestDto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SetRepeatModeRequestDto'
              description: Class SetRepeatModeRequestDto.
        description: The new repeat mode.
        required: true
      responses:
        "204":
          description: Play queue update sent to all group members.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SyncPlayIsInGroup
        - SyncPlayHasAccess
        - DefaultAuthorization
      summary: Request to set repeat mode in SyncPlay group.
      tags:
      - SyncPlay
      x-content-type: application/json
      x-accepts:
      - application/json
  /SyncPlay/SetShuffleMode:
    post:
      operationId: SyncPlaySetShuffleMode
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SetShuffleModeRequestDto'
              description: Class SetShuffleModeRequestDto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SetShuffleModeRequestDto'
              description: Class SetShuffleModeRequestDto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SetShuffleModeRequestDto'
              description: Class SetShuffleModeRequestDto.
        description: The new shuffle mode.
        required: true
      responses:
        "204":
          description: Play queue update sent to all group members.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SyncPlayIsInGroup
        - SyncPlayHasAccess
        - DefaultAuthorization
      summary: Request to set shuffle mode in SyncPlay group.
      tags:
      - SyncPlay
      x-content-type: application/json
      x-accepts:
      - application/json
  /SyncPlay/Stop:
    post:
      operationId: SyncPlayStop
      responses:
        "204":
          description: Stop update sent to all group members.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SyncPlayIsInGroup
        - SyncPlayHasAccess
        - DefaultAuthorization
      summary: Request stop in SyncPlay group.
      tags:
      - SyncPlay
      x-accepts:
      - application/json
  /SyncPlay/Unpause:
    post:
      operationId: SyncPlayUnpause
      responses:
        "204":
          description: Unpause update sent to all group members.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - SyncPlayIsInGroup
        - SyncPlayHasAccess
        - DefaultAuthorization
      summary: Request unpause in SyncPlay group.
      tags:
      - SyncPlay
      x-accepts:
      - application/json
  /System/Endpoint:
    get:
      operationId: GetEndpointInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndPointInfo'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/EndPointInfo'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/EndPointInfo'
          description: Information retrieved.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User does not have permission to get endpoint information.
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets information about the request endpoint.
      tags:
      - System
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /System/Info:
    get:
      operationId: GetSystemInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemInfo'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/SystemInfo'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/SystemInfo'
          description: Information retrieved.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User does not have permission to retrieve information.
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - FirstTimeSetupOrIgnoreParentalControl
        - DefaultAuthorization
      summary: Gets information about the server.
      tags:
      - System
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /System/Info/Public:
    get:
      operationId: GetPublicSystemInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicSystemInfo'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/PublicSystemInfo'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/PublicSystemInfo'
          description: Information retrieved.
      summary: Gets public information about the server.
      tags:
      - System
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /System/Logs:
    get:
      operationId: GetServerLogs
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LogFile'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/LogFile'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/LogFile'
                type: array
          description: Information retrieved.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User does not have permission to get server logs.
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Gets a list of available server log files.
      tags:
      - System
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /System/Logs/Log:
    get:
      operationId: GetLogFile
      parameters:
      - description: The name of the log file to get.
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
          description: Log file retrieved.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User does not have permission to get log files.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Could not find a log file with the name.
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Gets a log file.
      tags:
      - System
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - text/plain
  /System/Ping:
    get:
      operationId: GetPingSystem
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/json; profile="CamelCase":
              schema:
                type: string
            application/json; profile="PascalCase":
              schema:
                type: string
          description: Information retrieved.
      summary: Pings the system.
      tags:
      - System
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: PostPingSystem
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            application/json; profile="CamelCase":
              schema:
                type: string
            application/json; profile="PascalCase":
              schema:
                type: string
          description: Information retrieved.
      summary: Pings the system.
      tags:
      - System
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /System/Restart:
    post:
      operationId: RestartApplication
      responses:
        "204":
          description: Server restarted.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User does not have permission to restart server.
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - LocalAccessOrRequiresElevation
      summary: Restarts the application.
      tags:
      - System
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /System/Shutdown:
    post:
      operationId: ShutdownApplication
      responses:
        "204":
          description: Server shut down.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User does not have permission to shutdown server.
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Shuts down the application.
      tags:
      - System
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /System/WakeOnLanInfo:
    get:
      deprecated: true
      operationId: GetWakeOnLanInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WakeOnLanInfo'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/WakeOnLanInfo'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/WakeOnLanInfo'
                type: array
          description: Information retrieved.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets wake on lan information.
      tags:
      - System
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /GetUtcTime:
    get:
      operationId: GetUtcTime
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UtcTimeResponse'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/UtcTimeResponse'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/UtcTimeResponse'
          description: Time returned.
      summary: Gets the current UTC time.
      tags:
      - TimeSync
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Tmdb/ClientConfiguration:
    get:
      operationId: TmdbClientConfiguration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigImageTypes'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets the TMDb image configuration options.
      tags:
      - Tmdb
      x-accepts:
      - application/json
  /Trailers:
    get:
      operationId: GetTrailers
      parameters:
      - description: The user id supplied as query parameter; this is required when
          not using an API key.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        explode: true
        in: query
        name: maxOfficialRating
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter by items with theme songs.
        explode: true
        in: query
        name: hasThemeSong
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items with theme videos.
        explode: true
        in: query
        name: hasThemeVideo
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items with subtitles.
        explode: true
        in: query
        name: hasSubtitles
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items with special features.
        explode: true
        in: query
        name: hasSpecialFeature
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items with trailers.
        explode: true
        in: query
        name: hasTrailer
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Return items that are siblings of a supplied item.
        explode: true
        in: query
        name: adjacentTo
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional filter by parent index number.
        explode: true
        in: query
        name: parentIndexNumber
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional filter by items that have or do not have a parental
          rating.
        explode: true
        in: query
        name: hasParentalRating
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items that are HD or not.
        explode: true
        in: query
        name: isHd
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items that are 4K or not.
        explode: true
        in: query
        name: is4K
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. If specified, results will be filtered based on LocationType.\
          \ This allows multiple, comma delimited."
        explode: true
        in: query
        name: locationTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/LocationType'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on the\
          \ LocationType. This allows multiple, comma delimited."
        explode: true
        in: query
        name: excludeLocationTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/LocationType'
          type: array
        style: form
      - description: Optional filter by items that are missing episodes or not.
        explode: true
        in: query
        name: isMissing
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items that are unaired episodes or not.
        explode: true
        in: query
        name: isUnaired
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by minimum community rating.
        explode: true
        in: query
        name: minCommunityRating
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional filter by minimum critic rating.
        explode: true
        in: query
        name: minCriticRating
        required: false
        schema:
          format: double
          type: number
        style: form
      - description: Optional. The minimum premiere date. Format = ISO.
        explode: true
        in: query
        name: minPremiereDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Optional. The minimum last saved date. Format = ISO.
        explode: true
        in: query
        name: minDateLastSaved
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Optional. The minimum last saved date for the current user. Format
          = ISO.
        explode: true
        in: query
        name: minDateLastSavedForUser
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Optional. The maximum premiere date. Format = ISO.
        explode: true
        in: query
        name: maxPremiereDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Optional filter by items that have an overview or not.
        explode: true
        in: query
        name: hasOverview
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items that have an IMDb id or not.
        explode: true
        in: query
        name: hasImdbId
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items that have a TMDb id or not.
        explode: true
        in: query
        name: hasTmdbId
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items that have a TVDb id or not.
        explode: true
        in: query
        name: hasTvdbId
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter for live tv movies.
        explode: true
        in: query
        name: isMovie
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter for live tv series.
        explode: true
        in: query
        name: isSeries
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter for live tv news.
        explode: true
        in: query
        name: isNews
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter for live tv kids.
        explode: true
        in: query
        name: isKids
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter for live tv sports.
        explode: true
        in: query
        name: isSports
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. If specified, results will be filtered by excluding\
          \ item ids. This allows multiple, comma delimited."
        explode: true
        in: query
        name: excludeItemIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false."
        explode: true
        in: query
        name: recursive
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter based on a search term.
        explode: true
        in: query
        name: searchTerm
        required: false
        schema:
          type: string
        style: form
      - description: "Sort Order - Ascending, Descending."
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          items:
            $ref: '#/components/schemas/SortOrder'
          type: array
        style: form
      - description: Specify this to localize the search to a specific item or folder.
          Omit to use the root.
        explode: true
        in: query
        name: parentId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimited. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimited."
        explode: true
        in: query
        name: excludeItemTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/BaseItemKind'
          type: array
        style: form
      - description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimited. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes."
        explode: true
        in: query
        name: filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFilter'
          type: array
        style: form
      - description: "Optional filter by items that are marked as favorite, or not."
        explode: true
        in: query
        name: isFavorite
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional filter by MediaType. Allows multiple, comma delimited."
        explode: true
        in: query
        name: mediaTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/MediaType'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        explode: true
        in: query
        name: imageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      - description: "Optional. Specify one or more sort orders, comma delimited.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemSortBy'
          type: array
        style: form
      - description: "Optional filter by items that are played, or not."
        explode: true
        in: query
        name: isPlayed
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimited."
        explode: true
        in: query
        name: genres
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimited."
        explode: true
        in: query
        name: officialRatings
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimited."
        explode: true
        in: query
        name: tags
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimited."
        explode: true
        in: query
        name: years
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - description: "Optional, include user data."
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional, the max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        explode: true
        in: query
        name: person
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person id."
        explode: true
        in: query
        name: personIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited."
        explode: true
        in: query
        name: personTypes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimited."
        explode: true
        in: query
        name: studios
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on artists.\
          \ This allows multiple, pipe delimited."
        explode: true
        in: query
        name: artists
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on artist\
          \ id. This allows multiple, pipe delimited."
        explode: true
        in: query
        name: excludeArtistIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified artist id."
        explode: true
        in: query
        name: artistIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified album artist id."
        explode: true
        in: query
        name: albumArtistIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified contributing artist id."
        explode: true
        in: query
        name: contributingArtistIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimited."
        explode: true
        in: query
        name: albums
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on album\
          \ id. This allows multiple, pipe delimited."
        explode: true
        in: query
        name: albumIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimited."
        explode: true
        in: query
        name: videoTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/VideoType'
          type: array
        style: form
      - description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        explode: true
        in: query
        name: minOfficialRating
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter by items that are locked.
        explode: true
        in: query
        name: isLocked
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items that are placeholders.
        explode: true
        in: query
        name: isPlaceHolder
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by items that have official ratings.
        explode: true
        in: query
        name: hasOfficialRating
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to hide items behind their boxsets.
        explode: true
        in: query
        name: collapseBoxSetItems
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter by the minimum width of the item.
        explode: true
        in: query
        name: minWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Filter by the minimum height of the item.
        explode: true
        in: query
        name: minHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Filter by the maximum width of the item.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Filter by the maximum height of the item.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional filter by items that are 3D, or not."
        explode: true
        in: query
        name: is3D
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional filter by Series Status. Allows multiple, comma delimited."
        explode: true
        in: query
        name: seriesStatus
        required: false
        schema:
          items:
            $ref: '#/components/schemas/SeriesStatus'
          type: array
        style: form
      - description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        explode: true
        in: query
        name: nameStartsWithOrGreater
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter by items whose name is sorted equally than a
          given input string.
        explode: true
        in: query
        name: nameStartsWith
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter by items whose name is equally or lesser than
          a given input string.
        explode: true
        in: query
        name: nameLessThan
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. If specified, results will be filtered based on studio\
          \ id. This allows multiple, pipe delimited."
        explode: true
        in: query
        name: studioIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on genre\
          \ id. This allows multiple, pipe delimited."
        explode: true
        in: query
        name: genreIds
        required: false
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      - description: Optional. Enable the total record count.
        explode: true
        in: query
        name: enableTotalRecordCount
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: "Optional, include image information in output."
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Finds movies and trailers similar to a given trailer.
      tags:
      - Trailers
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Videos/{itemId}/Trickplay/{width}/{index}.jpg:
    get:
      operationId: GetTrickplayTileImage
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The width of a single tile.
        explode: false
        in: path
        name: width
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The index of the desired tile.
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "The media version id, if using an alternate version."
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: Tile image not found at specified index.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets a trickplay tile image.
      tags:
      - Trickplay
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - image/*
  /Videos/{itemId}/Trickplay/{width}/tiles.m3u8:
    get:
      operationId: GetTrickplayHlsPlaylist
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The width of a single tile.
        explode: false
        in: path
        name: width
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "The media version id, if using an alternate version."
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/x-mpegURL:
              schema:
                format: binary
                type: string
          description: Tiles playlist returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets an image tiles playlist for trickplay.
      tags:
      - Trickplay
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - application/x-mpegURL
  /Shows/{seriesId}/Episodes:
    get:
      operationId: GetEpisodes
      parameters:
      - description: The series id.
        explode: false
        in: path
        name: seriesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The user id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimited. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: Optional filter by season number.
        explode: true
        in: query
        name: season
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Filter by season id.
        explode: true
        in: query
        name: seasonId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. Filter by items that are missing episodes or not.
        explode: true
        in: query
        name: isMissing
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Return items that are siblings of a supplied item.
        explode: true
        in: query
        name: adjacentTo
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. Skip through the list until a given item is found.
        explode: true
        in: query
        name: startItemId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional, include image information in output."
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional, the max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      - description: Optional. Include user data.
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify one or more sort orders, comma delimited.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ItemSortBy'
          enum:
          - Default
          - AiredEpisodeOrder
          - Album
          - AlbumArtist
          - Artist
          - DateCreated
          - OfficialRating
          - DatePlayed
          - PremiereDate
          - StartDate
          - SortName
          - Name
          - Random
          - Runtime
          - CommunityRating
          - ProductionYear
          - PlayCount
          - CriticRating
          - IsFolder
          - IsUnplayed
          - IsPlayed
          - SeriesSortName
          - VideoBitRate
          - AirTime
          - Studio
          - IsFavoriteOrLiked
          - DateLastContentAdded
          - SeriesDatePlayed
          - ParentIndexNumber
          - IndexNumber
          - SimilarityScore
          - SearchScore
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets episodes for a tv season.
      tags:
      - TvShows
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Shows/{seriesId}/Seasons:
    get:
      operationId: GetSeasons
      parameters:
      - description: The series id.
        explode: false
        in: path
        name: seriesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The user id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimited. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: Optional. Filter by special season.
        explode: true
        in: query
        name: isSpecialSeason
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Filter by items that are missing episodes or not.
        explode: true
        in: query
        name: isMissing
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Return items that are siblings of a supplied item.
        explode: true
        in: query
        name: adjacentTo
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. Include image information in output.
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. The max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      - description: Optional. Include user data.
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets seasons for a tv series.
      tags:
      - TvShows
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Shows/NextUp:
    get:
      operationId: GetNextUp
      parameters:
      - description: The user id of the user to get the next up episodes for.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: Optional. Filter by series id.
        explode: true
        in: query
        name: seriesId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. Specify this to localize the search to a specific item
          or folder. Omit to use the root.
        explode: true
        in: query
        name: parentId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. Include image information in output.
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. The max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      - description: Optional. Include user data.
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Starting date of shows to show in Next Up section.
        explode: true
        in: query
        name: nextUpDateCutoff
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Whether to enable the total records count. Defaults to true.
        explode: true
        in: query
        name: enableTotalRecordCount
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to disable sending the first episode in a series as next
          up.
        explode: true
        in: query
        name: disableFirstEpisode
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Whether to include resumable episodes in next up results.
        explode: true
        in: query
        name: enableResumable
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Whether to include watched episodes in next up results.
        explode: true
        in: query
        name: enableRewatching
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets a list of next up episodes.
      tags:
      - TvShows
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Shows/Upcoming:
    get:
      operationId: GetUpcomingEpisodes
      parameters:
      - description: The user id of the user to get the upcoming episodes for.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: Optional. Specify this to localize the search to a specific item
          or folder. Omit to use the root.
        explode: true
        in: query
        name: parentId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. Include image information in output.
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. The max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      - description: Optional. Include user data.
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Success
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets a list of upcoming episodes.
      tags:
      - TvShows
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Audio/{itemId}/universal:
    get:
      operationId: GetUniversalAudioStream
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Optional. The audio container.
        explode: true
        in: query
        name: container
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "The media version id, if playing an alternate version."
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          type: string
        style: form
      - description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The user id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The audio codec to transcode to.
        explode: true
        in: query
        name: audioCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. The maximum number of audio channels.
        explode: true
        in: query
        name: maxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The number of how many audio channels to transcode
          to.
        explode: true
        in: query
        name: transcodingAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum streaming bitrate.
        explode: true
        in: query
        name: maxStreamingBitrate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: audioBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a starting offset, in ticks. 1 tick = 10000\
          \ ms."
        explode: true
        in: query
        name: startTimeTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Optional. The container to transcode to.
        explode: true
        in: query
        name: transcodingContainer
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. The transcoding protocol.
        explode: true
        in: query
        name: transcodingProtocol
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/MediaStreamProtocol'
          enum:
          - http
          - hls
          type: string
        style: form
      - description: Optional. The maximum audio sample rate.
        explode: true
        in: query
        name: maxAudioSampleRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum audio bit depth.
        explode: true
        in: query
        name: maxAudioBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Whether to enable remote media.
        explode: true
        in: query
        name: enableRemoteMedia
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to enable Audio Encoding.
        explode: true
        in: query
        name: enableAudioVbrEncoding
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Optional. Whether to break on non key frames.
        explode: true
        in: query
        name: breakOnNonKeyFrames
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Whether to enable redirection. Defaults to true.
        explode: true
        in: query
        name: enableRedirection
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            audio/*:
              schema:
                format: binary
                type: string
          description: Audio stream returned.
        "302":
          description: Redirected to remote audio stream.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets an audio stream.
      tags:
      - UniversalAudio
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - audio/*
    head:
      operationId: HeadUniversalAudioStream
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Optional. The audio container.
        explode: true
        in: query
        name: container
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "The media version id, if playing an alternate version."
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          type: string
        style: form
      - description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The user id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. The audio codec to transcode to.
        explode: true
        in: query
        name: audioCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. The maximum number of audio channels.
        explode: true
        in: query
        name: maxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The number of how many audio channels to transcode
          to.
        explode: true
        in: query
        name: transcodingAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum streaming bitrate.
        explode: true
        in: query
        name: maxStreamingBitrate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: audioBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a starting offset, in ticks. 1 tick = 10000\
          \ ms."
        explode: true
        in: query
        name: startTimeTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Optional. The container to transcode to.
        explode: true
        in: query
        name: transcodingContainer
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. The transcoding protocol.
        explode: true
        in: query
        name: transcodingProtocol
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/MediaStreamProtocol'
          enum:
          - http
          - hls
          type: string
        style: form
      - description: Optional. The maximum audio sample rate.
        explode: true
        in: query
        name: maxAudioSampleRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum audio bit depth.
        explode: true
        in: query
        name: maxAudioBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Whether to enable remote media.
        explode: true
        in: query
        name: enableRemoteMedia
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to enable Audio Encoding.
        explode: true
        in: query
        name: enableAudioVbrEncoding
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Optional. Whether to break on non key frames.
        explode: true
        in: query
        name: breakOnNonKeyFrames
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Whether to enable redirection. Defaults to true.
        explode: true
        in: query
        name: enableRedirection
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            audio/*:
              schema:
                format: binary
                type: string
          description: Audio stream returned.
        "302":
          description: Redirected to remote audio stream.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Item not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets an audio stream.
      tags:
      - UniversalAudio
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - audio/*
  /Users:
    get:
      operationId: GetUsers
      parameters:
      - description: Optional filter by IsHidden=true or false.
        explode: true
        in: query
        name: isHidden
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by IsDisabled=true or false.
        explode: true
        in: query
        name: isDisabled
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserDto'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/UserDto'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/UserDto'
                type: array
          description: Users returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets a list of users.
      tags:
      - User
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: UpdateUser
      parameters:
      - description: The user id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UserDto'
              description: Class UserDto.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UserDto'
              description: Class UserDto.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UserDto'
              description: Class UserDto.
        description: The updated user model.
        required: true
      responses:
        "204":
          description: User updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User information was not supplied.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User update forbidden.
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Updates a user.
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Users/{userId}:
    delete:
      operationId: DeleteUser
      parameters:
      - description: The user id.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: User deleted.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Deletes a user.
      tags:
      - User
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    get:
      operationId: GetUserById
      parameters:
      - description: The user id.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/UserDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/UserDto'
          description: User returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - IgnoreParentalControl
        - DefaultAuthorization
      summary: Gets a user by Id.
      tags:
      - User
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Users/{userId}/Policy:
    post:
      operationId: UpdateUserPolicy
      parameters:
      - description: The user id.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UserPolicy'
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UserPolicy'
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UserPolicy'
        description: The new user policy.
        required: true
      responses:
        "204":
          description: User policy updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User policy was not supplied.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User policy update forbidden.
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Updates a user policy.
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Users/AuthenticateByName:
    post:
      operationId: AuthenticateUserByName
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AuthenticateUserByName'
              description: The authenticate user by name request body.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AuthenticateUserByName'
              description: The authenticate user by name request body.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AuthenticateUserByName'
              description: The authenticate user by name request body.
        description: The M:Jellyfin.Api.Controllers.UserController.AuthenticateUserByName(Jellyfin.Api.Models.UserDtos.AuthenticateUserByName)
          request.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/AuthenticationResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/AuthenticationResult'
          description: User authenticated.
      summary: Authenticates a user by name.
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Users/AuthenticateWithQuickConnect:
    post:
      operationId: AuthenticateWithQuickConnect
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/QuickConnectDto'
              description: The quick connect request body.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/QuickConnectDto'
              description: The quick connect request body.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/QuickConnectDto'
              description: The quick connect request body.
        description: The Jellyfin.Api.Models.UserDtos.QuickConnectDto request.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/AuthenticationResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/AuthenticationResult'
          description: User authenticated.
        "400":
          description: Missing token.
      summary: Authenticates a user with quick connect.
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Users/Configuration:
    post:
      operationId: UpdateUserConfiguration
      parameters:
      - description: The user id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UserConfiguration'
              description: Class UserConfiguration.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UserConfiguration'
              description: Class UserConfiguration.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UserConfiguration'
              description: Class UserConfiguration.
        description: The new user configuration.
        required: true
      responses:
        "204":
          description: User configuration updated.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User configuration update forbidden.
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Updates a user configuration.
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Users/ForgotPassword:
    post:
      operationId: ForgotPassword
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ForgotPasswordDto'
              description: Forgot Password request body DTO.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ForgotPasswordDto'
              description: Forgot Password request body DTO.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ForgotPasswordDto'
              description: Forgot Password request body DTO.
        description: The forgot password request containing the entered username.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgotPasswordResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ForgotPasswordResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ForgotPasswordResult'
          description: Password reset process started.
      summary: Initiates the forgot password process for a local user.
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Users/ForgotPassword/Pin:
    post:
      operationId: ForgotPasswordPin
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ForgotPasswordPinDto'
              description: Forgot Password Pin enter request body DTO.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ForgotPasswordPinDto'
              description: Forgot Password Pin enter request body DTO.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ForgotPasswordPinDto'
              description: Forgot Password Pin enter request body DTO.
        description: The forgot password pin request containing the entered pin.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinRedeemResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/PinRedeemResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/PinRedeemResult'
          description: Pin reset process started.
      summary: Redeems a forgot password pin.
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Users/Me:
    get:
      operationId: GetCurrentUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/UserDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/UserDto'
          description: User returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Token is not owned by a user.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets the user based on auth token.
      tags:
      - User
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Users/New:
    post:
      operationId: CreateUserByName
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateUserByName'
              description: The create user by name request body.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateUserByName'
              description: The create user by name request body.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateUserByName'
              description: The create user by name request body.
        description: The create user by name request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/UserDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/UserDto'
          description: User created.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Creates a user.
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Users/Password:
    post:
      operationId: UpdateUserPassword
      parameters:
      - description: The user id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateUserPassword'
              description: The update user password request body.
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateUserPassword'
              description: The update user password request body.
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateUserPassword'
              description: The update user password request body.
        description: "The M:Jellyfin.Api.Controllers.UserController.UpdateUserPassword(System.Nullable{System.Guid},Jellyfin.Api.Models.UserDtos.UpdateUserPassword)\
          \ request."
        required: true
      responses:
        "204":
          description: Password successfully reset.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User is not allowed to update the password.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User not found.
        "401":
          description: Unauthorized
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Updates a user's password.
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Users/Public:
    get:
      operationId: GetPublicUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserDto'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/UserDto'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/UserDto'
                type: array
          description: Public users returned.
      summary: Gets a list of publicly visible users for display on a login screen.
      tags:
      - User
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/{itemId}/Intros:
    get:
      operationId: GetIntros
      parameters:
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Intros returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets intros to play before the main media item plays.
      tags:
      - UserLibrary
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/{itemId}/LocalTrailers:
    get:
      operationId: GetLocalTrailers
      parameters:
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BaseItemDto'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/BaseItemDto'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/BaseItemDto'
                type: array
          description: An Microsoft.AspNetCore.Mvc.OkResult containing the item's
            local trailers.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets local trailers for an item.
      tags:
      - UserLibrary
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/{itemId}/SpecialFeatures:
    get:
      operationId: GetSpecialFeatures
      parameters:
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BaseItemDto'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/BaseItemDto'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/BaseItemDto'
                type: array
          description: Special features returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets special features for an item.
      tags:
      - UserLibrary
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/Latest:
    get:
      operationId: GetLatestMedia
      parameters:
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Specify this to localize the search to a specific item or folder.
          Omit to use the root.
        explode: true
        in: query
        name: parentId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimited."
        explode: true
        in: query
        name: includeItemTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/BaseItemKind'
          type: array
        style: form
      - description: "Filter by items that are played, or not."
        explode: true
        in: query
        name: isPlayed
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. include image information in output.
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. the max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      - description: Optional. include user data.
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: Return item limit.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      - description: Whether or not to group items into a parent container.
        explode: true
        in: query
        name: groupItems
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BaseItemDto'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/BaseItemDto'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/BaseItemDto'
                type: array
          description: Latest media returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets latest media.
      tags:
      - UserLibrary
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Items/Root:
    get:
      operationId: GetRootFolder
      parameters:
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDto'
          description: Root folder returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets the root folder from a user's library.
      tags:
      - UserLibrary
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /UserFavoriteItems/{itemId}:
    delete:
      operationId: UnmarkFavoriteItem
      parameters:
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
          description: Item unmarked as favorite.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Unmarks item as a favorite.
      tags:
      - UserLibrary
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: MarkFavoriteItem
      parameters:
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
          description: Item marked as favorite.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Marks an item as a favorite.
      tags:
      - UserLibrary
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /UserItems/{itemId}/Rating:
    delete:
      operationId: DeleteUserItemRating
      parameters:
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
          description: Personal rating removed.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Deletes a user's saved personal rating for an item.
      tags:
      - UserLibrary
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
    post:
      operationId: UpdateUserItemRating
      parameters:
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Whether this M:Jellyfin.Api.Controllers.UserLibraryController.UpdateUserItemRating(System.Nullable{System.Guid},System.Guid,System.Nullable{System.Boolean})\
          \ is likes."
        explode: true
        in: query
        name: likes
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
          description: Item rating updated.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Updates a user's rating for an item.
      tags:
      - UserLibrary
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /UserViews:
    get:
      operationId: GetUserViews
      parameters:
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Whether or not to include external views such as channels or
          live tv.
        explode: true
        in: query
        name: includeExternalContent
        required: false
        schema:
          type: boolean
        style: form
      - description: Preset views.
        explode: true
        in: query
        name: presetViews
        required: false
        schema:
          items:
            $ref: '#/components/schemas/CollectionType'
          type: array
        style: form
      - description: Whether or not to include hidden content.
        explode: true
        in: query
        name: includeHidden
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: User views returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get user views.
      tags:
      - UserViews
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /UserViews/GroupingOptions:
    get:
      operationId: GetGroupingOptions
      parameters:
      - description: User id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SpecialViewOptionDto'
                type: array
            application/json; profile="CamelCase":
              schema:
                items:
                  $ref: '#/components/schemas/SpecialViewOptionDto'
                type: array
            application/json; profile="PascalCase":
              schema:
                items:
                  $ref: '#/components/schemas/SpecialViewOptionDto'
                type: array
          description: User view grouping options returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: User not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get user view grouping options.
      tags:
      - UserViews
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Videos/{videoId}/{mediaSourceId}/Attachments/{index}:
    get:
      operationId: GetAttachment
      parameters:
      - description: Video ID.
        explode: false
        in: path
        name: videoId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Media Source ID.
        explode: false
        in: path
        name: mediaSourceId
        required: true
        schema:
          type: string
        style: simple
      - description: Attachment Index.
        explode: false
        in: path
        name: index
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Attachment retrieved.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Video or attachment not found.
      summary: Get video attachment.
      tags:
      - VideoAttachments
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
      - application/octet-stream
  /Videos/{itemId}/AdditionalParts:
    get:
      operationId: GetAdditionalPart
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Additional parts returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets additional parts for a video.
      tags:
      - Videos
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Videos/{itemId}/AlternateSources:
    delete:
      operationId: DeleteAlternateSources
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Alternate sources deleted.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Video not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Removes alternate video sources.
      tags:
      - Videos
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Videos/{itemId}/stream:
    get:
      operationId: GetVideoStream
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The video container. Possible values are: ts, webm, asf, wmv,\
          \ ogv, mp4, m4v, mkv, mpeg, mpg, avi, 3gp, wmv, wtv, m2ts, mov, iso, flv."
        explode: true
        in: query
        name: container
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false."
        explode: true
        in: query
        name: static
        required: false
        schema:
          type: boolean
        style: form
      - description: The streaming parameters.
        explode: true
        in: query
        name: params
        required: false
        schema:
          type: string
        style: form
      - description: The tag.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: Optional. The dlna device profile id to utilize.
        explode: true
        in: query
        name: deviceProfileId
        required: false
        schema:
          type: string
        style: form
      - description: The play session id.
        explode: true
        in: query
        name: playSessionId
        required: false
        schema:
          type: string
        style: form
      - description: The segment container.
        explode: true
        in: query
        name: segmentContainer
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: The segment length.
        explode: true
        in: query
        name: segmentLength
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The minimum number of segments.
        explode: true
        in: query
        name: minSegments
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "The media version id, if playing an alternate version."
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          type: string
        style: form
      - description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify an audio codec to encode to, e.g. mp3. If\
          \ omitted the server will auto-select using the url's extension."
        explode: true
        in: query
        name: audioCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        explode: true
        in: query
        name: enableAutoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the video stream url.
        explode: true
        in: query
        name: allowVideoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the audio stream url.
        explode: true
        in: query
        name: allowAudioStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to break on non key frames.
        explode: true
        in: query
        name: breakOnNonKeyFrames
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a specific audio sample rate, e.g. 44100."
        explode: true
        in: query
        name: audioSampleRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum audio bit depth.
        explode: true
        in: query
        name: maxAudioBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: audioBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: audioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: maxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific an encoder profile (varies by encoder),\
          \ e.g. main, baseline, high."
        explode: true
        in: query
        name: profile
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify a level for the encoder profile (varies by\
          \ encoder), e.g. 3, 3.1."
        explode: true
        in: query
        name: level
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. A specific video framerate to encode to, e.g. 23.976.\
          \ Generally this should be omitted unless the device has specific requirements."
        explode: true
        in: query
        name: framerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "Optional. A specific maximum video framerate to encode to, e.g.\
          \ 23.976. Generally this should be omitted unless the device has specific\
          \ requirements."
        explode: true
        in: query
        name: maxFramerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        explode: true
        in: query
        name: copyTimestamps
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a starting offset, in ticks. 1 tick = 10000\
          \ ms."
        explode: true
        in: query
        name: startTimeTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Optional. The fixed horizontal resolution of the encoded video.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The fixed vertical resolution of the encoded video.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum horizontal resolution of the encoded video.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum vertical resolution of the encoded video.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: videoBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        explode: true
        in: query
        name: subtitleStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify the subtitle delivery method.
        explode: true
        in: query
        name: subtitleMethod
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SubtitleDeliveryMethod'
          enum:
          - Encode
          - Embed
          - External
          - Hls
          - Drop
          type: string
        style: form
      - description: Optional.
        explode: true
        in: query
        name: maxRefFrames
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum video bit depth.
        explode: true
        in: query
        name: maxVideoBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Whether to require avc.
        explode: true
        in: query
        name: requireAvc
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to deinterlace the video.
        explode: true
        in: query
        name: deInterlace
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to require a non anamorphic stream.
        explode: true
        in: query
        name: requireNonAnamorphic
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. The maximum number of audio channels to transcode.
        explode: true
        in: query
        name: transcodingMaxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The limit of how many cpu cores to use.
        explode: true
        in: query
        name: cpuCoreLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The live stream id.
        explode: true
        in: query
        name: liveStreamId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Whether to enable the MpegtsM2Ts mode.
        explode: true
        in: query
        name: enableMpegtsM2TsMode
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension."
        explode: true
        in: query
        name: videoCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. Specify a subtitle codec to encode to.
        explode: true
        in: query
        name: subtitleCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. The transcoding reason.
        explode: true
        in: query
        name: transcodeReasons
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        explode: true
        in: query
        name: audioStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        explode: true
        in: query
        name: videoStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
        explode: true
        in: query
        name: context
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/EncodingContext'
          enum:
          - Streaming
          - Static
          type: string
        style: form
      - description: Optional. The streaming options.
        explode: true
        in: query
        name: streamOptions
        required: false
        schema:
          additionalProperties:
            nullable: true
            type: string
          type: object
        style: form
      - description: Optional. Whether to enable Audio Encoding.
        explode: true
        in: query
        name: enableAudioVbrEncoding
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            video/*:
              schema:
                format: binary
                type: string
          description: Video stream returned.
      summary: Gets a video stream.
      tags:
      - Videos
      x-accepts:
      - video/*
    head:
      operationId: HeadVideoStream
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The video container. Possible values are: ts, webm, asf, wmv,\
          \ ogv, mp4, m4v, mkv, mpeg, mpg, avi, 3gp, wmv, wtv, m2ts, mov, iso, flv."
        explode: true
        in: query
        name: container
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false."
        explode: true
        in: query
        name: static
        required: false
        schema:
          type: boolean
        style: form
      - description: The streaming parameters.
        explode: true
        in: query
        name: params
        required: false
        schema:
          type: string
        style: form
      - description: The tag.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: Optional. The dlna device profile id to utilize.
        explode: true
        in: query
        name: deviceProfileId
        required: false
        schema:
          type: string
        style: form
      - description: The play session id.
        explode: true
        in: query
        name: playSessionId
        required: false
        schema:
          type: string
        style: form
      - description: The segment container.
        explode: true
        in: query
        name: segmentContainer
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: The segment length.
        explode: true
        in: query
        name: segmentLength
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The minimum number of segments.
        explode: true
        in: query
        name: minSegments
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "The media version id, if playing an alternate version."
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          type: string
        style: form
      - description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify an audio codec to encode to, e.g. mp3. If\
          \ omitted the server will auto-select using the url's extension."
        explode: true
        in: query
        name: audioCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        explode: true
        in: query
        name: enableAutoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the video stream url.
        explode: true
        in: query
        name: allowVideoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the audio stream url.
        explode: true
        in: query
        name: allowAudioStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to break on non key frames.
        explode: true
        in: query
        name: breakOnNonKeyFrames
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a specific audio sample rate, e.g. 44100."
        explode: true
        in: query
        name: audioSampleRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum audio bit depth.
        explode: true
        in: query
        name: maxAudioBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: audioBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: audioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: maxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific an encoder profile (varies by encoder),\
          \ e.g. main, baseline, high."
        explode: true
        in: query
        name: profile
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify a level for the encoder profile (varies by\
          \ encoder), e.g. 3, 3.1."
        explode: true
        in: query
        name: level
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. A specific video framerate to encode to, e.g. 23.976.\
          \ Generally this should be omitted unless the device has specific requirements."
        explode: true
        in: query
        name: framerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "Optional. A specific maximum video framerate to encode to, e.g.\
          \ 23.976. Generally this should be omitted unless the device has specific\
          \ requirements."
        explode: true
        in: query
        name: maxFramerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        explode: true
        in: query
        name: copyTimestamps
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a starting offset, in ticks. 1 tick = 10000\
          \ ms."
        explode: true
        in: query
        name: startTimeTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Optional. The fixed horizontal resolution of the encoded video.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The fixed vertical resolution of the encoded video.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum horizontal resolution of the encoded video.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum vertical resolution of the encoded video.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: videoBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        explode: true
        in: query
        name: subtitleStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify the subtitle delivery method.
        explode: true
        in: query
        name: subtitleMethod
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SubtitleDeliveryMethod'
          enum:
          - Encode
          - Embed
          - External
          - Hls
          - Drop
          type: string
        style: form
      - description: Optional.
        explode: true
        in: query
        name: maxRefFrames
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum video bit depth.
        explode: true
        in: query
        name: maxVideoBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Whether to require avc.
        explode: true
        in: query
        name: requireAvc
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to deinterlace the video.
        explode: true
        in: query
        name: deInterlace
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to require a non anamorphic stream.
        explode: true
        in: query
        name: requireNonAnamorphic
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. The maximum number of audio channels to transcode.
        explode: true
        in: query
        name: transcodingMaxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The limit of how many cpu cores to use.
        explode: true
        in: query
        name: cpuCoreLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The live stream id.
        explode: true
        in: query
        name: liveStreamId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Whether to enable the MpegtsM2Ts mode.
        explode: true
        in: query
        name: enableMpegtsM2TsMode
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension."
        explode: true
        in: query
        name: videoCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. Specify a subtitle codec to encode to.
        explode: true
        in: query
        name: subtitleCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. The transcoding reason.
        explode: true
        in: query
        name: transcodeReasons
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        explode: true
        in: query
        name: audioStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        explode: true
        in: query
        name: videoStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
        explode: true
        in: query
        name: context
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/EncodingContext'
          enum:
          - Streaming
          - Static
          type: string
        style: form
      - description: Optional. The streaming options.
        explode: true
        in: query
        name: streamOptions
        required: false
        schema:
          additionalProperties:
            nullable: true
            type: string
          type: object
        style: form
      - description: Optional. Whether to enable Audio Encoding.
        explode: true
        in: query
        name: enableAudioVbrEncoding
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            video/*:
              schema:
                format: binary
                type: string
          description: Video stream returned.
      summary: Gets a video stream.
      tags:
      - Videos
      x-accepts:
      - video/*
  /Videos/{itemId}/stream.{container}:
    get:
      operationId: GetVideoStreamByContainer
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The video container. Possible values are: ts, webm, asf, wmv,\
          \ ogv, mp4, m4v, mkv, mpeg, mpg, avi, 3gp, wmv, wtv, m2ts, mov, iso, flv."
        explode: false
        in: path
        name: container
        required: true
        schema:
          type: string
        style: simple
      - description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false."
        explode: true
        in: query
        name: static
        required: false
        schema:
          type: boolean
        style: form
      - description: The streaming parameters.
        explode: true
        in: query
        name: params
        required: false
        schema:
          type: string
        style: form
      - description: The tag.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The dlna device profile id to utilize.
        explode: true
        in: query
        name: deviceProfileId
        required: false
        schema:
          type: string
        style: form
      - description: The play session id.
        explode: true
        in: query
        name: playSessionId
        required: false
        schema:
          type: string
        style: form
      - description: The segment container.
        explode: true
        in: query
        name: segmentContainer
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: The segment length.
        explode: true
        in: query
        name: segmentLength
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The minimum number of segments.
        explode: true
        in: query
        name: minSegments
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "The media version id, if playing an alternate version."
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          type: string
        style: form
      - description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify an audio codec to encode to, e.g. mp3. If\
          \ omitted the server will auto-select using the url's extension."
        explode: true
        in: query
        name: audioCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        explode: true
        in: query
        name: enableAutoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the video stream url.
        explode: true
        in: query
        name: allowVideoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the audio stream url.
        explode: true
        in: query
        name: allowAudioStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to break on non key frames.
        explode: true
        in: query
        name: breakOnNonKeyFrames
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a specific audio sample rate, e.g. 44100."
        explode: true
        in: query
        name: audioSampleRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum audio bit depth.
        explode: true
        in: query
        name: maxAudioBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: audioBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: audioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: maxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific an encoder profile (varies by encoder),\
          \ e.g. main, baseline, high."
        explode: true
        in: query
        name: profile
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify a level for the encoder profile (varies by\
          \ encoder), e.g. 3, 3.1."
        explode: true
        in: query
        name: level
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. A specific video framerate to encode to, e.g. 23.976.\
          \ Generally this should be omitted unless the device has specific requirements."
        explode: true
        in: query
        name: framerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "Optional. A specific maximum video framerate to encode to, e.g.\
          \ 23.976. Generally this should be omitted unless the device has specific\
          \ requirements."
        explode: true
        in: query
        name: maxFramerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        explode: true
        in: query
        name: copyTimestamps
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a starting offset, in ticks. 1 tick = 10000\
          \ ms."
        explode: true
        in: query
        name: startTimeTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Optional. The fixed horizontal resolution of the encoded video.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The fixed vertical resolution of the encoded video.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum horizontal resolution of the encoded video.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum vertical resolution of the encoded video.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: videoBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        explode: true
        in: query
        name: subtitleStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify the subtitle delivery method.
        explode: true
        in: query
        name: subtitleMethod
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SubtitleDeliveryMethod'
          enum:
          - Encode
          - Embed
          - External
          - Hls
          - Drop
          type: string
        style: form
      - description: Optional.
        explode: true
        in: query
        name: maxRefFrames
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum video bit depth.
        explode: true
        in: query
        name: maxVideoBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Whether to require avc.
        explode: true
        in: query
        name: requireAvc
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to deinterlace the video.
        explode: true
        in: query
        name: deInterlace
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to require a non anamorphic stream.
        explode: true
        in: query
        name: requireNonAnamorphic
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. The maximum number of audio channels to transcode.
        explode: true
        in: query
        name: transcodingMaxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The limit of how many cpu cores to use.
        explode: true
        in: query
        name: cpuCoreLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The live stream id.
        explode: true
        in: query
        name: liveStreamId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Whether to enable the MpegtsM2Ts mode.
        explode: true
        in: query
        name: enableMpegtsM2TsMode
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension."
        explode: true
        in: query
        name: videoCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. Specify a subtitle codec to encode to.
        explode: true
        in: query
        name: subtitleCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. The transcoding reason.
        explode: true
        in: query
        name: transcodeReasons
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        explode: true
        in: query
        name: audioStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        explode: true
        in: query
        name: videoStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
        explode: true
        in: query
        name: context
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/EncodingContext'
          enum:
          - Streaming
          - Static
          type: string
        style: form
      - description: Optional. The streaming options.
        explode: true
        in: query
        name: streamOptions
        required: false
        schema:
          additionalProperties:
            nullable: true
            type: string
          type: object
        style: form
      - description: Optional. Whether to enable Audio Encoding.
        explode: true
        in: query
        name: enableAudioVbrEncoding
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            video/*:
              schema:
                format: binary
                type: string
          description: Video stream returned.
      summary: Gets a video stream.
      tags:
      - Videos
      x-accepts:
      - video/*
    head:
      operationId: HeadVideoStreamByContainer
      parameters:
      - description: The item id.
        explode: false
        in: path
        name: itemId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The video container. Possible values are: ts, webm, asf, wmv,\
          \ ogv, mp4, m4v, mkv, mpeg, mpg, avi, 3gp, wmv, wtv, m2ts, mov, iso, flv."
        explode: false
        in: path
        name: container
        required: true
        schema:
          type: string
        style: simple
      - description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false."
        explode: true
        in: query
        name: static
        required: false
        schema:
          type: boolean
        style: form
      - description: The streaming parameters.
        explode: true
        in: query
        name: params
        required: false
        schema:
          type: string
        style: form
      - description: The tag.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The dlna device profile id to utilize.
        explode: true
        in: query
        name: deviceProfileId
        required: false
        schema:
          type: string
        style: form
      - description: The play session id.
        explode: true
        in: query
        name: playSessionId
        required: false
        schema:
          type: string
        style: form
      - description: The segment container.
        explode: true
        in: query
        name: segmentContainer
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: The segment length.
        explode: true
        in: query
        name: segmentLength
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The minimum number of segments.
        explode: true
        in: query
        name: minSegments
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "The media version id, if playing an alternate version."
        explode: true
        in: query
        name: mediaSourceId
        required: false
        schema:
          type: string
        style: form
      - description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        explode: true
        in: query
        name: deviceId
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify an audio codec to encode to, e.g. mp3. If\
          \ omitted the server will auto-select using the url's extension."
        explode: true
        in: query
        name: audioCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        explode: true
        in: query
        name: enableAutoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the video stream url.
        explode: true
        in: query
        name: allowVideoStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether or not to allow copying of the audio stream url.
        explode: true
        in: query
        name: allowAudioStreamCopy
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to break on non key frames.
        explode: true
        in: query
        name: breakOnNonKeyFrames
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a specific audio sample rate, e.g. 44100."
        explode: true
        in: query
        name: audioSampleRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum audio bit depth.
        explode: true
        in: query
        name: maxAudioBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: audioBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: audioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2."
        explode: true
        in: query
        name: maxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a specific an encoder profile (varies by encoder),\
          \ e.g. main, baseline, high."
        explode: true
        in: query
        name: profile
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Specify a level for the encoder profile (varies by\
          \ encoder), e.g. 3, 3.1."
        explode: true
        in: query
        name: level
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. A specific video framerate to encode to, e.g. 23.976.\
          \ Generally this should be omitted unless the device has specific requirements."
        explode: true
        in: query
        name: framerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: "Optional. A specific maximum video framerate to encode to, e.g.\
          \ 23.976. Generally this should be omitted unless the device has specific\
          \ requirements."
        explode: true
        in: query
        name: maxFramerate
        required: false
        schema:
          format: float
          type: number
        style: form
      - description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        explode: true
        in: query
        name: copyTimestamps
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a starting offset, in ticks. 1 tick = 10000\
          \ ms."
        explode: true
        in: query
        name: startTimeTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Optional. The fixed horizontal resolution of the encoded video.
        explode: true
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The fixed vertical resolution of the encoded video.
        explode: true
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum horizontal resolution of the encoded video.
        explode: true
        in: query
        name: maxWidth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum vertical resolution of the encoded video.
        explode: true
        in: query
        name: maxHeight
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        explode: true
        in: query
        name: videoBitRate
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        explode: true
        in: query
        name: subtitleStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Specify the subtitle delivery method.
        explode: true
        in: query
        name: subtitleMethod
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SubtitleDeliveryMethod'
          enum:
          - Encode
          - Embed
          - External
          - Hls
          - Drop
          type: string
        style: form
      - description: Optional.
        explode: true
        in: query
        name: maxRefFrames
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum video bit depth.
        explode: true
        in: query
        name: maxVideoBitDepth
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. Whether to require avc.
        explode: true
        in: query
        name: requireAvc
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to deinterlace the video.
        explode: true
        in: query
        name: deInterlace
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. Whether to require a non anamorphic stream.
        explode: true
        in: query
        name: requireNonAnamorphic
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional. The maximum number of audio channels to transcode.
        explode: true
        in: query
        name: transcodingMaxAudioChannels
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The limit of how many cpu cores to use.
        explode: true
        in: query
        name: cpuCoreLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The live stream id.
        explode: true
        in: query
        name: liveStreamId
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Whether to enable the MpegtsM2Ts mode.
        explode: true
        in: query
        name: enableMpegtsM2TsMode
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension."
        explode: true
        in: query
        name: videoCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. Specify a subtitle codec to encode to.
        explode: true
        in: query
        name: subtitleCodec
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\._,|]{0,40}$"
          type: string
        style: form
      - description: Optional. The transcoding reason.
        explode: true
        in: query
        name: transcodeReasons
        required: false
        schema:
          type: string
        style: form
      - description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        explode: true
        in: query
        name: audioStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        explode: true
        in: query
        name: videoStreamIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The MediaBrowser.Model.Dlna.EncodingContext.
        explode: true
        in: query
        name: context
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/EncodingContext'
          enum:
          - Streaming
          - Static
          type: string
        style: form
      - description: Optional. The streaming options.
        explode: true
        in: query
        name: streamOptions
        required: false
        schema:
          additionalProperties:
            nullable: true
            type: string
          type: object
        style: form
      - description: Optional. Whether to enable Audio Encoding.
        explode: true
        in: query
        name: enableAudioVbrEncoding
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            video/*:
              schema:
                format: binary
                type: string
          description: Video stream returned.
      summary: Gets a video stream.
      tags:
      - Videos
      x-accepts:
      - video/*
  /Videos/MergeVersions:
    post:
      operationId: MergeVersions
      parameters:
      - description: "Item id list. This allows multiple, comma delimited."
        explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            format: uuid
            type: string
          type: array
        style: form
      responses:
        "204":
          description: Videos merged.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Supply at least 2 video ids.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - RequiresElevation
      summary: Merges videos into a single record.
      tags:
      - Videos
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Years:
    get:
      operationId: GetYears
      parameters:
      - description: Skips over a given number of items within the results. Use for
          paging.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The maximum number of records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Sort Order - Ascending,Descending."
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          items:
            $ref: '#/components/schemas/SortOrder'
          type: array
        style: form
      - description: Specify this to localize the search to a specific item or folder.
          Omit to use the root.
        explode: true
        in: query
        name: parentId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Optional. Specify additional fields of information to return
          in the output.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemFields'
          type: array
        style: form
      - description: "Optional. If specified, results will be excluded based on item\
          \ type. This allows multiple, comma delimited."
        explode: true
        in: query
        name: excludeItemTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/BaseItemKind'
          type: array
        style: form
      - description: "Optional. If specified, results will be included based on item\
          \ type. This allows multiple, comma delimited."
        explode: true
        in: query
        name: includeItemTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/BaseItemKind'
          type: array
        style: form
      - description: "Optional. Filter by MediaType. Allows multiple, comma delimited."
        explode: true
        in: query
        name: mediaTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/MediaType'
          type: array
        style: form
      - description: "Optional. Specify one or more sort orders, comma delimited.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemSortBy'
          type: array
        style: form
      - description: Optional. Include user data.
        explode: true
        in: query
        name: enableUserData
        required: false
        schema:
          type: boolean
        style: form
      - description: "Optional. The max number of images to return, per image type."
        explode: true
        in: query
        name: imageTypeLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Optional. The image types to include in the output.
        explode: true
        in: query
        name: enableImageTypes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        style: form
      - description: User Id.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Search recursively.
        explode: true
        in: query
        name: recursive
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Optional. Include image information in output.
        explode: true
        in: query
        name: enableImages
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDtoQueryResult'
          description: Year query returned.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Get years.
      tags:
      - Years
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
  /Years/{year}:
    get:
      operationId: GetYear
      parameters:
      - description: The year.
        explode: false
        in: path
        name: year
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Optional. Filter by user id, and attach user data."
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/BaseItemDto'
          description: Year returned.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="CamelCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; profile="PascalCase":
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Year not found.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - CustomAuthentication:
        - DefaultAuthorization
      summary: Gets a year.
      tags:
      - Years
      x-accepts:
      - application/json
      - application/json; profile="CamelCase"
      - application/json; profile="PascalCase"
components:
  schemas:
    AccessSchedule:
      additionalProperties: false
      description: An entity representing a user's access schedule.
      example:
        DayOfWeek: Sunday
        StartHour: 1.4658129805029452
        UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        EndHour: 5.962133916683182
        Id: 6
      properties:
        Id:
          description: Gets the id of this instance.
          format: int32
          readOnly: true
          type: integer
        UserId:
          description: Gets the id of the associated user.
          format: uuid
          type: string
        DayOfWeek:
          allOf:
          - $ref: '#/components/schemas/DynamicDayOfWeek'
          description: Gets or sets the day of week.
          enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          - Everyday
          - Weekday
          - Weekend
          type: string
        StartHour:
          description: Gets or sets the start hour.
          format: double
          type: number
        EndHour:
          description: Gets or sets the end hour.
          format: double
          type: number
      type: object
    ActivityLogEntry:
      additionalProperties: false
      description: An activity log entry.
      example:
        Type: Type
        UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Overview: Overview
        UserPrimaryImageTag: UserPrimaryImageTag
        Severity: Trace
        Id: 0
        ShortOverview: ShortOverview
        ItemId: ItemId
        Date: 2000-01-23T04:56:07.000+00:00
        Name: Name
      properties:
        Id:
          description: Gets or sets the identifier.
          format: int64
          type: integer
        Name:
          description: Gets or sets the name.
          type: string
        Overview:
          description: Gets or sets the overview.
          nullable: true
          type: string
        ShortOverview:
          description: Gets or sets the short overview.
          nullable: true
          type: string
        Type:
          description: Gets or sets the type.
          type: string
        ItemId:
          description: Gets or sets the item identifier.
          nullable: true
          type: string
        Date:
          description: Gets or sets the date.
          format: date-time
          type: string
        UserId:
          description: Gets or sets the user identifier.
          format: uuid
          type: string
        UserPrimaryImageTag:
          deprecated: true
          description: Gets or sets the user primary image tag.
          nullable: true
          type: string
        Severity:
          allOf:
          - $ref: '#/components/schemas/LogLevel'
          description: Gets or sets the log severity.
          enum:
          - Trace
          - Debug
          - Information
          - Warning
          - Error
          - Critical
          - None
          type: string
      type: object
    ActivityLogEntryMessage:
      additionalProperties: false
      description: Activity log created message.
      properties:
        Data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/ActivityLogEntry'
          nullable: true
          type: array
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: ActivityLogEntry
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    ActivityLogEntryQueryResult:
      additionalProperties: false
      description: Query result container.
      example:
        TotalRecordCount: 6
        StartIndex: 1
        Items:
        - Type: Type
          UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Overview: Overview
          UserPrimaryImageTag: UserPrimaryImageTag
          Severity: Trace
          Id: 0
          ShortOverview: ShortOverview
          ItemId: ItemId
          Date: 2000-01-23T04:56:07.000+00:00
          Name: Name
        - Type: Type
          UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Overview: Overview
          UserPrimaryImageTag: UserPrimaryImageTag
          Severity: Trace
          Id: 0
          ShortOverview: ShortOverview
          ItemId: ItemId
          Date: 2000-01-23T04:56:07.000+00:00
          Name: Name
      properties:
        Items:
          description: Gets or sets the items.
          items:
            $ref: '#/components/schemas/ActivityLogEntry'
          type: array
        TotalRecordCount:
          description: Gets or sets the total number of records available.
          format: int32
          type: integer
        StartIndex:
          description: Gets or sets the index of the first record in Items.
          format: int32
          type: integer
      type: object
    ActivityLogEntryStartMessage:
      additionalProperties: false
      description: "Activity log entry start message.\r\nData is the timing data encoded\
        \ as \"$initialDelay,$interval\" in ms."
      properties:
        Data:
          description: Gets or sets the data.
          nullable: true
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: ActivityLogEntryStart
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    ActivityLogEntryStopMessage:
      additionalProperties: false
      description: Activity log entry stop message.
      properties:
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: ActivityLogEntryStop
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    AddVirtualFolderDto:
      additionalProperties: false
      description: Add virtual folder dto.
      example:
        LibraryOptions: ""
      properties:
        LibraryOptions:
          allOf:
          - $ref: '#/components/schemas/LibraryOptions'
          description: Gets or sets library options.
          nullable: true
      type: object
    AlbumInfo:
      additionalProperties: false
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        OriginalTitle:
          description: Gets or sets the original title.
          nullable: true
          type: string
        Path:
          description: Gets or sets the path.
          nullable: true
          type: string
        MetadataLanguage:
          description: Gets or sets the metadata language.
          nullable: true
          type: string
        MetadataCountryCode:
          description: Gets or sets the metadata country code.
          nullable: true
          type: string
        ProviderIds:
          additionalProperties:
            nullable: true
            type: string
          description: Gets or sets the provider ids.
          nullable: true
          type: object
        Year:
          description: Gets or sets the year.
          format: int32
          nullable: true
          type: integer
        IndexNumber:
          format: int32
          nullable: true
          type: integer
        ParentIndexNumber:
          format: int32
          nullable: true
          type: integer
        PremiereDate:
          format: date-time
          nullable: true
          type: string
        IsAutomated:
          type: boolean
        AlbumArtists:
          description: Gets or sets the album artist.
          items:
            type: string
          type: array
        ArtistProviderIds:
          additionalProperties:
            nullable: true
            type: string
          description: Gets or sets the artist provider ids.
          type: object
        SongInfos:
          items:
            $ref: '#/components/schemas/SongInfo'
          type: array
      type: object
    AlbumInfoRemoteSearchQuery:
      additionalProperties: false
      example:
        SearchInfo: ""
        IncludeDisabledProviders: true
        SearchProviderName: SearchProviderName
        ItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        SearchInfo:
          allOf:
          - $ref: '#/components/schemas/AlbumInfo'
          nullable: true
        ItemId:
          format: uuid
          type: string
        SearchProviderName:
          description: Gets or sets the provider name to search within if set.
          nullable: true
          type: string
        IncludeDisabledProviders:
          description: Gets or sets a value indicating whether disabled providers
            should be included.
          type: boolean
      type: object
    AllThemeMediaResult:
      additionalProperties: false
      example:
        ThemeVideosResult: ""
        SoundtrackSongsResult: ""
        ThemeSongsResult: ""
      properties:
        ThemeVideosResult:
          allOf:
          - $ref: '#/components/schemas/ThemeMediaResult'
          description: Class ThemeMediaResult.
          nullable: true
        ThemeSongsResult:
          allOf:
          - $ref: '#/components/schemas/ThemeMediaResult'
          description: Class ThemeMediaResult.
          nullable: true
        SoundtrackSongsResult:
          allOf:
          - $ref: '#/components/schemas/ThemeMediaResult'
          description: Class ThemeMediaResult.
          nullable: true
      type: object
    ArtistInfo:
      additionalProperties: false
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        OriginalTitle:
          description: Gets or sets the original title.
          nullable: true
          type: string
        Path:
          description: Gets or sets the path.
          nullable: true
          type: string
        MetadataLanguage:
          description: Gets or sets the metadata language.
          nullable: true
          type: string
        MetadataCountryCode:
          description: Gets or sets the metadata country code.
          nullable: true
          type: string
        ProviderIds:
          additionalProperties:
            nullable: true
            type: string
          description: Gets or sets the provider ids.
          nullable: true
          type: object
        Year:
          description: Gets or sets the year.
          format: int32
          nullable: true
          type: integer
        IndexNumber:
          format: int32
          nullable: true
          type: integer
        ParentIndexNumber:
          format: int32
          nullable: true
          type: integer
        PremiereDate:
          format: date-time
          nullable: true
          type: string
        IsAutomated:
          type: boolean
        SongInfos:
          items:
            $ref: '#/components/schemas/SongInfo'
          type: array
      type: object
    ArtistInfoRemoteSearchQuery:
      additionalProperties: false
      example:
        SearchInfo: ""
        IncludeDisabledProviders: true
        SearchProviderName: SearchProviderName
        ItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        SearchInfo:
          allOf:
          - $ref: '#/components/schemas/ArtistInfo'
          nullable: true
        ItemId:
          format: uuid
          type: string
        SearchProviderName:
          description: Gets or sets the provider name to search within if set.
          nullable: true
          type: string
        IncludeDisabledProviders:
          description: Gets or sets a value indicating whether disabled providers
            should be included.
          type: boolean
      type: object
    AudioSpatialFormat:
      description: An enum representing formats of spatial audio.
      enum:
      - None
      - DolbyAtmos
      - DTSX
      type: string
    AuthenticateUserByName:
      additionalProperties: false
      description: The authenticate user by name request body.
      example:
        Username: Username
        Pw: Pw
      properties:
        Username:
          description: Gets or sets the username.
          nullable: true
          type: string
        Pw:
          description: Gets or sets the plain text password.
          nullable: true
          type: string
      type: object
    AuthenticationInfo:
      additionalProperties: false
      example:
        AppVersion: AppVersion
        UserName: UserName
        AccessToken: AccessToken
        DeviceId: DeviceId
        UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        IsActive: true
        DateRevoked: 2000-01-23T04:56:07.000+00:00
        DateCreated: 2000-01-23T04:56:07.000+00:00
        Id: 0
        DateLastActivity: 2000-01-23T04:56:07.000+00:00
        AppName: AppName
        DeviceName: DeviceName
      properties:
        Id:
          description: Gets or sets the identifier.
          format: int64
          type: integer
        AccessToken:
          description: Gets or sets the access token.
          nullable: true
          type: string
        DeviceId:
          description: Gets or sets the device identifier.
          nullable: true
          type: string
        AppName:
          description: Gets or sets the name of the application.
          nullable: true
          type: string
        AppVersion:
          description: Gets or sets the application version.
          nullable: true
          type: string
        DeviceName:
          description: Gets or sets the name of the device.
          nullable: true
          type: string
        UserId:
          description: Gets or sets the user identifier.
          format: uuid
          type: string
        IsActive:
          description: Gets or sets a value indicating whether this instance is active.
          type: boolean
        DateCreated:
          description: Gets or sets the date created.
          format: date-time
          type: string
        DateRevoked:
          description: Gets or sets the date revoked.
          format: date-time
          nullable: true
          type: string
        DateLastActivity:
          format: date-time
          type: string
        UserName:
          nullable: true
          type: string
      type: object
    AuthenticationInfoQueryResult:
      additionalProperties: false
      description: Query result container.
      example:
        TotalRecordCount: 6
        StartIndex: 1
        Items:
        - AppVersion: AppVersion
          UserName: UserName
          AccessToken: AccessToken
          DeviceId: DeviceId
          UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          IsActive: true
          DateRevoked: 2000-01-23T04:56:07.000+00:00
          DateCreated: 2000-01-23T04:56:07.000+00:00
          Id: 0
          DateLastActivity: 2000-01-23T04:56:07.000+00:00
          AppName: AppName
          DeviceName: DeviceName
        - AppVersion: AppVersion
          UserName: UserName
          AccessToken: AccessToken
          DeviceId: DeviceId
          UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          IsActive: true
          DateRevoked: 2000-01-23T04:56:07.000+00:00
          DateCreated: 2000-01-23T04:56:07.000+00:00
          Id: 0
          DateLastActivity: 2000-01-23T04:56:07.000+00:00
          AppName: AppName
          DeviceName: DeviceName
      properties:
        Items:
          description: Gets or sets the items.
          items:
            $ref: '#/components/schemas/AuthenticationInfo'
          type: array
        TotalRecordCount:
          description: Gets or sets the total number of records available.
          format: int32
          type: integer
        StartIndex:
          description: Gets or sets the index of the first record in Items.
          format: int32
          type: integer
      type: object
    AuthenticationResult:
      additionalProperties: false
      description: A class representing an authentication result.
      example:
        User: ""
        ServerId: ServerId
        AccessToken: AccessToken
        SessionInfo: ""
      properties:
        User:
          allOf:
          - $ref: '#/components/schemas/UserDto'
          description: Gets or sets the user.
          nullable: true
        SessionInfo:
          allOf:
          - $ref: '#/components/schemas/SessionInfoDto'
          description: Gets or sets the session info.
          nullable: true
        AccessToken:
          description: Gets or sets the access token.
          nullable: true
          type: string
        ServerId:
          description: Gets or sets the server id.
          nullable: true
          type: string
      type: object
    BaseItemDto:
      additionalProperties: false
      description: "This is strictly used as a data transfer object from the api layer.\r\
        \nThis holds information about a BaseItem in a format that is convenient for\
        \ the client."
      example:
        SeasonName: SeasonName
        PremiereDate: 2000-01-23T04:56:07.000+00:00
        CriticRating: 3.0937452
        AirTime: AirTime
        Studios:
        - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: Name
        - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: Name
        CameraMake: CameraMake
        Aperture: 6.623518433804886
        ChannelPrimaryImageTag: ChannelPrimaryImageTag
        ExtraType: Unknown
        ParentBackdropItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Etag: Etag
        ParentLogoImageTag: ParentLogoImageTag
        ExposureTime: 1.7325933120207193
        IsoType: Dvd
        MediaType: Unknown
        NormalizationGain: 8.761433
        Tags:
        - Tags
        - Tags
        ImageBlurHashes:
          Art:
            key: Art
          Banner:
            key: Banner
          Thumb:
            key: Thumb
          Chapter:
            key: Chapter
          BoxRear:
            key: BoxRear
          Box:
            key: Box
          Profile:
            key: Profile
          Logo:
            key: Logo
          Disc:
            key: Disc
          Primary:
            key: Primary
          Screenshot:
            key: Screenshot
          Backdrop:
            key: Backdrop
          Menu:
            key: Menu
        Status: Status
        IndexNumberEnd: 4
        ArtistItems:
        - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: Name
        - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: Name
        MediaSources:
        - EncoderPath: EncoderPath
          RequiredHttpHeaders:
            key: RequiredHttpHeaders
          RunTimeTicks: 5
          MediaStreams:
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          Size: 5
          Video3DFormat: HalfSideBySide
          BufferMs: 2
          Timestamp: None
          Name: Name
          RequiresOpening: true
          FallbackMaxStreamingBitrate: 6
          SupportsDirectStream: true
          VideoType: VideoFile
          RequiresClosing: true
          Container: Container
          IsoType: Dvd
          HasSegments: true
          LiveStreamId: LiveStreamId
          RequiresLooping: true
          Protocol: File
          DefaultSubtitleStreamIndex: 3
          GenPtsInput: true
          IsInfiniteStream: true
          Path: Path
          IsRemote: true
          EncoderProtocol: File
          IgnoreIndex: true
          SupportsDirectPlay: true
          TranscodingSubProtocol: http
          Formats:
          - Formats
          - Formats
          AnalyzeDurationMs: 5
          Bitrate: 6
          OpenToken: OpenToken
          SupportsProbing: true
          Type: Default
          MediaAttachments:
          - CodecTag: CodecTag
            Comment: Comment
            DeliveryUrl: DeliveryUrl
            Codec: Codec
            FileName: FileName
            Index: 2
            MimeType: MimeType
          - CodecTag: CodecTag
            Comment: Comment
            DeliveryUrl: DeliveryUrl
            Codec: Codec
            FileName: FileName
            Index: 2
            MimeType: MimeType
          ReadAtNativeFramerate: true
          ETag: ETag
          TranscodingContainer: TranscodingContainer
          IgnoreDts: true
          UseMostCompatibleTranscodingProfile: false
          TranscodingUrl: TranscodingUrl
          Id: Id
          SupportsTranscoding: true
          DefaultAudioStreamIndex: 6
        - EncoderPath: EncoderPath
          RequiredHttpHeaders:
            key: RequiredHttpHeaders
          RunTimeTicks: 5
          MediaStreams:
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          Size: 5
          Video3DFormat: HalfSideBySide
          BufferMs: 2
          Timestamp: None
          Name: Name
          RequiresOpening: true
          FallbackMaxStreamingBitrate: 6
          SupportsDirectStream: true
          VideoType: VideoFile
          RequiresClosing: true
          Container: Container
          IsoType: Dvd
          HasSegments: true
          LiveStreamId: LiveStreamId
          RequiresLooping: true
          Protocol: File
          DefaultSubtitleStreamIndex: 3
          GenPtsInput: true
          IsInfiniteStream: true
          Path: Path
          IsRemote: true
          EncoderProtocol: File
          IgnoreIndex: true
          SupportsDirectPlay: true
          TranscodingSubProtocol: http
          Formats:
          - Formats
          - Formats
          AnalyzeDurationMs: 5
          Bitrate: 6
          OpenToken: OpenToken
          SupportsProbing: true
          Type: Default
          MediaAttachments:
          - CodecTag: CodecTag
            Comment: Comment
            DeliveryUrl: DeliveryUrl
            Codec: Codec
            FileName: FileName
            Index: 2
            MimeType: MimeType
          - CodecTag: CodecTag
            Comment: Comment
            DeliveryUrl: DeliveryUrl
            Codec: Codec
            FileName: FileName
            Index: 2
            MimeType: MimeType
          ReadAtNativeFramerate: true
          ETag: ETag
          TranscodingContainer: TranscodingContainer
          IgnoreDts: true
          UseMostCompatibleTranscodingProfile: false
          TranscodingUrl: TranscodingUrl
          Id: Id
          SupportsTranscoding: true
          DefaultAudioStreamIndex: 6
        GenreItems:
        - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: Name
        - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: Name
        OfficialRating: OfficialRating
        ProgramCount: 5
        ProgramId: ProgramId
        Longitude: 9.254183946267839
        LockData: true
        FocalLength: 8.28965939814297
        IsNews: true
        ShutterSpeed: 4.573936264232251
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        IsFolder: true
        SeriesTimerId: SeriesTimerId
        SeriesId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        MediaStreams:
        - VideoRange: Unknown
          ColorSpace: ColorSpace
          LocalizedHearingImpaired: LocalizedHearingImpaired
          Index: 3
          BitDepth: 7
          SupportsExternalStream: true
          DvLevel: 2
          ReferenceFrameRate: 6.4384236
          Codec: Codec
          SampleRate: 9
          IsAnamorphic: true
          PixelFormat: PixelFormat
          RefFrames: 1
          IsAVC: true
          ColorTransfer: ColorTransfer
          RpuPresentFlag: 4
          LocalizedForced: LocalizedForced
          VideoRangeType: Unknown
          IsExternalUrl: true
          ElPresentFlag: 7
          DisplayTitle: DisplayTitle
          IsForced: true
          ChannelLayout: ChannelLayout
          DvProfile: 3
          AverageFrameRate: 8.762042
          Score: 6
          IsExternal: true
          AudioSpatialFormat: None
          LocalizedDefault: LocalizedDefault
          Level: 1.284659006116532
          CodecTimeBase: CodecTimeBase
          LocalizedUndefined: LocalizedUndefined
          DvBlSignalCompatibilityId: 1
          ColorRange: ColorRange
          Channels: 5
          Profile: Profile
          DeliveryUrl: DeliveryUrl
          ColorPrimaries: ColorPrimaries
          Language: Language
          IsTextSubtitleStream: true
          NalLengthSize: NalLengthSize
          Height: 9
          Width: 6
          TimeBase: TimeBase
          CodecTag: CodecTag
          IsDefault: true
          Path: Path
          Comment: Comment
          VideoDoViTitle: VideoDoViTitle
          DeliveryMethod: Encode
          DvVersionMajor: 7
          BlPresentFlag: 1
          PacketLength: 4
          Title: Title
          Rotation: 1
          RealFrameRate: 9.018348
          IsHearingImpaired: true
          AspectRatio: AspectRatio
          Type: Audio
          DvVersionMinor: 9
          IsInterlaced: true
          LocalizedExternal: LocalizedExternal
          BitRate: 6
        - VideoRange: Unknown
          ColorSpace: ColorSpace
          LocalizedHearingImpaired: LocalizedHearingImpaired
          Index: 3
          BitDepth: 7
          SupportsExternalStream: true
          DvLevel: 2
          ReferenceFrameRate: 6.4384236
          Codec: Codec
          SampleRate: 9
          IsAnamorphic: true
          PixelFormat: PixelFormat
          RefFrames: 1
          IsAVC: true
          ColorTransfer: ColorTransfer
          RpuPresentFlag: 4
          LocalizedForced: LocalizedForced
          VideoRangeType: Unknown
          IsExternalUrl: true
          ElPresentFlag: 7
          DisplayTitle: DisplayTitle
          IsForced: true
          ChannelLayout: ChannelLayout
          DvProfile: 3
          AverageFrameRate: 8.762042
          Score: 6
          IsExternal: true
          AudioSpatialFormat: None
          LocalizedDefault: LocalizedDefault
          Level: 1.284659006116532
          CodecTimeBase: CodecTimeBase
          LocalizedUndefined: LocalizedUndefined
          DvBlSignalCompatibilityId: 1
          ColorRange: ColorRange
          Channels: 5
          Profile: Profile
          DeliveryUrl: DeliveryUrl
          ColorPrimaries: ColorPrimaries
          Language: Language
          IsTextSubtitleStream: true
          NalLengthSize: NalLengthSize
          Height: 9
          Width: 6
          TimeBase: TimeBase
          CodecTag: CodecTag
          IsDefault: true
          Path: Path
          Comment: Comment
          VideoDoViTitle: VideoDoViTitle
          DeliveryMethod: Encode
          DvVersionMajor: 7
          BlPresentFlag: 1
          PacketLength: 4
          Title: Title
          Rotation: 1
          RealFrameRate: 9.018348
          IsHearingImpaired: true
          AspectRatio: AspectRatio
          Type: Audio
          DvVersionMinor: 9
          IsInterlaced: true
          LocalizedExternal: LocalizedExternal
          BitRate: 6
        IsPlaceHolder: true
        CanDownload: true
        SeriesCount: 7
        IsMovie: true
        DateLastMediaAdded: 2000-01-23T04:56:07.000+00:00
        ParentArtImageTag: ParentArtImageTag
        PlayAccess: Full
        SeriesStudio: SeriesStudio
        IsLive: true
        Width: 0
        ExternalUrls:
        - Url: Url
          Name: Name
        - Url: Url
          Name: Name
        RecursiveItemCount: 3
        Path: Path
        ParentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        MusicVideoCount: 3
        ScreenshotImageTags:
        - ScreenshotImageTags
        - ScreenshotImageTags
        EpisodeCount: 4
        IsSeries: true
        ProductionLocations:
        - ProductionLocations
        - ProductionLocations
        ParentPrimaryImageItemId: ParentPrimaryImageItemId
        EndDate: 2000-01-23T04:56:07.000+00:00
        SeriesPrimaryImageTag: SeriesPrimaryImageTag
        ParentThumbItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        PreferredMetadataLanguage: PreferredMetadataLanguage
        Type: AggregateFolder
        BackdropImageTags:
        - BackdropImageTags
        - BackdropImageTags
        ParentBackdropImageTags:
        - ParentBackdropImageTags
        - ParentBackdropImageTags
        AirsBeforeEpisodeNumber: 1
        ChildCount: 3
        Audio: Mono
        Artists:
        - Artists
        - Artists
        ChannelType: TV
        HasLyrics: true
        RunTimeTicks: 7
        AlbumPrimaryImageTag: AlbumPrimaryImageTag
        Video3DFormat: HalfSideBySide
        CumulativeRunTimeTicks: 0
        SourceType: SourceType
        CanDelete: true
        PlaylistItemId: PlaylistItemId
        DisplayPreferencesId: DisplayPreferencesId
        Album: Album
        Latitude: 8.863729185622827
        SortName: SortName
        ArtistCount: 4
        Name: Name
        StartDate: 2000-01-23T04:56:07.000+00:00
        Container: Container
        ProductionYear: 6
        SeriesName: SeriesName
        ParentArtItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        AlbumId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        LocalTrailerCount: 7
        IndexNumber: 0
        CompletionPercentage: 9.183123594773994
        Genres:
        - Genres
        - Genres
        SeasonId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        LockedFields:
        - Cast
        - Cast
        ParentPrimaryImageTag: ParentPrimaryImageTag
        ProviderIds:
          key: ProviderIds
        RemoteTrailers:
        - Url: Url
          Name: Name
        - Url: Url
          Name: Name
        MediaSourceCount: 4
        CustomRating: CustomRating
        AirsAfterSeasonNumber: 6
        AirDays:
        - Sunday
        - Sunday
        ParentLogoItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        PartCount: 3
        ChannelName: ChannelName
        EpisodeTitle: EpisodeTitle
        IsoSpeedRating: 3
        CommunityRating: 7.143538
        Software: Software
        Chapters:
        - StartPositionTicks: 0
          ImageTag: ImageTag
          ImageDateModified: 2000-01-23T04:56:07.000+00:00
          ImagePath: ImagePath
          Name: Name
        - StartPositionTicks: 0
          ImageTag: ImageTag
          ImageDateModified: 2000-01-23T04:56:07.000+00:00
          ImagePath: ImagePath
          Name: Name
        SongCount: 6
        Taglines:
        - Taglines
        - Taglines
        AirsBeforeSeasonNumber: 0
        PreferredMetadataCountryCode: PreferredMetadataCountryCode
        CameraModel: CameraModel
        ChannelNumber: ChannelNumber
        UserData: ""
        TimerId: TimerId
        DateCreated: 2000-01-23T04:56:07.000+00:00
        HasSubtitles: true
        ParentThumbImageTag: ParentThumbImageTag
        IsSports: true
        ChannelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ParentIndexNumber: 8
        VideoType: VideoFile
        AlbumArtists:
        - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: Name
        - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: Name
        ServerId: ServerId
        Number: Number
        AlbumCount: 8
        IsRepeat: true
        CollectionType: unknown
        Trickplay:
          key:
            key:
              ThumbnailCount: 7
              Bandwidth: 0
              TileHeight: 4
              Height: 4
              Width: 6
              TileWidth: 1
              Interval: 9
        PrimaryImageAspectRatio: 5.533258397034986
        Height: 2
        IsKids: true
        DisplayOrder: DisplayOrder
        IsHD: true
        EnableMediaSourceDisplay: true
        SeriesThumbImageTag: SeriesThumbImageTag
        MovieCount: 0
        People:
        - Role: Role
          Type: Unknown
          PrimaryImageTag: PrimaryImageTag
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: Name
          ImageBlurHashes:
            Art:
              key: Art
            Banner:
              key: Banner
            Thumb:
              key: Thumb
            Chapter:
              key: Chapter
            BoxRear:
              key: BoxRear
            Box:
              key: Box
            Profile:
              key: Profile
            Logo:
              key: Logo
            Disc:
              key: Disc
            Primary:
              key: Primary
            Screenshot:
              key: Screenshot
            Backdrop:
              key: Backdrop
            Menu:
              key: Menu
        - Role: Role
          Type: Unknown
          PrimaryImageTag: PrimaryImageTag
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: Name
          ImageBlurHashes:
            Art:
              key: Art
            Banner:
              key: Banner
            Thumb:
              key: Thumb
            Chapter:
              key: Chapter
            BoxRear:
              key: BoxRear
            Box:
              key: Box
            Profile:
              key: Profile
            Logo:
              key: Logo
            Disc:
              key: Disc
            Primary:
              key: Primary
            Screenshot:
              key: Screenshot
            Backdrop:
              key: Backdrop
            Menu:
              key: Menu
        Overview: Overview
        SpecialFeatureCount: 7
        ImageOrientation: TopLeft
        AlbumArtist: AlbumArtist
        ImageTags:
          key: ImageTags
        AspectRatio: AspectRatio
        TrailerCount: 9
        OriginalTitle: OriginalTitle
        ForcedSortName: ForcedSortName
        CurrentProgram: ""
        LocationType: FileSystem
        IsPremiere: true
        Altitude: 1.8268702177058116
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        OriginalTitle:
          nullable: true
          type: string
        ServerId:
          description: Gets or sets the server identifier.
          nullable: true
          type: string
        Id:
          description: Gets or sets the id.
          format: uuid
          type: string
        Etag:
          description: Gets or sets the etag.
          nullable: true
          type: string
        SourceType:
          description: Gets or sets the type of the source.
          nullable: true
          type: string
        PlaylistItemId:
          description: Gets or sets the playlist item identifier.
          nullable: true
          type: string
        DateCreated:
          description: Gets or sets the date created.
          format: date-time
          nullable: true
          type: string
        DateLastMediaAdded:
          format: date-time
          nullable: true
          type: string
        ExtraType:
          allOf:
          - $ref: '#/components/schemas/ExtraType'
          enum:
          - Unknown
          - Clip
          - Trailer
          - BehindTheScenes
          - DeletedScene
          - Interview
          - Scene
          - Sample
          - ThemeSong
          - ThemeVideo
          - Featurette
          - Short
          nullable: true
          type: string
        AirsBeforeSeasonNumber:
          format: int32
          nullable: true
          type: integer
        AirsAfterSeasonNumber:
          format: int32
          nullable: true
          type: integer
        AirsBeforeEpisodeNumber:
          format: int32
          nullable: true
          type: integer
        CanDelete:
          nullable: true
          type: boolean
        CanDownload:
          nullable: true
          type: boolean
        HasLyrics:
          nullable: true
          type: boolean
        HasSubtitles:
          nullable: true
          type: boolean
        PreferredMetadataLanguage:
          nullable: true
          type: string
        PreferredMetadataCountryCode:
          nullable: true
          type: string
        Container:
          nullable: true
          type: string
        SortName:
          description: Gets or sets the name of the sort.
          nullable: true
          type: string
        ForcedSortName:
          nullable: true
          type: string
        Video3DFormat:
          allOf:
          - $ref: '#/components/schemas/Video3DFormat'
          description: Gets or sets the video3 D format.
          enum:
          - HalfSideBySide
          - FullSideBySide
          - FullTopAndBottom
          - HalfTopAndBottom
          - MVC
          nullable: true
          type: string
        PremiereDate:
          description: Gets or sets the premiere date.
          format: date-time
          nullable: true
          type: string
        ExternalUrls:
          description: Gets or sets the external urls.
          items:
            $ref: '#/components/schemas/ExternalUrl'
          nullable: true
          type: array
        MediaSources:
          description: Gets or sets the media versions.
          items:
            $ref: '#/components/schemas/MediaSourceInfo'
          nullable: true
          type: array
        CriticRating:
          description: Gets or sets the critic rating.
          format: float
          nullable: true
          type: number
        ProductionLocations:
          items:
            type: string
          nullable: true
          type: array
        Path:
          description: Gets or sets the path.
          nullable: true
          type: string
        EnableMediaSourceDisplay:
          nullable: true
          type: boolean
        OfficialRating:
          description: Gets or sets the official rating.
          nullable: true
          type: string
        CustomRating:
          description: Gets or sets the custom rating.
          nullable: true
          type: string
        ChannelId:
          description: Gets or sets the channel identifier.
          format: uuid
          nullable: true
          type: string
        ChannelName:
          nullable: true
          type: string
        Overview:
          description: Gets or sets the overview.
          nullable: true
          type: string
        Taglines:
          description: Gets or sets the taglines.
          items:
            type: string
          nullable: true
          type: array
        Genres:
          description: Gets or sets the genres.
          items:
            type: string
          nullable: true
          type: array
        CommunityRating:
          description: Gets or sets the community rating.
          format: float
          nullable: true
          type: number
        CumulativeRunTimeTicks:
          description: Gets or sets the cumulative run time ticks.
          format: int64
          nullable: true
          type: integer
        RunTimeTicks:
          description: Gets or sets the run time ticks.
          format: int64
          nullable: true
          type: integer
        PlayAccess:
          allOf:
          - $ref: '#/components/schemas/PlayAccess'
          description: Gets or sets the play access.
          enum:
          - Full
          - None
          nullable: true
          type: string
        AspectRatio:
          description: Gets or sets the aspect ratio.
          nullable: true
          type: string
        ProductionYear:
          description: Gets or sets the production year.
          format: int32
          nullable: true
          type: integer
        IsPlaceHolder:
          description: Gets or sets a value indicating whether this instance is place
            holder.
          nullable: true
          type: boolean
        Number:
          description: Gets or sets the number.
          nullable: true
          type: string
        ChannelNumber:
          nullable: true
          type: string
        IndexNumber:
          description: Gets or sets the index number.
          format: int32
          nullable: true
          type: integer
        IndexNumberEnd:
          description: Gets or sets the index number end.
          format: int32
          nullable: true
          type: integer
        ParentIndexNumber:
          description: Gets or sets the parent index number.
          format: int32
          nullable: true
          type: integer
        RemoteTrailers:
          description: Gets or sets the trailer urls.
          items:
            $ref: '#/components/schemas/MediaUrl'
          nullable: true
          type: array
        ProviderIds:
          additionalProperties:
            nullable: true
            type: string
          description: Gets or sets the provider ids.
          nullable: true
          type: object
        IsHD:
          description: Gets or sets a value indicating whether this instance is HD.
          nullable: true
          type: boolean
        IsFolder:
          description: Gets or sets a value indicating whether this instance is folder.
          nullable: true
          type: boolean
        ParentId:
          description: Gets or sets the parent id.
          format: uuid
          nullable: true
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/BaseItemKind'
          description: The base item kind.
          enum:
          - AggregateFolder
          - Audio
          - AudioBook
          - BasePluginFolder
          - Book
          - BoxSet
          - Channel
          - ChannelFolderItem
          - CollectionFolder
          - Episode
          - Folder
          - Genre
          - ManualPlaylistsFolder
          - Movie
          - LiveTvChannel
          - LiveTvProgram
          - MusicAlbum
          - MusicArtist
          - MusicGenre
          - MusicVideo
          - Person
          - Photo
          - PhotoAlbum
          - Playlist
          - PlaylistsFolder
          - Program
          - Recording
          - Season
          - Series
          - Studio
          - Trailer
          - TvChannel
          - TvProgram
          - UserRootFolder
          - UserView
          - Video
          - Year
          type: string
        People:
          description: Gets or sets the people.
          items:
            $ref: '#/components/schemas/BaseItemPerson'
          nullable: true
          type: array
        Studios:
          description: Gets or sets the studios.
          items:
            $ref: '#/components/schemas/NameGuidPair'
          nullable: true
          type: array
        GenreItems:
          items:
            $ref: '#/components/schemas/NameGuidPair'
          nullable: true
          type: array
        ParentLogoItemId:
          description: "Gets or sets whether the item has a logo, this will hold the\
            \ Id of the Parent that has one."
          format: uuid
          nullable: true
          type: string
        ParentBackdropItemId:
          description: "Gets or sets whether the item has any backdrops, this will\
            \ hold the Id of the Parent that has one."
          format: uuid
          nullable: true
          type: string
        ParentBackdropImageTags:
          description: Gets or sets the parent backdrop image tags.
          items:
            type: string
          nullable: true
          type: array
        LocalTrailerCount:
          description: Gets or sets the local trailer count.
          format: int32
          nullable: true
          type: integer
        UserData:
          allOf:
          - $ref: '#/components/schemas/UserItemDataDto'
          description: Gets or sets the user data for this item based on the user
            it's being requested for.
          nullable: true
        RecursiveItemCount:
          description: Gets or sets the recursive item count.
          format: int32
          nullable: true
          type: integer
        ChildCount:
          description: Gets or sets the child count.
          format: int32
          nullable: true
          type: integer
        SeriesName:
          description: Gets or sets the name of the series.
          nullable: true
          type: string
        SeriesId:
          description: Gets or sets the series id.
          format: uuid
          nullable: true
          type: string
        SeasonId:
          description: Gets or sets the season identifier.
          format: uuid
          nullable: true
          type: string
        SpecialFeatureCount:
          description: Gets or sets the special feature count.
          format: int32
          nullable: true
          type: integer
        DisplayPreferencesId:
          description: Gets or sets the display preferences id.
          nullable: true
          type: string
        Status:
          description: Gets or sets the status.
          nullable: true
          type: string
        AirTime:
          description: Gets or sets the air time.
          nullable: true
          type: string
        AirDays:
          description: Gets or sets the air days.
          items:
            $ref: '#/components/schemas/DayOfWeek'
          nullable: true
          type: array
        Tags:
          description: Gets or sets the tags.
          items:
            type: string
          nullable: true
          type: array
        PrimaryImageAspectRatio:
          description: "Gets or sets the primary image aspect ratio, after image enhancements."
          format: double
          nullable: true
          type: number
        Artists:
          description: Gets or sets the artists.
          items:
            type: string
          nullable: true
          type: array
        ArtistItems:
          description: Gets or sets the artist items.
          items:
            $ref: '#/components/schemas/NameGuidPair'
          nullable: true
          type: array
        Album:
          description: Gets or sets the album.
          nullable: true
          type: string
        CollectionType:
          allOf:
          - $ref: '#/components/schemas/CollectionType'
          description: Gets or sets the type of the collection.
          enum:
          - unknown
          - movies
          - tvshows
          - music
          - musicvideos
          - trailers
          - homevideos
          - boxsets
          - books
          - photos
          - livetv
          - playlists
          - folders
          nullable: true
          type: string
        DisplayOrder:
          description: Gets or sets the display order.
          nullable: true
          type: string
        AlbumId:
          description: Gets or sets the album id.
          format: uuid
          nullable: true
          type: string
        AlbumPrimaryImageTag:
          description: Gets or sets the album image tag.
          nullable: true
          type: string
        SeriesPrimaryImageTag:
          description: Gets or sets the series primary image tag.
          nullable: true
          type: string
        AlbumArtist:
          description: Gets or sets the album artist.
          nullable: true
          type: string
        AlbumArtists:
          description: Gets or sets the album artists.
          items:
            $ref: '#/components/schemas/NameGuidPair'
          nullable: true
          type: array
        SeasonName:
          description: Gets or sets the name of the season.
          nullable: true
          type: string
        MediaStreams:
          description: Gets or sets the media streams.
          items:
            $ref: '#/components/schemas/MediaStream'
          nullable: true
          type: array
        VideoType:
          allOf:
          - $ref: '#/components/schemas/VideoType'
          description: Gets or sets the type of the video.
          enum:
          - VideoFile
          - Iso
          - Dvd
          - BluRay
          nullable: true
          type: string
        PartCount:
          description: Gets or sets the part count.
          format: int32
          nullable: true
          type: integer
        MediaSourceCount:
          format: int32
          nullable: true
          type: integer
        ImageTags:
          additionalProperties:
            type: string
          description: Gets or sets the image tags.
          nullable: true
          type: object
        BackdropImageTags:
          description: Gets or sets the backdrop image tags.
          items:
            type: string
          nullable: true
          type: array
        ScreenshotImageTags:
          description: Gets or sets the screenshot image tags.
          items:
            type: string
          nullable: true
          type: array
        ParentLogoImageTag:
          description: Gets or sets the parent logo image tag.
          nullable: true
          type: string
        ParentArtItemId:
          description: "Gets or sets whether the item has fan art, this will hold\
            \ the Id of the Parent that has one."
          format: uuid
          nullable: true
          type: string
        ParentArtImageTag:
          description: Gets or sets the parent art image tag.
          nullable: true
          type: string
        SeriesThumbImageTag:
          description: Gets or sets the series thumb image tag.
          nullable: true
          type: string
        ImageBlurHashes:
          $ref: '#/components/schemas/BaseItemDto_ImageBlurHashes'
        SeriesStudio:
          description: Gets or sets the series studio.
          nullable: true
          type: string
        ParentThumbItemId:
          description: Gets or sets the parent thumb item id.
          format: uuid
          nullable: true
          type: string
        ParentThumbImageTag:
          description: Gets or sets the parent thumb image tag.
          nullable: true
          type: string
        ParentPrimaryImageItemId:
          description: Gets or sets the parent primary image item identifier.
          nullable: true
          type: string
        ParentPrimaryImageTag:
          description: Gets or sets the parent primary image tag.
          nullable: true
          type: string
        Chapters:
          description: Gets or sets the chapters.
          items:
            $ref: '#/components/schemas/ChapterInfo'
          nullable: true
          type: array
        Trickplay:
          additionalProperties:
            additionalProperties:
              $ref: '#/components/schemas/TrickplayInfo'
            type: object
          description: Gets or sets the trickplay manifest.
          nullable: true
          type: object
        LocationType:
          allOf:
          - $ref: '#/components/schemas/LocationType'
          description: Gets or sets the type of the location.
          enum:
          - FileSystem
          - Remote
          - Virtual
          - Offline
          nullable: true
          type: string
        IsoType:
          allOf:
          - $ref: '#/components/schemas/IsoType'
          description: Gets or sets the type of the iso.
          enum:
          - Dvd
          - BluRay
          nullable: true
          type: string
        MediaType:
          allOf:
          - $ref: '#/components/schemas/MediaType'
          description: Media types.
          enum:
          - Unknown
          - Video
          - Audio
          - Photo
          - Book
          type: string
        EndDate:
          description: Gets or sets the end date.
          format: date-time
          nullable: true
          type: string
        LockedFields:
          description: Gets or sets the locked fields.
          items:
            $ref: '#/components/schemas/MetadataField'
          nullable: true
          type: array
        TrailerCount:
          description: Gets or sets the trailer count.
          format: int32
          nullable: true
          type: integer
        MovieCount:
          description: Gets or sets the movie count.
          format: int32
          nullable: true
          type: integer
        SeriesCount:
          description: Gets or sets the series count.
          format: int32
          nullable: true
          type: integer
        ProgramCount:
          format: int32
          nullable: true
          type: integer
        EpisodeCount:
          description: Gets or sets the episode count.
          format: int32
          nullable: true
          type: integer
        SongCount:
          description: Gets or sets the song count.
          format: int32
          nullable: true
          type: integer
        AlbumCount:
          description: Gets or sets the album count.
          format: int32
          nullable: true
          type: integer
        ArtistCount:
          format: int32
          nullable: true
          type: integer
        MusicVideoCount:
          description: Gets or sets the music video count.
          format: int32
          nullable: true
          type: integer
        LockData:
          description: "Gets or sets a value indicating whether [enable internet providers]."
          nullable: true
          type: boolean
        Width:
          format: int32
          nullable: true
          type: integer
        Height:
          format: int32
          nullable: true
          type: integer
        CameraMake:
          nullable: true
          type: string
        CameraModel:
          nullable: true
          type: string
        Software:
          nullable: true
          type: string
        ExposureTime:
          format: double
          nullable: true
          type: number
        FocalLength:
          format: double
          nullable: true
          type: number
        ImageOrientation:
          allOf:
          - $ref: '#/components/schemas/ImageOrientation'
          enum:
          - TopLeft
          - TopRight
          - BottomRight
          - BottomLeft
          - LeftTop
          - RightTop
          - RightBottom
          - LeftBottom
          nullable: true
          type: string
        Aperture:
          format: double
          nullable: true
          type: number
        ShutterSpeed:
          format: double
          nullable: true
          type: number
        Latitude:
          format: double
          nullable: true
          type: number
        Longitude:
          format: double
          nullable: true
          type: number
        Altitude:
          format: double
          nullable: true
          type: number
        IsoSpeedRating:
          format: int32
          nullable: true
          type: integer
        SeriesTimerId:
          description: Gets or sets the series timer identifier.
          nullable: true
          type: string
        ProgramId:
          description: Gets or sets the program identifier.
          nullable: true
          type: string
        ChannelPrimaryImageTag:
          description: Gets or sets the channel primary image tag.
          nullable: true
          type: string
        StartDate:
          description: "Gets or sets the start date of the recording, in UTC."
          format: date-time
          nullable: true
          type: string
        CompletionPercentage:
          description: Gets or sets the completion percentage.
          format: double
          nullable: true
          type: number
        IsRepeat:
          description: Gets or sets a value indicating whether this instance is repeat.
          nullable: true
          type: boolean
        EpisodeTitle:
          description: Gets or sets the episode title.
          nullable: true
          type: string
        ChannelType:
          allOf:
          - $ref: '#/components/schemas/ChannelType'
          description: Gets or sets the type of the channel.
          enum:
          - TV
          - Radio
          nullable: true
          type: string
        Audio:
          allOf:
          - $ref: '#/components/schemas/ProgramAudio'
          description: Gets or sets the audio.
          enum:
          - Mono
          - Stereo
          - Dolby
          - DolbyDigital
          - Thx
          - Atmos
          nullable: true
          type: string
        IsMovie:
          description: Gets or sets a value indicating whether this instance is movie.
          nullable: true
          type: boolean
        IsSports:
          description: Gets or sets a value indicating whether this instance is sports.
          nullable: true
          type: boolean
        IsSeries:
          description: Gets or sets a value indicating whether this instance is series.
          nullable: true
          type: boolean
        IsLive:
          description: Gets or sets a value indicating whether this instance is live.
          nullable: true
          type: boolean
        IsNews:
          description: Gets or sets a value indicating whether this instance is news.
          nullable: true
          type: boolean
        IsKids:
          description: Gets or sets a value indicating whether this instance is kids.
          nullable: true
          type: boolean
        IsPremiere:
          description: Gets or sets a value indicating whether this instance is premiere.
          nullable: true
          type: boolean
        TimerId:
          description: Gets or sets the timer identifier.
          nullable: true
          type: string
        NormalizationGain:
          description: Gets or sets the gain required for audio normalization.
          format: float
          nullable: true
          type: number
        CurrentProgram:
          allOf:
          - $ref: '#/components/schemas/BaseItemDto'
          description: Gets or sets the current program.
          nullable: true
      type: object
    BaseItemDtoQueryResult:
      additionalProperties: false
      description: Query result container.
      example:
        TotalRecordCount: 0
        StartIndex: 5
        Items:
        - SeasonName: SeasonName
          PremiereDate: 2000-01-23T04:56:07.000+00:00
          CriticRating: 3.0937452
          AirTime: AirTime
          Studios:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          CameraMake: CameraMake
          Aperture: 6.623518433804886
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          ExtraType: Unknown
          ParentBackdropItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Etag: Etag
          ParentLogoImageTag: ParentLogoImageTag
          ExposureTime: 1.7325933120207193
          IsoType: Dvd
          MediaType: Unknown
          NormalizationGain: 8.761433
          Tags:
          - Tags
          - Tags
          ImageBlurHashes:
            Art:
              key: Art
            Banner:
              key: Banner
            Thumb:
              key: Thumb
            Chapter:
              key: Chapter
            BoxRear:
              key: BoxRear
            Box:
              key: Box
            Profile:
              key: Profile
            Logo:
              key: Logo
            Disc:
              key: Disc
            Primary:
              key: Primary
            Screenshot:
              key: Screenshot
            Backdrop:
              key: Backdrop
            Menu:
              key: Menu
          Status: Status
          IndexNumberEnd: 4
          ArtistItems:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          MediaSources:
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            MediaStreams:
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            Size: 5
            Video3DFormat: HalfSideBySide
            BufferMs: 2
            Timestamp: None
            Name: Name
            RequiresOpening: true
            FallbackMaxStreamingBitrate: 6
            SupportsDirectStream: true
            VideoType: VideoFile
            RequiresClosing: true
            Container: Container
            IsoType: Dvd
            HasSegments: true
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            DefaultSubtitleStreamIndex: 3
            GenPtsInput: true
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: File
            IgnoreIndex: true
            SupportsDirectPlay: true
            TranscodingSubProtocol: http
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 5
            Bitrate: 6
            OpenToken: OpenToken
            SupportsProbing: true
            Type: Default
            MediaAttachments:
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            ReadAtNativeFramerate: true
            ETag: ETag
            TranscodingContainer: TranscodingContainer
            IgnoreDts: true
            UseMostCompatibleTranscodingProfile: false
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 6
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            MediaStreams:
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            Size: 5
            Video3DFormat: HalfSideBySide
            BufferMs: 2
            Timestamp: None
            Name: Name
            RequiresOpening: true
            FallbackMaxStreamingBitrate: 6
            SupportsDirectStream: true
            VideoType: VideoFile
            RequiresClosing: true
            Container: Container
            IsoType: Dvd
            HasSegments: true
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            DefaultSubtitleStreamIndex: 3
            GenPtsInput: true
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: File
            IgnoreIndex: true
            SupportsDirectPlay: true
            TranscodingSubProtocol: http
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 5
            Bitrate: 6
            OpenToken: OpenToken
            SupportsProbing: true
            Type: Default
            MediaAttachments:
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            ReadAtNativeFramerate: true
            ETag: ETag
            TranscodingContainer: TranscodingContainer
            IgnoreDts: true
            UseMostCompatibleTranscodingProfile: false
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 6
          GenreItems:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          OfficialRating: OfficialRating
          ProgramCount: 5
          ProgramId: ProgramId
          Longitude: 9.254183946267839
          LockData: true
          FocalLength: 8.28965939814297
          IsNews: true
          ShutterSpeed: 4.573936264232251
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          IsFolder: true
          SeriesTimerId: SeriesTimerId
          SeriesId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          MediaStreams:
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          IsPlaceHolder: true
          CanDownload: true
          SeriesCount: 7
          IsMovie: true
          DateLastMediaAdded: 2000-01-23T04:56:07.000+00:00
          ParentArtImageTag: ParentArtImageTag
          PlayAccess: Full
          SeriesStudio: SeriesStudio
          IsLive: true
          Width: 0
          ExternalUrls:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          RecursiveItemCount: 3
          Path: Path
          ParentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          MusicVideoCount: 3
          ScreenshotImageTags:
          - ScreenshotImageTags
          - ScreenshotImageTags
          EpisodeCount: 4
          IsSeries: true
          ProductionLocations:
          - ProductionLocations
          - ProductionLocations
          ParentPrimaryImageItemId: ParentPrimaryImageItemId
          EndDate: 2000-01-23T04:56:07.000+00:00
          SeriesPrimaryImageTag: SeriesPrimaryImageTag
          ParentThumbItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          PreferredMetadataLanguage: PreferredMetadataLanguage
          Type: AggregateFolder
          BackdropImageTags:
          - BackdropImageTags
          - BackdropImageTags
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          AirsBeforeEpisodeNumber: 1
          ChildCount: 3
          Audio: Mono
          Artists:
          - Artists
          - Artists
          ChannelType: TV
          HasLyrics: true
          RunTimeTicks: 7
          AlbumPrimaryImageTag: AlbumPrimaryImageTag
          Video3DFormat: HalfSideBySide
          CumulativeRunTimeTicks: 0
          SourceType: SourceType
          CanDelete: true
          PlaylistItemId: PlaylistItemId
          DisplayPreferencesId: DisplayPreferencesId
          Album: Album
          Latitude: 8.863729185622827
          SortName: SortName
          ArtistCount: 4
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          Container: Container
          ProductionYear: 6
          SeriesName: SeriesName
          ParentArtItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          AlbumId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          LocalTrailerCount: 7
          IndexNumber: 0
          CompletionPercentage: 9.183123594773994
          Genres:
          - Genres
          - Genres
          SeasonId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          LockedFields:
          - Cast
          - Cast
          ParentPrimaryImageTag: ParentPrimaryImageTag
          ProviderIds:
            key: ProviderIds
          RemoteTrailers:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          MediaSourceCount: 4
          CustomRating: CustomRating
          AirsAfterSeasonNumber: 6
          AirDays:
          - Sunday
          - Sunday
          ParentLogoItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          PartCount: 3
          ChannelName: ChannelName
          EpisodeTitle: EpisodeTitle
          IsoSpeedRating: 3
          CommunityRating: 7.143538
          Software: Software
          Chapters:
          - StartPositionTicks: 0
            ImageTag: ImageTag
            ImageDateModified: 2000-01-23T04:56:07.000+00:00
            ImagePath: ImagePath
            Name: Name
          - StartPositionTicks: 0
            ImageTag: ImageTag
            ImageDateModified: 2000-01-23T04:56:07.000+00:00
            ImagePath: ImagePath
            Name: Name
          SongCount: 6
          Taglines:
          - Taglines
          - Taglines
          AirsBeforeSeasonNumber: 0
          PreferredMetadataCountryCode: PreferredMetadataCountryCode
          CameraModel: CameraModel
          ChannelNumber: ChannelNumber
          UserData: ""
          TimerId: TimerId
          DateCreated: 2000-01-23T04:56:07.000+00:00
          HasSubtitles: true
          ParentThumbImageTag: ParentThumbImageTag
          IsSports: true
          ChannelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ParentIndexNumber: 8
          VideoType: VideoFile
          AlbumArtists:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          ServerId: ServerId
          Number: Number
          AlbumCount: 8
          IsRepeat: true
          CollectionType: unknown
          Trickplay:
            key:
              key:
                ThumbnailCount: 7
                Bandwidth: 0
                TileHeight: 4
                Height: 4
                Width: 6
                TileWidth: 1
                Interval: 9
          PrimaryImageAspectRatio: 5.533258397034986
          Height: 2
          IsKids: true
          DisplayOrder: DisplayOrder
          IsHD: true
          EnableMediaSourceDisplay: true
          SeriesThumbImageTag: SeriesThumbImageTag
          MovieCount: 0
          People:
          - Role: Role
            Type: Unknown
            PrimaryImageTag: PrimaryImageTag
            Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
            ImageBlurHashes:
              Art:
                key: Art
              Banner:
                key: Banner
              Thumb:
                key: Thumb
              Chapter:
                key: Chapter
              BoxRear:
                key: BoxRear
              Box:
                key: Box
              Profile:
                key: Profile
              Logo:
                key: Logo
              Disc:
                key: Disc
              Primary:
                key: Primary
              Screenshot:
                key: Screenshot
              Backdrop:
                key: Backdrop
              Menu:
                key: Menu
          - Role: Role
            Type: Unknown
            PrimaryImageTag: PrimaryImageTag
            Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
            ImageBlurHashes:
              Art:
                key: Art
              Banner:
                key: Banner
              Thumb:
                key: Thumb
              Chapter:
                key: Chapter
              BoxRear:
                key: BoxRear
              Box:
                key: Box
              Profile:
                key: Profile
              Logo:
                key: Logo
              Disc:
                key: Disc
              Primary:
                key: Primary
              Screenshot:
                key: Screenshot
              Backdrop:
                key: Backdrop
              Menu:
                key: Menu
          Overview: Overview
          SpecialFeatureCount: 7
          ImageOrientation: TopLeft
          AlbumArtist: AlbumArtist
          ImageTags:
            key: ImageTags
          AspectRatio: AspectRatio
          TrailerCount: 9
          OriginalTitle: OriginalTitle
          ForcedSortName: ForcedSortName
          CurrentProgram: ""
          LocationType: FileSystem
          IsPremiere: true
          Altitude: 1.8268702177058116
        - SeasonName: SeasonName
          PremiereDate: 2000-01-23T04:56:07.000+00:00
          CriticRating: 3.0937452
          AirTime: AirTime
          Studios:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          CameraMake: CameraMake
          Aperture: 6.623518433804886
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          ExtraType: Unknown
          ParentBackdropItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Etag: Etag
          ParentLogoImageTag: ParentLogoImageTag
          ExposureTime: 1.7325933120207193
          IsoType: Dvd
          MediaType: Unknown
          NormalizationGain: 8.761433
          Tags:
          - Tags
          - Tags
          ImageBlurHashes:
            Art:
              key: Art
            Banner:
              key: Banner
            Thumb:
              key: Thumb
            Chapter:
              key: Chapter
            BoxRear:
              key: BoxRear
            Box:
              key: Box
            Profile:
              key: Profile
            Logo:
              key: Logo
            Disc:
              key: Disc
            Primary:
              key: Primary
            Screenshot:
              key: Screenshot
            Backdrop:
              key: Backdrop
            Menu:
              key: Menu
          Status: Status
          IndexNumberEnd: 4
          ArtistItems:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          MediaSources:
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            MediaStreams:
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            Size: 5
            Video3DFormat: HalfSideBySide
            BufferMs: 2
            Timestamp: None
            Name: Name
            RequiresOpening: true
            FallbackMaxStreamingBitrate: 6
            SupportsDirectStream: true
            VideoType: VideoFile
            RequiresClosing: true
            Container: Container
            IsoType: Dvd
            HasSegments: true
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            DefaultSubtitleStreamIndex: 3
            GenPtsInput: true
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: File
            IgnoreIndex: true
            SupportsDirectPlay: true
            TranscodingSubProtocol: http
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 5
            Bitrate: 6
            OpenToken: OpenToken
            SupportsProbing: true
            Type: Default
            MediaAttachments:
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            ReadAtNativeFramerate: true
            ETag: ETag
            TranscodingContainer: TranscodingContainer
            IgnoreDts: true
            UseMostCompatibleTranscodingProfile: false
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 6
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            MediaStreams:
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            Size: 5
            Video3DFormat: HalfSideBySide
            BufferMs: 2
            Timestamp: None
            Name: Name
            RequiresOpening: true
            FallbackMaxStreamingBitrate: 6
            SupportsDirectStream: true
            VideoType: VideoFile
            RequiresClosing: true
            Container: Container
            IsoType: Dvd
            HasSegments: true
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            DefaultSubtitleStreamIndex: 3
            GenPtsInput: true
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: File
            IgnoreIndex: true
            SupportsDirectPlay: true
            TranscodingSubProtocol: http
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 5
            Bitrate: 6
            OpenToken: OpenToken
            SupportsProbing: true
            Type: Default
            MediaAttachments:
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            ReadAtNativeFramerate: true
            ETag: ETag
            TranscodingContainer: TranscodingContainer
            IgnoreDts: true
            UseMostCompatibleTranscodingProfile: false
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 6
          GenreItems:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          OfficialRating: OfficialRating
          ProgramCount: 5
          ProgramId: ProgramId
          Longitude: 9.254183946267839
          LockData: true
          FocalLength: 8.28965939814297
          IsNews: true
          ShutterSpeed: 4.573936264232251
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          IsFolder: true
          SeriesTimerId: SeriesTimerId
          SeriesId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          MediaStreams:
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          IsPlaceHolder: true
          CanDownload: true
          SeriesCount: 7
          IsMovie: true
          DateLastMediaAdded: 2000-01-23T04:56:07.000+00:00
          ParentArtImageTag: ParentArtImageTag
          PlayAccess: Full
          SeriesStudio: SeriesStudio
          IsLive: true
          Width: 0
          ExternalUrls:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          RecursiveItemCount: 3
          Path: Path
          ParentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          MusicVideoCount: 3
          ScreenshotImageTags:
          - ScreenshotImageTags
          - ScreenshotImageTags
          EpisodeCount: 4
          IsSeries: true
          ProductionLocations:
          - ProductionLocations
          - ProductionLocations
          ParentPrimaryImageItemId: ParentPrimaryImageItemId
          EndDate: 2000-01-23T04:56:07.000+00:00
          SeriesPrimaryImageTag: SeriesPrimaryImageTag
          ParentThumbItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          PreferredMetadataLanguage: PreferredMetadataLanguage
          Type: AggregateFolder
          BackdropImageTags:
          - BackdropImageTags
          - BackdropImageTags
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          AirsBeforeEpisodeNumber: 1
          ChildCount: 3
          Audio: Mono
          Artists:
          - Artists
          - Artists
          ChannelType: TV
          HasLyrics: true
          RunTimeTicks: 7
          AlbumPrimaryImageTag: AlbumPrimaryImageTag
          Video3DFormat: HalfSideBySide
          CumulativeRunTimeTicks: 0
          SourceType: SourceType
          CanDelete: true
          PlaylistItemId: PlaylistItemId
          DisplayPreferencesId: DisplayPreferencesId
          Album: Album
          Latitude: 8.863729185622827
          SortName: SortName
          ArtistCount: 4
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          Container: Container
          ProductionYear: 6
          SeriesName: SeriesName
          ParentArtItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          AlbumId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          LocalTrailerCount: 7
          IndexNumber: 0
          CompletionPercentage: 9.183123594773994
          Genres:
          - Genres
          - Genres
          SeasonId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          LockedFields:
          - Cast
          - Cast
          ParentPrimaryImageTag: ParentPrimaryImageTag
          ProviderIds:
            key: ProviderIds
          RemoteTrailers:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          MediaSourceCount: 4
          CustomRating: CustomRating
          AirsAfterSeasonNumber: 6
          AirDays:
          - Sunday
          - Sunday
          ParentLogoItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          PartCount: 3
          ChannelName: ChannelName
          EpisodeTitle: EpisodeTitle
          IsoSpeedRating: 3
          CommunityRating: 7.143538
          Software: Software
          Chapters:
          - StartPositionTicks: 0
            ImageTag: ImageTag
            ImageDateModified: 2000-01-23T04:56:07.000+00:00
            ImagePath: ImagePath
            Name: Name
          - StartPositionTicks: 0
            ImageTag: ImageTag
            ImageDateModified: 2000-01-23T04:56:07.000+00:00
            ImagePath: ImagePath
            Name: Name
          SongCount: 6
          Taglines:
          - Taglines
          - Taglines
          AirsBeforeSeasonNumber: 0
          PreferredMetadataCountryCode: PreferredMetadataCountryCode
          CameraModel: CameraModel
          ChannelNumber: ChannelNumber
          UserData: ""
          TimerId: TimerId
          DateCreated: 2000-01-23T04:56:07.000+00:00
          HasSubtitles: true
          ParentThumbImageTag: ParentThumbImageTag
          IsSports: true
          ChannelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ParentIndexNumber: 8
          VideoType: VideoFile
          AlbumArtists:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          ServerId: ServerId
          Number: Number
          AlbumCount: 8
          IsRepeat: true
          CollectionType: unknown
          Trickplay:
            key:
              key:
                ThumbnailCount: 7
                Bandwidth: 0
                TileHeight: 4
                Height: 4
                Width: 6
                TileWidth: 1
                Interval: 9
          PrimaryImageAspectRatio: 5.533258397034986
          Height: 2
          IsKids: true
          DisplayOrder: DisplayOrder
          IsHD: true
          EnableMediaSourceDisplay: true
          SeriesThumbImageTag: SeriesThumbImageTag
          MovieCount: 0
          People:
          - Role: Role
            Type: Unknown
            PrimaryImageTag: PrimaryImageTag
            Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
            ImageBlurHashes:
              Art:
                key: Art
              Banner:
                key: Banner
              Thumb:
                key: Thumb
              Chapter:
                key: Chapter
              BoxRear:
                key: BoxRear
              Box:
                key: Box
              Profile:
                key: Profile
              Logo:
                key: Logo
              Disc:
                key: Disc
              Primary:
                key: Primary
              Screenshot:
                key: Screenshot
              Backdrop:
                key: Backdrop
              Menu:
                key: Menu
          - Role: Role
            Type: Unknown
            PrimaryImageTag: PrimaryImageTag
            Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
            ImageBlurHashes:
              Art:
                key: Art
              Banner:
                key: Banner
              Thumb:
                key: Thumb
              Chapter:
                key: Chapter
              BoxRear:
                key: BoxRear
              Box:
                key: Box
              Profile:
                key: Profile
              Logo:
                key: Logo
              Disc:
                key: Disc
              Primary:
                key: Primary
              Screenshot:
                key: Screenshot
              Backdrop:
                key: Backdrop
              Menu:
                key: Menu
          Overview: Overview
          SpecialFeatureCount: 7
          ImageOrientation: TopLeft
          AlbumArtist: AlbumArtist
          ImageTags:
            key: ImageTags
          AspectRatio: AspectRatio
          TrailerCount: 9
          OriginalTitle: OriginalTitle
          ForcedSortName: ForcedSortName
          CurrentProgram: ""
          LocationType: FileSystem
          IsPremiere: true
          Altitude: 1.8268702177058116
      properties:
        Items:
          description: Gets or sets the items.
          items:
            $ref: '#/components/schemas/BaseItemDto'
          type: array
        TotalRecordCount:
          description: Gets or sets the total number of records available.
          format: int32
          type: integer
        StartIndex:
          description: Gets or sets the index of the first record in Items.
          format: int32
          type: integer
      type: object
    BaseItemKind:
      description: The base item kind.
      enum:
      - AggregateFolder
      - Audio
      - AudioBook
      - BasePluginFolder
      - Book
      - BoxSet
      - Channel
      - ChannelFolderItem
      - CollectionFolder
      - Episode
      - Folder
      - Genre
      - ManualPlaylistsFolder
      - Movie
      - LiveTvChannel
      - LiveTvProgram
      - MusicAlbum
      - MusicArtist
      - MusicGenre
      - MusicVideo
      - Person
      - Photo
      - PhotoAlbum
      - Playlist
      - PlaylistsFolder
      - Program
      - Recording
      - Season
      - Series
      - Studio
      - Trailer
      - TvChannel
      - TvProgram
      - UserRootFolder
      - UserView
      - Video
      - Year
      type: string
    BaseItemPerson:
      additionalProperties: false
      description: This is used by the api to get information about a Person within
        a BaseItem.
      example:
        Role: Role
        Type: Unknown
        PrimaryImageTag: PrimaryImageTag
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Name: Name
        ImageBlurHashes:
          Art:
            key: Art
          Banner:
            key: Banner
          Thumb:
            key: Thumb
          Chapter:
            key: Chapter
          BoxRear:
            key: BoxRear
          Box:
            key: Box
          Profile:
            key: Profile
          Logo:
            key: Logo
          Disc:
            key: Disc
          Primary:
            key: Primary
          Screenshot:
            key: Screenshot
          Backdrop:
            key: Backdrop
          Menu:
            key: Menu
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        Id:
          description: Gets or sets the identifier.
          format: uuid
          type: string
        Role:
          description: Gets or sets the role.
          nullable: true
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/PersonKind'
          description: The person kind.
          enum:
          - Unknown
          - Actor
          - Director
          - Composer
          - Writer
          - GuestStar
          - Producer
          - Conductor
          - Lyricist
          - Arranger
          - Engineer
          - Mixer
          - Remixer
          - Creator
          - Artist
          - AlbumArtist
          - Author
          - Illustrator
          - Penciller
          - Inker
          - Colorist
          - Letterer
          - CoverArtist
          - Editor
          - Translator
          type: string
        PrimaryImageTag:
          description: Gets or sets the primary image tag.
          nullable: true
          type: string
        ImageBlurHashes:
          $ref: '#/components/schemas/BaseItemPerson_ImageBlurHashes'
      type: object
    BasePluginConfiguration:
      additionalProperties: false
      description: Class BasePluginConfiguration.
      type: object
    BookInfo:
      additionalProperties: false
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        OriginalTitle:
          description: Gets or sets the original title.
          nullable: true
          type: string
        Path:
          description: Gets or sets the path.
          nullable: true
          type: string
        MetadataLanguage:
          description: Gets or sets the metadata language.
          nullable: true
          type: string
        MetadataCountryCode:
          description: Gets or sets the metadata country code.
          nullable: true
          type: string
        ProviderIds:
          additionalProperties:
            nullable: true
            type: string
          description: Gets or sets the provider ids.
          nullable: true
          type: object
        Year:
          description: Gets or sets the year.
          format: int32
          nullable: true
          type: integer
        IndexNumber:
          format: int32
          nullable: true
          type: integer
        ParentIndexNumber:
          format: int32
          nullable: true
          type: integer
        PremiereDate:
          format: date-time
          nullable: true
          type: string
        IsAutomated:
          type: boolean
        SeriesName:
          nullable: true
          type: string
      type: object
    BookInfoRemoteSearchQuery:
      additionalProperties: false
      example:
        SearchInfo: ""
        IncludeDisabledProviders: true
        SearchProviderName: SearchProviderName
        ItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        SearchInfo:
          allOf:
          - $ref: '#/components/schemas/BookInfo'
          nullable: true
        ItemId:
          format: uuid
          type: string
        SearchProviderName:
          description: Gets or sets the provider name to search within if set.
          nullable: true
          type: string
        IncludeDisabledProviders:
          description: Gets or sets a value indicating whether disabled providers
            should be included.
          type: boolean
      type: object
    BoxSetInfo:
      additionalProperties: false
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        OriginalTitle:
          description: Gets or sets the original title.
          nullable: true
          type: string
        Path:
          description: Gets or sets the path.
          nullable: true
          type: string
        MetadataLanguage:
          description: Gets or sets the metadata language.
          nullable: true
          type: string
        MetadataCountryCode:
          description: Gets or sets the metadata country code.
          nullable: true
          type: string
        ProviderIds:
          additionalProperties:
            nullable: true
            type: string
          description: Gets or sets the provider ids.
          nullable: true
          type: object
        Year:
          description: Gets or sets the year.
          format: int32
          nullable: true
          type: integer
        IndexNumber:
          format: int32
          nullable: true
          type: integer
        ParentIndexNumber:
          format: int32
          nullable: true
          type: integer
        PremiereDate:
          format: date-time
          nullable: true
          type: string
        IsAutomated:
          type: boolean
      type: object
    BoxSetInfoRemoteSearchQuery:
      additionalProperties: false
      example:
        SearchInfo: ""
        IncludeDisabledProviders: true
        SearchProviderName: SearchProviderName
        ItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        SearchInfo:
          allOf:
          - $ref: '#/components/schemas/BoxSetInfo'
          nullable: true
        ItemId:
          format: uuid
          type: string
        SearchProviderName:
          description: Gets or sets the provider name to search within if set.
          nullable: true
          type: string
        IncludeDisabledProviders:
          description: Gets or sets a value indicating whether disabled providers
            should be included.
          type: boolean
      type: object
    BrandingOptions:
      additionalProperties: false
      description: The branding options.
      example:
        CustomCss: CustomCss
        LoginDisclaimer: LoginDisclaimer
        SplashscreenEnabled: true
      properties:
        LoginDisclaimer:
          description: Gets or sets the login disclaimer.
          nullable: true
          type: string
        CustomCss:
          description: Gets or sets the custom CSS.
          nullable: true
          type: string
        SplashscreenEnabled:
          description: Gets or sets a value indicating whether to enable the splashscreen.
          type: boolean
      type: object
    BufferRequestDto:
      additionalProperties: false
      description: Class BufferRequestDto.
      example:
        When: 2000-01-23T04:56:07.000+00:00
        PositionTicks: 0
        PlaylistItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        IsPlaying: true
      properties:
        When:
          description: Gets or sets when the request has been made by the client.
          format: date-time
          type: string
        PositionTicks:
          description: Gets or sets the position ticks.
          format: int64
          type: integer
        IsPlaying:
          description: Gets or sets a value indicating whether the client playback
            is unpaused.
          type: boolean
        PlaylistItemId:
          description: Gets or sets the playlist item identifier of the playing item.
          format: uuid
          type: string
      type: object
    CastReceiverApplication:
      additionalProperties: false
      description: The cast receiver application model.
      example:
        Id: Id
        Name: Name
      properties:
        Id:
          description: Gets or sets the cast receiver application id.
          type: string
        Name:
          description: Gets or sets the cast receiver application name.
          type: string
      type: object
    ChannelFeatures:
      additionalProperties: false
      example:
        MaxPageSize: 0
        AutoRefreshLevels: 6
        SupportsContentDownloading: true
        SupportsLatestMedia: true
        ContentTypes:
        - Clip
        - Clip
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        SupportsSortOrderToggle: true
        MediaTypes:
        - Audio
        - Audio
        DefaultSortFields:
        - Name
        - Name
        CanFilter: true
        Name: Name
        CanSearch: true
      properties:
        Name:
          description: Gets or sets the name.
          type: string
        Id:
          description: Gets or sets the identifier.
          format: uuid
          type: string
        CanSearch:
          description: Gets or sets a value indicating whether this instance can search.
          type: boolean
        MediaTypes:
          description: Gets or sets the media types.
          items:
            $ref: '#/components/schemas/ChannelMediaType'
          type: array
        ContentTypes:
          description: Gets or sets the content types.
          items:
            $ref: '#/components/schemas/ChannelMediaContentType'
          type: array
        MaxPageSize:
          description: Gets or sets the maximum number of records the channel allows
            retrieving at a time.
          format: int32
          nullable: true
          type: integer
        AutoRefreshLevels:
          description: Gets or sets the automatic refresh levels.
          format: int32
          nullable: true
          type: integer
        DefaultSortFields:
          description: Gets or sets the default sort orders.
          items:
            $ref: '#/components/schemas/ChannelItemSortField'
          type: array
        SupportsSortOrderToggle:
          description: Gets or sets a value indicating whether a sort ascending/descending
            toggle is supported.
          type: boolean
        SupportsLatestMedia:
          description: "Gets or sets a value indicating whether [supports latest media]."
          type: boolean
        CanFilter:
          description: Gets or sets a value indicating whether this instance can filter.
          type: boolean
        SupportsContentDownloading:
          description: "Gets or sets a value indicating whether [supports content\
            \ downloading]."
          type: boolean
      type: object
    ChannelItemSortField:
      enum:
      - Name
      - CommunityRating
      - PremiereDate
      - DateCreated
      - Runtime
      - PlayCount
      - CommunityPlayCount
      type: string
    ChannelMappingOptionsDto:
      additionalProperties: false
      description: Channel mapping options dto.
      example:
        ProviderName: ProviderName
        Mappings:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        TunerChannels:
        - ProviderChannelId: ProviderChannelId
          ProviderChannelName: ProviderChannelName
          Id: Id
          Name: Name
        - ProviderChannelId: ProviderChannelId
          ProviderChannelName: ProviderChannelName
          Id: Id
          Name: Name
        ProviderChannels:
        - Id: Id
          Name: Name
        - Id: Id
          Name: Name
      properties:
        TunerChannels:
          description: Gets or sets list of tuner channels.
          items:
            $ref: '#/components/schemas/TunerChannelMapping'
          type: array
        ProviderChannels:
          description: Gets or sets list of provider channels.
          items:
            $ref: '#/components/schemas/NameIdPair'
          type: array
        Mappings:
          description: Gets or sets list of mappings.
          items:
            $ref: '#/components/schemas/NameValuePair'
          type: array
        ProviderName:
          description: Gets or sets provider name.
          nullable: true
          type: string
      type: object
    ChannelMediaContentType:
      enum:
      - Clip
      - Podcast
      - Trailer
      - Movie
      - Episode
      - Song
      - MovieExtra
      - TvExtra
      type: string
    ChannelMediaType:
      enum:
      - Audio
      - Video
      - Photo
      type: string
    ChannelType:
      description: Enum ChannelType.
      enum:
      - TV
      - Radio
      type: string
    ChapterInfo:
      additionalProperties: false
      description: Class ChapterInfo.
      example:
        StartPositionTicks: 0
        ImageTag: ImageTag
        ImageDateModified: 2000-01-23T04:56:07.000+00:00
        ImagePath: ImagePath
        Name: Name
      properties:
        StartPositionTicks:
          description: Gets or sets the start position ticks.
          format: int64
          type: integer
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        ImagePath:
          description: Gets or sets the image path.
          nullable: true
          type: string
        ImageDateModified:
          format: date-time
          type: string
        ImageTag:
          nullable: true
          type: string
      type: object
    ClientCapabilitiesDto:
      additionalProperties: false
      description: Client capabilities dto.
      example:
        IconUrl: IconUrl
        DeviceProfile: ""
        PlayableMediaTypes:
        - Unknown
        - Unknown
        SupportedCommands:
        - MoveUp
        - MoveUp
        SupportsMediaControl: true
        SupportsPersistentIdentifier: true
        AppStoreUrl: AppStoreUrl
      properties:
        PlayableMediaTypes:
          description: Gets or sets the list of playable media types.
          items:
            $ref: '#/components/schemas/MediaType'
          type: array
        SupportedCommands:
          description: Gets or sets the list of supported commands.
          items:
            $ref: '#/components/schemas/GeneralCommandType'
          type: array
        SupportsMediaControl:
          description: Gets or sets a value indicating whether session supports media
            control.
          type: boolean
        SupportsPersistentIdentifier:
          description: Gets or sets a value indicating whether session supports a
            persistent identifier.
          type: boolean
        DeviceProfile:
          allOf:
          - $ref: '#/components/schemas/DeviceProfile'
          description: Gets or sets the device profile.
          nullable: true
        AppStoreUrl:
          description: Gets or sets the app store url.
          nullable: true
          type: string
        IconUrl:
          description: Gets or sets the icon url.
          nullable: true
          type: string
      type: object
    ClientLogDocumentResponseDto:
      additionalProperties: false
      description: Client log document response dto.
      example:
        FileName: FileName
      properties:
        FileName:
          description: Gets the resulting filename.
          type: string
      type: object
    CodecProfile:
      additionalProperties: false
      description: Defines the MediaBrowser.Model.Dlna.CodecProfile.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/CodecType'
          description: Gets or sets the MediaBrowser.Model.Dlna.CodecType which this
            container must meet.
          enum:
          - Video
          - VideoAudio
          - Audio
          type: string
        Conditions:
          description: Gets or sets the list of MediaBrowser.Model.Dlna.ProfileCondition
            which this profile must meet.
          items:
            $ref: '#/components/schemas/ProfileCondition'
          type: array
        ApplyConditions:
          description: Gets or sets the list of MediaBrowser.Model.Dlna.ProfileCondition
            to apply if this profile is met.
          items:
            $ref: '#/components/schemas/ProfileCondition'
          type: array
        Codec:
          description: Gets or sets the codec(s) that this profile applies to.
          nullable: true
          type: string
        Container:
          description: Gets or sets the container(s) which this profile will be applied
            to.
          nullable: true
          type: string
        SubContainer:
          description: Gets or sets the sub-container(s) which this profile will be
            applied to.
          nullable: true
          type: string
      type: object
    CodecType:
      enum:
      - Video
      - VideoAudio
      - Audio
      type: string
    CollectionCreationResult:
      additionalProperties: false
      example:
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        Id:
          format: uuid
          type: string
      type: object
    CollectionType:
      description: Collection type.
      enum:
      - unknown
      - movies
      - tvshows
      - music
      - musicvideos
      - trailers
      - homevideos
      - boxsets
      - books
      - photos
      - livetv
      - playlists
      - folders
      type: string
    CollectionTypeOptions:
      description: The collection type options.
      enum:
      - movies
      - tvshows
      - music
      - musicvideos
      - homevideos
      - boxsets
      - books
      - mixed
      type: string
    ConfigImageTypes:
      additionalProperties: false
      example:
        PosterSizes:
        - PosterSizes
        - PosterSizes
        LogoSizes:
        - LogoSizes
        - LogoSizes
        StillSizes:
        - StillSizes
        - StillSizes
        ProfileSizes:
        - ProfileSizes
        - ProfileSizes
        BaseUrl: BaseUrl
        BackdropSizes:
        - BackdropSizes
        - BackdropSizes
        SecureBaseUrl: SecureBaseUrl
      properties:
        BackdropSizes:
          items:
            type: string
          nullable: true
          type: array
        BaseUrl:
          nullable: true
          type: string
        LogoSizes:
          items:
            type: string
          nullable: true
          type: array
        PosterSizes:
          items:
            type: string
          nullable: true
          type: array
        ProfileSizes:
          items:
            type: string
          nullable: true
          type: array
        SecureBaseUrl:
          nullable: true
          type: string
        StillSizes:
          items:
            type: string
          nullable: true
          type: array
      type: object
    ConfigurationPageInfo:
      additionalProperties: false
      description: The configuration page info.
      example:
        MenuIcon: MenuIcon
        EnableInMainMenu: true
        DisplayName: DisplayName
        MenuSection: MenuSection
        PluginId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Name: Name
      properties:
        Name:
          description: Gets or sets the name.
          type: string
        EnableInMainMenu:
          description: Gets or sets a value indicating whether the configurations
            page is enabled in the main menu.
          type: boolean
        MenuSection:
          description: Gets or sets the menu section.
          nullable: true
          type: string
        MenuIcon:
          description: Gets or sets the menu icon.
          nullable: true
          type: string
        DisplayName:
          description: Gets or sets the display name.
          nullable: true
          type: string
        PluginId:
          description: Gets or sets the plugin id.
          format: uuid
          nullable: true
          type: string
      type: object
    ContainerProfile:
      additionalProperties: false
      description: Defines the MediaBrowser.Model.Dlna.ContainerProfile.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/DlnaProfileType'
          description: Gets or sets the MediaBrowser.Model.Dlna.DlnaProfileType which
            this container must meet.
          enum:
          - Audio
          - Video
          - Photo
          - Subtitle
          - Lyric
          type: string
        Conditions:
          description: Gets or sets the list of MediaBrowser.Model.Dlna.ProfileCondition
            which this container will be applied to.
          items:
            $ref: '#/components/schemas/ProfileCondition'
          type: array
        Container:
          description: Gets or sets the container(s) which this container must meet.
          nullable: true
          type: string
        SubContainer:
          description: Gets or sets the sub container(s) which this container must
            meet.
          nullable: true
          type: string
      type: object
    CountryInfo:
      additionalProperties: false
      description: Class CountryInfo.
      example:
        TwoLetterISORegionName: TwoLetterISORegionName
        ThreeLetterISORegionName: ThreeLetterISORegionName
        DisplayName: DisplayName
        Name: Name
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        DisplayName:
          description: Gets or sets the display name.
          nullable: true
          type: string
        TwoLetterISORegionName:
          description: Gets or sets the name of the two letter ISO region.
          nullable: true
          type: string
        ThreeLetterISORegionName:
          description: Gets or sets the name of the three letter ISO region.
          nullable: true
          type: string
      type: object
    CreatePlaylistDto:
      additionalProperties: false
      description: Create new playlist dto.
      example:
        UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        IsPublic: true
        Ids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        MediaType: Unknown
        Users:
        - UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          CanEdit: true
        - UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          CanEdit: true
        Name: Name
      properties:
        Name:
          description: Gets or sets the name of the new playlist.
          type: string
        Ids:
          description: Gets or sets item ids to add to the playlist.
          items:
            format: uuid
            type: string
          type: array
        UserId:
          description: Gets or sets the user id.
          format: uuid
          nullable: true
          type: string
        MediaType:
          allOf:
          - $ref: '#/components/schemas/MediaType'
          description: Gets or sets the media type.
          enum:
          - Unknown
          - Video
          - Audio
          - Photo
          - Book
          nullable: true
          type: string
        Users:
          description: Gets or sets the playlist users.
          items:
            $ref: '#/components/schemas/PlaylistUserPermissions'
          type: array
        IsPublic:
          description: Gets or sets a value indicating whether the playlist is public.
          type: boolean
      type: object
    CreateUserByName:
      additionalProperties: false
      description: The create user by name request body.
      example:
        Name: Name
        Password: Password
      properties:
        Name:
          description: Gets or sets the username.
          type: string
        Password:
          description: Gets or sets the password.
          nullable: true
          type: string
      required:
      - Name
      type: object
    CultureDto:
      additionalProperties: false
      description: Class CultureDto.
      example:
        ThreeLetterISOLanguageNames:
        - ThreeLetterISOLanguageNames
        - ThreeLetterISOLanguageNames
        ThreeLetterISOLanguageName: ThreeLetterISOLanguageName
        DisplayName: DisplayName
        Name: Name
        TwoLetterISOLanguageName: TwoLetterISOLanguageName
      properties:
        Name:
          description: Gets the name.
          type: string
        DisplayName:
          description: Gets the display name.
          type: string
        TwoLetterISOLanguageName:
          description: Gets the name of the two letter ISO language.
          type: string
        ThreeLetterISOLanguageName:
          description: Gets the name of the three letter ISO language.
          nullable: true
          readOnly: true
          type: string
        ThreeLetterISOLanguageNames:
          items:
            type: string
          type: array
      type: object
    DayOfWeek:
      enum:
      - Sunday
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
      type: string
    DayPattern:
      enum:
      - Daily
      - Weekdays
      - Weekends
      type: string
    DefaultDirectoryBrowserInfoDto:
      additionalProperties: false
      description: Default directory browser info.
      example:
        Path: Path
      properties:
        Path:
          description: Gets or sets the path.
          nullable: true
          type: string
      type: object
    DeinterlaceMethod:
      description: Enum containing deinterlace methods.
      enum:
      - yadif
      - bwdif
      type: string
    DeviceInfoDto:
      additionalProperties: false
      description: A DTO representing device information.
      example:
        AppVersion: AppVersion
        IconUrl: IconUrl
        CustomName: CustomName
        AccessToken: AccessToken
        LastUserName: LastUserName
        Capabilities: ""
        LastUserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Id: Id
        DateLastActivity: 2000-01-23T04:56:07.000+00:00
        Name: Name
        AppName: AppName
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        CustomName:
          description: Gets or sets the custom name.
          nullable: true
          type: string
        AccessToken:
          description: Gets or sets the access token.
          nullable: true
          type: string
        Id:
          description: Gets or sets the identifier.
          nullable: true
          type: string
        LastUserName:
          description: Gets or sets the last name of the user.
          nullable: true
          type: string
        AppName:
          description: Gets or sets the name of the application.
          nullable: true
          type: string
        AppVersion:
          description: Gets or sets the application version.
          nullable: true
          type: string
        LastUserId:
          description: Gets or sets the last user identifier.
          format: uuid
          nullable: true
          type: string
        DateLastActivity:
          description: Gets or sets the date last modified.
          format: date-time
          nullable: true
          type: string
        Capabilities:
          allOf:
          - $ref: '#/components/schemas/ClientCapabilitiesDto'
          description: Gets or sets the capabilities.
        IconUrl:
          description: Gets or sets the icon URL.
          nullable: true
          type: string
      type: object
    DeviceInfoDtoQueryResult:
      additionalProperties: false
      description: Query result container.
      example:
        TotalRecordCount: 0
        StartIndex: 6
        Items:
        - AppVersion: AppVersion
          IconUrl: IconUrl
          CustomName: CustomName
          AccessToken: AccessToken
          LastUserName: LastUserName
          Capabilities: ""
          LastUserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Id: Id
          DateLastActivity: 2000-01-23T04:56:07.000+00:00
          Name: Name
          AppName: AppName
        - AppVersion: AppVersion
          IconUrl: IconUrl
          CustomName: CustomName
          AccessToken: AccessToken
          LastUserName: LastUserName
          Capabilities: ""
          LastUserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Id: Id
          DateLastActivity: 2000-01-23T04:56:07.000+00:00
          Name: Name
          AppName: AppName
      properties:
        Items:
          description: Gets or sets the items.
          items:
            $ref: '#/components/schemas/DeviceInfoDto'
          type: array
        TotalRecordCount:
          description: Gets or sets the total number of records available.
          format: int32
          type: integer
        StartIndex:
          description: Gets or sets the index of the first record in Items.
          format: int32
          type: integer
      type: object
    DeviceOptionsDto:
      additionalProperties: false
      description: A dto representing custom options for a device.
      example:
        CustomName: CustomName
        DeviceId: DeviceId
        Id: 0
      properties:
        Id:
          description: Gets or sets the id.
          format: int32
          type: integer
        DeviceId:
          description: Gets or sets the device id.
          nullable: true
          type: string
        CustomName:
          description: Gets or sets the custom name.
          nullable: true
          type: string
      type: object
    DeviceProfile:
      additionalProperties: false
      description: "A MediaBrowser.Model.Dlna.DeviceProfile represents a set of metadata\
        \ which determines which content a certain device is able to play.\r\n<br\
        \ />\r\nSpecifically, it defines the supported <see cref=\"P:MediaBrowser.Model.Dlna.DeviceProfile.ContainerProfiles\"\
        >containers</see> and\r\n<see cref=\"P:MediaBrowser.Model.Dlna.DeviceProfile.CodecProfiles\"\
        >codecs</see> (video and/or audio, including codec profiles and levels)\r\n\
        the device is able to direct play (without transcoding or remuxing),\r\nas\
        \ well as which <see cref=\"P:MediaBrowser.Model.Dlna.DeviceProfile.TranscodingProfiles\"\
        >containers/codecs to transcode to</see> in case it isn't."
      properties:
        Name:
          description: Gets or sets the name of this device profile. User profiles
            must have a unique name.
          nullable: true
          type: string
        Id:
          description: Gets or sets the unique internal identifier.
          format: uuid
          nullable: true
          type: string
        MaxStreamingBitrate:
          description: Gets or sets the maximum allowed bitrate for all streamed content.
          format: int32
          nullable: true
          type: integer
        MaxStaticBitrate:
          description: Gets or sets the maximum allowed bitrate for statically streamed
            content (= direct played files).
          format: int32
          nullable: true
          type: integer
        MusicStreamingTranscodingBitrate:
          description: Gets or sets the maximum allowed bitrate for transcoded music
            streams.
          format: int32
          nullable: true
          type: integer
        MaxStaticMusicBitrate:
          description: Gets or sets the maximum allowed bitrate for statically streamed
            (= direct played) music files.
          format: int32
          nullable: true
          type: integer
        DirectPlayProfiles:
          description: Gets or sets the direct play profiles.
          items:
            $ref: '#/components/schemas/DirectPlayProfile'
          type: array
        TranscodingProfiles:
          description: Gets or sets the transcoding profiles.
          items:
            $ref: '#/components/schemas/TranscodingProfile'
          type: array
        ContainerProfiles:
          description: Gets or sets the container profiles. Failing to meet these
            optional conditions causes transcoding to occur.
          items:
            $ref: '#/components/schemas/ContainerProfile'
          type: array
        CodecProfiles:
          description: Gets or sets the codec profiles.
          items:
            $ref: '#/components/schemas/CodecProfile'
          type: array
        SubtitleProfiles:
          description: Gets or sets the subtitle profiles.
          items:
            $ref: '#/components/schemas/SubtitleProfile'
          type: array
      type: object
    DirectPlayProfile:
      additionalProperties: false
      description: Defines the MediaBrowser.Model.Dlna.DirectPlayProfile.
      properties:
        Container:
          description: Gets or sets the container.
          type: string
        AudioCodec:
          description: Gets or sets the audio codec.
          nullable: true
          type: string
        VideoCodec:
          description: Gets or sets the video codec.
          nullable: true
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/DlnaProfileType'
          description: Gets or sets the Dlna profile type.
          enum:
          - Audio
          - Video
          - Photo
          - Subtitle
          - Lyric
          type: string
      type: object
    DisplayPreferencesDto:
      additionalProperties: false
      description: Defines the display preferences for any item that supports them
        (usually Folders).
      example:
        RememberSorting: true
        RememberIndexing: true
        PrimaryImageWidth: 6
        ScrollDirection: Horizontal
        IndexBy: IndexBy
        SortBy: SortBy
        ShowBackdrop: true
        SortOrder: Ascending
        ShowSidebar: true
        PrimaryImageHeight: 0
        Id: Id
        Client: Client
        CustomPrefs:
          key: CustomPrefs
        ViewType: ViewType
      properties:
        Id:
          description: Gets or sets the user id.
          nullable: true
          type: string
        ViewType:
          description: Gets or sets the type of the view.
          nullable: true
          type: string
        SortBy:
          description: Gets or sets the sort by.
          nullable: true
          type: string
        IndexBy:
          description: Gets or sets the index by.
          nullable: true
          type: string
        RememberIndexing:
          description: "Gets or sets a value indicating whether [remember indexing]."
          type: boolean
        PrimaryImageHeight:
          description: Gets or sets the height of the primary image.
          format: int32
          type: integer
        PrimaryImageWidth:
          description: Gets or sets the width of the primary image.
          format: int32
          type: integer
        CustomPrefs:
          additionalProperties:
            nullable: true
            type: string
          description: Gets or sets the custom prefs.
          type: object
        ScrollDirection:
          allOf:
          - $ref: '#/components/schemas/ScrollDirection'
          description: An enum representing the axis that should be scrolled.
          enum:
          - Horizontal
          - Vertical
          type: string
        ShowBackdrop:
          description: Gets or sets a value indicating whether to show backdrops on
            this item.
          type: boolean
        RememberSorting:
          description: "Gets or sets a value indicating whether [remember sorting]."
          type: boolean
        SortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: An enum representing the sorting order.
          enum:
          - Ascending
          - Descending
          type: string
        ShowSidebar:
          description: "Gets or sets a value indicating whether [show sidebar]."
          type: boolean
        Client:
          description: Gets or sets the client.
          nullable: true
          type: string
      type: object
    DlnaProfileType:
      enum:
      - Audio
      - Video
      - Photo
      - Subtitle
      - Lyric
      type: string
    DownMixStereoAlgorithms:
      description: An enum representing an algorithm to downmix surround sound to
        stereo.
      enum:
      - None
      - Dave750
      - NightmodeDialogue
      - Rfc7845
      - Ac4
      type: string
    DynamicDayOfWeek:
      description: "An enum that represents a day of the week, weekdays, weekends,\
        \ or all days."
      enum:
      - Sunday
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
      - Everyday
      - Weekday
      - Weekend
      type: string
    EmbeddedSubtitleOptions:
      description: An enum representing the options to disable embedded subs.
      enum:
      - AllowAll
      - AllowText
      - AllowImage
      - AllowNone
      type: string
    EncoderPreset:
      description: Enum containing encoder presets.
      enum:
      - auto
      - placebo
      - veryslow
      - slower
      - slow
      - medium
      - fast
      - faster
      - veryfast
      - superfast
      - ultrafast
      type: string
    EncodingContext:
      enum:
      - Streaming
      - Static
      type: string
    EncodingOptions:
      additionalProperties: false
      description: Class EncodingOptions.
      properties:
        EncodingThreadCount:
          description: Gets or sets the thread count used for encoding.
          format: int32
          type: integer
        TranscodingTempPath:
          description: Gets or sets the temporary transcoding path.
          nullable: true
          type: string
        FallbackFontPath:
          description: Gets or sets the path to the fallback font.
          nullable: true
          type: string
        EnableFallbackFont:
          description: Gets or sets a value indicating whether to use the fallback
            font.
          type: boolean
        EnableAudioVbr:
          description: Gets or sets a value indicating whether audio VBR is enabled.
          type: boolean
        DownMixAudioBoost:
          description: Gets or sets the audio boost applied when downmixing audio.
          format: double
          type: number
        DownMixStereoAlgorithm:
          allOf:
          - $ref: '#/components/schemas/DownMixStereoAlgorithms'
          description: Gets or sets the algorithm used for downmixing audio to stereo.
          enum:
          - None
          - Dave750
          - NightmodeDialogue
          - Rfc7845
          - Ac4
          type: string
        MaxMuxingQueueSize:
          description: Gets or sets the maximum size of the muxing queue.
          format: int32
          type: integer
        EnableThrottling:
          description: Gets or sets a value indicating whether throttling is enabled.
          type: boolean
        ThrottleDelaySeconds:
          description: Gets or sets the delay after which throttling happens.
          format: int32
          type: integer
        EnableSegmentDeletion:
          description: Gets or sets a value indicating whether segment deletion is
            enabled.
          type: boolean
        SegmentKeepSeconds:
          description: Gets or sets seconds for which segments should be kept before
            being deleted.
          format: int32
          type: integer
        HardwareAccelerationType:
          allOf:
          - $ref: '#/components/schemas/HardwareAccelerationType'
          description: Gets or sets the hardware acceleration type.
          enum:
          - none
          - amf
          - qsv
          - nvenc
          - v4l2m2m
          - vaapi
          - videotoolbox
          - rkmpp
          type: string
        EncoderAppPath:
          description: Gets or sets the FFmpeg path as set by the user via the UI.
          nullable: true
          type: string
        EncoderAppPathDisplay:
          description: Gets or sets the current FFmpeg path being used by the system
            and displayed on the transcode page.
          nullable: true
          type: string
        VaapiDevice:
          description: Gets or sets the VA-API device.
          nullable: true
          type: string
        QsvDevice:
          description: Gets or sets the QSV device.
          nullable: true
          type: string
        EnableTonemapping:
          description: Gets or sets a value indicating whether tonemapping is enabled.
          type: boolean
        EnableVppTonemapping:
          description: Gets or sets a value indicating whether VPP tonemapping is
            enabled.
          type: boolean
        EnableVideoToolboxTonemapping:
          description: Gets or sets a value indicating whether videotoolbox tonemapping
            is enabled.
          type: boolean
        TonemappingAlgorithm:
          allOf:
          - $ref: '#/components/schemas/TonemappingAlgorithm'
          description: Gets or sets the tone-mapping algorithm.
          enum:
          - none
          - clip
          - linear
          - gamma
          - reinhard
          - hable
          - mobius
          - bt2390
          type: string
        TonemappingMode:
          allOf:
          - $ref: '#/components/schemas/TonemappingMode'
          description: Gets or sets the tone-mapping mode.
          enum:
          - auto
          - max
          - rgb
          - lum
          - itp
          type: string
        TonemappingRange:
          allOf:
          - $ref: '#/components/schemas/TonemappingRange'
          description: Gets or sets the tone-mapping range.
          enum:
          - auto
          - tv
          - pc
          type: string
        TonemappingDesat:
          description: Gets or sets the tone-mapping desaturation.
          format: double
          type: number
        TonemappingPeak:
          description: Gets or sets the tone-mapping peak.
          format: double
          type: number
        TonemappingParam:
          description: Gets or sets the tone-mapping parameters.
          format: double
          type: number
        VppTonemappingBrightness:
          description: Gets or sets the VPP tone-mapping brightness.
          format: double
          type: number
        VppTonemappingContrast:
          description: Gets or sets the VPP tone-mapping contrast.
          format: double
          type: number
        H264Crf:
          description: Gets or sets the H264 CRF.
          format: int32
          type: integer
        H265Crf:
          description: Gets or sets the H265 CRF.
          format: int32
          type: integer
        EncoderPreset:
          allOf:
          - $ref: '#/components/schemas/EncoderPreset'
          description: Gets or sets the encoder preset.
          enum:
          - auto
          - placebo
          - veryslow
          - slower
          - slow
          - medium
          - fast
          - faster
          - veryfast
          - superfast
          - ultrafast
          nullable: true
          type: string
        DeinterlaceDoubleRate:
          description: Gets or sets a value indicating whether the framerate is doubled
            when deinterlacing.
          type: boolean
        DeinterlaceMethod:
          allOf:
          - $ref: '#/components/schemas/DeinterlaceMethod'
          description: Gets or sets the deinterlace method.
          enum:
          - yadif
          - bwdif
          type: string
        EnableDecodingColorDepth10Hevc:
          description: Gets or sets a value indicating whether 10bit HEVC decoding
            is enabled.
          type: boolean
        EnableDecodingColorDepth10Vp9:
          description: Gets or sets a value indicating whether 10bit VP9 decoding
            is enabled.
          type: boolean
        EnableDecodingColorDepth10HevcRext:
          description: Gets or sets a value indicating whether 8/10bit HEVC RExt decoding
            is enabled.
          type: boolean
        EnableDecodingColorDepth12HevcRext:
          description: Gets or sets a value indicating whether 12bit HEVC RExt decoding
            is enabled.
          type: boolean
        EnableEnhancedNvdecDecoder:
          description: Gets or sets a value indicating whether the enhanced NVDEC
            is enabled.
          type: boolean
        PreferSystemNativeHwDecoder:
          description: Gets or sets a value indicating whether the system native hardware
            decoder should be used.
          type: boolean
        EnableIntelLowPowerH264HwEncoder:
          description: Gets or sets a value indicating whether the Intel H264 low-power
            hardware encoder should be used.
          type: boolean
        EnableIntelLowPowerHevcHwEncoder:
          description: Gets or sets a value indicating whether the Intel HEVC low-power
            hardware encoder should be used.
          type: boolean
        EnableHardwareEncoding:
          description: Gets or sets a value indicating whether hardware encoding is
            enabled.
          type: boolean
        AllowHevcEncoding:
          description: Gets or sets a value indicating whether HEVC encoding is enabled.
          type: boolean
        AllowAv1Encoding:
          description: Gets or sets a value indicating whether AV1 encoding is enabled.
          type: boolean
        EnableSubtitleExtraction:
          description: Gets or sets a value indicating whether subtitle extraction
            is enabled.
          type: boolean
        HardwareDecodingCodecs:
          description: Gets or sets the codecs hardware encoding is used for.
          items:
            type: string
          nullable: true
          type: array
        AllowOnDemandMetadataBasedKeyframeExtractionForExtensions:
          description: Gets or sets the file extensions on-demand metadata based keyframe
            extraction is enabled for.
          items:
            type: string
          nullable: true
          type: array
      type: object
    EndPointInfo:
      additionalProperties: false
      example:
        IsLocal: true
        IsInNetwork: true
      properties:
        IsLocal:
          type: boolean
        IsInNetwork:
          type: boolean
      type: object
    ExternalIdInfo:
      additionalProperties: false
      description: Represents the external id information for serialization to the
        client.
      example:
        Type: Album
        Key: Key
        Name: Name
        UrlFormatString: UrlFormatString
      properties:
        Name:
          description: "Gets or sets the display name of the external id provider\
            \ (IE: IMDB, MusicBrainz, etc)."
          type: string
        Key:
          description: Gets or sets the unique key for this id. This key should be
            unique across all providers.
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/ExternalIdMediaType'
          description: "Gets or sets the specific media type for this id. This is\
            \ used to distinguish between the different\r\nexternal id types for providers\
            \ with multiple ids.\r\nA null value indicates there is no specific media\
            \ type associated with the external id, or this is the\r\ndefault id for\
            \ the external provider so there is no need to specify a type."
          enum:
          - Album
          - AlbumArtist
          - Artist
          - BoxSet
          - Episode
          - Movie
          - OtherArtist
          - Person
          - ReleaseGroup
          - Season
          - Series
          - Track
          - Book
          nullable: true
          type: string
        UrlFormatString:
          deprecated: true
          description: Gets or sets the URL format string.
          nullable: true
          type: string
      type: object
    ExternalIdMediaType:
      description: The specific media type of an MediaBrowser.Model.Providers.ExternalIdInfo.
      enum:
      - Album
      - AlbumArtist
      - Artist
      - BoxSet
      - Episode
      - Movie
      - OtherArtist
      - Person
      - ReleaseGroup
      - Season
      - Series
      - Track
      - Book
      type: string
    ExternalUrl:
      additionalProperties: false
      example:
        Url: Url
        Name: Name
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        Url:
          description: Gets or sets the type of the item.
          nullable: true
          type: string
      type: object
    ExtraType:
      enum:
      - Unknown
      - Clip
      - Trailer
      - BehindTheScenes
      - DeletedScene
      - Interview
      - Scene
      - Sample
      - ThemeSong
      - ThemeVideo
      - Featurette
      - Short
      type: string
    FileSystemEntryInfo:
      additionalProperties: false
      description: Class FileSystemEntryInfo.
      example:
        Path: Path
        Type: File
        Name: Name
      properties:
        Name:
          description: Gets the name.
          type: string
        Path:
          description: Gets the path.
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/FileSystemEntryType'
          description: Gets the type.
          enum:
          - File
          - Directory
          - NetworkComputer
          - NetworkShare
          type: string
      type: object
    FileSystemEntryType:
      description: Enum FileSystemEntryType.
      enum:
      - File
      - Directory
      - NetworkComputer
      - NetworkShare
      type: string
    FontFile:
      additionalProperties: false
      description: Class FontFile.
      example:
        Size: 0
        DateCreated: 2000-01-23T04:56:07.000+00:00
        DateModified: 2000-01-23T04:56:07.000+00:00
        Name: Name
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        Size:
          description: Gets or sets the size.
          format: int64
          type: integer
        DateCreated:
          description: Gets or sets the date created.
          format: date-time
          type: string
        DateModified:
          description: Gets or sets the date modified.
          format: date-time
          type: string
      type: object
    ForceKeepAliveMessage:
      additionalProperties: false
      description: Force keep alive websocket messages.
      properties:
        Data:
          description: Gets or sets the data.
          format: int32
          type: integer
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: ForceKeepAlive
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    ForgotPasswordAction:
      enum:
      - ContactAdmin
      - PinCode
      - InNetworkRequired
      type: string
    ForgotPasswordDto:
      additionalProperties: false
      description: Forgot Password request body DTO.
      example:
        EnteredUsername: EnteredUsername
      properties:
        EnteredUsername:
          description: Gets or sets the entered username to have its password reset.
          type: string
      required:
      - EnteredUsername
      type: object
    ForgotPasswordPinDto:
      additionalProperties: false
      description: Forgot Password Pin enter request body DTO.
      example:
        Pin: Pin
      properties:
        Pin:
          description: Gets or sets the entered pin to have the password reset.
          type: string
      required:
      - Pin
      type: object
    ForgotPasswordResult:
      additionalProperties: false
      example:
        Action: ContactAdmin
        PinExpirationDate: 2000-01-23T04:56:07.000+00:00
        PinFile: PinFile
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/ForgotPasswordAction'
          description: Gets or sets the action.
          enum:
          - ContactAdmin
          - PinCode
          - InNetworkRequired
          type: string
        PinFile:
          description: Gets or sets the pin file.
          nullable: true
          type: string
        PinExpirationDate:
          description: Gets or sets the pin expiration date.
          format: date-time
          nullable: true
          type: string
      type: object
    GeneralCommand:
      additionalProperties: false
      example:
        Arguments:
          key: Arguments
        Name: MoveUp
        ControllingUserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/GeneralCommandType'
          description: This exists simply to identify a set of known commands.
          enum:
          - MoveUp
          - MoveDown
          - MoveLeft
          - MoveRight
          - PageUp
          - PageDown
          - PreviousLetter
          - NextLetter
          - ToggleOsd
          - ToggleContextMenu
          - Select
          - Back
          - TakeScreenshot
          - SendKey
          - SendString
          - GoHome
          - GoToSettings
          - VolumeUp
          - VolumeDown
          - Mute
          - Unmute
          - ToggleMute
          - SetVolume
          - SetAudioStreamIndex
          - SetSubtitleStreamIndex
          - ToggleFullscreen
          - DisplayContent
          - GoToSearch
          - DisplayMessage
          - SetRepeatMode
          - ChannelUp
          - ChannelDown
          - Guide
          - ToggleStats
          - PlayMediaSource
          - PlayTrailers
          - SetShuffleQueue
          - PlayState
          - PlayNext
          - ToggleOsdMenu
          - Play
          - SetMaxStreamingBitrate
          - SetPlaybackOrder
          type: string
        ControllingUserId:
          format: uuid
          type: string
        Arguments:
          additionalProperties:
            nullable: true
            type: string
          type: object
      type: object
    GeneralCommandMessage:
      additionalProperties: false
      description: General command websocket message.
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/GeneralCommand'
          description: Gets or sets the data.
          nullable: true
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: GeneralCommand
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    GeneralCommandType:
      description: This exists simply to identify a set of known commands.
      enum:
      - MoveUp
      - MoveDown
      - MoveLeft
      - MoveRight
      - PageUp
      - PageDown
      - PreviousLetter
      - NextLetter
      - ToggleOsd
      - ToggleContextMenu
      - Select
      - Back
      - TakeScreenshot
      - SendKey
      - SendString
      - GoHome
      - GoToSettings
      - VolumeUp
      - VolumeDown
      - Mute
      - Unmute
      - ToggleMute
      - SetVolume
      - SetAudioStreamIndex
      - SetSubtitleStreamIndex
      - ToggleFullscreen
      - DisplayContent
      - GoToSearch
      - DisplayMessage
      - SetRepeatMode
      - ChannelUp
      - ChannelDown
      - Guide
      - ToggleStats
      - PlayMediaSource
      - PlayTrailers
      - SetShuffleQueue
      - PlayState
      - PlayNext
      - ToggleOsdMenu
      - Play
      - SetMaxStreamingBitrate
      - SetPlaybackOrder
      type: string
    GetProgramsDto:
      additionalProperties: false
      description: Get programs dto.
      example:
        EnableUserData: true
        SortBy:
        - Default
        - Default
        EnableTotalRecordCount: true
        LibrarySeriesId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        IsAiring: true
        IsSports: true
        ImageTypeLimit: 1
        MaxStartDate: 2000-01-23T04:56:07.000+00:00
        EnableImageTypes:
        - Primary
        - Primary
        IsMovie: true
        MinStartDate: 2000-01-23T04:56:07.000+00:00
        MinEndDate: 2000-01-23T04:56:07.000+00:00
        Genres:
        - Genres
        - Genres
        HasAired: true
        IsKids: true
        StartIndex: 0
        GenreIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        IsSeries: true
        SortOrder:
        - Ascending
        - Ascending
        ChannelIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        MaxEndDate: 2000-01-23T04:56:07.000+00:00
        Fields:
        - AirTime
        - AirTime
        UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        IsNews: true
        Limit: 6
        EnableImages: true
        SeriesTimerId: SeriesTimerId
      properties:
        ChannelIds:
          description: Gets or sets the channels to return guide information for.
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        UserId:
          description: Gets or sets optional. Filter by user id.
          format: uuid
          nullable: true
          type: string
        MinStartDate:
          description: Gets or sets the minimum premiere start date.
          format: date-time
          nullable: true
          type: string
        HasAired:
          description: "Gets or sets filter by programs that have completed airing,\
            \ or not."
          nullable: true
          type: boolean
        IsAiring:
          description: "Gets or sets filter by programs that are currently airing,\
            \ or not."
          nullable: true
          type: boolean
        MaxStartDate:
          description: Gets or sets the maximum premiere start date.
          format: date-time
          nullable: true
          type: string
        MinEndDate:
          description: Gets or sets the minimum premiere end date.
          format: date-time
          nullable: true
          type: string
        MaxEndDate:
          description: Gets or sets the maximum premiere end date.
          format: date-time
          nullable: true
          type: string
        IsMovie:
          description: Gets or sets filter for movies.
          nullable: true
          type: boolean
        IsSeries:
          description: Gets or sets filter for series.
          nullable: true
          type: boolean
        IsNews:
          description: Gets or sets filter for news.
          nullable: true
          type: boolean
        IsKids:
          description: Gets or sets filter for kids.
          nullable: true
          type: boolean
        IsSports:
          description: Gets or sets filter for sports.
          nullable: true
          type: boolean
        StartIndex:
          description: Gets or sets the record index to start at. All items with a
            lower index will be dropped from the results.
          format: int32
          nullable: true
          type: integer
        Limit:
          description: Gets or sets the maximum number of records to return.
          format: int32
          nullable: true
          type: integer
        SortBy:
          description: "Gets or sets specify one or more sort orders, comma delimited.\
            \ Options: Name, StartDate."
          items:
            $ref: '#/components/schemas/ItemSortBy'
          nullable: true
          type: array
        SortOrder:
          description: Gets or sets sort order.
          items:
            $ref: '#/components/schemas/SortOrder'
          nullable: true
          type: array
        Genres:
          description: Gets or sets the genres to return guide information for.
          items:
            type: string
          nullable: true
          type: array
        GenreIds:
          description: Gets or sets the genre ids to return guide information for.
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        EnableImages:
          description: Gets or sets include image information in output.
          nullable: true
          type: boolean
        EnableTotalRecordCount:
          default: true
          description: Gets or sets a value indicating whether retrieve total record
            count.
          type: boolean
        ImageTypeLimit:
          description: "Gets or sets the max number of images to return, per image\
            \ type."
          format: int32
          nullable: true
          type: integer
        EnableImageTypes:
          description: Gets or sets the image types to include in the output.
          items:
            $ref: '#/components/schemas/ImageType'
          nullable: true
          type: array
        EnableUserData:
          description: Gets or sets include user data.
          nullable: true
          type: boolean
        SeriesTimerId:
          description: Gets or sets filter by series timer id.
          nullable: true
          type: string
        LibrarySeriesId:
          description: Gets or sets filter by library series id.
          format: uuid
          nullable: true
          type: string
        Fields:
          description: Gets or sets specify additional fields of information to return
            in the output.
          items:
            $ref: '#/components/schemas/ItemFields'
          nullable: true
          type: array
      type: object
    GroupInfoDto:
      additionalProperties: false
      description: Class GroupInfoDto.
      example:
        GroupName: GroupName
        LastUpdatedAt: 2000-01-23T04:56:07.000+00:00
        State: Idle
        Participants:
        - Participants
        - Participants
        GroupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        GroupId:
          description: Gets the group identifier.
          format: uuid
          type: string
        GroupName:
          description: Gets the group name.
          type: string
        State:
          allOf:
          - $ref: '#/components/schemas/GroupStateType'
          description: Gets the group state.
          enum:
          - Idle
          - Waiting
          - Paused
          - Playing
          type: string
        Participants:
          description: Gets the participants.
          items:
            type: string
          type: array
        LastUpdatedAt:
          description: Gets the date when this DTO has been created.
          format: date-time
          type: string
      type: object
    GroupInfoDtoGroupUpdate:
      additionalProperties: false
      description: Class GroupUpdate.
      properties:
        GroupId:
          description: Gets the group identifier.
          format: uuid
          readOnly: true
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/GroupUpdateType'
          description: Gets the update type.
          enum:
          - UserJoined
          - UserLeft
          - GroupJoined
          - GroupLeft
          - StateUpdate
          - PlayQueue
          - NotInGroup
          - GroupDoesNotExist
          - CreateGroupDenied
          - JoinGroupDenied
          - LibraryAccessDenied
          type: string
        Data:
          allOf:
          - $ref: '#/components/schemas/GroupInfoDto'
          description: Gets the update data.
      type: object
    GroupQueueMode:
      description: Enum GroupQueueMode.
      enum:
      - Queue
      - QueueNext
      type: string
    GroupRepeatMode:
      description: Enum GroupRepeatMode.
      enum:
      - RepeatOne
      - RepeatAll
      - RepeatNone
      type: string
    GroupShuffleMode:
      description: Enum GroupShuffleMode.
      enum:
      - Sorted
      - Shuffle
      type: string
    GroupStateType:
      description: Enum GroupState.
      enum:
      - Idle
      - Waiting
      - Paused
      - Playing
      type: string
    GroupStateUpdate:
      additionalProperties: false
      description: Class GroupStateUpdate.
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/GroupStateType'
          description: Gets the state of the group.
          enum:
          - Idle
          - Waiting
          - Paused
          - Playing
          type: string
        Reason:
          allOf:
          - $ref: '#/components/schemas/PlaybackRequestType'
          description: Gets the reason of the state change.
          enum:
          - Play
          - SetPlaylistItem
          - RemoveFromPlaylist
          - MovePlaylistItem
          - Queue
          - Unpause
          - Pause
          - Stop
          - Seek
          - Buffer
          - Ready
          - NextItem
          - PreviousItem
          - SetRepeatMode
          - SetShuffleMode
          - Ping
          - IgnoreWait
          type: string
      type: object
    GroupStateUpdateGroupUpdate:
      additionalProperties: false
      description: Class GroupUpdate.
      properties:
        GroupId:
          description: Gets the group identifier.
          format: uuid
          readOnly: true
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/GroupUpdateType'
          description: Gets the update type.
          enum:
          - UserJoined
          - UserLeft
          - GroupJoined
          - GroupLeft
          - StateUpdate
          - PlayQueue
          - NotInGroup
          - GroupDoesNotExist
          - CreateGroupDenied
          - JoinGroupDenied
          - LibraryAccessDenied
          type: string
        Data:
          allOf:
          - $ref: '#/components/schemas/GroupStateUpdate'
          description: Gets the update data.
      type: object
    GroupUpdate:
      additionalProperties: false
      description: Group update without data.
      discriminator:
        mapping:
          UserJoined: '#/components/schemas/StringGroupUpdate'
          UserLeft: '#/components/schemas/StringGroupUpdate'
          GroupJoined: '#/components/schemas/GroupInfoDtoGroupUpdate'
          GroupLeft: '#/components/schemas/StringGroupUpdate'
          StateUpdate: '#/components/schemas/GroupStateUpdateGroupUpdate'
          PlayQueue: '#/components/schemas/PlayQueueUpdateGroupUpdate'
          NotInGroup: '#/components/schemas/StringGroupUpdate'
          GroupDoesNotExist: '#/components/schemas/StringGroupUpdate'
          LibraryAccessDenied: '#/components/schemas/StringGroupUpdate'
        propertyName: Type
      oneOf:
      - $ref: '#/components/schemas/GroupInfoDtoGroupUpdate'
      - $ref: '#/components/schemas/GroupStateUpdateGroupUpdate'
      - $ref: '#/components/schemas/StringGroupUpdate'
      - $ref: '#/components/schemas/PlayQueueUpdateGroupUpdate'
      properties:
        GroupId:
          description: Gets the group identifier.
          format: uuid
          readOnly: true
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/GroupUpdateType'
          description: Gets the update type.
          enum:
          - UserJoined
          - UserLeft
          - GroupJoined
          - GroupLeft
          - StateUpdate
          - PlayQueue
          - NotInGroup
          - GroupDoesNotExist
          - CreateGroupDenied
          - JoinGroupDenied
          - LibraryAccessDenied
          type: string
      type: object
    GroupUpdateType:
      description: Enum GroupUpdateType.
      enum:
      - UserJoined
      - UserLeft
      - GroupJoined
      - GroupLeft
      - StateUpdate
      - PlayQueue
      - NotInGroup
      - GroupDoesNotExist
      - CreateGroupDenied
      - JoinGroupDenied
      - LibraryAccessDenied
      type: string
    GuideInfo:
      additionalProperties: false
      example:
        StartDate: 2000-01-23T04:56:07.000+00:00
        EndDate: 2000-01-23T04:56:07.000+00:00
      properties:
        StartDate:
          description: Gets or sets the start date.
          format: date-time
          type: string
        EndDate:
          description: Gets or sets the end date.
          format: date-time
          type: string
      type: object
    HardwareAccelerationType:
      description: Enum containing hardware acceleration types.
      enum:
      - none
      - amf
      - qsv
      - nvenc
      - v4l2m2m
      - vaapi
      - videotoolbox
      - rkmpp
      type: string
    IgnoreWaitRequestDto:
      additionalProperties: false
      description: Class IgnoreWaitRequestDto.
      example:
        IgnoreWait: true
      properties:
        IgnoreWait:
          description: Gets or sets a value indicating whether the client should be
            ignored.
          type: boolean
      type: object
    ImageFormat:
      description: Enum ImageOutputFormat.
      enum:
      - Bmp
      - Gif
      - Jpg
      - Png
      - Webp
      - Svg
      type: string
    ImageInfo:
      additionalProperties: false
      description: Class ImageInfo.
      example:
        Path: Path
        ImageTag: ImageTag
        Size: 5
        Height: 6
        BlurHash: BlurHash
        ImageIndex: 0
        Width: 1
        ImageType: Primary
      properties:
        ImageType:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Gets or sets the type of the image.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        ImageIndex:
          description: Gets or sets the index of the image.
          format: int32
          nullable: true
          type: integer
        ImageTag:
          description: Gets or sets the image tag.
          nullable: true
          type: string
        Path:
          description: Gets or sets the path.
          nullable: true
          type: string
        BlurHash:
          description: Gets or sets the blurhash.
          nullable: true
          type: string
        Height:
          description: Gets or sets the height.
          format: int32
          nullable: true
          type: integer
        Width:
          description: Gets or sets the width.
          format: int32
          nullable: true
          type: integer
        Size:
          description: Gets or sets the size.
          format: int64
          type: integer
      type: object
    ImageOption:
      additionalProperties: false
      example:
        Type: Primary
        Limit: 0
        MinWidth: 6
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Gets or sets the type.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        Limit:
          description: Gets or sets the limit.
          format: int32
          type: integer
        MinWidth:
          description: Gets or sets the minimum width.
          format: int32
          type: integer
      type: object
    ImageOrientation:
      enum:
      - TopLeft
      - TopRight
      - BottomRight
      - BottomLeft
      - LeftTop
      - RightTop
      - RightBottom
      - LeftBottom
      type: string
    ImageProviderInfo:
      additionalProperties: false
      description: Class ImageProviderInfo.
      example:
        SupportedImages:
        - Primary
        - Primary
        Name: Name
      properties:
        Name:
          description: Gets the name.
          type: string
        SupportedImages:
          description: Gets the supported image types.
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
      type: object
    ImageResolution:
      description: Enum ImageResolution.
      enum:
      - MatchSource
      - P144
      - P240
      - P360
      - P480
      - P720
      - P1080
      - P1440
      - P2160
      type: string
    ImageSavingConvention:
      enum:
      - Legacy
      - Compatible
      type: string
    ImageType:
      description: Enum ImageType.
      enum:
      - Primary
      - Art
      - Backdrop
      - Banner
      - Logo
      - Thumb
      - Disc
      - Box
      - Screenshot
      - Menu
      - Chapter
      - BoxRear
      - Profile
      type: string
    InboundKeepAliveMessage:
      additionalProperties: false
      description: Keep alive websocket messages.
      properties:
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: KeepAlive
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    InboundWebSocketMessage:
      description: Represents the list of possible inbound websocket types
      discriminator:
        mapping:
          ActivityLogEntryStart: '#/components/schemas/ActivityLogEntryStartMessage'
          ActivityLogEntryStop: '#/components/schemas/ActivityLogEntryStopMessage'
          KeepAlive: '#/components/schemas/InboundKeepAliveMessage'
          ScheduledTasksInfoStart: '#/components/schemas/ScheduledTasksInfoStartMessage'
          ScheduledTasksInfoStop: '#/components/schemas/ScheduledTasksInfoStopMessage'
          SessionsStart: '#/components/schemas/SessionsStartMessage'
          SessionsStop: '#/components/schemas/SessionsStopMessage'
        propertyName: MessageType
      oneOf:
      - $ref: '#/components/schemas/ActivityLogEntryStartMessage'
      - $ref: '#/components/schemas/ActivityLogEntryStopMessage'
      - $ref: '#/components/schemas/InboundKeepAliveMessage'
      - $ref: '#/components/schemas/ScheduledTasksInfoStartMessage'
      - $ref: '#/components/schemas/ScheduledTasksInfoStopMessage'
      - $ref: '#/components/schemas/SessionsStartMessage'
      - $ref: '#/components/schemas/SessionsStopMessage'
      type: object
    InstallationInfo:
      additionalProperties: false
      description: Class InstallationInfo.
      example:
        SourceUrl: SourceUrl
        Version: Version
        Checksum: Checksum
        PackageInfo: ""
        Guid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Changelog: Changelog
        Name: Name
      properties:
        Guid:
          description: Gets or sets the Id.
          format: uuid
          type: string
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        Version:
          description: Gets or sets the version.
          nullable: true
          type: string
        Changelog:
          description: Gets or sets the changelog for this version.
          nullable: true
          type: string
        SourceUrl:
          description: Gets or sets the source URL.
          nullable: true
          type: string
        Checksum:
          description: Gets or sets a checksum for the binary.
          nullable: true
          type: string
        PackageInfo:
          allOf:
          - $ref: '#/components/schemas/PackageInfo'
          description: Gets or sets package information for the installation.
          nullable: true
      type: object
    IPlugin:
      additionalProperties: false
      description: Defines the MediaBrowser.Common.Plugins.IPlugin.
      properties:
        Name:
          description: Gets the name of the plugin.
          nullable: true
          readOnly: true
          type: string
        Description:
          description: Gets the Description.
          nullable: true
          readOnly: true
          type: string
        Id:
          description: Gets the unique id.
          format: uuid
          readOnly: true
          type: string
        Version:
          description: Gets the plugin version.
          nullable: true
          readOnly: true
          type: string
        AssemblyFilePath:
          description: Gets the path to the assembly file.
          nullable: true
          readOnly: true
          type: string
        CanUninstall:
          description: Gets a value indicating whether the plugin can be uninstalled.
          readOnly: true
          type: boolean
        DataFolderPath:
          description: "Gets the full path to the data folder, where the plugin can\
            \ store any miscellaneous files needed."
          nullable: true
          readOnly: true
          type: string
      type: object
    IsoType:
      description: Enum IsoType.
      enum:
      - Dvd
      - BluRay
      type: string
    ItemCounts:
      additionalProperties: false
      description: Class LibrarySummary.
      example:
        SeriesCount: 6
        BookCount: 4
        TrailerCount: 2
        AlbumCount: 9
        MusicVideoCount: 3
        MovieCount: 0
        BoxSetCount: 2
        EpisodeCount: 1
        ProgramCount: 5
        ItemCount: 7
        SongCount: 7
        ArtistCount: 5
      properties:
        MovieCount:
          description: Gets or sets the movie count.
          format: int32
          type: integer
        SeriesCount:
          description: Gets or sets the series count.
          format: int32
          type: integer
        EpisodeCount:
          description: Gets or sets the episode count.
          format: int32
          type: integer
        ArtistCount:
          description: Gets or sets the artist count.
          format: int32
          type: integer
        ProgramCount:
          description: Gets or sets the program count.
          format: int32
          type: integer
        TrailerCount:
          description: Gets or sets the trailer count.
          format: int32
          type: integer
        SongCount:
          description: Gets or sets the song count.
          format: int32
          type: integer
        AlbumCount:
          description: Gets or sets the album count.
          format: int32
          type: integer
        MusicVideoCount:
          description: Gets or sets the music video count.
          format: int32
          type: integer
        BoxSetCount:
          description: Gets or sets the box set count.
          format: int32
          type: integer
        BookCount:
          description: Gets or sets the book count.
          format: int32
          type: integer
        ItemCount:
          description: Gets or sets the item count.
          format: int32
          type: integer
      type: object
    ItemFields:
      description: Used to control the data that gets attached to DtoBaseItems.
      enum:
      - AirTime
      - CanDelete
      - CanDownload
      - ChannelInfo
      - Chapters
      - Trickplay
      - ChildCount
      - CumulativeRunTimeTicks
      - CustomRating
      - DateCreated
      - DateLastMediaAdded
      - DisplayPreferencesId
      - Etag
      - ExternalUrls
      - Genres
      - HomePageUrl
      - ItemCounts
      - MediaSourceCount
      - MediaSources
      - OriginalTitle
      - Overview
      - ParentId
      - Path
      - People
      - PlayAccess
      - ProductionLocations
      - ProviderIds
      - PrimaryImageAspectRatio
      - RecursiveItemCount
      - Settings
      - ScreenshotImageTags
      - SeriesPrimaryImage
      - SeriesStudio
      - SortName
      - SpecialEpisodeNumbers
      - Studios
      - Taglines
      - Tags
      - RemoteTrailers
      - MediaStreams
      - SeasonUserData
      - ServiceName
      - ThemeSongIds
      - ThemeVideoIds
      - ExternalEtag
      - PresentationUniqueKey
      - InheritedParentalRatingValue
      - ExternalSeriesId
      - SeriesPresentationUniqueKey
      - DateLastRefreshed
      - DateLastSaved
      - RefreshState
      - ChannelImage
      - EnableMediaSourceDisplay
      - Width
      - Height
      - ExtraIds
      - LocalTrailerCount
      - IsHD
      - SpecialFeatureCount
      type: string
    ItemFilter:
      description: Enum ItemFilter.
      enum:
      - IsFolder
      - IsNotFolder
      - IsUnplayed
      - IsPlayed
      - IsFavorite
      - IsResumable
      - Likes
      - Dislikes
      - IsFavoriteOrLikes
      type: string
    ItemSortBy:
      description: These represent sort orders.
      enum:
      - Default
      - AiredEpisodeOrder
      - Album
      - AlbumArtist
      - Artist
      - DateCreated
      - OfficialRating
      - DatePlayed
      - PremiereDate
      - StartDate
      - SortName
      - Name
      - Random
      - Runtime
      - CommunityRating
      - ProductionYear
      - PlayCount
      - CriticRating
      - IsFolder
      - IsUnplayed
      - IsPlayed
      - SeriesSortName
      - VideoBitRate
      - AirTime
      - Studio
      - IsFavoriteOrLiked
      - DateLastContentAdded
      - SeriesDatePlayed
      - ParentIndexNumber
      - IndexNumber
      - SimilarityScore
      - SearchScore
      type: string
    JoinGroupRequestDto:
      additionalProperties: false
      description: Class JoinGroupRequestDto.
      example:
        GroupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        GroupId:
          description: Gets or sets the group identifier.
          format: uuid
          type: string
      type: object
    KeepUntil:
      enum:
      - UntilDeleted
      - UntilSpaceNeeded
      - UntilWatched
      - UntilDate
      type: string
    LibraryChangedMessage:
      additionalProperties: false
      description: Library changed message.
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/LibraryUpdateInfo'
          description: Gets or sets the data.
          nullable: true
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: LibraryChanged
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    LibraryOptionInfoDto:
      additionalProperties: false
      description: Library option info dto.
      example:
        DefaultEnabled: true
        Name: Name
      properties:
        Name:
          description: Gets or sets name.
          nullable: true
          type: string
        DefaultEnabled:
          description: Gets or sets a value indicating whether default enabled.
          type: boolean
      type: object
    LibraryOptions:
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        EnablePhotos:
          type: boolean
        EnableRealtimeMonitor:
          type: boolean
        EnableLUFSScan:
          type: boolean
        EnableChapterImageExtraction:
          type: boolean
        ExtractChapterImagesDuringLibraryScan:
          type: boolean
        EnableTrickplayImageExtraction:
          type: boolean
        ExtractTrickplayImagesDuringLibraryScan:
          type: boolean
        PathInfos:
          items:
            $ref: '#/components/schemas/MediaPathInfo'
          type: array
        SaveLocalMetadata:
          type: boolean
        EnableInternetProviders:
          deprecated: true
          type: boolean
        EnableAutomaticSeriesGrouping:
          type: boolean
        EnableEmbeddedTitles:
          type: boolean
        EnableEmbeddedExtrasTitles:
          type: boolean
        EnableEmbeddedEpisodeInfos:
          type: boolean
        AutomaticRefreshIntervalDays:
          format: int32
          type: integer
        PreferredMetadataLanguage:
          description: Gets or sets the preferred metadata language.
          nullable: true
          type: string
        MetadataCountryCode:
          description: Gets or sets the metadata country code.
          nullable: true
          type: string
        SeasonZeroDisplayName:
          type: string
        MetadataSavers:
          items:
            type: string
          nullable: true
          type: array
        DisabledLocalMetadataReaders:
          items:
            type: string
          type: array
        LocalMetadataReaderOrder:
          items:
            type: string
          nullable: true
          type: array
        DisabledSubtitleFetchers:
          items:
            type: string
          type: array
        SubtitleFetcherOrder:
          items:
            type: string
          type: array
        DisabledMediaSegmentProviders:
          items:
            type: string
          type: array
        MediaSegmentProvideOrder:
          items:
            type: string
          type: array
        SkipSubtitlesIfEmbeddedSubtitlesPresent:
          type: boolean
        SkipSubtitlesIfAudioTrackMatches:
          type: boolean
        SubtitleDownloadLanguages:
          items:
            type: string
          nullable: true
          type: array
        RequirePerfectSubtitleMatch:
          type: boolean
        SaveSubtitlesWithMedia:
          type: boolean
        SaveLyricsWithMedia:
          default: false
          type: boolean
        SaveTrickplayWithMedia:
          default: false
          type: boolean
        DisabledLyricFetchers:
          items:
            type: string
          type: array
        LyricFetcherOrder:
          items:
            type: string
          type: array
        PreferNonstandardArtistsTag:
          default: false
          type: boolean
        UseCustomTagDelimiters:
          default: false
          type: boolean
        CustomTagDelimiters:
          items:
            type: string
          type: array
        DelimiterWhitelist:
          items:
            type: string
          type: array
        AutomaticallyAddToCollection:
          type: boolean
        AllowEmbeddedSubtitles:
          allOf:
          - $ref: '#/components/schemas/EmbeddedSubtitleOptions'
          description: An enum representing the options to disable embedded subs.
          enum:
          - AllowAll
          - AllowText
          - AllowImage
          - AllowNone
          type: string
        TypeOptions:
          items:
            $ref: '#/components/schemas/TypeOptions'
          type: array
      type: object
    LibraryOptionsResultDto:
      additionalProperties: false
      description: Library options result dto.
      example:
        LyricFetchers:
        - DefaultEnabled: true
          Name: Name
        - DefaultEnabled: true
          Name: Name
        TypeOptions:
        - DefaultImageOptions:
          - Type: Primary
            Limit: 0
            MinWidth: 6
          - Type: Primary
            Limit: 0
            MinWidth: 6
          Type: Type
          SupportedImageTypes:
          - Primary
          - Primary
          ImageFetchers:
          - DefaultEnabled: true
            Name: Name
          - DefaultEnabled: true
            Name: Name
          MetadataFetchers:
          - DefaultEnabled: true
            Name: Name
          - DefaultEnabled: true
            Name: Name
        - DefaultImageOptions:
          - Type: Primary
            Limit: 0
            MinWidth: 6
          - Type: Primary
            Limit: 0
            MinWidth: 6
          Type: Type
          SupportedImageTypes:
          - Primary
          - Primary
          ImageFetchers:
          - DefaultEnabled: true
            Name: Name
          - DefaultEnabled: true
            Name: Name
          MetadataFetchers:
          - DefaultEnabled: true
            Name: Name
          - DefaultEnabled: true
            Name: Name
        MetadataReaders:
        - DefaultEnabled: true
          Name: Name
        - DefaultEnabled: true
          Name: Name
        SubtitleFetchers:
        - DefaultEnabled: true
          Name: Name
        - DefaultEnabled: true
          Name: Name
        MetadataSavers:
        - DefaultEnabled: true
          Name: Name
        - DefaultEnabled: true
          Name: Name
      properties:
        MetadataSavers:
          description: Gets or sets the metadata savers.
          items:
            $ref: '#/components/schemas/LibraryOptionInfoDto'
          type: array
        MetadataReaders:
          description: Gets or sets the metadata readers.
          items:
            $ref: '#/components/schemas/LibraryOptionInfoDto'
          type: array
        SubtitleFetchers:
          description: Gets or sets the subtitle fetchers.
          items:
            $ref: '#/components/schemas/LibraryOptionInfoDto'
          type: array
        LyricFetchers:
          description: Gets or sets the list of lyric fetchers.
          items:
            $ref: '#/components/schemas/LibraryOptionInfoDto'
          type: array
        TypeOptions:
          description: Gets or sets the type options.
          items:
            $ref: '#/components/schemas/LibraryTypeOptionsDto'
          type: array
      type: object
    LibraryTypeOptionsDto:
      additionalProperties: false
      description: Library type options dto.
      example:
        DefaultImageOptions:
        - Type: Primary
          Limit: 0
          MinWidth: 6
        - Type: Primary
          Limit: 0
          MinWidth: 6
        Type: Type
        SupportedImageTypes:
        - Primary
        - Primary
        ImageFetchers:
        - DefaultEnabled: true
          Name: Name
        - DefaultEnabled: true
          Name: Name
        MetadataFetchers:
        - DefaultEnabled: true
          Name: Name
        - DefaultEnabled: true
          Name: Name
      properties:
        Type:
          description: Gets or sets the type.
          nullable: true
          type: string
        MetadataFetchers:
          description: Gets or sets the metadata fetchers.
          items:
            $ref: '#/components/schemas/LibraryOptionInfoDto'
          type: array
        ImageFetchers:
          description: Gets or sets the image fetchers.
          items:
            $ref: '#/components/schemas/LibraryOptionInfoDto'
          type: array
        SupportedImageTypes:
          description: Gets or sets the supported image types.
          items:
            $ref: '#/components/schemas/ImageType'
          type: array
        DefaultImageOptions:
          description: Gets or sets the default image options.
          items:
            $ref: '#/components/schemas/ImageOption'
          type: array
      type: object
    LibraryUpdateInfo:
      additionalProperties: false
      description: Class LibraryUpdateInfo.
      properties:
        FoldersAddedTo:
          description: Gets or sets the folders added to.
          items:
            type: string
          type: array
        FoldersRemovedFrom:
          description: Gets or sets the folders removed from.
          items:
            type: string
          type: array
        ItemsAdded:
          description: Gets or sets the items added.
          items:
            type: string
          type: array
        ItemsRemoved:
          description: Gets or sets the items removed.
          items:
            type: string
          type: array
        ItemsUpdated:
          description: Gets or sets the items updated.
          items:
            type: string
          type: array
        CollectionFolders:
          items:
            type: string
          type: array
        IsEmpty:
          readOnly: true
          type: boolean
      type: object
    ListingsProviderInfo:
      additionalProperties: false
      example:
        Path: Path
        NewsCategories:
        - NewsCategories
        - NewsCategories
        ZipCode: ZipCode
        ChannelMappings:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        ListingsId: ListingsId
        EnabledTuners:
        - EnabledTuners
        - EnabledTuners
        EnableAllTuners: true
        Type: Type
        MovieCategories:
        - MovieCategories
        - MovieCategories
        Username: Username
        MoviePrefix: MoviePrefix
        KidsCategories:
        - KidsCategories
        - KidsCategories
        UserAgent: UserAgent
        Country: Country
        PreferredLanguage: PreferredLanguage
        SportsCategories:
        - SportsCategories
        - SportsCategories
        Id: Id
        Password: Password
      properties:
        Id:
          nullable: true
          type: string
        Type:
          nullable: true
          type: string
        Username:
          nullable: true
          type: string
        Password:
          nullable: true
          type: string
        ListingsId:
          nullable: true
          type: string
        ZipCode:
          nullable: true
          type: string
        Country:
          nullable: true
          type: string
        Path:
          nullable: true
          type: string
        EnabledTuners:
          items:
            type: string
          nullable: true
          type: array
        EnableAllTuners:
          type: boolean
        NewsCategories:
          items:
            type: string
          nullable: true
          type: array
        SportsCategories:
          items:
            type: string
          nullable: true
          type: array
        KidsCategories:
          items:
            type: string
          nullable: true
          type: array
        MovieCategories:
          items:
            type: string
          nullable: true
          type: array
        ChannelMappings:
          items:
            $ref: '#/components/schemas/NameValuePair'
          nullable: true
          type: array
        MoviePrefix:
          nullable: true
          type: string
        PreferredLanguage:
          nullable: true
          type: string
        UserAgent:
          nullable: true
          type: string
      type: object
    LiveStreamResponse:
      additionalProperties: false
      example:
        MediaSource: ""
      properties:
        MediaSource:
          allOf:
          - $ref: '#/components/schemas/MediaSourceInfo'
      type: object
    LiveTvInfo:
      additionalProperties: false
      example:
        Services:
        - Status: Ok
          Tuners:
          - Tuners
          - Tuners
          Version: Version
          HomePageUrl: HomePageUrl
          HasUpdateAvailable: true
          IsVisible: true
          Name: Name
          StatusMessage: StatusMessage
        - Status: Ok
          Tuners:
          - Tuners
          - Tuners
          Version: Version
          HomePageUrl: HomePageUrl
          HasUpdateAvailable: true
          IsVisible: true
          Name: Name
          StatusMessage: StatusMessage
        IsEnabled: true
        EnabledUsers:
        - EnabledUsers
        - EnabledUsers
      properties:
        Services:
          description: Gets or sets the services.
          items:
            $ref: '#/components/schemas/LiveTvServiceInfo'
          type: array
        IsEnabled:
          description: Gets or sets a value indicating whether this instance is enabled.
          type: boolean
        EnabledUsers:
          description: Gets or sets the enabled users.
          items:
            type: string
          type: array
      type: object
    LiveTvOptions:
      additionalProperties: false
      properties:
        GuideDays:
          format: int32
          nullable: true
          type: integer
        RecordingPath:
          nullable: true
          type: string
        MovieRecordingPath:
          nullable: true
          type: string
        SeriesRecordingPath:
          nullable: true
          type: string
        EnableRecordingSubfolders:
          type: boolean
        EnableOriginalAudioWithEncodedRecordings:
          type: boolean
        TunerHosts:
          items:
            $ref: '#/components/schemas/TunerHostInfo'
          nullable: true
          type: array
        ListingProviders:
          items:
            $ref: '#/components/schemas/ListingsProviderInfo'
          nullable: true
          type: array
        PrePaddingSeconds:
          format: int32
          type: integer
        PostPaddingSeconds:
          format: int32
          type: integer
        MediaLocationsCreated:
          items:
            type: string
          nullable: true
          type: array
        RecordingPostProcessor:
          nullable: true
          type: string
        RecordingPostProcessorArguments:
          nullable: true
          type: string
        SaveRecordingNFO:
          type: boolean
        SaveRecordingImages:
          type: boolean
      type: object
    LiveTvServiceInfo:
      additionalProperties: false
      description: Class ServiceInfo.
      example:
        Status: Ok
        Tuners:
        - Tuners
        - Tuners
        Version: Version
        HomePageUrl: HomePageUrl
        HasUpdateAvailable: true
        IsVisible: true
        Name: Name
        StatusMessage: StatusMessage
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        HomePageUrl:
          description: Gets or sets the home page URL.
          nullable: true
          type: string
        Status:
          allOf:
          - $ref: '#/components/schemas/LiveTvServiceStatus'
          description: Gets or sets the status.
          enum:
          - Ok
          - Unavailable
          type: string
        StatusMessage:
          description: Gets or sets the status message.
          nullable: true
          type: string
        Version:
          description: Gets or sets the version.
          nullable: true
          type: string
        HasUpdateAvailable:
          description: Gets or sets a value indicating whether this instance has update
            available.
          type: boolean
        IsVisible:
          description: Gets or sets a value indicating whether this instance is visible.
          type: boolean
        Tuners:
          items:
            type: string
          nullable: true
          type: array
      type: object
    LiveTvServiceStatus:
      enum:
      - Ok
      - Unavailable
      type: string
    LocalizationOption:
      additionalProperties: false
      example:
        Value: Value
        Name: Name
      properties:
        Name:
          nullable: true
          type: string
        Value:
          nullable: true
          type: string
      type: object
    LocationType:
      description: Enum LocationType.
      enum:
      - FileSystem
      - Remote
      - Virtual
      - Offline
      type: string
    LogFile:
      additionalProperties: false
      example:
        Size: 0
        DateCreated: 2000-01-23T04:56:07.000+00:00
        DateModified: 2000-01-23T04:56:07.000+00:00
        Name: Name
      properties:
        DateCreated:
          description: Gets or sets the date created.
          format: date-time
          type: string
        DateModified:
          description: Gets or sets the date modified.
          format: date-time
          type: string
        Size:
          description: Gets or sets the size.
          format: int64
          type: integer
        Name:
          description: Gets or sets the name.
          type: string
      type: object
    LogLevel:
      enum:
      - Trace
      - Debug
      - Information
      - Warning
      - Error
      - Critical
      - None
      type: string
    LyricDto:
      additionalProperties: false
      description: LyricResponse model.
      example:
        Metadata: ""
        Lyrics:
        - Start: 0
          Text: Text
        - Start: 0
          Text: Text
      properties:
        Metadata:
          allOf:
          - $ref: '#/components/schemas/LyricMetadata'
          description: Gets or sets Metadata for the lyrics.
        Lyrics:
          description: Gets or sets a collection of individual lyric lines.
          items:
            $ref: '#/components/schemas/LyricLine'
          type: array
      type: object
    LyricLine:
      additionalProperties: false
      description: Lyric model.
      example:
        Start: 0
        Text: Text
      properties:
        Text:
          description: Gets the text of this lyric line.
          type: string
        Start:
          description: Gets the start time in ticks.
          format: int64
          nullable: true
          type: integer
      type: object
    LyricMetadata:
      additionalProperties: false
      description: LyricMetadata model.
      properties:
        Artist:
          description: Gets or sets the song artist.
          nullable: true
          type: string
        Album:
          description: Gets or sets the album this song is on.
          nullable: true
          type: string
        Title:
          description: Gets or sets the title of the song.
          nullable: true
          type: string
        Author:
          description: Gets or sets the author of the lyric data.
          nullable: true
          type: string
        Length:
          description: Gets or sets the length of the song in ticks.
          format: int64
          nullable: true
          type: integer
        By:
          description: Gets or sets who the LRC file was created by.
          nullable: true
          type: string
        Offset:
          description: Gets or sets the lyric offset compared to audio in ticks.
          format: int64
          nullable: true
          type: integer
        Creator:
          description: Gets or sets the software used to create the LRC file.
          nullable: true
          type: string
        Version:
          description: Gets or sets the version of the creator used.
          nullable: true
          type: string
        IsSynced:
          description: Gets or sets a value indicating whether this lyric is synced.
          nullable: true
          type: boolean
      type: object
    MediaAttachment:
      additionalProperties: false
      description: Class MediaAttachment.
      example:
        CodecTag: CodecTag
        Comment: Comment
        DeliveryUrl: DeliveryUrl
        Codec: Codec
        FileName: FileName
        Index: 2
        MimeType: MimeType
      properties:
        Codec:
          description: Gets or sets the codec.
          nullable: true
          type: string
        CodecTag:
          description: Gets or sets the codec tag.
          nullable: true
          type: string
        Comment:
          description: Gets or sets the comment.
          nullable: true
          type: string
        Index:
          description: Gets or sets the index.
          format: int32
          type: integer
        FileName:
          description: Gets or sets the filename.
          nullable: true
          type: string
        MimeType:
          description: Gets or sets the MIME type.
          nullable: true
          type: string
        DeliveryUrl:
          description: Gets or sets the delivery URL.
          nullable: true
          type: string
      type: object
    MediaPathDto:
      additionalProperties: false
      description: Media Path dto.
      example:
        Path: Path
        PathInfo: ""
        Name: Name
      properties:
        Name:
          description: Gets or sets the name of the library.
          type: string
        Path:
          description: Gets or sets the path to add.
          nullable: true
          type: string
        PathInfo:
          allOf:
          - $ref: '#/components/schemas/MediaPathInfo'
          description: Gets or sets the path info.
          nullable: true
      required:
      - Name
      type: object
    MediaPathInfo:
      additionalProperties: false
      properties:
        Path:
          type: string
      type: object
    MediaProtocol:
      enum:
      - File
      - Http
      - Rtmp
      - Rtsp
      - Udp
      - Rtp
      - Ftp
      type: string
    MediaSegmentDto:
      additionalProperties: false
      description: Api model for MediaSegment's.
      example:
        Type: Unknown
        StartTicks: 0
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        EndTicks: 6
      properties:
        Id:
          description: Gets or sets the id of the media segment.
          format: uuid
          type: string
        ItemId:
          description: Gets or sets the id of the associated item.
          format: uuid
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/MediaSegmentType'
          description: Defines the types of content an individual Jellyfin.Data.Entities.MediaSegment
            represents.
          enum:
          - Unknown
          - Commercial
          - Preview
          - Recap
          - Outro
          - Intro
          type: string
        StartTicks:
          description: Gets or sets the start of the segment.
          format: int64
          type: integer
        EndTicks:
          description: Gets or sets the end of the segment.
          format: int64
          type: integer
      type: object
    MediaSegmentDtoQueryResult:
      additionalProperties: false
      description: Query result container.
      example:
        TotalRecordCount: 1
        StartIndex: 5
        Items:
        - Type: Unknown
          StartTicks: 0
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          EndTicks: 6
        - Type: Unknown
          StartTicks: 0
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          EndTicks: 6
      properties:
        Items:
          description: Gets or sets the items.
          items:
            $ref: '#/components/schemas/MediaSegmentDto'
          type: array
        TotalRecordCount:
          description: Gets or sets the total number of records available.
          format: int32
          type: integer
        StartIndex:
          description: Gets or sets the index of the first record in Items.
          format: int32
          type: integer
      type: object
    MediaSegmentType:
      description: Defines the types of content an individual Jellyfin.Data.Entities.MediaSegment
        represents.
      enum:
      - Unknown
      - Commercial
      - Preview
      - Recap
      - Outro
      - Intro
      type: string
    MediaSourceInfo:
      additionalProperties: false
      example:
        EncoderPath: EncoderPath
        RequiredHttpHeaders:
          key: RequiredHttpHeaders
        RunTimeTicks: 5
        MediaStreams:
        - VideoRange: Unknown
          ColorSpace: ColorSpace
          LocalizedHearingImpaired: LocalizedHearingImpaired
          Index: 3
          BitDepth: 7
          SupportsExternalStream: true
          DvLevel: 2
          ReferenceFrameRate: 6.4384236
          Codec: Codec
          SampleRate: 9
          IsAnamorphic: true
          PixelFormat: PixelFormat
          RefFrames: 1
          IsAVC: true
          ColorTransfer: ColorTransfer
          RpuPresentFlag: 4
          LocalizedForced: LocalizedForced
          VideoRangeType: Unknown
          IsExternalUrl: true
          ElPresentFlag: 7
          DisplayTitle: DisplayTitle
          IsForced: true
          ChannelLayout: ChannelLayout
          DvProfile: 3
          AverageFrameRate: 8.762042
          Score: 6
          IsExternal: true
          AudioSpatialFormat: None
          LocalizedDefault: LocalizedDefault
          Level: 1.284659006116532
          CodecTimeBase: CodecTimeBase
          LocalizedUndefined: LocalizedUndefined
          DvBlSignalCompatibilityId: 1
          ColorRange: ColorRange
          Channels: 5
          Profile: Profile
          DeliveryUrl: DeliveryUrl
          ColorPrimaries: ColorPrimaries
          Language: Language
          IsTextSubtitleStream: true
          NalLengthSize: NalLengthSize
          Height: 9
          Width: 6
          TimeBase: TimeBase
          CodecTag: CodecTag
          IsDefault: true
          Path: Path
          Comment: Comment
          VideoDoViTitle: VideoDoViTitle
          DeliveryMethod: Encode
          DvVersionMajor: 7
          BlPresentFlag: 1
          PacketLength: 4
          Title: Title
          Rotation: 1
          RealFrameRate: 9.018348
          IsHearingImpaired: true
          AspectRatio: AspectRatio
          Type: Audio
          DvVersionMinor: 9
          IsInterlaced: true
          LocalizedExternal: LocalizedExternal
          BitRate: 6
        - VideoRange: Unknown
          ColorSpace: ColorSpace
          LocalizedHearingImpaired: LocalizedHearingImpaired
          Index: 3
          BitDepth: 7
          SupportsExternalStream: true
          DvLevel: 2
          ReferenceFrameRate: 6.4384236
          Codec: Codec
          SampleRate: 9
          IsAnamorphic: true
          PixelFormat: PixelFormat
          RefFrames: 1
          IsAVC: true
          ColorTransfer: ColorTransfer
          RpuPresentFlag: 4
          LocalizedForced: LocalizedForced
          VideoRangeType: Unknown
          IsExternalUrl: true
          ElPresentFlag: 7
          DisplayTitle: DisplayTitle
          IsForced: true
          ChannelLayout: ChannelLayout
          DvProfile: 3
          AverageFrameRate: 8.762042
          Score: 6
          IsExternal: true
          AudioSpatialFormat: None
          LocalizedDefault: LocalizedDefault
          Level: 1.284659006116532
          CodecTimeBase: CodecTimeBase
          LocalizedUndefined: LocalizedUndefined
          DvBlSignalCompatibilityId: 1
          ColorRange: ColorRange
          Channels: 5
          Profile: Profile
          DeliveryUrl: DeliveryUrl
          ColorPrimaries: ColorPrimaries
          Language: Language
          IsTextSubtitleStream: true
          NalLengthSize: NalLengthSize
          Height: 9
          Width: 6
          TimeBase: TimeBase
          CodecTag: CodecTag
          IsDefault: true
          Path: Path
          Comment: Comment
          VideoDoViTitle: VideoDoViTitle
          DeliveryMethod: Encode
          DvVersionMajor: 7
          BlPresentFlag: 1
          PacketLength: 4
          Title: Title
          Rotation: 1
          RealFrameRate: 9.018348
          IsHearingImpaired: true
          AspectRatio: AspectRatio
          Type: Audio
          DvVersionMinor: 9
          IsInterlaced: true
          LocalizedExternal: LocalizedExternal
          BitRate: 6
        Size: 5
        Video3DFormat: HalfSideBySide
        BufferMs: 2
        Timestamp: None
        Name: Name
        RequiresOpening: true
        FallbackMaxStreamingBitrate: 6
        SupportsDirectStream: true
        VideoType: VideoFile
        RequiresClosing: true
        Container: Container
        IsoType: Dvd
        HasSegments: true
        LiveStreamId: LiveStreamId
        RequiresLooping: true
        Protocol: File
        DefaultSubtitleStreamIndex: 3
        GenPtsInput: true
        IsInfiniteStream: true
        Path: Path
        IsRemote: true
        EncoderProtocol: File
        IgnoreIndex: true
        SupportsDirectPlay: true
        TranscodingSubProtocol: http
        Formats:
        - Formats
        - Formats
        AnalyzeDurationMs: 5
        Bitrate: 6
        OpenToken: OpenToken
        SupportsProbing: true
        Type: Default
        MediaAttachments:
        - CodecTag: CodecTag
          Comment: Comment
          DeliveryUrl: DeliveryUrl
          Codec: Codec
          FileName: FileName
          Index: 2
          MimeType: MimeType
        - CodecTag: CodecTag
          Comment: Comment
          DeliveryUrl: DeliveryUrl
          Codec: Codec
          FileName: FileName
          Index: 2
          MimeType: MimeType
        ReadAtNativeFramerate: true
        ETag: ETag
        TranscodingContainer: TranscodingContainer
        IgnoreDts: true
        UseMostCompatibleTranscodingProfile: false
        TranscodingUrl: TranscodingUrl
        Id: Id
        SupportsTranscoding: true
        DefaultAudioStreamIndex: 6
      properties:
        Protocol:
          allOf:
          - $ref: '#/components/schemas/MediaProtocol'
          enum:
          - File
          - Http
          - Rtmp
          - Rtsp
          - Udp
          - Rtp
          - Ftp
          type: string
        Id:
          nullable: true
          type: string
        Path:
          nullable: true
          type: string
        EncoderPath:
          nullable: true
          type: string
        EncoderProtocol:
          allOf:
          - $ref: '#/components/schemas/MediaProtocol'
          enum:
          - File
          - Http
          - Rtmp
          - Rtsp
          - Udp
          - Rtp
          - Ftp
          nullable: true
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/MediaSourceType'
          enum:
          - Default
          - Grouping
          - Placeholder
          type: string
        Container:
          nullable: true
          type: string
        Size:
          format: int64
          nullable: true
          type: integer
        Name:
          nullable: true
          type: string
        IsRemote:
          description: "Gets or sets a value indicating whether the media is remote.\r\
            \nDifferentiate internet url vs local network."
          type: boolean
        ETag:
          nullable: true
          type: string
        RunTimeTicks:
          format: int64
          nullable: true
          type: integer
        ReadAtNativeFramerate:
          type: boolean
        IgnoreDts:
          type: boolean
        IgnoreIndex:
          type: boolean
        GenPtsInput:
          type: boolean
        SupportsTranscoding:
          type: boolean
        SupportsDirectStream:
          type: boolean
        SupportsDirectPlay:
          type: boolean
        IsInfiniteStream:
          type: boolean
        UseMostCompatibleTranscodingProfile:
          default: false
          type: boolean
        RequiresOpening:
          type: boolean
        OpenToken:
          nullable: true
          type: string
        RequiresClosing:
          type: boolean
        LiveStreamId:
          nullable: true
          type: string
        BufferMs:
          format: int32
          nullable: true
          type: integer
        RequiresLooping:
          type: boolean
        SupportsProbing:
          type: boolean
        VideoType:
          allOf:
          - $ref: '#/components/schemas/VideoType'
          enum:
          - VideoFile
          - Iso
          - Dvd
          - BluRay
          nullable: true
          type: string
        IsoType:
          allOf:
          - $ref: '#/components/schemas/IsoType'
          enum:
          - Dvd
          - BluRay
          nullable: true
          type: string
        Video3DFormat:
          allOf:
          - $ref: '#/components/schemas/Video3DFormat'
          enum:
          - HalfSideBySide
          - FullSideBySide
          - FullTopAndBottom
          - HalfTopAndBottom
          - MVC
          nullable: true
          type: string
        MediaStreams:
          items:
            $ref: '#/components/schemas/MediaStream'
          nullable: true
          type: array
        MediaAttachments:
          items:
            $ref: '#/components/schemas/MediaAttachment'
          nullable: true
          type: array
        Formats:
          items:
            type: string
          nullable: true
          type: array
        Bitrate:
          format: int32
          nullable: true
          type: integer
        FallbackMaxStreamingBitrate:
          format: int32
          nullable: true
          type: integer
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/TransportStreamTimestamp'
          enum:
          - None
          - Zero
          - Valid
          nullable: true
          type: string
        RequiredHttpHeaders:
          additionalProperties:
            nullable: true
            type: string
          nullable: true
          type: object
        TranscodingUrl:
          nullable: true
          type: string
        TranscodingSubProtocol:
          allOf:
          - $ref: '#/components/schemas/MediaStreamProtocol'
          description: "Media streaming protocol.\r\nLowercase for backwards compatibility."
          enum:
          - http
          - hls
          type: string
        TranscodingContainer:
          nullable: true
          type: string
        AnalyzeDurationMs:
          format: int32
          nullable: true
          type: integer
        DefaultAudioStreamIndex:
          format: int32
          nullable: true
          type: integer
        DefaultSubtitleStreamIndex:
          format: int32
          nullable: true
          type: integer
        HasSegments:
          type: boolean
      type: object
    MediaSourceType:
      enum:
      - Default
      - Grouping
      - Placeholder
      type: string
    MediaStream:
      additionalProperties: false
      description: Class MediaStream.
      example:
        VideoRange: Unknown
        ColorSpace: ColorSpace
        LocalizedHearingImpaired: LocalizedHearingImpaired
        Index: 3
        BitDepth: 7
        SupportsExternalStream: true
        DvLevel: 2
        ReferenceFrameRate: 6.4384236
        Codec: Codec
        SampleRate: 9
        IsAnamorphic: true
        PixelFormat: PixelFormat
        RefFrames: 1
        IsAVC: true
        ColorTransfer: ColorTransfer
        RpuPresentFlag: 4
        LocalizedForced: LocalizedForced
        VideoRangeType: Unknown
        IsExternalUrl: true
        ElPresentFlag: 7
        DisplayTitle: DisplayTitle
        IsForced: true
        ChannelLayout: ChannelLayout
        DvProfile: 3
        AverageFrameRate: 8.762042
        Score: 6
        IsExternal: true
        AudioSpatialFormat: None
        LocalizedDefault: LocalizedDefault
        Level: 1.284659006116532
        CodecTimeBase: CodecTimeBase
        LocalizedUndefined: LocalizedUndefined
        DvBlSignalCompatibilityId: 1
        ColorRange: ColorRange
        Channels: 5
        Profile: Profile
        DeliveryUrl: DeliveryUrl
        ColorPrimaries: ColorPrimaries
        Language: Language
        IsTextSubtitleStream: true
        NalLengthSize: NalLengthSize
        Height: 9
        Width: 6
        TimeBase: TimeBase
        CodecTag: CodecTag
        IsDefault: true
        Path: Path
        Comment: Comment
        VideoDoViTitle: VideoDoViTitle
        DeliveryMethod: Encode
        DvVersionMajor: 7
        BlPresentFlag: 1
        PacketLength: 4
        Title: Title
        Rotation: 1
        RealFrameRate: 9.018348
        IsHearingImpaired: true
        AspectRatio: AspectRatio
        Type: Audio
        DvVersionMinor: 9
        IsInterlaced: true
        LocalizedExternal: LocalizedExternal
        BitRate: 6
      properties:
        Codec:
          description: Gets or sets the codec.
          nullable: true
          type: string
        CodecTag:
          description: Gets or sets the codec tag.
          nullable: true
          type: string
        Language:
          description: Gets or sets the language.
          nullable: true
          type: string
        ColorRange:
          description: Gets or sets the color range.
          nullable: true
          type: string
        ColorSpace:
          description: Gets or sets the color space.
          nullable: true
          type: string
        ColorTransfer:
          description: Gets or sets the color transfer.
          nullable: true
          type: string
        ColorPrimaries:
          description: Gets or sets the color primaries.
          nullable: true
          type: string
        DvVersionMajor:
          description: Gets or sets the Dolby Vision version major.
          format: int32
          nullable: true
          type: integer
        DvVersionMinor:
          description: Gets or sets the Dolby Vision version minor.
          format: int32
          nullable: true
          type: integer
        DvProfile:
          description: Gets or sets the Dolby Vision profile.
          format: int32
          nullable: true
          type: integer
        DvLevel:
          description: Gets or sets the Dolby Vision level.
          format: int32
          nullable: true
          type: integer
        RpuPresentFlag:
          description: Gets or sets the Dolby Vision rpu present flag.
          format: int32
          nullable: true
          type: integer
        ElPresentFlag:
          description: Gets or sets the Dolby Vision el present flag.
          format: int32
          nullable: true
          type: integer
        BlPresentFlag:
          description: Gets or sets the Dolby Vision bl present flag.
          format: int32
          nullable: true
          type: integer
        DvBlSignalCompatibilityId:
          description: Gets or sets the Dolby Vision bl signal compatibility id.
          format: int32
          nullable: true
          type: integer
        Rotation:
          description: Gets or sets the Rotation in degrees.
          format: int32
          nullable: true
          type: integer
        Comment:
          description: Gets or sets the comment.
          nullable: true
          type: string
        TimeBase:
          description: Gets or sets the time base.
          nullable: true
          type: string
        CodecTimeBase:
          description: Gets or sets the codec time base.
          nullable: true
          type: string
        Title:
          description: Gets or sets the title.
          nullable: true
          type: string
        VideoRange:
          allOf:
          - $ref: '#/components/schemas/VideoRange'
          description: An enum representing video ranges.
          enum:
          - Unknown
          - SDR
          - HDR
          readOnly: true
          type: string
        VideoRangeType:
          allOf:
          - $ref: '#/components/schemas/VideoRangeType'
          description: An enum representing types of video ranges.
          enum:
          - Unknown
          - SDR
          - HDR10
          - HLG
          - DOVI
          - DOVIWithHDR10
          - DOVIWithHLG
          - DOVIWithSDR
          - HDR10Plus
          readOnly: true
          type: string
        VideoDoViTitle:
          description: Gets the video dovi title.
          nullable: true
          readOnly: true
          type: string
        AudioSpatialFormat:
          allOf:
          - $ref: '#/components/schemas/AudioSpatialFormat'
          default: None
          description: An enum representing formats of spatial audio.
          enum:
          - None
          - DolbyAtmos
          - DTSX
          readOnly: true
          type: string
        LocalizedUndefined:
          nullable: true
          type: string
        LocalizedDefault:
          nullable: true
          type: string
        LocalizedForced:
          nullable: true
          type: string
        LocalizedExternal:
          nullable: true
          type: string
        LocalizedHearingImpaired:
          nullable: true
          type: string
        DisplayTitle:
          nullable: true
          readOnly: true
          type: string
        NalLengthSize:
          nullable: true
          type: string
        IsInterlaced:
          description: Gets or sets a value indicating whether this instance is interlaced.
          type: boolean
        IsAVC:
          nullable: true
          type: boolean
        ChannelLayout:
          description: Gets or sets the channel layout.
          nullable: true
          type: string
        BitRate:
          description: Gets or sets the bit rate.
          format: int32
          nullable: true
          type: integer
        BitDepth:
          description: Gets or sets the bit depth.
          format: int32
          nullable: true
          type: integer
        RefFrames:
          description: Gets or sets the reference frames.
          format: int32
          nullable: true
          type: integer
        PacketLength:
          description: Gets or sets the length of the packet.
          format: int32
          nullable: true
          type: integer
        Channels:
          description: Gets or sets the channels.
          format: int32
          nullable: true
          type: integer
        SampleRate:
          description: Gets or sets the sample rate.
          format: int32
          nullable: true
          type: integer
        IsDefault:
          description: Gets or sets a value indicating whether this instance is default.
          type: boolean
        IsForced:
          description: Gets or sets a value indicating whether this instance is forced.
          type: boolean
        IsHearingImpaired:
          description: Gets or sets a value indicating whether this instance is for
            the hearing impaired.
          type: boolean
        Height:
          description: Gets or sets the height.
          format: int32
          nullable: true
          type: integer
        Width:
          description: Gets or sets the width.
          format: int32
          nullable: true
          type: integer
        AverageFrameRate:
          description: Gets or sets the average frame rate.
          format: float
          nullable: true
          type: number
        RealFrameRate:
          description: Gets or sets the real frame rate.
          format: float
          nullable: true
          type: number
        ReferenceFrameRate:
          description: "Gets the framerate used as reference.\r\nPrefer AverageFrameRate,\
            \ if that is null or an unrealistic value\r\nthen fallback to RealFrameRate."
          format: float
          nullable: true
          readOnly: true
          type: number
        Profile:
          description: Gets or sets the profile.
          nullable: true
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/MediaStreamType'
          description: Gets or sets the type.
          enum:
          - Audio
          - Video
          - Subtitle
          - EmbeddedImage
          - Data
          - Lyric
          type: string
        AspectRatio:
          description: Gets or sets the aspect ratio.
          nullable: true
          type: string
        Index:
          description: Gets or sets the index.
          format: int32
          type: integer
        Score:
          description: Gets or sets the score.
          format: int32
          nullable: true
          type: integer
        IsExternal:
          description: Gets or sets a value indicating whether this instance is external.
          type: boolean
        DeliveryMethod:
          allOf:
          - $ref: '#/components/schemas/SubtitleDeliveryMethod'
          description: Gets or sets the method.
          enum:
          - Encode
          - Embed
          - External
          - Hls
          - Drop
          nullable: true
          type: string
        DeliveryUrl:
          description: Gets or sets the delivery URL.
          nullable: true
          type: string
        IsExternalUrl:
          description: Gets or sets a value indicating whether this instance is external
            URL.
          nullable: true
          type: boolean
        IsTextSubtitleStream:
          readOnly: true
          type: boolean
        SupportsExternalStream:
          description: "Gets or sets a value indicating whether [supports external\
            \ stream]."
          type: boolean
        Path:
          description: Gets or sets the filename.
          nullable: true
          type: string
        PixelFormat:
          description: Gets or sets the pixel format.
          nullable: true
          type: string
        Level:
          description: Gets or sets the level.
          format: double
          nullable: true
          type: number
        IsAnamorphic:
          description: Gets or sets whether this instance is anamorphic.
          nullable: true
          type: boolean
      type: object
    MediaStreamProtocol:
      description: "Media streaming protocol.\r\nLowercase for backwards compatibility."
      enum:
      - http
      - hls
      type: string
    MediaStreamType:
      description: Enum MediaStreamType.
      enum:
      - Audio
      - Video
      - Subtitle
      - EmbeddedImage
      - Data
      - Lyric
      type: string
    MediaType:
      description: Media types.
      enum:
      - Unknown
      - Video
      - Audio
      - Photo
      - Book
      type: string
    MediaUpdateInfoDto:
      additionalProperties: false
      description: Media Update Info Dto.
      example:
        Updates:
        - Path: Path
          UpdateType: UpdateType
        - Path: Path
          UpdateType: UpdateType
      properties:
        Updates:
          description: Gets or sets the list of updates.
          items:
            $ref: '#/components/schemas/MediaUpdateInfoPathDto'
          type: array
      type: object
    MediaUpdateInfoPathDto:
      additionalProperties: false
      description: The media update info path.
      example:
        Path: Path
        UpdateType: UpdateType
      properties:
        Path:
          description: Gets or sets media path.
          nullable: true
          type: string
        UpdateType:
          description: "Gets or sets media update type.\r\nCreated, Modified, Deleted."
          nullable: true
          type: string
      type: object
    MediaUrl:
      additionalProperties: false
      example:
        Url: Url
        Name: Name
      properties:
        Url:
          nullable: true
          type: string
        Name:
          nullable: true
          type: string
      type: object
    MessageCommand:
      additionalProperties: false
      example:
        Header: Header
        TimeoutMs: 0
        Text: Text
      properties:
        Header:
          nullable: true
          type: string
        Text:
          type: string
        TimeoutMs:
          format: int64
          nullable: true
          type: integer
      required:
      - Text
      type: object
    MetadataConfiguration:
      additionalProperties: false
      properties:
        UseFileCreationTimeForDateAdded:
          type: boolean
      type: object
    MetadataEditorInfo:
      additionalProperties: false
      example:
        ParentalRatingOptions:
        - Value: 0
          Name: Name
        - Value: 0
          Name: Name
        ContentType: unknown
        Countries:
        - TwoLetterISORegionName: TwoLetterISORegionName
          ThreeLetterISORegionName: ThreeLetterISORegionName
          DisplayName: DisplayName
          Name: Name
        - TwoLetterISORegionName: TwoLetterISORegionName
          ThreeLetterISORegionName: ThreeLetterISORegionName
          DisplayName: DisplayName
          Name: Name
        Cultures:
        - ThreeLetterISOLanguageNames:
          - ThreeLetterISOLanguageNames
          - ThreeLetterISOLanguageNames
          ThreeLetterISOLanguageName: ThreeLetterISOLanguageName
          DisplayName: DisplayName
          Name: Name
          TwoLetterISOLanguageName: TwoLetterISOLanguageName
        - ThreeLetterISOLanguageNames:
          - ThreeLetterISOLanguageNames
          - ThreeLetterISOLanguageNames
          ThreeLetterISOLanguageName: ThreeLetterISOLanguageName
          DisplayName: DisplayName
          Name: Name
          TwoLetterISOLanguageName: TwoLetterISOLanguageName
        ExternalIdInfos:
        - Type: Album
          Key: Key
          Name: Name
          UrlFormatString: UrlFormatString
        - Type: Album
          Key: Key
          Name: Name
          UrlFormatString: UrlFormatString
        ContentTypeOptions:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
      properties:
        ParentalRatingOptions:
          items:
            $ref: '#/components/schemas/ParentalRating'
          type: array
        Countries:
          items:
            $ref: '#/components/schemas/CountryInfo'
          type: array
        Cultures:
          items:
            $ref: '#/components/schemas/CultureDto'
          type: array
        ExternalIdInfos:
          items:
            $ref: '#/components/schemas/ExternalIdInfo'
          type: array
        ContentType:
          allOf:
          - $ref: '#/components/schemas/CollectionType'
          enum:
          - unknown
          - movies
          - tvshows
          - music
          - musicvideos
          - trailers
          - homevideos
          - boxsets
          - books
          - photos
          - livetv
          - playlists
          - folders
          nullable: true
          type: string
        ContentTypeOptions:
          items:
            $ref: '#/components/schemas/NameValuePair'
          type: array
      type: object
    MetadataField:
      description: Enum MetadataFields.
      enum:
      - Cast
      - Genres
      - ProductionLocations
      - Studios
      - Tags
      - Name
      - Overview
      - Runtime
      - OfficialRating
      type: string
    MetadataOptions:
      additionalProperties: false
      description: Class MetadataOptions.
      example:
        DisabledImageFetchers:
        - DisabledImageFetchers
        - DisabledImageFetchers
        DisabledMetadataSavers:
        - DisabledMetadataSavers
        - DisabledMetadataSavers
        MetadataFetcherOrder:
        - MetadataFetcherOrder
        - MetadataFetcherOrder
        ItemType: ItemType
        DisabledMetadataFetchers:
        - DisabledMetadataFetchers
        - DisabledMetadataFetchers
        ImageFetcherOrder:
        - ImageFetcherOrder
        - ImageFetcherOrder
        LocalMetadataReaderOrder:
        - LocalMetadataReaderOrder
        - LocalMetadataReaderOrder
      properties:
        ItemType:
          nullable: true
          type: string
        DisabledMetadataSavers:
          items:
            type: string
          nullable: true
          type: array
        LocalMetadataReaderOrder:
          items:
            type: string
          nullable: true
          type: array
        DisabledMetadataFetchers:
          items:
            type: string
          nullable: true
          type: array
        MetadataFetcherOrder:
          items:
            type: string
          nullable: true
          type: array
        DisabledImageFetchers:
          items:
            type: string
          nullable: true
          type: array
        ImageFetcherOrder:
          items:
            type: string
          nullable: true
          type: array
      type: object
    MetadataRefreshMode:
      enum:
      - None
      - ValidationOnly
      - Default
      - FullRefresh
      type: string
    MovePlaylistItemRequestDto:
      additionalProperties: false
      description: Class MovePlaylistItemRequestDto.
      example:
        PlaylistItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        NewIndex: 0
      properties:
        PlaylistItemId:
          description: Gets or sets the playlist identifier of the item.
          format: uuid
          type: string
        NewIndex:
          description: Gets or sets the new position.
          format: int32
          type: integer
      type: object
    MovieInfo:
      additionalProperties: false
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        OriginalTitle:
          description: Gets or sets the original title.
          nullable: true
          type: string
        Path:
          description: Gets or sets the path.
          nullable: true
          type: string
        MetadataLanguage:
          description: Gets or sets the metadata language.
          nullable: true
          type: string
        MetadataCountryCode:
          description: Gets or sets the metadata country code.
          nullable: true
          type: string
        ProviderIds:
          additionalProperties:
            nullable: true
            type: string
          description: Gets or sets the provider ids.
          nullable: true
          type: object
        Year:
          description: Gets or sets the year.
          format: int32
          nullable: true
          type: integer
        IndexNumber:
          format: int32
          nullable: true
          type: integer
        ParentIndexNumber:
          format: int32
          nullable: true
          type: integer
        PremiereDate:
          format: date-time
          nullable: true
          type: string
        IsAutomated:
          type: boolean
      type: object
    MovieInfoRemoteSearchQuery:
      additionalProperties: false
      example:
        SearchInfo: ""
        IncludeDisabledProviders: true
        SearchProviderName: SearchProviderName
        ItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        SearchInfo:
          allOf:
          - $ref: '#/components/schemas/MovieInfo'
          nullable: true
        ItemId:
          format: uuid
          type: string
        SearchProviderName:
          description: Gets or sets the provider name to search within if set.
          nullable: true
          type: string
        IncludeDisabledProviders:
          description: Gets or sets a value indicating whether disabled providers
            should be included.
          type: boolean
      type: object
    MusicVideoInfo:
      additionalProperties: false
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        OriginalTitle:
          description: Gets or sets the original title.
          nullable: true
          type: string
        Path:
          description: Gets or sets the path.
          nullable: true
          type: string
        MetadataLanguage:
          description: Gets or sets the metadata language.
          nullable: true
          type: string
        MetadataCountryCode:
          description: Gets or sets the metadata country code.
          nullable: true
          type: string
        ProviderIds:
          additionalProperties:
            nullable: true
            type: string
          description: Gets or sets the provider ids.
          nullable: true
          type: object
        Year:
          description: Gets or sets the year.
          format: int32
          nullable: true
          type: integer
        IndexNumber:
          format: int32
          nullable: true
          type: integer
        ParentIndexNumber:
          format: int32
          nullable: true
          type: integer
        PremiereDate:
          format: date-time
          nullable: true
          type: string
        IsAutomated:
          type: boolean
        Artists:
          items:
            type: string
          nullable: true
          type: array
      type: object
    MusicVideoInfoRemoteSearchQuery:
      additionalProperties: false
      example:
        SearchInfo: ""
        IncludeDisabledProviders: true
        SearchProviderName: SearchProviderName
        ItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        SearchInfo:
          allOf:
          - $ref: '#/components/schemas/MusicVideoInfo'
          nullable: true
        ItemId:
          format: uuid
          type: string
        SearchProviderName:
          description: Gets or sets the provider name to search within if set.
          nullable: true
          type: string
        IncludeDisabledProviders:
          description: Gets or sets a value indicating whether disabled providers
            should be included.
          type: boolean
      type: object
    NameGuidPair:
      additionalProperties: false
      example:
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Name: Name
      properties:
        Name:
          nullable: true
          type: string
        Id:
          format: uuid
          type: string
      type: object
    NameIdPair:
      additionalProperties: false
      example:
        Id: Id
        Name: Name
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        Id:
          description: Gets or sets the identifier.
          nullable: true
          type: string
      type: object
    NameValuePair:
      additionalProperties: false
      example:
        Value: Value
        Name: Name
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        Value:
          description: Gets or sets the value.
          nullable: true
          type: string
      type: object
    NetworkConfiguration:
      additionalProperties: false
      description: Defines the MediaBrowser.Common.Net.NetworkConfiguration.
      properties:
        BaseUrl:
          description: Gets or sets a value used to specify the URL prefix that your
            Jellyfin instance can be accessed at.
          type: string
        EnableHttps:
          description: Gets or sets a value indicating whether to use HTTPS.
          type: boolean
        RequireHttps:
          description: Gets or sets a value indicating whether the server should force
            connections over HTTPS.
          type: boolean
        CertificatePath:
          description: Gets or sets the filesystem path of an X.509 certificate to
            use for SSL.
          type: string
        CertificatePassword:
          description: Gets or sets the password required to access the X.509 certificate
            data in the file specified by MediaBrowser.Common.Net.NetworkConfiguration.CertificatePath.
          type: string
        InternalHttpPort:
          description: Gets or sets the internal HTTP server port.
          format: int32
          type: integer
        InternalHttpsPort:
          description: Gets or sets the internal HTTPS server port.
          format: int32
          type: integer
        PublicHttpPort:
          description: Gets or sets the public HTTP port.
          format: int32
          type: integer
        PublicHttpsPort:
          description: Gets or sets the public HTTPS port.
          format: int32
          type: integer
        AutoDiscovery:
          description: Gets or sets a value indicating whether Autodiscovery is enabled.
          type: boolean
        EnableUPnP:
          description: Gets or sets a value indicating whether to enable automatic
            port forwarding.
          type: boolean
        EnableIPv4:
          description: Gets or sets a value indicating whether IPv6 is enabled.
          type: boolean
        EnableIPv6:
          description: Gets or sets a value indicating whether IPv6 is enabled.
          type: boolean
        EnableRemoteAccess:
          description: Gets or sets a value indicating whether access from outside
            of the LAN is permitted.
          type: boolean
        LocalNetworkSubnets:
          description: Gets or sets the subnets that are deemed to make up the LAN.
          items:
            type: string
          type: array
        LocalNetworkAddresses:
          description: "Gets or sets the interface addresses which Jellyfin will bind\
            \ to. If empty, all interfaces will be used."
          items:
            type: string
          type: array
        KnownProxies:
          description: Gets or sets the known proxies.
          items:
            type: string
          type: array
        IgnoreVirtualInterfaces:
          description: Gets or sets a value indicating whether address names that
            match MediaBrowser.Common.Net.NetworkConfiguration.VirtualInterfaceNames
            should be ignored for the purposes of binding.
          type: boolean
        VirtualInterfaceNames:
          description: Gets or sets a value indicating the interface name prefixes
            that should be ignored. The list can be comma separated and values are
            case-insensitive. <seealso cref="P:MediaBrowser.Common.Net.NetworkConfiguration.IgnoreVirtualInterfaces"
            />.
          items:
            type: string
          type: array
        EnablePublishedServerUriByRequest:
          description: Gets or sets a value indicating whether the published server
            uri is based on information in HTTP requests.
          type: boolean
        PublishedServerUriBySubnet:
          description: "Gets or sets the PublishedServerUriBySubnet\r\nGets or sets\
            \ PublishedServerUri to advertise for specific subnets."
          items:
            type: string
          type: array
        RemoteIPFilter:
          description: Gets or sets the filter for remote IP connectivity. Used in
            conjunction with <seealso cref="P:MediaBrowser.Common.Net.NetworkConfiguration.IsRemoteIPFilterBlacklist"
            />.
          items:
            type: string
          type: array
        IsRemoteIPFilterBlacklist:
          description: Gets or sets a value indicating whether <seealso cref="P:MediaBrowser.Common.Net.NetworkConfiguration.RemoteIPFilter"
            /> contains a blacklist or a whitelist. Default is a whitelist.
          type: boolean
      type: object
    NewGroupRequestDto:
      additionalProperties: false
      description: Class NewGroupRequestDto.
      example:
        GroupName: GroupName
      properties:
        GroupName:
          description: Gets or sets the group name.
          type: string
      type: object
    NextItemRequestDto:
      additionalProperties: false
      description: Class NextItemRequestDto.
      example:
        PlaylistItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        PlaylistItemId:
          description: Gets or sets the playing item identifier.
          format: uuid
          type: string
      type: object
    OpenLiveStreamDto:
      additionalProperties: false
      description: Open live stream dto.
      example:
        DirectPlayProtocols:
        - File
        - File
        EnableDirectStream: true
        AlwaysBurnInSubtitleWhenTranscoding: true
        SubtitleStreamIndex: 5
        MaxAudioChannels: 5
        MaxStreamingBitrate: 0
        ItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        OpenToken: OpenToken
        StartTimeTicks: 6
        DeviceProfile: ""
        PlaySessionId: PlaySessionId
        UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        AudioStreamIndex: 1
        EnableDirectPlay: true
      properties:
        OpenToken:
          description: Gets or sets the open token.
          nullable: true
          type: string
        UserId:
          description: Gets or sets the user id.
          format: uuid
          nullable: true
          type: string
        PlaySessionId:
          description: Gets or sets the play session id.
          nullable: true
          type: string
        MaxStreamingBitrate:
          description: Gets or sets the max streaming bitrate.
          format: int32
          nullable: true
          type: integer
        StartTimeTicks:
          description: Gets or sets the start time in ticks.
          format: int64
          nullable: true
          type: integer
        AudioStreamIndex:
          description: Gets or sets the audio stream index.
          format: int32
          nullable: true
          type: integer
        SubtitleStreamIndex:
          description: Gets or sets the subtitle stream index.
          format: int32
          nullable: true
          type: integer
        MaxAudioChannels:
          description: Gets or sets the max audio channels.
          format: int32
          nullable: true
          type: integer
        ItemId:
          description: Gets or sets the item id.
          format: uuid
          nullable: true
          type: string
        EnableDirectPlay:
          description: Gets or sets a value indicating whether to enable direct play.
          nullable: true
          type: boolean
        EnableDirectStream:
          description: Gets or sets a value indicating whether to enale direct stream.
          nullable: true
          type: boolean
        AlwaysBurnInSubtitleWhenTranscoding:
          description: Gets or sets a value indicating whether always burn in subtitles
            when transcoding.
          nullable: true
          type: boolean
        DeviceProfile:
          allOf:
          - $ref: '#/components/schemas/DeviceProfile'
          description: Gets or sets the device profile.
          nullable: true
        DirectPlayProtocols:
          description: Gets or sets the device play protocols.
          items:
            $ref: '#/components/schemas/MediaProtocol'
          type: array
      type: object
    OutboundKeepAliveMessage:
      additionalProperties: false
      description: Keep alive websocket messages.
      properties:
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: KeepAlive
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    OutboundWebSocketMessage:
      description: Represents the list of possible outbound websocket types
      discriminator:
        mapping:
          ActivityLogEntry: '#/components/schemas/ActivityLogEntryMessage'
          ForceKeepAlive: '#/components/schemas/ForceKeepAliveMessage'
          GeneralCommand: '#/components/schemas/GeneralCommandMessage'
          LibraryChanged: '#/components/schemas/LibraryChangedMessage'
          KeepAlive: '#/components/schemas/OutboundKeepAliveMessage'
          Play: '#/components/schemas/PlayMessage'
          Playstate: '#/components/schemas/PlaystateMessage'
          PackageInstallationCancelled: '#/components/schemas/PluginInstallationCancelledMessage'
          PackageInstallationCompleted: '#/components/schemas/PluginInstallationCompletedMessage'
          PackageInstallationFailed: '#/components/schemas/PluginInstallationFailedMessage'
          PackageInstalling: '#/components/schemas/PluginInstallingMessage'
          PackageUninstalled: '#/components/schemas/PluginUninstalledMessage'
          RefreshProgress: '#/components/schemas/RefreshProgressMessage'
          RestartRequired: '#/components/schemas/RestartRequiredMessage'
          ScheduledTaskEnded: '#/components/schemas/ScheduledTaskEndedMessage'
          ScheduledTasksInfo: '#/components/schemas/ScheduledTasksInfoMessage'
          SeriesTimerCancelled: '#/components/schemas/SeriesTimerCancelledMessage'
          SeriesTimerCreated: '#/components/schemas/SeriesTimerCreatedMessage'
          ServerRestarting: '#/components/schemas/ServerRestartingMessage'
          ServerShuttingDown: '#/components/schemas/ServerShuttingDownMessage'
          Sessions: '#/components/schemas/SessionsMessage'
          SyncPlayCommand: '#/components/schemas/SyncPlayCommandMessage'
          SyncPlayGroupUpdate: '#/components/schemas/SyncPlayGroupUpdateCommandMessage'
          TimerCancelled: '#/components/schemas/TimerCancelledMessage'
          TimerCreated: '#/components/schemas/TimerCreatedMessage'
          UserDataChanged: '#/components/schemas/UserDataChangedMessage'
          UserDeleted: '#/components/schemas/UserDeletedMessage'
          UserUpdated: '#/components/schemas/UserUpdatedMessage'
        propertyName: MessageType
      oneOf:
      - $ref: '#/components/schemas/ActivityLogEntryMessage'
      - $ref: '#/components/schemas/ForceKeepAliveMessage'
      - $ref: '#/components/schemas/GeneralCommandMessage'
      - $ref: '#/components/schemas/LibraryChangedMessage'
      - $ref: '#/components/schemas/OutboundKeepAliveMessage'
      - $ref: '#/components/schemas/PlayMessage'
      - $ref: '#/components/schemas/PlaystateMessage'
      - $ref: '#/components/schemas/PluginInstallationCancelledMessage'
      - $ref: '#/components/schemas/PluginInstallationCompletedMessage'
      - $ref: '#/components/schemas/PluginInstallationFailedMessage'
      - $ref: '#/components/schemas/PluginInstallingMessage'
      - $ref: '#/components/schemas/PluginUninstalledMessage'
      - $ref: '#/components/schemas/RefreshProgressMessage'
      - $ref: '#/components/schemas/RestartRequiredMessage'
      - $ref: '#/components/schemas/ScheduledTaskEndedMessage'
      - $ref: '#/components/schemas/ScheduledTasksInfoMessage'
      - $ref: '#/components/schemas/SeriesTimerCancelledMessage'
      - $ref: '#/components/schemas/SeriesTimerCreatedMessage'
      - $ref: '#/components/schemas/ServerRestartingMessage'
      - $ref: '#/components/schemas/ServerShuttingDownMessage'
      - $ref: '#/components/schemas/SessionsMessage'
      - $ref: '#/components/schemas/SyncPlayCommandMessage'
      - $ref: '#/components/schemas/SyncPlayGroupUpdateCommandMessage'
      - $ref: '#/components/schemas/TimerCancelledMessage'
      - $ref: '#/components/schemas/TimerCreatedMessage'
      - $ref: '#/components/schemas/UserDataChangedMessage'
      - $ref: '#/components/schemas/UserDeletedMessage'
      - $ref: '#/components/schemas/UserUpdatedMessage'
      type: object
    PackageInfo:
      additionalProperties: false
      description: Class PackageInfo.
      example:
        owner: owner
        overview: overview
        versions:
        - sourceUrl: sourceUrl
          targetAbi: targetAbi
          checksum: checksum
          changelog: changelog
          repositoryName: repositoryName
          version: version
          VersionNumber: VersionNumber
          timestamp: timestamp
          repositoryUrl: repositoryUrl
        - sourceUrl: sourceUrl
          targetAbi: targetAbi
          checksum: checksum
          changelog: changelog
          repositoryName: repositoryName
          version: version
          VersionNumber: VersionNumber
          timestamp: timestamp
          repositoryUrl: repositoryUrl
        imageUrl: imageUrl
        name: name
        description: description
        guid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        category: category
      properties:
        name:
          description: Gets or sets the name.
          type: string
        description:
          description: Gets or sets a long description of the plugin containing features
            or helpful explanations.
          type: string
        overview:
          description: Gets or sets a short overview of what the plugin does.
          type: string
        owner:
          description: Gets or sets the owner.
          type: string
        category:
          description: Gets or sets the category.
          type: string
        guid:
          description: "Gets or sets the guid of the assembly associated with this\
            \ plugin.\r\nThis is used to identify the proper item for automatic updates."
          format: uuid
          type: string
        versions:
          description: Gets or sets the versions.
          items:
            $ref: '#/components/schemas/VersionInfo'
          type: array
        imageUrl:
          description: Gets or sets the image url for the package.
          nullable: true
          type: string
      type: object
    ParentalRating:
      additionalProperties: false
      description: Class ParentalRating.
      example:
        Value: 0
        Name: Name
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        Value:
          description: Gets or sets the value.
          format: int32
          nullable: true
          type: integer
      type: object
    PathSubstitution:
      additionalProperties: false
      description: Defines the MediaBrowser.Model.Configuration.PathSubstitution.
      example:
        From: From
        To: To
      properties:
        From:
          description: Gets or sets the value to substitute.
          type: string
        To:
          description: Gets or sets the value to substitution with.
          type: string
      type: object
    PersonKind:
      description: The person kind.
      enum:
      - Unknown
      - Actor
      - Director
      - Composer
      - Writer
      - GuestStar
      - Producer
      - Conductor
      - Lyricist
      - Arranger
      - Engineer
      - Mixer
      - Remixer
      - Creator
      - Artist
      - AlbumArtist
      - Author
      - Illustrator
      - Penciller
      - Inker
      - Colorist
      - Letterer
      - CoverArtist
      - Editor
      - Translator
      type: string
    PersonLookupInfo:
      additionalProperties: false
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        OriginalTitle:
          description: Gets or sets the original title.
          nullable: true
          type: string
        Path:
          description: Gets or sets the path.
          nullable: true
          type: string
        MetadataLanguage:
          description: Gets or sets the metadata language.
          nullable: true
          type: string
        MetadataCountryCode:
          description: Gets or sets the metadata country code.
          nullable: true
          type: string
        ProviderIds:
          additionalProperties:
            nullable: true
            type: string
          description: Gets or sets the provider ids.
          nullable: true
          type: object
        Year:
          description: Gets or sets the year.
          format: int32
          nullable: true
          type: integer
        IndexNumber:
          format: int32
          nullable: true
          type: integer
        ParentIndexNumber:
          format: int32
          nullable: true
          type: integer
        PremiereDate:
          format: date-time
          nullable: true
          type: string
        IsAutomated:
          type: boolean
      type: object
    PersonLookupInfoRemoteSearchQuery:
      additionalProperties: false
      example:
        SearchInfo: ""
        IncludeDisabledProviders: true
        SearchProviderName: SearchProviderName
        ItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        SearchInfo:
          allOf:
          - $ref: '#/components/schemas/PersonLookupInfo'
          nullable: true
        ItemId:
          format: uuid
          type: string
        SearchProviderName:
          description: Gets or sets the provider name to search within if set.
          nullable: true
          type: string
        IncludeDisabledProviders:
          description: Gets or sets a value indicating whether disabled providers
            should be included.
          type: boolean
      type: object
    PingRequestDto:
      additionalProperties: false
      description: Class PingRequestDto.
      example:
        Ping: 0
      properties:
        Ping:
          description: Gets or sets the ping time.
          format: int64
          type: integer
      type: object
    PinRedeemResult:
      additionalProperties: false
      example:
        UsersReset:
        - UsersReset
        - UsersReset
        Success: true
      properties:
        Success:
          description: Gets or sets a value indicating whether this MediaBrowser.Model.Users.PinRedeemResult
            is success.
          type: boolean
        UsersReset:
          description: Gets or sets the users reset.
          items:
            type: string
          type: array
      type: object
    PlayAccess:
      enum:
      - Full
      - None
      type: string
    PlaybackErrorCode:
      enum:
      - NotAllowed
      - NoCompatibleStream
      - RateLimitExceeded
      type: string
    PlaybackInfoDto:
      additionalProperties: false
      description: Plabyback info dto.
      example:
        EnableDirectStream: true
        AutoOpenLiveStream: true
        MediaSourceId: MediaSourceId
        AlwaysBurnInSubtitleWhenTranscoding: true
        SubtitleStreamIndex: 5
        MaxAudioChannels: 5
        MaxStreamingBitrate: 0
        AllowVideoStreamCopy: true
        StartTimeTicks: 6
        DeviceProfile: ""
        UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        AudioStreamIndex: 1
        AllowAudioStreamCopy: true
        LiveStreamId: LiveStreamId
        EnableTranscoding: true
        EnableDirectPlay: true
      properties:
        UserId:
          description: Gets or sets the playback userId.
          format: uuid
          nullable: true
          type: string
        MaxStreamingBitrate:
          description: Gets or sets the max streaming bitrate.
          format: int32
          nullable: true
          type: integer
        StartTimeTicks:
          description: Gets or sets the start time in ticks.
          format: int64
          nullable: true
          type: integer
        AudioStreamIndex:
          description: Gets or sets the audio stream index.
          format: int32
          nullable: true
          type: integer
        SubtitleStreamIndex:
          description: Gets or sets the subtitle stream index.
          format: int32
          nullable: true
          type: integer
        MaxAudioChannels:
          description: Gets or sets the max audio channels.
          format: int32
          nullable: true
          type: integer
        MediaSourceId:
          description: Gets or sets the media source id.
          nullable: true
          type: string
        LiveStreamId:
          description: Gets or sets the live stream id.
          nullable: true
          type: string
        DeviceProfile:
          allOf:
          - $ref: '#/components/schemas/DeviceProfile'
          description: Gets or sets the device profile.
          nullable: true
        EnableDirectPlay:
          description: Gets or sets a value indicating whether to enable direct play.
          nullable: true
          type: boolean
        EnableDirectStream:
          description: Gets or sets a value indicating whether to enable direct stream.
          nullable: true
          type: boolean
        EnableTranscoding:
          description: Gets or sets a value indicating whether to enable transcoding.
          nullable: true
          type: boolean
        AllowVideoStreamCopy:
          description: Gets or sets a value indicating whether to enable video stream
            copy.
          nullable: true
          type: boolean
        AllowAudioStreamCopy:
          description: Gets or sets a value indicating whether to allow audio stream
            copy.
          nullable: true
          type: boolean
        AutoOpenLiveStream:
          description: Gets or sets a value indicating whether to auto open the live
            stream.
          nullable: true
          type: boolean
        AlwaysBurnInSubtitleWhenTranscoding:
          description: Gets or sets a value indicating whether always burn in subtitles
            when transcoding.
          nullable: true
          type: boolean
      type: object
    PlaybackInfoResponse:
      additionalProperties: false
      description: Class PlaybackInfoResponse.
      example:
        PlaySessionId: PlaySessionId
        MediaSources:
        - EncoderPath: EncoderPath
          RequiredHttpHeaders:
            key: RequiredHttpHeaders
          RunTimeTicks: 5
          MediaStreams:
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          Size: 5
          Video3DFormat: HalfSideBySide
          BufferMs: 2
          Timestamp: None
          Name: Name
          RequiresOpening: true
          FallbackMaxStreamingBitrate: 6
          SupportsDirectStream: true
          VideoType: VideoFile
          RequiresClosing: true
          Container: Container
          IsoType: Dvd
          HasSegments: true
          LiveStreamId: LiveStreamId
          RequiresLooping: true
          Protocol: File
          DefaultSubtitleStreamIndex: 3
          GenPtsInput: true
          IsInfiniteStream: true
          Path: Path
          IsRemote: true
          EncoderProtocol: File
          IgnoreIndex: true
          SupportsDirectPlay: true
          TranscodingSubProtocol: http
          Formats:
          - Formats
          - Formats
          AnalyzeDurationMs: 5
          Bitrate: 6
          OpenToken: OpenToken
          SupportsProbing: true
          Type: Default
          MediaAttachments:
          - CodecTag: CodecTag
            Comment: Comment
            DeliveryUrl: DeliveryUrl
            Codec: Codec
            FileName: FileName
            Index: 2
            MimeType: MimeType
          - CodecTag: CodecTag
            Comment: Comment
            DeliveryUrl: DeliveryUrl
            Codec: Codec
            FileName: FileName
            Index: 2
            MimeType: MimeType
          ReadAtNativeFramerate: true
          ETag: ETag
          TranscodingContainer: TranscodingContainer
          IgnoreDts: true
          UseMostCompatibleTranscodingProfile: false
          TranscodingUrl: TranscodingUrl
          Id: Id
          SupportsTranscoding: true
          DefaultAudioStreamIndex: 6
        - EncoderPath: EncoderPath
          RequiredHttpHeaders:
            key: RequiredHttpHeaders
          RunTimeTicks: 5
          MediaStreams:
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          Size: 5
          Video3DFormat: HalfSideBySide
          BufferMs: 2
          Timestamp: None
          Name: Name
          RequiresOpening: true
          FallbackMaxStreamingBitrate: 6
          SupportsDirectStream: true
          VideoType: VideoFile
          RequiresClosing: true
          Container: Container
          IsoType: Dvd
          HasSegments: true
          LiveStreamId: LiveStreamId
          RequiresLooping: true
          Protocol: File
          DefaultSubtitleStreamIndex: 3
          GenPtsInput: true
          IsInfiniteStream: true
          Path: Path
          IsRemote: true
          EncoderProtocol: File
          IgnoreIndex: true
          SupportsDirectPlay: true
          TranscodingSubProtocol: http
          Formats:
          - Formats
          - Formats
          AnalyzeDurationMs: 5
          Bitrate: 6
          OpenToken: OpenToken
          SupportsProbing: true
          Type: Default
          MediaAttachments:
          - CodecTag: CodecTag
            Comment: Comment
            DeliveryUrl: DeliveryUrl
            Codec: Codec
            FileName: FileName
            Index: 2
            MimeType: MimeType
          - CodecTag: CodecTag
            Comment: Comment
            DeliveryUrl: DeliveryUrl
            Codec: Codec
            FileName: FileName
            Index: 2
            MimeType: MimeType
          ReadAtNativeFramerate: true
          ETag: ETag
          TranscodingContainer: TranscodingContainer
          IgnoreDts: true
          UseMostCompatibleTranscodingProfile: false
          TranscodingUrl: TranscodingUrl
          Id: Id
          SupportsTranscoding: true
          DefaultAudioStreamIndex: 6
        ErrorCode: NotAllowed
      properties:
        MediaSources:
          description: Gets or sets the media sources.
          items:
            $ref: '#/components/schemas/MediaSourceInfo'
          type: array
        PlaySessionId:
          description: Gets or sets the play session identifier.
          nullable: true
          type: string
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/PlaybackErrorCode'
          description: Gets or sets the error code.
          enum:
          - NotAllowed
          - NoCompatibleStream
          - RateLimitExceeded
          nullable: true
          type: string
      type: object
    PlaybackOrder:
      description: Enum PlaybackOrder.
      enum:
      - Default
      - Shuffle
      type: string
    PlaybackProgressInfo:
      additionalProperties: false
      description: Class PlaybackProgressInfo.
      example:
        Brightness: 2
        PositionTicks: 1
        PlaybackOrder: Default
        MediaSourceId: MediaSourceId
        NowPlayingQueue:
        - PlaylistItemId: PlaylistItemId
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - PlaylistItemId: PlaylistItemId
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        PlaylistItemId: PlaylistItemId
        IsPaused: true
        SubtitleStreamIndex: 6
        ItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Item: ""
        AspectRatio: AspectRatio
        RepeatMode: RepeatNone
        PlaySessionId: PlaySessionId
        CanSeek: true
        PlaybackStartTimeTicks: 5
        PlayMethod: Transcode
        AudioStreamIndex: 0
        IsMuted: true
        VolumeLevel: 5
        LiveStreamId: LiveStreamId
        SessionId: SessionId
      properties:
        CanSeek:
          description: Gets or sets a value indicating whether this instance can seek.
          type: boolean
        Item:
          allOf:
          - $ref: '#/components/schemas/BaseItemDto'
          description: Gets or sets the item.
          nullable: true
        ItemId:
          description: Gets or sets the item identifier.
          format: uuid
          type: string
        SessionId:
          description: Gets or sets the session id.
          nullable: true
          type: string
        MediaSourceId:
          description: Gets or sets the media version identifier.
          nullable: true
          type: string
        AudioStreamIndex:
          description: Gets or sets the index of the audio stream.
          format: int32
          nullable: true
          type: integer
        SubtitleStreamIndex:
          description: Gets or sets the index of the subtitle stream.
          format: int32
          nullable: true
          type: integer
        IsPaused:
          description: Gets or sets a value indicating whether this instance is paused.
          type: boolean
        IsMuted:
          description: Gets or sets a value indicating whether this instance is muted.
          type: boolean
        PositionTicks:
          description: Gets or sets the position ticks.
          format: int64
          nullable: true
          type: integer
        PlaybackStartTimeTicks:
          format: int64
          nullable: true
          type: integer
        VolumeLevel:
          description: Gets or sets the volume level.
          format: int32
          nullable: true
          type: integer
        Brightness:
          format: int32
          nullable: true
          type: integer
        AspectRatio:
          nullable: true
          type: string
        PlayMethod:
          allOf:
          - $ref: '#/components/schemas/PlayMethod'
          description: Gets or sets the play method.
          enum:
          - Transcode
          - DirectStream
          - DirectPlay
          type: string
        LiveStreamId:
          description: Gets or sets the live stream identifier.
          nullable: true
          type: string
        PlaySessionId:
          description: Gets or sets the play session identifier.
          nullable: true
          type: string
        RepeatMode:
          allOf:
          - $ref: '#/components/schemas/RepeatMode'
          description: Gets or sets the repeat mode.
          enum:
          - RepeatNone
          - RepeatAll
          - RepeatOne
          type: string
        PlaybackOrder:
          allOf:
          - $ref: '#/components/schemas/PlaybackOrder'
          description: Gets or sets the playback order.
          enum:
          - Default
          - Shuffle
          type: string
        NowPlayingQueue:
          items:
            $ref: '#/components/schemas/QueueItem'
          nullable: true
          type: array
        PlaylistItemId:
          nullable: true
          type: string
      type: object
    PlaybackRequestType:
      description: Enum PlaybackRequestType.
      enum:
      - Play
      - SetPlaylistItem
      - RemoveFromPlaylist
      - MovePlaylistItem
      - Queue
      - Unpause
      - Pause
      - Stop
      - Seek
      - Buffer
      - Ready
      - NextItem
      - PreviousItem
      - SetRepeatMode
      - SetShuffleMode
      - Ping
      - IgnoreWait
      type: string
    PlaybackStartInfo:
      additionalProperties: false
      description: Class PlaybackStartInfo.
      example:
        Brightness: 2
        PositionTicks: 1
        PlaybackOrder: Default
        MediaSourceId: MediaSourceId
        NowPlayingQueue:
        - PlaylistItemId: PlaylistItemId
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - PlaylistItemId: PlaylistItemId
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        PlaylistItemId: PlaylistItemId
        IsPaused: true
        SubtitleStreamIndex: 6
        ItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Item: ""
        AspectRatio: AspectRatio
        RepeatMode: RepeatNone
        PlaySessionId: PlaySessionId
        CanSeek: true
        PlaybackStartTimeTicks: 5
        PlayMethod: Transcode
        AudioStreamIndex: 0
        IsMuted: true
        VolumeLevel: 5
        LiveStreamId: LiveStreamId
        SessionId: SessionId
      properties:
        CanSeek:
          description: Gets or sets a value indicating whether this instance can seek.
          type: boolean
        Item:
          allOf:
          - $ref: '#/components/schemas/BaseItemDto'
          description: Gets or sets the item.
          nullable: true
        ItemId:
          description: Gets or sets the item identifier.
          format: uuid
          type: string
        SessionId:
          description: Gets or sets the session id.
          nullable: true
          type: string
        MediaSourceId:
          description: Gets or sets the media version identifier.
          nullable: true
          type: string
        AudioStreamIndex:
          description: Gets or sets the index of the audio stream.
          format: int32
          nullable: true
          type: integer
        SubtitleStreamIndex:
          description: Gets or sets the index of the subtitle stream.
          format: int32
          nullable: true
          type: integer
        IsPaused:
          description: Gets or sets a value indicating whether this instance is paused.
          type: boolean
        IsMuted:
          description: Gets or sets a value indicating whether this instance is muted.
          type: boolean
        PositionTicks:
          description: Gets or sets the position ticks.
          format: int64
          nullable: true
          type: integer
        PlaybackStartTimeTicks:
          format: int64
          nullable: true
          type: integer
        VolumeLevel:
          description: Gets or sets the volume level.
          format: int32
          nullable: true
          type: integer
        Brightness:
          format: int32
          nullable: true
          type: integer
        AspectRatio:
          nullable: true
          type: string
        PlayMethod:
          allOf:
          - $ref: '#/components/schemas/PlayMethod'
          description: Gets or sets the play method.
          enum:
          - Transcode
          - DirectStream
          - DirectPlay
          type: string
        LiveStreamId:
          description: Gets or sets the live stream identifier.
          nullable: true
          type: string
        PlaySessionId:
          description: Gets or sets the play session identifier.
          nullable: true
          type: string
        RepeatMode:
          allOf:
          - $ref: '#/components/schemas/RepeatMode'
          description: Gets or sets the repeat mode.
          enum:
          - RepeatNone
          - RepeatAll
          - RepeatOne
          type: string
        PlaybackOrder:
          allOf:
          - $ref: '#/components/schemas/PlaybackOrder'
          description: Gets or sets the playback order.
          enum:
          - Default
          - Shuffle
          type: string
        NowPlayingQueue:
          items:
            $ref: '#/components/schemas/QueueItem'
          nullable: true
          type: array
        PlaylistItemId:
          nullable: true
          type: string
      type: object
    PlaybackStopInfo:
      additionalProperties: false
      description: Class PlaybackStopInfo.
      example:
        Item: ""
        PlaySessionId: PlaySessionId
        PositionTicks: 0
        Failed: true
        MediaSourceId: MediaSourceId
        LiveStreamId: LiveStreamId
        PlaylistItemId: PlaylistItemId
        NowPlayingQueue:
        - PlaylistItemId: PlaylistItemId
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - PlaylistItemId: PlaylistItemId
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        SessionId: SessionId
        NextMediaType: NextMediaType
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/BaseItemDto'
          description: Gets or sets the item.
          nullable: true
        ItemId:
          description: Gets or sets the item identifier.
          format: uuid
          type: string
        SessionId:
          description: Gets or sets the session id.
          nullable: true
          type: string
        MediaSourceId:
          description: Gets or sets the media version identifier.
          nullable: true
          type: string
        PositionTicks:
          description: Gets or sets the position ticks.
          format: int64
          nullable: true
          type: integer
        LiveStreamId:
          description: Gets or sets the live stream identifier.
          nullable: true
          type: string
        PlaySessionId:
          description: Gets or sets the play session identifier.
          nullable: true
          type: string
        Failed:
          description: Gets or sets a value indicating whether this MediaBrowser.Model.Session.PlaybackStopInfo
            is failed.
          type: boolean
        NextMediaType:
          nullable: true
          type: string
        PlaylistItemId:
          nullable: true
          type: string
        NowPlayingQueue:
          items:
            $ref: '#/components/schemas/QueueItem'
          nullable: true
          type: array
      type: object
    PlayCommand:
      description: Enum PlayCommand.
      enum:
      - PlayNow
      - PlayNext
      - PlayLast
      - PlayInstantMix
      - PlayShuffle
      type: string
    PlayerStateInfo:
      additionalProperties: false
      properties:
        PositionTicks:
          description: Gets or sets the now playing position ticks.
          format: int64
          nullable: true
          type: integer
        CanSeek:
          description: Gets or sets a value indicating whether this instance can seek.
          type: boolean
        IsPaused:
          description: Gets or sets a value indicating whether this instance is paused.
          type: boolean
        IsMuted:
          description: Gets or sets a value indicating whether this instance is muted.
          type: boolean
        VolumeLevel:
          description: Gets or sets the volume level.
          format: int32
          nullable: true
          type: integer
        AudioStreamIndex:
          description: Gets or sets the index of the now playing audio stream.
          format: int32
          nullable: true
          type: integer
        SubtitleStreamIndex:
          description: Gets or sets the index of the now playing subtitle stream.
          format: int32
          nullable: true
          type: integer
        MediaSourceId:
          description: Gets or sets the now playing media version identifier.
          nullable: true
          type: string
        PlayMethod:
          allOf:
          - $ref: '#/components/schemas/PlayMethod'
          description: Gets or sets the play method.
          enum:
          - Transcode
          - DirectStream
          - DirectPlay
          nullable: true
          type: string
        RepeatMode:
          allOf:
          - $ref: '#/components/schemas/RepeatMode'
          description: Gets or sets the repeat mode.
          enum:
          - RepeatNone
          - RepeatAll
          - RepeatOne
          type: string
        PlaybackOrder:
          allOf:
          - $ref: '#/components/schemas/PlaybackOrder'
          description: Gets or sets the playback order.
          enum:
          - Default
          - Shuffle
          type: string
        LiveStreamId:
          description: Gets or sets the now playing live stream identifier.
          nullable: true
          type: string
      type: object
    PlaylistCreationResult:
      additionalProperties: false
      example:
        Id: Id
      properties:
        Id:
          type: string
      type: object
    PlaylistDto:
      additionalProperties: false
      description: DTO for playlists.
      example:
        OpenAccess: true
        Shares:
        - UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          CanEdit: true
        - UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          CanEdit: true
        ItemIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        OpenAccess:
          description: Gets or sets a value indicating whether the playlist is publicly
            readable.
          type: boolean
        Shares:
          description: Gets or sets the share permissions.
          items:
            $ref: '#/components/schemas/PlaylistUserPermissions'
          type: array
        ItemIds:
          description: Gets or sets the item ids.
          items:
            format: uuid
            type: string
          type: array
      type: object
    PlaylistUserPermissions:
      additionalProperties: false
      description: Class to hold data on user permissions for playlists.
      example:
        UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        CanEdit: true
      properties:
        UserId:
          description: Gets or sets the user id.
          format: uuid
          type: string
        CanEdit:
          description: Gets or sets a value indicating whether the user has edit permissions.
          type: boolean
      type: object
    PlayMessage:
      additionalProperties: false
      description: Play command websocket message.
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/PlayRequest'
          description: Gets or sets the data.
          nullable: true
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: Play
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    PlayMethod:
      enum:
      - Transcode
      - DirectStream
      - DirectPlay
      type: string
    PlayQueueUpdate:
      additionalProperties: false
      description: Class PlayQueueUpdate.
      properties:
        Reason:
          allOf:
          - $ref: '#/components/schemas/PlayQueueUpdateReason'
          description: Gets the request type that originated this update.
          enum:
          - NewPlaylist
          - SetCurrentItem
          - RemoveItems
          - MoveItem
          - Queue
          - QueueNext
          - NextItem
          - PreviousItem
          - RepeatMode
          - ShuffleMode
          type: string
        LastUpdate:
          description: Gets the UTC time of the last change to the playing queue.
          format: date-time
          type: string
        Playlist:
          description: Gets the playlist.
          items:
            $ref: '#/components/schemas/SyncPlayQueueItem'
          type: array
        PlayingItemIndex:
          description: Gets the playing item index in the playlist.
          format: int32
          type: integer
        StartPositionTicks:
          description: Gets the start position ticks.
          format: int64
          type: integer
        IsPlaying:
          description: Gets a value indicating whether the current item is playing.
          type: boolean
        ShuffleMode:
          allOf:
          - $ref: '#/components/schemas/GroupShuffleMode'
          description: Gets the shuffle mode.
          enum:
          - Sorted
          - Shuffle
          type: string
        RepeatMode:
          allOf:
          - $ref: '#/components/schemas/GroupRepeatMode'
          description: Gets the repeat mode.
          enum:
          - RepeatOne
          - RepeatAll
          - RepeatNone
          type: string
      type: object
    PlayQueueUpdateGroupUpdate:
      additionalProperties: false
      description: Class GroupUpdate.
      properties:
        GroupId:
          description: Gets the group identifier.
          format: uuid
          readOnly: true
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/GroupUpdateType'
          description: Gets the update type.
          enum:
          - UserJoined
          - UserLeft
          - GroupJoined
          - GroupLeft
          - StateUpdate
          - PlayQueue
          - NotInGroup
          - GroupDoesNotExist
          - CreateGroupDenied
          - JoinGroupDenied
          - LibraryAccessDenied
          type: string
        Data:
          allOf:
          - $ref: '#/components/schemas/PlayQueueUpdate'
          description: Gets the update data.
      type: object
    PlayQueueUpdateReason:
      description: Enum PlayQueueUpdateReason.
      enum:
      - NewPlaylist
      - SetCurrentItem
      - RemoveItems
      - MoveItem
      - Queue
      - QueueNext
      - NextItem
      - PreviousItem
      - RepeatMode
      - ShuffleMode
      type: string
    PlayRequest:
      additionalProperties: false
      description: Class PlayRequest.
      properties:
        ItemIds:
          description: Gets or sets the item ids.
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        StartPositionTicks:
          description: Gets or sets the start position ticks that the first item should
            be played at.
          format: int64
          nullable: true
          type: integer
        PlayCommand:
          allOf:
          - $ref: '#/components/schemas/PlayCommand'
          description: Gets or sets the play command.
          enum:
          - PlayNow
          - PlayNext
          - PlayLast
          - PlayInstantMix
          - PlayShuffle
          type: string
        ControllingUserId:
          description: Gets or sets the controlling user identifier.
          format: uuid
          type: string
        SubtitleStreamIndex:
          format: int32
          nullable: true
          type: integer
        AudioStreamIndex:
          format: int32
          nullable: true
          type: integer
        MediaSourceId:
          nullable: true
          type: string
        StartIndex:
          format: int32
          nullable: true
          type: integer
      type: object
    PlayRequestDto:
      additionalProperties: false
      description: Class PlayRequestDto.
      example:
        PlayingQueue:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        StartPositionTicks: 6
        PlayingItemPosition: 0
      properties:
        PlayingQueue:
          description: Gets or sets the playing queue.
          items:
            format: uuid
            type: string
          type: array
        PlayingItemPosition:
          description: Gets or sets the position of the playing item in the queue.
          format: int32
          type: integer
        StartPositionTicks:
          description: Gets or sets the start position ticks.
          format: int64
          type: integer
      type: object
    PlaystateCommand:
      description: Enum PlaystateCommand.
      enum:
      - Stop
      - Pause
      - Unpause
      - NextTrack
      - PreviousTrack
      - Seek
      - Rewind
      - FastForward
      - PlayPause
      type: string
    PlaystateMessage:
      additionalProperties: false
      description: Playstate message.
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/PlaystateRequest'
          description: Gets or sets the data.
          nullable: true
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: Playstate
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    PlaystateRequest:
      additionalProperties: false
      properties:
        Command:
          allOf:
          - $ref: '#/components/schemas/PlaystateCommand'
          description: Enum PlaystateCommand.
          enum:
          - Stop
          - Pause
          - Unpause
          - NextTrack
          - PreviousTrack
          - Seek
          - Rewind
          - FastForward
          - PlayPause
          type: string
        SeekPositionTicks:
          format: int64
          nullable: true
          type: integer
        ControllingUserId:
          description: Gets or sets the controlling user identifier.
          nullable: true
          type: string
      type: object
    PluginInfo:
      additionalProperties: false
      description: This is a serializable stub class that is used by the api to provide
        information about installed plugins.
      example:
        Status: Active
        Description: Description
        Version: Version
        HasImage: true
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ConfigurationFileName: ConfigurationFileName
        CanUninstall: true
        Name: Name
      properties:
        Name:
          description: Gets or sets the name.
          type: string
        Version:
          description: Gets or sets the version.
          type: string
        ConfigurationFileName:
          description: Gets or sets the name of the configuration file.
          nullable: true
          type: string
        Description:
          description: Gets or sets the description.
          type: string
        Id:
          description: Gets or sets the unique id.
          format: uuid
          type: string
        CanUninstall:
          description: Gets or sets a value indicating whether the plugin can be uninstalled.
          type: boolean
        HasImage:
          description: Gets or sets a value indicating whether this plugin has a valid
            image.
          type: boolean
        Status:
          allOf:
          - $ref: '#/components/schemas/PluginStatus'
          description: Gets or sets a value indicating the status of the plugin.
          enum:
          - Active
          - Restart
          - Deleted
          - Superceded
          - Malfunctioned
          - NotSupported
          - Disabled
          type: string
      type: object
    PluginInstallationCancelledMessage:
      additionalProperties: false
      description: Plugin installation cancelled message.
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/InstallationInfo'
          description: Gets or sets the data.
          nullable: true
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: PackageInstallationCancelled
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    PluginInstallationCompletedMessage:
      additionalProperties: false
      description: Plugin installation completed message.
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/InstallationInfo'
          description: Gets or sets the data.
          nullable: true
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: PackageInstallationCompleted
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    PluginInstallationFailedMessage:
      additionalProperties: false
      description: Plugin installation failed message.
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/InstallationInfo'
          description: Gets or sets the data.
          nullable: true
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: PackageInstallationFailed
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    PluginInstallingMessage:
      additionalProperties: false
      description: Package installing message.
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/InstallationInfo'
          description: Gets or sets the data.
          nullable: true
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: PackageInstalling
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    PluginStatus:
      description: Plugin load status.
      enum:
      - Active
      - Restart
      - Deleted
      - Superceded
      - Malfunctioned
      - NotSupported
      - Disabled
      type: string
    PluginUninstalledMessage:
      additionalProperties: false
      description: Plugin uninstalled message.
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/PluginInfo'
          description: Gets or sets the data.
          nullable: true
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: PackageUninstalled
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    PreviousItemRequestDto:
      additionalProperties: false
      description: Class PreviousItemRequestDto.
      example:
        PlaylistItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        PlaylistItemId:
          description: Gets or sets the playing item identifier.
          format: uuid
          type: string
      type: object
    ProblemDetails:
      additionalProperties: {}
      example:
        instance: instance
        detail: detail
        type: type
        title: title
        status: 0
      properties:
        type:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        detail:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
      type: object
    ProcessPriorityClass:
      enum:
      - Normal
      - Idle
      - High
      - RealTime
      - BelowNormal
      - AboveNormal
      type: string
    ProfileCondition:
      additionalProperties: false
      properties:
        Condition:
          allOf:
          - $ref: '#/components/schemas/ProfileConditionType'
          enum:
          - Equals
          - NotEquals
          - LessThanEqual
          - GreaterThanEqual
          - EqualsAny
          type: string
        Property:
          allOf:
          - $ref: '#/components/schemas/ProfileConditionValue'
          enum:
          - AudioChannels
          - AudioBitrate
          - AudioProfile
          - Width
          - Height
          - Has64BitOffsets
          - PacketLength
          - VideoBitDepth
          - VideoBitrate
          - VideoFramerate
          - VideoLevel
          - VideoProfile
          - VideoTimestamp
          - IsAnamorphic
          - RefFrames
          - NumAudioStreams
          - NumVideoStreams
          - IsSecondaryAudio
          - VideoCodecTag
          - IsAvc
          - IsInterlaced
          - AudioSampleRate
          - AudioBitDepth
          - VideoRangeType
          type: string
        Value:
          nullable: true
          type: string
        IsRequired:
          type: boolean
      type: object
    ProfileConditionType:
      enum:
      - Equals
      - NotEquals
      - LessThanEqual
      - GreaterThanEqual
      - EqualsAny
      type: string
    ProfileConditionValue:
      enum:
      - AudioChannels
      - AudioBitrate
      - AudioProfile
      - Width
      - Height
      - Has64BitOffsets
      - PacketLength
      - VideoBitDepth
      - VideoBitrate
      - VideoFramerate
      - VideoLevel
      - VideoProfile
      - VideoTimestamp
      - IsAnamorphic
      - RefFrames
      - NumAudioStreams
      - NumVideoStreams
      - IsSecondaryAudio
      - VideoCodecTag
      - IsAvc
      - IsInterlaced
      - AudioSampleRate
      - AudioBitDepth
      - VideoRangeType
      type: string
    ProgramAudio:
      enum:
      - Mono
      - Stereo
      - Dolby
      - DolbyDigital
      - Thx
      - Atmos
      type: string
    PublicSystemInfo:
      additionalProperties: false
      example:
        OperatingSystem: OperatingSystem
        LocalAddress: LocalAddress
        ProductName: ProductName
        Version: Version
        ServerName: ServerName
        Id: Id
        StartupWizardCompleted: true
      properties:
        LocalAddress:
          description: Gets or sets the local address.
          nullable: true
          type: string
        ServerName:
          description: Gets or sets the name of the server.
          nullable: true
          type: string
        Version:
          description: Gets or sets the server version.
          nullable: true
          type: string
        ProductName:
          description: Gets or sets the product name. This is the AssemblyProduct
            name.
          nullable: true
          type: string
        OperatingSystem:
          deprecated: true
          description: Gets or sets the operating system.
          nullable: true
          type: string
        Id:
          description: Gets or sets the id.
          nullable: true
          type: string
        StartupWizardCompleted:
          description: Gets or sets a value indicating whether the startup wizard
            is completed.
          nullable: true
          type: boolean
      type: object
    QueryFilters:
      additionalProperties: false
      example:
        Genres:
        - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: Name
        - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: Name
        Tags:
        - Tags
        - Tags
      properties:
        Genres:
          items:
            $ref: '#/components/schemas/NameGuidPair'
          nullable: true
          type: array
        Tags:
          items:
            type: string
          nullable: true
          type: array
      type: object
    QueryFiltersLegacy:
      additionalProperties: false
      example:
        Years:
        - 0
        - 0
        OfficialRatings:
        - OfficialRatings
        - OfficialRatings
        Genres:
        - Genres
        - Genres
        Tags:
        - Tags
        - Tags
      properties:
        Genres:
          items:
            type: string
          nullable: true
          type: array
        Tags:
          items:
            type: string
          nullable: true
          type: array
        OfficialRatings:
          items:
            type: string
          nullable: true
          type: array
        Years:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
      type: object
    QueueItem:
      additionalProperties: false
      example:
        PlaylistItemId: PlaylistItemId
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        Id:
          format: uuid
          type: string
        PlaylistItemId:
          nullable: true
          type: string
      type: object
    QueueRequestDto:
      additionalProperties: false
      description: Class QueueRequestDto.
      example:
        Mode: Queue
        ItemIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        ItemIds:
          description: Gets or sets the items to enqueue.
          items:
            format: uuid
            type: string
          type: array
        Mode:
          allOf:
          - $ref: '#/components/schemas/GroupQueueMode'
          description: Gets or sets the mode in which to add the new items.
          enum:
          - Queue
          - QueueNext
          type: string
      type: object
    QuickConnectDto:
      additionalProperties: false
      description: The quick connect request body.
      example:
        Secret: Secret
      properties:
        Secret:
          description: Gets or sets the quick connect secret.
          type: string
      required:
      - Secret
      type: object
    QuickConnectResult:
      additionalProperties: false
      description: Stores the state of an quick connect request.
      example:
        Secret: Secret
        AppVersion: AppVersion
        Authenticated: true
        DeviceId: DeviceId
        DateAdded: 2000-01-23T04:56:07.000+00:00
        Code: Code
        DeviceName: DeviceName
        AppName: AppName
      properties:
        Authenticated:
          description: Gets or sets a value indicating whether this request is authorized.
          type: boolean
        Secret:
          description: Gets the secret value used to uniquely identify this request.
            Can be used to retrieve authentication information.
          type: string
        Code:
          description: Gets the user facing code used so the user can quickly differentiate
            this request from others.
          type: string
        DeviceId:
          description: Gets the requesting device id.
          type: string
        DeviceName:
          description: Gets the requesting device name.
          type: string
        AppName:
          description: Gets the requesting app name.
          type: string
        AppVersion:
          description: Gets the requesting app version.
          type: string
        DateAdded:
          description: Gets or sets the DateTime that this request was created.
          format: date-time
          type: string
      type: object
    RatingType:
      enum:
      - Score
      - Likes
      type: string
    ReadyRequestDto:
      additionalProperties: false
      description: Class ReadyRequest.
      example:
        When: 2000-01-23T04:56:07.000+00:00
        PositionTicks: 0
        PlaylistItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        IsPlaying: true
      properties:
        When:
          description: Gets or sets when the request has been made by the client.
          format: date-time
          type: string
        PositionTicks:
          description: Gets or sets the position ticks.
          format: int64
          type: integer
        IsPlaying:
          description: Gets or sets a value indicating whether the client playback
            is unpaused.
          type: boolean
        PlaylistItemId:
          description: Gets or sets the playlist item identifier of the playing item.
          format: uuid
          type: string
      type: object
    RecommendationDto:
      additionalProperties: false
      example:
        RecommendationType: SimilarToRecentlyPlayed
        CategoryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        BaselineItemName: BaselineItemName
        Items:
        - SeasonName: SeasonName
          PremiereDate: 2000-01-23T04:56:07.000+00:00
          CriticRating: 3.0937452
          AirTime: AirTime
          Studios:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          CameraMake: CameraMake
          Aperture: 6.623518433804886
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          ExtraType: Unknown
          ParentBackdropItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Etag: Etag
          ParentLogoImageTag: ParentLogoImageTag
          ExposureTime: 1.7325933120207193
          IsoType: Dvd
          MediaType: Unknown
          NormalizationGain: 8.761433
          Tags:
          - Tags
          - Tags
          ImageBlurHashes:
            Art:
              key: Art
            Banner:
              key: Banner
            Thumb:
              key: Thumb
            Chapter:
              key: Chapter
            BoxRear:
              key: BoxRear
            Box:
              key: Box
            Profile:
              key: Profile
            Logo:
              key: Logo
            Disc:
              key: Disc
            Primary:
              key: Primary
            Screenshot:
              key: Screenshot
            Backdrop:
              key: Backdrop
            Menu:
              key: Menu
          Status: Status
          IndexNumberEnd: 4
          ArtistItems:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          MediaSources:
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            MediaStreams:
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            Size: 5
            Video3DFormat: HalfSideBySide
            BufferMs: 2
            Timestamp: None
            Name: Name
            RequiresOpening: true
            FallbackMaxStreamingBitrate: 6
            SupportsDirectStream: true
            VideoType: VideoFile
            RequiresClosing: true
            Container: Container
            IsoType: Dvd
            HasSegments: true
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            DefaultSubtitleStreamIndex: 3
            GenPtsInput: true
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: File
            IgnoreIndex: true
            SupportsDirectPlay: true
            TranscodingSubProtocol: http
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 5
            Bitrate: 6
            OpenToken: OpenToken
            SupportsProbing: true
            Type: Default
            MediaAttachments:
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            ReadAtNativeFramerate: true
            ETag: ETag
            TranscodingContainer: TranscodingContainer
            IgnoreDts: true
            UseMostCompatibleTranscodingProfile: false
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 6
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            MediaStreams:
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            Size: 5
            Video3DFormat: HalfSideBySide
            BufferMs: 2
            Timestamp: None
            Name: Name
            RequiresOpening: true
            FallbackMaxStreamingBitrate: 6
            SupportsDirectStream: true
            VideoType: VideoFile
            RequiresClosing: true
            Container: Container
            IsoType: Dvd
            HasSegments: true
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            DefaultSubtitleStreamIndex: 3
            GenPtsInput: true
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: File
            IgnoreIndex: true
            SupportsDirectPlay: true
            TranscodingSubProtocol: http
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 5
            Bitrate: 6
            OpenToken: OpenToken
            SupportsProbing: true
            Type: Default
            MediaAttachments:
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            ReadAtNativeFramerate: true
            ETag: ETag
            TranscodingContainer: TranscodingContainer
            IgnoreDts: true
            UseMostCompatibleTranscodingProfile: false
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 6
          GenreItems:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          OfficialRating: OfficialRating
          ProgramCount: 5
          ProgramId: ProgramId
          Longitude: 9.254183946267839
          LockData: true
          FocalLength: 8.28965939814297
          IsNews: true
          ShutterSpeed: 4.573936264232251
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          IsFolder: true
          SeriesTimerId: SeriesTimerId
          SeriesId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          MediaStreams:
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          IsPlaceHolder: true
          CanDownload: true
          SeriesCount: 7
          IsMovie: true
          DateLastMediaAdded: 2000-01-23T04:56:07.000+00:00
          ParentArtImageTag: ParentArtImageTag
          PlayAccess: Full
          SeriesStudio: SeriesStudio
          IsLive: true
          Width: 0
          ExternalUrls:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          RecursiveItemCount: 3
          Path: Path
          ParentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          MusicVideoCount: 3
          ScreenshotImageTags:
          - ScreenshotImageTags
          - ScreenshotImageTags
          EpisodeCount: 4
          IsSeries: true
          ProductionLocations:
          - ProductionLocations
          - ProductionLocations
          ParentPrimaryImageItemId: ParentPrimaryImageItemId
          EndDate: 2000-01-23T04:56:07.000+00:00
          SeriesPrimaryImageTag: SeriesPrimaryImageTag
          ParentThumbItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          PreferredMetadataLanguage: PreferredMetadataLanguage
          Type: AggregateFolder
          BackdropImageTags:
          - BackdropImageTags
          - BackdropImageTags
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          AirsBeforeEpisodeNumber: 1
          ChildCount: 3
          Audio: Mono
          Artists:
          - Artists
          - Artists
          ChannelType: TV
          HasLyrics: true
          RunTimeTicks: 7
          AlbumPrimaryImageTag: AlbumPrimaryImageTag
          Video3DFormat: HalfSideBySide
          CumulativeRunTimeTicks: 0
          SourceType: SourceType
          CanDelete: true
          PlaylistItemId: PlaylistItemId
          DisplayPreferencesId: DisplayPreferencesId
          Album: Album
          Latitude: 8.863729185622827
          SortName: SortName
          ArtistCount: 4
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          Container: Container
          ProductionYear: 6
          SeriesName: SeriesName
          ParentArtItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          AlbumId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          LocalTrailerCount: 7
          IndexNumber: 0
          CompletionPercentage: 9.183123594773994
          Genres:
          - Genres
          - Genres
          SeasonId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          LockedFields:
          - Cast
          - Cast
          ParentPrimaryImageTag: ParentPrimaryImageTag
          ProviderIds:
            key: ProviderIds
          RemoteTrailers:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          MediaSourceCount: 4
          CustomRating: CustomRating
          AirsAfterSeasonNumber: 6
          AirDays:
          - Sunday
          - Sunday
          ParentLogoItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          PartCount: 3
          ChannelName: ChannelName
          EpisodeTitle: EpisodeTitle
          IsoSpeedRating: 3
          CommunityRating: 7.143538
          Software: Software
          Chapters:
          - StartPositionTicks: 0
            ImageTag: ImageTag
            ImageDateModified: 2000-01-23T04:56:07.000+00:00
            ImagePath: ImagePath
            Name: Name
          - StartPositionTicks: 0
            ImageTag: ImageTag
            ImageDateModified: 2000-01-23T04:56:07.000+00:00
            ImagePath: ImagePath
            Name: Name
          SongCount: 6
          Taglines:
          - Taglines
          - Taglines
          AirsBeforeSeasonNumber: 0
          PreferredMetadataCountryCode: PreferredMetadataCountryCode
          CameraModel: CameraModel
          ChannelNumber: ChannelNumber
          UserData: ""
          TimerId: TimerId
          DateCreated: 2000-01-23T04:56:07.000+00:00
          HasSubtitles: true
          ParentThumbImageTag: ParentThumbImageTag
          IsSports: true
          ChannelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ParentIndexNumber: 8
          VideoType: VideoFile
          AlbumArtists:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          ServerId: ServerId
          Number: Number
          AlbumCount: 8
          IsRepeat: true
          CollectionType: unknown
          Trickplay:
            key:
              key:
                ThumbnailCount: 7
                Bandwidth: 0
                TileHeight: 4
                Height: 4
                Width: 6
                TileWidth: 1
                Interval: 9
          PrimaryImageAspectRatio: 5.533258397034986
          Height: 2
          IsKids: true
          DisplayOrder: DisplayOrder
          IsHD: true
          EnableMediaSourceDisplay: true
          SeriesThumbImageTag: SeriesThumbImageTag
          MovieCount: 0
          People:
          - Role: Role
            Type: Unknown
            PrimaryImageTag: PrimaryImageTag
            Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
            ImageBlurHashes:
              Art:
                key: Art
              Banner:
                key: Banner
              Thumb:
                key: Thumb
              Chapter:
                key: Chapter
              BoxRear:
                key: BoxRear
              Box:
                key: Box
              Profile:
                key: Profile
              Logo:
                key: Logo
              Disc:
                key: Disc
              Primary:
                key: Primary
              Screenshot:
                key: Screenshot
              Backdrop:
                key: Backdrop
              Menu:
                key: Menu
          - Role: Role
            Type: Unknown
            PrimaryImageTag: PrimaryImageTag
            Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
            ImageBlurHashes:
              Art:
                key: Art
              Banner:
                key: Banner
              Thumb:
                key: Thumb
              Chapter:
                key: Chapter
              BoxRear:
                key: BoxRear
              Box:
                key: Box
              Profile:
                key: Profile
              Logo:
                key: Logo
              Disc:
                key: Disc
              Primary:
                key: Primary
              Screenshot:
                key: Screenshot
              Backdrop:
                key: Backdrop
              Menu:
                key: Menu
          Overview: Overview
          SpecialFeatureCount: 7
          ImageOrientation: TopLeft
          AlbumArtist: AlbumArtist
          ImageTags:
            key: ImageTags
          AspectRatio: AspectRatio
          TrailerCount: 9
          OriginalTitle: OriginalTitle
          ForcedSortName: ForcedSortName
          CurrentProgram: ""
          LocationType: FileSystem
          IsPremiere: true
          Altitude: 1.8268702177058116
        - SeasonName: SeasonName
          PremiereDate: 2000-01-23T04:56:07.000+00:00
          CriticRating: 3.0937452
          AirTime: AirTime
          Studios:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          CameraMake: CameraMake
          Aperture: 6.623518433804886
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          ExtraType: Unknown
          ParentBackdropItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Etag: Etag
          ParentLogoImageTag: ParentLogoImageTag
          ExposureTime: 1.7325933120207193
          IsoType: Dvd
          MediaType: Unknown
          NormalizationGain: 8.761433
          Tags:
          - Tags
          - Tags
          ImageBlurHashes:
            Art:
              key: Art
            Banner:
              key: Banner
            Thumb:
              key: Thumb
            Chapter:
              key: Chapter
            BoxRear:
              key: BoxRear
            Box:
              key: Box
            Profile:
              key: Profile
            Logo:
              key: Logo
            Disc:
              key: Disc
            Primary:
              key: Primary
            Screenshot:
              key: Screenshot
            Backdrop:
              key: Backdrop
            Menu:
              key: Menu
          Status: Status
          IndexNumberEnd: 4
          ArtistItems:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          MediaSources:
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            MediaStreams:
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            Size: 5
            Video3DFormat: HalfSideBySide
            BufferMs: 2
            Timestamp: None
            Name: Name
            RequiresOpening: true
            FallbackMaxStreamingBitrate: 6
            SupportsDirectStream: true
            VideoType: VideoFile
            RequiresClosing: true
            Container: Container
            IsoType: Dvd
            HasSegments: true
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            DefaultSubtitleStreamIndex: 3
            GenPtsInput: true
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: File
            IgnoreIndex: true
            SupportsDirectPlay: true
            TranscodingSubProtocol: http
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 5
            Bitrate: 6
            OpenToken: OpenToken
            SupportsProbing: true
            Type: Default
            MediaAttachments:
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            ReadAtNativeFramerate: true
            ETag: ETag
            TranscodingContainer: TranscodingContainer
            IgnoreDts: true
            UseMostCompatibleTranscodingProfile: false
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 6
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            MediaStreams:
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            Size: 5
            Video3DFormat: HalfSideBySide
            BufferMs: 2
            Timestamp: None
            Name: Name
            RequiresOpening: true
            FallbackMaxStreamingBitrate: 6
            SupportsDirectStream: true
            VideoType: VideoFile
            RequiresClosing: true
            Container: Container
            IsoType: Dvd
            HasSegments: true
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            DefaultSubtitleStreamIndex: 3
            GenPtsInput: true
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: File
            IgnoreIndex: true
            SupportsDirectPlay: true
            TranscodingSubProtocol: http
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 5
            Bitrate: 6
            OpenToken: OpenToken
            SupportsProbing: true
            Type: Default
            MediaAttachments:
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            ReadAtNativeFramerate: true
            ETag: ETag
            TranscodingContainer: TranscodingContainer
            IgnoreDts: true
            UseMostCompatibleTranscodingProfile: false
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 6
          GenreItems:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          OfficialRating: OfficialRating
          ProgramCount: 5
          ProgramId: ProgramId
          Longitude: 9.254183946267839
          LockData: true
          FocalLength: 8.28965939814297
          IsNews: true
          ShutterSpeed: 4.573936264232251
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          IsFolder: true
          SeriesTimerId: SeriesTimerId
          SeriesId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          MediaStreams:
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          IsPlaceHolder: true
          CanDownload: true
          SeriesCount: 7
          IsMovie: true
          DateLastMediaAdded: 2000-01-23T04:56:07.000+00:00
          ParentArtImageTag: ParentArtImageTag
          PlayAccess: Full
          SeriesStudio: SeriesStudio
          IsLive: true
          Width: 0
          ExternalUrls:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          RecursiveItemCount: 3
          Path: Path
          ParentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          MusicVideoCount: 3
          ScreenshotImageTags:
          - ScreenshotImageTags
          - ScreenshotImageTags
          EpisodeCount: 4
          IsSeries: true
          ProductionLocations:
          - ProductionLocations
          - ProductionLocations
          ParentPrimaryImageItemId: ParentPrimaryImageItemId
          EndDate: 2000-01-23T04:56:07.000+00:00
          SeriesPrimaryImageTag: SeriesPrimaryImageTag
          ParentThumbItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          PreferredMetadataLanguage: PreferredMetadataLanguage
          Type: AggregateFolder
          BackdropImageTags:
          - BackdropImageTags
          - BackdropImageTags
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          AirsBeforeEpisodeNumber: 1
          ChildCount: 3
          Audio: Mono
          Artists:
          - Artists
          - Artists
          ChannelType: TV
          HasLyrics: true
          RunTimeTicks: 7
          AlbumPrimaryImageTag: AlbumPrimaryImageTag
          Video3DFormat: HalfSideBySide
          CumulativeRunTimeTicks: 0
          SourceType: SourceType
          CanDelete: true
          PlaylistItemId: PlaylistItemId
          DisplayPreferencesId: DisplayPreferencesId
          Album: Album
          Latitude: 8.863729185622827
          SortName: SortName
          ArtistCount: 4
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          Container: Container
          ProductionYear: 6
          SeriesName: SeriesName
          ParentArtItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          AlbumId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          LocalTrailerCount: 7
          IndexNumber: 0
          CompletionPercentage: 9.183123594773994
          Genres:
          - Genres
          - Genres
          SeasonId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          LockedFields:
          - Cast
          - Cast
          ParentPrimaryImageTag: ParentPrimaryImageTag
          ProviderIds:
            key: ProviderIds
          RemoteTrailers:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          MediaSourceCount: 4
          CustomRating: CustomRating
          AirsAfterSeasonNumber: 6
          AirDays:
          - Sunday
          - Sunday
          ParentLogoItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          PartCount: 3
          ChannelName: ChannelName
          EpisodeTitle: EpisodeTitle
          IsoSpeedRating: 3
          CommunityRating: 7.143538
          Software: Software
          Chapters:
          - StartPositionTicks: 0
            ImageTag: ImageTag
            ImageDateModified: 2000-01-23T04:56:07.000+00:00
            ImagePath: ImagePath
            Name: Name
          - StartPositionTicks: 0
            ImageTag: ImageTag
            ImageDateModified: 2000-01-23T04:56:07.000+00:00
            ImagePath: ImagePath
            Name: Name
          SongCount: 6
          Taglines:
          - Taglines
          - Taglines
          AirsBeforeSeasonNumber: 0
          PreferredMetadataCountryCode: PreferredMetadataCountryCode
          CameraModel: CameraModel
          ChannelNumber: ChannelNumber
          UserData: ""
          TimerId: TimerId
          DateCreated: 2000-01-23T04:56:07.000+00:00
          HasSubtitles: true
          ParentThumbImageTag: ParentThumbImageTag
          IsSports: true
          ChannelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ParentIndexNumber: 8
          VideoType: VideoFile
          AlbumArtists:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          ServerId: ServerId
          Number: Number
          AlbumCount: 8
          IsRepeat: true
          CollectionType: unknown
          Trickplay:
            key:
              key:
                ThumbnailCount: 7
                Bandwidth: 0
                TileHeight: 4
                Height: 4
                Width: 6
                TileWidth: 1
                Interval: 9
          PrimaryImageAspectRatio: 5.533258397034986
          Height: 2
          IsKids: true
          DisplayOrder: DisplayOrder
          IsHD: true
          EnableMediaSourceDisplay: true
          SeriesThumbImageTag: SeriesThumbImageTag
          MovieCount: 0
          People:
          - Role: Role
            Type: Unknown
            PrimaryImageTag: PrimaryImageTag
            Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
            ImageBlurHashes:
              Art:
                key: Art
              Banner:
                key: Banner
              Thumb:
                key: Thumb
              Chapter:
                key: Chapter
              BoxRear:
                key: BoxRear
              Box:
                key: Box
              Profile:
                key: Profile
              Logo:
                key: Logo
              Disc:
                key: Disc
              Primary:
                key: Primary
              Screenshot:
                key: Screenshot
              Backdrop:
                key: Backdrop
              Menu:
                key: Menu
          - Role: Role
            Type: Unknown
            PrimaryImageTag: PrimaryImageTag
            Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
            ImageBlurHashes:
              Art:
                key: Art
              Banner:
                key: Banner
              Thumb:
                key: Thumb
              Chapter:
                key: Chapter
              BoxRear:
                key: BoxRear
              Box:
                key: Box
              Profile:
                key: Profile
              Logo:
                key: Logo
              Disc:
                key: Disc
              Primary:
                key: Primary
              Screenshot:
                key: Screenshot
              Backdrop:
                key: Backdrop
              Menu:
                key: Menu
          Overview: Overview
          SpecialFeatureCount: 7
          ImageOrientation: TopLeft
          AlbumArtist: AlbumArtist
          ImageTags:
            key: ImageTags
          AspectRatio: AspectRatio
          TrailerCount: 9
          OriginalTitle: OriginalTitle
          ForcedSortName: ForcedSortName
          CurrentProgram: ""
          LocationType: FileSystem
          IsPremiere: true
          Altitude: 1.8268702177058116
      properties:
        Items:
          items:
            $ref: '#/components/schemas/BaseItemDto'
          nullable: true
          type: array
        RecommendationType:
          allOf:
          - $ref: '#/components/schemas/RecommendationType'
          enum:
          - SimilarToRecentlyPlayed
          - SimilarToLikedItem
          - HasDirectorFromRecentlyPlayed
          - HasActorFromRecentlyPlayed
          - HasLikedDirector
          - HasLikedActor
          type: string
        BaselineItemName:
          nullable: true
          type: string
        CategoryId:
          format: uuid
          type: string
      type: object
    RecommendationType:
      enum:
      - SimilarToRecentlyPlayed
      - SimilarToLikedItem
      - HasDirectorFromRecentlyPlayed
      - HasActorFromRecentlyPlayed
      - HasLikedDirector
      - HasLikedActor
      type: string
    RecordingStatus:
      enum:
      - New
      - InProgress
      - Completed
      - Cancelled
      - ConflictedOk
      - ConflictedNotOk
      - Error
      type: string
    RefreshProgressMessage:
      additionalProperties: false
      description: Refresh progress message.
      properties:
        Data:
          additionalProperties:
            nullable: true
            type: string
          description: Gets or sets the data.
          nullable: true
          type: object
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: RefreshProgress
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    RemoteImageInfo:
      additionalProperties: false
      description: Class RemoteImageInfo.
      example:
        ProviderName: ProviderName
        Type: Primary
        ThumbnailUrl: ThumbnailUrl
        Language: Language
        RatingType: Score
        VoteCount: 5
        CommunityRating: 1.4658129805029452
        Height: 0
        Width: 6
        Url: Url
      properties:
        ProviderName:
          description: Gets or sets the name of the provider.
          nullable: true
          type: string
        Url:
          description: Gets or sets the URL.
          nullable: true
          type: string
        ThumbnailUrl:
          description: Gets or sets a url used for previewing a smaller version.
          nullable: true
          type: string
        Height:
          description: Gets or sets the height.
          format: int32
          nullable: true
          type: integer
        Width:
          description: Gets or sets the width.
          format: int32
          nullable: true
          type: integer
        CommunityRating:
          description: Gets or sets the community rating.
          format: double
          nullable: true
          type: number
        VoteCount:
          description: Gets or sets the vote count.
          format: int32
          nullable: true
          type: integer
        Language:
          description: Gets or sets the language.
          nullable: true
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/ImageType'
          description: Gets or sets the type.
          enum:
          - Primary
          - Art
          - Backdrop
          - Banner
          - Logo
          - Thumb
          - Disc
          - Box
          - Screenshot
          - Menu
          - Chapter
          - BoxRear
          - Profile
          type: string
        RatingType:
          allOf:
          - $ref: '#/components/schemas/RatingType'
          description: Gets or sets the type of the rating.
          enum:
          - Score
          - Likes
          type: string
      type: object
    RemoteImageResult:
      additionalProperties: false
      description: Class RemoteImageResult.
      example:
        TotalRecordCount: 5
        Images:
        - ProviderName: ProviderName
          Type: Primary
          ThumbnailUrl: ThumbnailUrl
          Language: Language
          RatingType: Score
          VoteCount: 5
          CommunityRating: 1.4658129805029452
          Height: 0
          Width: 6
          Url: Url
        - ProviderName: ProviderName
          Type: Primary
          ThumbnailUrl: ThumbnailUrl
          Language: Language
          RatingType: Score
          VoteCount: 5
          CommunityRating: 1.4658129805029452
          Height: 0
          Width: 6
          Url: Url
        Providers:
        - Providers
        - Providers
      properties:
        Images:
          description: Gets or sets the images.
          items:
            $ref: '#/components/schemas/RemoteImageInfo'
          nullable: true
          type: array
        TotalRecordCount:
          description: Gets or sets the total record count.
          format: int32
          type: integer
        Providers:
          description: Gets or sets the providers.
          items:
            type: string
          nullable: true
          type: array
      type: object
    RemoteLyricInfoDto:
      additionalProperties: false
      description: The remote lyric info dto.
      example:
        ProviderName: ProviderName
        Lyrics: ""
        Id: Id
      properties:
        Id:
          description: Gets or sets the id for the lyric.
          type: string
        ProviderName:
          description: Gets the provider name.
          type: string
        Lyrics:
          allOf:
          - $ref: '#/components/schemas/LyricDto'
          description: Gets the lyrics.
      type: object
    RemoteSearchResult:
      additionalProperties: false
      example:
        IndexNumberEnd: 1
        ProductionYear: 0
        PremiereDate: 2000-01-23T04:56:07.000+00:00
        ImageUrl: ImageUrl
        IndexNumber: 6
        Overview: Overview
        ParentIndexNumber: 5
        SearchProviderName: SearchProviderName
        ProviderIds:
          key: ProviderIds
        Artists:
        - null
        - null
        AlbumArtist: ""
        Name: Name
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        ProviderIds:
          additionalProperties:
            nullable: true
            type: string
          description: Gets or sets the provider ids.
          nullable: true
          type: object
        ProductionYear:
          description: Gets or sets the year.
          format: int32
          nullable: true
          type: integer
        IndexNumber:
          format: int32
          nullable: true
          type: integer
        IndexNumberEnd:
          format: int32
          nullable: true
          type: integer
        ParentIndexNumber:
          format: int32
          nullable: true
          type: integer
        PremiereDate:
          format: date-time
          nullable: true
          type: string
        ImageUrl:
          nullable: true
          type: string
        SearchProviderName:
          nullable: true
          type: string
        Overview:
          nullable: true
          type: string
        AlbumArtist:
          allOf:
          - $ref: '#/components/schemas/RemoteSearchResult'
          nullable: true
        Artists:
          items:
            $ref: '#/components/schemas/RemoteSearchResult'
          nullable: true
          type: array
      type: object
    RemoteSubtitleInfo:
      additionalProperties: false
      example:
        Comment: Comment
        FrameRate: 6.0274563
        ThreeLetterISOLanguageName: ThreeLetterISOLanguageName
        DateCreated: 2000-01-23T04:56:07.000+00:00
        AiTranslated: true
        Name: Name
        MachineTranslated: true
        ProviderName: ProviderName
        HearingImpaired: true
        Format: Format
        IsHashMatch: true
        Author: Author
        CommunityRating: 0.8008282
        Id: Id
        Forced: true
        DownloadCount: 1
      properties:
        ThreeLetterISOLanguageName:
          nullable: true
          type: string
        Id:
          nullable: true
          type: string
        ProviderName:
          nullable: true
          type: string
        Name:
          nullable: true
          type: string
        Format:
          nullable: true
          type: string
        Author:
          nullable: true
          type: string
        Comment:
          nullable: true
          type: string
        DateCreated:
          format: date-time
          nullable: true
          type: string
        CommunityRating:
          format: float
          nullable: true
          type: number
        FrameRate:
          format: float
          nullable: true
          type: number
        DownloadCount:
          format: int32
          nullable: true
          type: integer
        IsHashMatch:
          nullable: true
          type: boolean
        AiTranslated:
          nullable: true
          type: boolean
        MachineTranslated:
          nullable: true
          type: boolean
        Forced:
          nullable: true
          type: boolean
        HearingImpaired:
          nullable: true
          type: boolean
      type: object
    RemoveFromPlaylistRequestDto:
      additionalProperties: false
      description: Class RemoveFromPlaylistRequestDto.
      example:
        ClearPlayingItem: true
        PlaylistItemIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ClearPlaylist: true
      properties:
        PlaylistItemIds:
          description: Gets or sets the playlist identifiers of the items. Ignored
            when clearing the playlist.
          items:
            format: uuid
            type: string
          type: array
        ClearPlaylist:
          description: Gets or sets a value indicating whether the entire playlist
            should be cleared.
          type: boolean
        ClearPlayingItem:
          description: Gets or sets a value indicating whether the playing item should
            be removed as well. Used only when clearing the playlist.
          type: boolean
      type: object
    RepeatMode:
      enum:
      - RepeatNone
      - RepeatAll
      - RepeatOne
      type: string
    RepositoryInfo:
      additionalProperties: false
      description: Class RepositoryInfo.
      example:
        Enabled: true
        Url: Url
        Name: Name
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        Url:
          description: Gets or sets the URL.
          nullable: true
          type: string
        Enabled:
          description: Gets or sets a value indicating whether the repository is enabled.
          type: boolean
      type: object
    RestartRequiredMessage:
      additionalProperties: false
      description: Restart required.
      properties:
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: RestartRequired
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    ScheduledTaskEndedMessage:
      additionalProperties: false
      description: Scheduled task ended message.
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/TaskResult'
          description: Gets or sets the data.
          nullable: true
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: ScheduledTaskEnded
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    ScheduledTasksInfoMessage:
      additionalProperties: false
      description: Scheduled tasks info message.
      properties:
        Data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/TaskInfo'
          nullable: true
          type: array
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: ScheduledTasksInfo
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    ScheduledTasksInfoStartMessage:
      additionalProperties: false
      description: "Scheduled tasks info start message.\r\nData is the timing data\
        \ encoded as \"$initialDelay,$interval\" in ms."
      properties:
        Data:
          description: Gets or sets the data.
          nullable: true
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: ScheduledTasksInfoStart
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    ScheduledTasksInfoStopMessage:
      additionalProperties: false
      description: Scheduled tasks info stop message.
      properties:
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: ScheduledTasksInfoStop
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    ScrollDirection:
      description: An enum representing the axis that should be scrolled.
      enum:
      - Horizontal
      - Vertical
      type: string
    SearchHint:
      additionalProperties: false
      description: Class SearchHintResult.
      example:
        RunTimeTicks: 5
        PrimaryImageTag: PrimaryImageTag
        Album: Album
        ParentIndexNumber: 1
        ChannelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Name: Name
        StartDate: 2000-01-23T04:56:07.000+00:00
        ThumbImageTag: ThumbImageTag
        ProductionYear: 6
        AlbumId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ThumbImageItemId: ThumbImageItemId
        MediaType: Unknown
        IndexNumber: 0
        PrimaryImageAspectRatio: 7.061401241503109
        Status: Status
        EpisodeCount: 2
        BackdropImageItemId: BackdropImageItemId
        EndDate: 2000-01-23T04:56:07.000+00:00
        MatchedTerm: MatchedTerm
        AlbumArtist: AlbumArtist
        Series: Series
        Type: AggregateFolder
        ChannelName: ChannelName
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        BackdropImageTag: BackdropImageTag
        IsFolder: true
        Artists:
        - Artists
        - Artists
        SongCount: 5
      properties:
        ItemId:
          deprecated: true
          description: Gets or sets the item id.
          format: uuid
          type: string
        Id:
          description: Gets or sets the item id.
          format: uuid
          type: string
        Name:
          description: Gets or sets the name.
          type: string
        MatchedTerm:
          description: Gets or sets the matched term.
          nullable: true
          type: string
        IndexNumber:
          description: Gets or sets the index number.
          format: int32
          nullable: true
          type: integer
        ProductionYear:
          description: Gets or sets the production year.
          format: int32
          nullable: true
          type: integer
        ParentIndexNumber:
          description: Gets or sets the parent index number.
          format: int32
          nullable: true
          type: integer
        PrimaryImageTag:
          description: Gets or sets the image tag.
          nullable: true
          type: string
        ThumbImageTag:
          description: Gets or sets the thumb image tag.
          nullable: true
          type: string
        ThumbImageItemId:
          description: Gets or sets the thumb image item identifier.
          nullable: true
          type: string
        BackdropImageTag:
          description: Gets or sets the backdrop image tag.
          nullable: true
          type: string
        BackdropImageItemId:
          description: Gets or sets the backdrop image item identifier.
          nullable: true
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/BaseItemKind'
          description: The base item kind.
          enum:
          - AggregateFolder
          - Audio
          - AudioBook
          - BasePluginFolder
          - Book
          - BoxSet
          - Channel
          - ChannelFolderItem
          - CollectionFolder
          - Episode
          - Folder
          - Genre
          - ManualPlaylistsFolder
          - Movie
          - LiveTvChannel
          - LiveTvProgram
          - MusicAlbum
          - MusicArtist
          - MusicGenre
          - MusicVideo
          - Person
          - Photo
          - PhotoAlbum
          - Playlist
          - PlaylistsFolder
          - Program
          - Recording
          - Season
          - Series
          - Studio
          - Trailer
          - TvChannel
          - TvProgram
          - UserRootFolder
          - UserView
          - Video
          - Year
          type: string
        IsFolder:
          description: Gets or sets a value indicating whether this instance is folder.
          nullable: true
          type: boolean
        RunTimeTicks:
          description: Gets or sets the run time ticks.
          format: int64
          nullable: true
          type: integer
        MediaType:
          allOf:
          - $ref: '#/components/schemas/MediaType'
          description: Media types.
          enum:
          - Unknown
          - Video
          - Audio
          - Photo
          - Book
          type: string
        StartDate:
          description: Gets or sets the start date.
          format: date-time
          nullable: true
          type: string
        EndDate:
          description: Gets or sets the end date.
          format: date-time
          nullable: true
          type: string
        Series:
          description: Gets or sets the series.
          nullable: true
          type: string
        Status:
          description: Gets or sets the status.
          nullable: true
          type: string
        Album:
          description: Gets or sets the album.
          nullable: true
          type: string
        AlbumId:
          description: Gets or sets the album id.
          format: uuid
          nullable: true
          type: string
        AlbumArtist:
          description: Gets or sets the album artist.
          nullable: true
          type: string
        Artists:
          description: Gets or sets the artists.
          items:
            type: string
          type: array
        SongCount:
          description: Gets or sets the song count.
          format: int32
          nullable: true
          type: integer
        EpisodeCount:
          description: Gets or sets the episode count.
          format: int32
          nullable: true
          type: integer
        ChannelId:
          description: Gets or sets the channel identifier.
          format: uuid
          nullable: true
          type: string
        ChannelName:
          description: Gets or sets the name of the channel.
          nullable: true
          type: string
        PrimaryImageAspectRatio:
          description: Gets or sets the primary image aspect ratio.
          format: double
          nullable: true
          type: number
      type: object
    SearchHintResult:
      additionalProperties: false
      description: Class SearchHintResult.
      example:
        TotalRecordCount: 9
        SearchHints:
        - RunTimeTicks: 5
          PrimaryImageTag: PrimaryImageTag
          Album: Album
          ParentIndexNumber: 1
          ChannelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          ThumbImageTag: ThumbImageTag
          ProductionYear: 6
          AlbumId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ThumbImageItemId: ThumbImageItemId
          MediaType: Unknown
          IndexNumber: 0
          PrimaryImageAspectRatio: 7.061401241503109
          Status: Status
          EpisodeCount: 2
          BackdropImageItemId: BackdropImageItemId
          EndDate: 2000-01-23T04:56:07.000+00:00
          MatchedTerm: MatchedTerm
          AlbumArtist: AlbumArtist
          Series: Series
          Type: AggregateFolder
          ChannelName: ChannelName
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          BackdropImageTag: BackdropImageTag
          IsFolder: true
          Artists:
          - Artists
          - Artists
          SongCount: 5
        - RunTimeTicks: 5
          PrimaryImageTag: PrimaryImageTag
          Album: Album
          ParentIndexNumber: 1
          ChannelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          ThumbImageTag: ThumbImageTag
          ProductionYear: 6
          AlbumId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ThumbImageItemId: ThumbImageItemId
          MediaType: Unknown
          IndexNumber: 0
          PrimaryImageAspectRatio: 7.061401241503109
          Status: Status
          EpisodeCount: 2
          BackdropImageItemId: BackdropImageItemId
          EndDate: 2000-01-23T04:56:07.000+00:00
          MatchedTerm: MatchedTerm
          AlbumArtist: AlbumArtist
          Series: Series
          Type: AggregateFolder
          ChannelName: ChannelName
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          BackdropImageTag: BackdropImageTag
          IsFolder: true
          Artists:
          - Artists
          - Artists
          SongCount: 5
      properties:
        SearchHints:
          description: Gets the search hints.
          items:
            $ref: '#/components/schemas/SearchHint'
          type: array
        TotalRecordCount:
          description: Gets the total record count.
          format: int32
          type: integer
      type: object
    SeekRequestDto:
      additionalProperties: false
      description: Class SeekRequestDto.
      example:
        PositionTicks: 0
      properties:
        PositionTicks:
          description: Gets or sets the position ticks.
          format: int64
          type: integer
      type: object
    SendCommand:
      additionalProperties: false
      description: Class SendCommand.
      properties:
        GroupId:
          description: Gets the group identifier.
          format: uuid
          type: string
        PlaylistItemId:
          description: Gets the playlist identifier of the playing item.
          format: uuid
          type: string
        When:
          description: Gets or sets the UTC time when to execute the command.
          format: date-time
          type: string
        PositionTicks:
          description: Gets the position ticks.
          format: int64
          nullable: true
          type: integer
        Command:
          allOf:
          - $ref: '#/components/schemas/SendCommandType'
          description: Gets the command.
          enum:
          - Unpause
          - Pause
          - Stop
          - Seek
          type: string
        EmittedAt:
          description: Gets the UTC time when this command has been emitted.
          format: date-time
          type: string
      type: object
    SendCommandType:
      description: Enum SendCommandType.
      enum:
      - Unpause
      - Pause
      - Stop
      - Seek
      type: string
    SeriesInfo:
      additionalProperties: false
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        OriginalTitle:
          description: Gets or sets the original title.
          nullable: true
          type: string
        Path:
          description: Gets or sets the path.
          nullable: true
          type: string
        MetadataLanguage:
          description: Gets or sets the metadata language.
          nullable: true
          type: string
        MetadataCountryCode:
          description: Gets or sets the metadata country code.
          nullable: true
          type: string
        ProviderIds:
          additionalProperties:
            nullable: true
            type: string
          description: Gets or sets the provider ids.
          nullable: true
          type: object
        Year:
          description: Gets or sets the year.
          format: int32
          nullable: true
          type: integer
        IndexNumber:
          format: int32
          nullable: true
          type: integer
        ParentIndexNumber:
          format: int32
          nullable: true
          type: integer
        PremiereDate:
          format: date-time
          nullable: true
          type: string
        IsAutomated:
          type: boolean
      type: object
    SeriesInfoRemoteSearchQuery:
      additionalProperties: false
      example:
        SearchInfo: ""
        IncludeDisabledProviders: true
        SearchProviderName: SearchProviderName
        ItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        SearchInfo:
          allOf:
          - $ref: '#/components/schemas/SeriesInfo'
          nullable: true
        ItemId:
          format: uuid
          type: string
        SearchProviderName:
          description: Gets or sets the provider name to search within if set.
          nullable: true
          type: string
        IncludeDisabledProviders:
          description: Gets or sets a value indicating whether disabled providers
            should be included.
          type: boolean
      type: object
    SeriesStatus:
      description: The status of a series.
      enum:
      - Continuing
      - Ended
      - Unreleased
      type: string
    SeriesTimerCancelledMessage:
      additionalProperties: false
      description: Series timer cancelled message.
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/TimerEventInfo'
          description: Gets or sets the data.
          nullable: true
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: SeriesTimerCancelled
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    SeriesTimerCreatedMessage:
      additionalProperties: false
      description: Series timer created message.
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/TimerEventInfo'
          description: Gets or sets the data.
          nullable: true
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: SeriesTimerCreated
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    SeriesTimerInfoDto:
      additionalProperties: false
      description: Class SeriesTimerInfoDto.
      example:
        PrePaddingSeconds: 6
        KeepUntil: UntilDeleted
        SkipEpisodesInLibrary: true
        KeepUpTo: 5
        RecordNewOnly: true
        RecordAnyChannel: true
        ParentThumbImageTag: ParentThumbImageTag
        ChannelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ExternalProgramId: ExternalProgramId
        ChannelPrimaryImageTag: ChannelPrimaryImageTag
        Name: Name
        StartDate: 2000-01-23T04:56:07.000+00:00
        IsPostPaddingRequired: true
        ServerId: ServerId
        ParentBackdropItemId: ParentBackdropItemId
        Days:
        - Sunday
        - Sunday
        DayPattern: Daily
        ParentPrimaryImageTag: ParentPrimaryImageTag
        IsPrePaddingRequired: true
        Priority: 0
        ExternalId: ExternalId
        RecordAnyTime: true
        ExternalChannelId: ExternalChannelId
        Overview: Overview
        PostPaddingSeconds: 1
        ProgramId: ProgramId
        ParentPrimaryImageItemId: ParentPrimaryImageItemId
        EndDate: 2000-01-23T04:56:07.000+00:00
        ImageTags:
          key: ImageTags
        ParentThumbItemId: ParentThumbItemId
        Type: Type
        ChannelName: ChannelName
        ParentBackdropImageTags:
        - ParentBackdropImageTags
        - ParentBackdropImageTags
        ServiceName: ServiceName
        Id: Id
      properties:
        Id:
          description: Gets or sets the Id of the recording.
          nullable: true
          type: string
        Type:
          nullable: true
          type: string
        ServerId:
          description: Gets or sets the server identifier.
          nullable: true
          type: string
        ExternalId:
          description: Gets or sets the external identifier.
          nullable: true
          type: string
        ChannelId:
          description: Gets or sets the channel id of the recording.
          format: uuid
          type: string
        ExternalChannelId:
          description: Gets or sets the external channel identifier.
          nullable: true
          type: string
        ChannelName:
          description: Gets or sets the channel name of the recording.
          nullable: true
          type: string
        ChannelPrimaryImageTag:
          nullable: true
          type: string
        ProgramId:
          description: Gets or sets the program identifier.
          nullable: true
          type: string
        ExternalProgramId:
          description: Gets or sets the external program identifier.
          nullable: true
          type: string
        Name:
          description: Gets or sets the name of the recording.
          nullable: true
          type: string
        Overview:
          description: Gets or sets the description of the recording.
          nullable: true
          type: string
        StartDate:
          description: "Gets or sets the start date of the recording, in UTC."
          format: date-time
          type: string
        EndDate:
          description: "Gets or sets the end date of the recording, in UTC."
          format: date-time
          type: string
        ServiceName:
          description: Gets or sets the name of the service.
          nullable: true
          type: string
        Priority:
          description: Gets or sets the priority.
          format: int32
          type: integer
        PrePaddingSeconds:
          description: Gets or sets the pre padding seconds.
          format: int32
          type: integer
        PostPaddingSeconds:
          description: Gets or sets the post padding seconds.
          format: int32
          type: integer
        IsPrePaddingRequired:
          description: Gets or sets a value indicating whether this instance is pre
            padding required.
          type: boolean
        ParentBackdropItemId:
          description: Gets or sets the Id of the Parent that has a backdrop if the
            item does not have one.
          nullable: true
          type: string
        ParentBackdropImageTags:
          description: Gets or sets the parent backdrop image tags.
          items:
            type: string
          nullable: true
          type: array
        IsPostPaddingRequired:
          description: Gets or sets a value indicating whether this instance is post
            padding required.
          type: boolean
        KeepUntil:
          allOf:
          - $ref: '#/components/schemas/KeepUntil'
          enum:
          - UntilDeleted
          - UntilSpaceNeeded
          - UntilWatched
          - UntilDate
          type: string
        RecordAnyTime:
          description: "Gets or sets a value indicating whether [record any time]."
          type: boolean
        SkipEpisodesInLibrary:
          type: boolean
        RecordAnyChannel:
          description: "Gets or sets a value indicating whether [record any channel]."
          type: boolean
        KeepUpTo:
          format: int32
          type: integer
        RecordNewOnly:
          description: "Gets or sets a value indicating whether [record new only]."
          type: boolean
        Days:
          description: Gets or sets the days.
          items:
            $ref: '#/components/schemas/DayOfWeek'
          nullable: true
          type: array
        DayPattern:
          allOf:
          - $ref: '#/components/schemas/DayPattern'
          description: Gets or sets the day pattern.
          enum:
          - Daily
          - Weekdays
          - Weekends
          nullable: true
          type: string
        ImageTags:
          additionalProperties:
            type: string
          description: Gets or sets the image tags.
          nullable: true
          type: object
        ParentThumbItemId:
          description: Gets or sets the parent thumb item id.
          nullable: true
          type: string
        ParentThumbImageTag:
          description: Gets or sets the parent thumb image tag.
          nullable: true
          type: string
        ParentPrimaryImageItemId:
          description: Gets or sets the parent primary image item identifier.
          nullable: true
          type: string
        ParentPrimaryImageTag:
          description: Gets or sets the parent primary image tag.
          nullable: true
          type: string
      type: object
    SeriesTimerInfoDtoQueryResult:
      additionalProperties: false
      description: Query result container.
      example:
        TotalRecordCount: 5
        StartIndex: 2
        Items:
        - PrePaddingSeconds: 6
          KeepUntil: UntilDeleted
          SkipEpisodesInLibrary: true
          KeepUpTo: 5
          RecordNewOnly: true
          RecordAnyChannel: true
          ParentThumbImageTag: ParentThumbImageTag
          ChannelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ExternalProgramId: ExternalProgramId
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          IsPostPaddingRequired: true
          ServerId: ServerId
          ParentBackdropItemId: ParentBackdropItemId
          Days:
          - Sunday
          - Sunday
          DayPattern: Daily
          ParentPrimaryImageTag: ParentPrimaryImageTag
          IsPrePaddingRequired: true
          Priority: 0
          ExternalId: ExternalId
          RecordAnyTime: true
          ExternalChannelId: ExternalChannelId
          Overview: Overview
          PostPaddingSeconds: 1
          ProgramId: ProgramId
          ParentPrimaryImageItemId: ParentPrimaryImageItemId
          EndDate: 2000-01-23T04:56:07.000+00:00
          ImageTags:
            key: ImageTags
          ParentThumbItemId: ParentThumbItemId
          Type: Type
          ChannelName: ChannelName
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          ServiceName: ServiceName
          Id: Id
        - PrePaddingSeconds: 6
          KeepUntil: UntilDeleted
          SkipEpisodesInLibrary: true
          KeepUpTo: 5
          RecordNewOnly: true
          RecordAnyChannel: true
          ParentThumbImageTag: ParentThumbImageTag
          ChannelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ExternalProgramId: ExternalProgramId
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          IsPostPaddingRequired: true
          ServerId: ServerId
          ParentBackdropItemId: ParentBackdropItemId
          Days:
          - Sunday
          - Sunday
          DayPattern: Daily
          ParentPrimaryImageTag: ParentPrimaryImageTag
          IsPrePaddingRequired: true
          Priority: 0
          ExternalId: ExternalId
          RecordAnyTime: true
          ExternalChannelId: ExternalChannelId
          Overview: Overview
          PostPaddingSeconds: 1
          ProgramId: ProgramId
          ParentPrimaryImageItemId: ParentPrimaryImageItemId
          EndDate: 2000-01-23T04:56:07.000+00:00
          ImageTags:
            key: ImageTags
          ParentThumbItemId: ParentThumbItemId
          Type: Type
          ChannelName: ChannelName
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          ServiceName: ServiceName
          Id: Id
      properties:
        Items:
          description: Gets or sets the items.
          items:
            $ref: '#/components/schemas/SeriesTimerInfoDto'
          type: array
        TotalRecordCount:
          description: Gets or sets the total number of records available.
          format: int32
          type: integer
        StartIndex:
          description: Gets or sets the index of the first record in Items.
          format: int32
          type: integer
      type: object
    ServerConfiguration:
      additionalProperties: false
      description: Represents the server configuration.
      example:
        EnableSlowResponseWarning: true
        CorsHosts:
        - CorsHosts
        - CorsHosts
        IsStartupWizardCompleted: true
        IsPortAuthorized: true
        UICulture: UICulture
        CodecsUsed:
        - CodecsUsed
        - CodecsUsed
        ImageSavingConvention: Legacy
        MetadataCountryCode: MetadataCountryCode
        DummyChapterDuration: 6
        SaveMetadataHidden: true
        EnableNormalizedItemByNameIds: true
        LibraryUpdateDuration: 3
        ActivityLogRetentionDays: 1
        SortRemoveCharacters:
        - SortRemoveCharacters
        - SortRemoveCharacters
        DisableLiveTvChannelUserDataName: true
        MaxResumePct: 1
        MinResumeDurationSeconds: 5
        ChapterImageResolution: MatchSource
        SlowResponseThresholdMs: 7
        LogFileRetentionDays: 0
        LibraryScanFanoutConcurrency: 1
        SkipDeserializationForBasicTypes: true
        MetadataOptions:
        - DisabledImageFetchers:
          - DisabledImageFetchers
          - DisabledImageFetchers
          DisabledMetadataSavers:
          - DisabledMetadataSavers
          - DisabledMetadataSavers
          MetadataFetcherOrder:
          - MetadataFetcherOrder
          - MetadataFetcherOrder
          ItemType: ItemType
          DisabledMetadataFetchers:
          - DisabledMetadataFetchers
          - DisabledMetadataFetchers
          ImageFetcherOrder:
          - ImageFetcherOrder
          - ImageFetcherOrder
          LocalMetadataReaderOrder:
          - LocalMetadataReaderOrder
          - LocalMetadataReaderOrder
        - DisabledImageFetchers:
          - DisabledImageFetchers
          - DisabledImageFetchers
          DisabledMetadataSavers:
          - DisabledMetadataSavers
          - DisabledMetadataSavers
          MetadataFetcherOrder:
          - MetadataFetcherOrder
          - MetadataFetcherOrder
          ItemType: ItemType
          DisabledMetadataFetchers:
          - DisabledMetadataFetchers
          - DisabledMetadataFetchers
          ImageFetcherOrder:
          - ImageFetcherOrder
          - ImageFetcherOrder
          LocalMetadataReaderOrder:
          - LocalMetadataReaderOrder
          - LocalMetadataReaderOrder
        AllowClientLogUpload: true
        MinResumePct: 6
        TrickplayOptions: ""
        RemoteClientBitrateLimit: 2
        CastReceiverApplications:
        - Id: Id
          Name: Name
        - Id: Id
          Name: Name
        ImageExtractionTimeoutMs: 4
        EnableExternalContentInSuggestions: true
        RemoveOldPlugins: true
        LibraryMonitorDelay: 9
        EnableCaseSensitiveItemIds: true
        SortReplaceCharacters:
        - SortReplaceCharacters
        - SortReplaceCharacters
        LibraryMetadataRefreshConcurrency: 1
        PreviousVersionStr: PreviousVersionStr
        PathSubstitutions:
        - From: From
          To: To
        - From: From
          To: To
        CachePath: CachePath
        MaxAudiobookResume: 2
        EnableFolderView: true
        DisplaySpecialsWithinSeasons: true
        MinAudiobookResume: 5
        PluginRepositories:
        - Enabled: true
          Url: Url
          Name: Name
        - Enabled: true
          Url: Url
          Name: Name
        ParallelImageEncodingLimit: 7
        ContentTypes:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        PreviousVersion: PreviousVersion
        MetadataPath: MetadataPath
        InactiveSessionThreshold: 7
        EnableMetrics: true
        PreferredMetadataLanguage: PreferredMetadataLanguage
        ServerName: ServerName
        QuickConnectAvailable: true
        SortRemoveWords:
        - SortRemoveWords
        - SortRemoveWords
        EnableGroupingIntoCollections: true
      properties:
        LogFileRetentionDays:
          description: Gets or sets the number of days we should retain log files.
          format: int32
          type: integer
        IsStartupWizardCompleted:
          description: Gets or sets a value indicating whether this instance is first
            run.
          type: boolean
        CachePath:
          description: Gets or sets the cache path.
          nullable: true
          type: string
        PreviousVersion:
          description: Gets or sets the last known version that was ran using the
            configuration.
          nullable: true
          type: string
        PreviousVersionStr:
          description: "Gets or sets the stringified PreviousVersion to be stored/loaded,\r\
            \nbecause System.Version itself isn't xml-serializable."
          nullable: true
          type: string
        EnableMetrics:
          description: Gets or sets a value indicating whether to enable prometheus
            metrics exporting.
          type: boolean
        EnableNormalizedItemByNameIds:
          type: boolean
        IsPortAuthorized:
          description: Gets or sets a value indicating whether this instance is port
            authorized.
          type: boolean
        QuickConnectAvailable:
          description: Gets or sets a value indicating whether quick connect is available
            for use on this server.
          type: boolean
        EnableCaseSensitiveItemIds:
          description: "Gets or sets a value indicating whether [enable case sensitive\
            \ item ids]."
          type: boolean
        DisableLiveTvChannelUserDataName:
          type: boolean
        MetadataPath:
          description: Gets or sets the metadata path.
          type: string
        PreferredMetadataLanguage:
          description: Gets or sets the preferred metadata language.
          type: string
        MetadataCountryCode:
          description: Gets or sets the metadata country code.
          type: string
        SortReplaceCharacters:
          description: Gets or sets characters to be replaced with a ' ' in strings
            to create a sort name.
          items:
            type: string
          type: array
        SortRemoveCharacters:
          description: Gets or sets characters to be removed from strings to create
            a sort name.
          items:
            type: string
          type: array
        SortRemoveWords:
          description: Gets or sets words to be removed from strings to create a sort
            name.
          items:
            type: string
          type: array
        MinResumePct:
          description: Gets or sets the minimum percentage of an item that must be
            played in order for playstate to be updated.
          format: int32
          type: integer
        MaxResumePct:
          description: Gets or sets the maximum percentage of an item that can be
            played while still saving playstate. If this percentage is crossed playstate
            will be reset to the beginning and the item will be marked watched.
          format: int32
          type: integer
        MinResumeDurationSeconds:
          description: Gets or sets the minimum duration that an item must have in
            order to be eligible for playstate updates..
          format: int32
          type: integer
        MinAudiobookResume:
          description: Gets or sets the minimum minutes of a book that must be played
            in order for playstate to be updated.
          format: int32
          type: integer
        MaxAudiobookResume:
          description: Gets or sets the remaining minutes of a book that can be played
            while still saving playstate. If this percentage is crossed playstate
            will be reset to the beginning and the item will be marked watched.
          format: int32
          type: integer
        InactiveSessionThreshold:
          description: "Gets or sets the threshold in minutes after a inactive session\
            \ gets closed automatically.\r\nIf set to 0 the check for inactive sessions\
            \ gets disabled."
          format: int32
          type: integer
        LibraryMonitorDelay:
          description: "Gets or sets the delay in seconds that we will wait after\
            \ a file system change to try and discover what has been added/removed\r\
            \nSome delay is necessary with some items because their creation is not\
            \ atomic.  It involves the creation of several\r\ndifferent directories\
            \ and files."
          format: int32
          type: integer
        LibraryUpdateDuration:
          description: Gets or sets the duration in seconds that we will wait after
            a library updated event before executing the library changed notification.
          format: int32
          type: integer
        ImageSavingConvention:
          allOf:
          - $ref: '#/components/schemas/ImageSavingConvention'
          description: Gets or sets the image saving convention.
          enum:
          - Legacy
          - Compatible
          type: string
        MetadataOptions:
          items:
            $ref: '#/components/schemas/MetadataOptions'
          type: array
        SkipDeserializationForBasicTypes:
          type: boolean
        ServerName:
          type: string
        UICulture:
          type: string
        SaveMetadataHidden:
          type: boolean
        ContentTypes:
          items:
            $ref: '#/components/schemas/NameValuePair'
          type: array
        RemoteClientBitrateLimit:
          format: int32
          type: integer
        EnableFolderView:
          type: boolean
        EnableGroupingIntoCollections:
          type: boolean
        DisplaySpecialsWithinSeasons:
          type: boolean
        CodecsUsed:
          items:
            type: string
          type: array
        PluginRepositories:
          items:
            $ref: '#/components/schemas/RepositoryInfo'
          type: array
        EnableExternalContentInSuggestions:
          type: boolean
        ImageExtractionTimeoutMs:
          format: int32
          type: integer
        PathSubstitutions:
          items:
            $ref: '#/components/schemas/PathSubstitution'
          type: array
        EnableSlowResponseWarning:
          description: Gets or sets a value indicating whether slow server responses
            should be logged as a warning.
          type: boolean
        SlowResponseThresholdMs:
          description: Gets or sets the threshold for the slow response time warning
            in ms.
          format: int64
          type: integer
        CorsHosts:
          description: Gets or sets the cors hosts.
          items:
            type: string
          type: array
        ActivityLogRetentionDays:
          description: Gets or sets the number of days we should retain activity logs.
          format: int32
          nullable: true
          type: integer
        LibraryScanFanoutConcurrency:
          description: Gets or sets the how the library scan fans out.
          format: int32
          type: integer
        LibraryMetadataRefreshConcurrency:
          description: Gets or sets the how many metadata refreshes can run concurrently.
          format: int32
          type: integer
        RemoveOldPlugins:
          description: Gets or sets a value indicating whether older plugins should
            automatically be deleted from the plugin folder.
          type: boolean
        AllowClientLogUpload:
          description: Gets or sets a value indicating whether clients should be allowed
            to upload logs.
          type: boolean
        DummyChapterDuration:
          description: "Gets or sets the dummy chapter duration in seconds, use 0\
            \ (zero) or less to disable generation alltogether."
          format: int32
          type: integer
        ChapterImageResolution:
          allOf:
          - $ref: '#/components/schemas/ImageResolution'
          description: Gets or sets the chapter image resolution.
          enum:
          - MatchSource
          - P144
          - P240
          - P360
          - P480
          - P720
          - P1080
          - P1440
          - P2160
          type: string
        ParallelImageEncodingLimit:
          description: Gets or sets the limit for parallel image encoding.
          format: int32
          type: integer
        CastReceiverApplications:
          description: Gets or sets the list of cast receiver applications.
          items:
            $ref: '#/components/schemas/CastReceiverApplication'
          type: array
        TrickplayOptions:
          allOf:
          - $ref: '#/components/schemas/TrickplayOptions'
          description: Gets or sets the trickplay options.
      type: object
    ServerDiscoveryInfo:
      additionalProperties: false
      description: The server discovery info model.
      properties:
        Address:
          description: Gets the address.
          type: string
        Id:
          description: Gets the server identifier.
          type: string
        Name:
          description: Gets the name.
          type: string
        EndpointAddress:
          description: Gets the endpoint address.
          nullable: true
          type: string
      type: object
    ServerRestartingMessage:
      additionalProperties: false
      description: Server restarting down message.
      properties:
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: ServerRestarting
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    ServerShuttingDownMessage:
      additionalProperties: false
      description: Server shutting down message.
      properties:
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: ServerShuttingDown
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    SessionInfoDto:
      additionalProperties: false
      description: Session info DTO.
      example:
        ApplicationVersion: ApplicationVersion
        SupportedCommands:
        - MoveUp
        - MoveUp
        DeviceId: DeviceId
        IsActive: true
        NowPlayingQueue:
        - PlaylistItemId: PlaylistItemId
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - PlaylistItemId: PlaylistItemId
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        PlaylistItemId: PlaylistItemId
        LastPausedDate: 2000-01-23T04:56:07.000+00:00
        ServerId: ServerId
        RemoteEndPoint: RemoteEndPoint
        SupportsRemoteControl: true
        HasCustomDeviceName: true
        Client: Client
        NowPlayingQueueFullItems:
        - SeasonName: SeasonName
          PremiereDate: 2000-01-23T04:56:07.000+00:00
          CriticRating: 3.0937452
          AirTime: AirTime
          Studios:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          CameraMake: CameraMake
          Aperture: 6.623518433804886
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          ExtraType: Unknown
          ParentBackdropItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Etag: Etag
          ParentLogoImageTag: ParentLogoImageTag
          ExposureTime: 1.7325933120207193
          IsoType: Dvd
          MediaType: Unknown
          NormalizationGain: 8.761433
          Tags:
          - Tags
          - Tags
          ImageBlurHashes:
            Art:
              key: Art
            Banner:
              key: Banner
            Thumb:
              key: Thumb
            Chapter:
              key: Chapter
            BoxRear:
              key: BoxRear
            Box:
              key: Box
            Profile:
              key: Profile
            Logo:
              key: Logo
            Disc:
              key: Disc
            Primary:
              key: Primary
            Screenshot:
              key: Screenshot
            Backdrop:
              key: Backdrop
            Menu:
              key: Menu
          Status: Status
          IndexNumberEnd: 4
          ArtistItems:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          MediaSources:
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            MediaStreams:
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            Size: 5
            Video3DFormat: HalfSideBySide
            BufferMs: 2
            Timestamp: None
            Name: Name
            RequiresOpening: true
            FallbackMaxStreamingBitrate: 6
            SupportsDirectStream: true
            VideoType: VideoFile
            RequiresClosing: true
            Container: Container
            IsoType: Dvd
            HasSegments: true
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            DefaultSubtitleStreamIndex: 3
            GenPtsInput: true
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: File
            IgnoreIndex: true
            SupportsDirectPlay: true
            TranscodingSubProtocol: http
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 5
            Bitrate: 6
            OpenToken: OpenToken
            SupportsProbing: true
            Type: Default
            MediaAttachments:
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            ReadAtNativeFramerate: true
            ETag: ETag
            TranscodingContainer: TranscodingContainer
            IgnoreDts: true
            UseMostCompatibleTranscodingProfile: false
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 6
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            MediaStreams:
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            Size: 5
            Video3DFormat: HalfSideBySide
            BufferMs: 2
            Timestamp: None
            Name: Name
            RequiresOpening: true
            FallbackMaxStreamingBitrate: 6
            SupportsDirectStream: true
            VideoType: VideoFile
            RequiresClosing: true
            Container: Container
            IsoType: Dvd
            HasSegments: true
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            DefaultSubtitleStreamIndex: 3
            GenPtsInput: true
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: File
            IgnoreIndex: true
            SupportsDirectPlay: true
            TranscodingSubProtocol: http
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 5
            Bitrate: 6
            OpenToken: OpenToken
            SupportsProbing: true
            Type: Default
            MediaAttachments:
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            ReadAtNativeFramerate: true
            ETag: ETag
            TranscodingContainer: TranscodingContainer
            IgnoreDts: true
            UseMostCompatibleTranscodingProfile: false
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 6
          GenreItems:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          OfficialRating: OfficialRating
          ProgramCount: 5
          ProgramId: ProgramId
          Longitude: 9.254183946267839
          LockData: true
          FocalLength: 8.28965939814297
          IsNews: true
          ShutterSpeed: 4.573936264232251
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          IsFolder: true
          SeriesTimerId: SeriesTimerId
          SeriesId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          MediaStreams:
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          IsPlaceHolder: true
          CanDownload: true
          SeriesCount: 7
          IsMovie: true
          DateLastMediaAdded: 2000-01-23T04:56:07.000+00:00
          ParentArtImageTag: ParentArtImageTag
          PlayAccess: Full
          SeriesStudio: SeriesStudio
          IsLive: true
          Width: 0
          ExternalUrls:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          RecursiveItemCount: 3
          Path: Path
          ParentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          MusicVideoCount: 3
          ScreenshotImageTags:
          - ScreenshotImageTags
          - ScreenshotImageTags
          EpisodeCount: 4
          IsSeries: true
          ProductionLocations:
          - ProductionLocations
          - ProductionLocations
          ParentPrimaryImageItemId: ParentPrimaryImageItemId
          EndDate: 2000-01-23T04:56:07.000+00:00
          SeriesPrimaryImageTag: SeriesPrimaryImageTag
          ParentThumbItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          PreferredMetadataLanguage: PreferredMetadataLanguage
          Type: AggregateFolder
          BackdropImageTags:
          - BackdropImageTags
          - BackdropImageTags
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          AirsBeforeEpisodeNumber: 1
          ChildCount: 3
          Audio: Mono
          Artists:
          - Artists
          - Artists
          ChannelType: TV
          HasLyrics: true
          RunTimeTicks: 7
          AlbumPrimaryImageTag: AlbumPrimaryImageTag
          Video3DFormat: HalfSideBySide
          CumulativeRunTimeTicks: 0
          SourceType: SourceType
          CanDelete: true
          PlaylistItemId: PlaylistItemId
          DisplayPreferencesId: DisplayPreferencesId
          Album: Album
          Latitude: 8.863729185622827
          SortName: SortName
          ArtistCount: 4
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          Container: Container
          ProductionYear: 6
          SeriesName: SeriesName
          ParentArtItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          AlbumId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          LocalTrailerCount: 7
          IndexNumber: 0
          CompletionPercentage: 9.183123594773994
          Genres:
          - Genres
          - Genres
          SeasonId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          LockedFields:
          - Cast
          - Cast
          ParentPrimaryImageTag: ParentPrimaryImageTag
          ProviderIds:
            key: ProviderIds
          RemoteTrailers:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          MediaSourceCount: 4
          CustomRating: CustomRating
          AirsAfterSeasonNumber: 6
          AirDays:
          - Sunday
          - Sunday
          ParentLogoItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          PartCount: 3
          ChannelName: ChannelName
          EpisodeTitle: EpisodeTitle
          IsoSpeedRating: 3
          CommunityRating: 7.143538
          Software: Software
          Chapters:
          - StartPositionTicks: 0
            ImageTag: ImageTag
            ImageDateModified: 2000-01-23T04:56:07.000+00:00
            ImagePath: ImagePath
            Name: Name
          - StartPositionTicks: 0
            ImageTag: ImageTag
            ImageDateModified: 2000-01-23T04:56:07.000+00:00
            ImagePath: ImagePath
            Name: Name
          SongCount: 6
          Taglines:
          - Taglines
          - Taglines
          AirsBeforeSeasonNumber: 0
          PreferredMetadataCountryCode: PreferredMetadataCountryCode
          CameraModel: CameraModel
          ChannelNumber: ChannelNumber
          UserData: ""
          TimerId: TimerId
          DateCreated: 2000-01-23T04:56:07.000+00:00
          HasSubtitles: true
          ParentThumbImageTag: ParentThumbImageTag
          IsSports: true
          ChannelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ParentIndexNumber: 8
          VideoType: VideoFile
          AlbumArtists:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          ServerId: ServerId
          Number: Number
          AlbumCount: 8
          IsRepeat: true
          CollectionType: unknown
          Trickplay:
            key:
              key:
                ThumbnailCount: 7
                Bandwidth: 0
                TileHeight: 4
                Height: 4
                Width: 6
                TileWidth: 1
                Interval: 9
          PrimaryImageAspectRatio: 5.533258397034986
          Height: 2
          IsKids: true
          DisplayOrder: DisplayOrder
          IsHD: true
          EnableMediaSourceDisplay: true
          SeriesThumbImageTag: SeriesThumbImageTag
          MovieCount: 0
          People:
          - Role: Role
            Type: Unknown
            PrimaryImageTag: PrimaryImageTag
            Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
            ImageBlurHashes:
              Art:
                key: Art
              Banner:
                key: Banner
              Thumb:
                key: Thumb
              Chapter:
                key: Chapter
              BoxRear:
                key: BoxRear
              Box:
                key: Box
              Profile:
                key: Profile
              Logo:
                key: Logo
              Disc:
                key: Disc
              Primary:
                key: Primary
              Screenshot:
                key: Screenshot
              Backdrop:
                key: Backdrop
              Menu:
                key: Menu
          - Role: Role
            Type: Unknown
            PrimaryImageTag: PrimaryImageTag
            Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
            ImageBlurHashes:
              Art:
                key: Art
              Banner:
                key: Banner
              Thumb:
                key: Thumb
              Chapter:
                key: Chapter
              BoxRear:
                key: BoxRear
              Box:
                key: Box
              Profile:
                key: Profile
              Logo:
                key: Logo
              Disc:
                key: Disc
              Primary:
                key: Primary
              Screenshot:
                key: Screenshot
              Backdrop:
                key: Backdrop
              Menu:
                key: Menu
          Overview: Overview
          SpecialFeatureCount: 7
          ImageOrientation: TopLeft
          AlbumArtist: AlbumArtist
          ImageTags:
            key: ImageTags
          AspectRatio: AspectRatio
          TrailerCount: 9
          OriginalTitle: OriginalTitle
          ForcedSortName: ForcedSortName
          CurrentProgram: ""
          LocationType: FileSystem
          IsPremiere: true
          Altitude: 1.8268702177058116
        - SeasonName: SeasonName
          PremiereDate: 2000-01-23T04:56:07.000+00:00
          CriticRating: 3.0937452
          AirTime: AirTime
          Studios:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          CameraMake: CameraMake
          Aperture: 6.623518433804886
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          ExtraType: Unknown
          ParentBackdropItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Etag: Etag
          ParentLogoImageTag: ParentLogoImageTag
          ExposureTime: 1.7325933120207193
          IsoType: Dvd
          MediaType: Unknown
          NormalizationGain: 8.761433
          Tags:
          - Tags
          - Tags
          ImageBlurHashes:
            Art:
              key: Art
            Banner:
              key: Banner
            Thumb:
              key: Thumb
            Chapter:
              key: Chapter
            BoxRear:
              key: BoxRear
            Box:
              key: Box
            Profile:
              key: Profile
            Logo:
              key: Logo
            Disc:
              key: Disc
            Primary:
              key: Primary
            Screenshot:
              key: Screenshot
            Backdrop:
              key: Backdrop
            Menu:
              key: Menu
          Status: Status
          IndexNumberEnd: 4
          ArtistItems:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          MediaSources:
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            MediaStreams:
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            Size: 5
            Video3DFormat: HalfSideBySide
            BufferMs: 2
            Timestamp: None
            Name: Name
            RequiresOpening: true
            FallbackMaxStreamingBitrate: 6
            SupportsDirectStream: true
            VideoType: VideoFile
            RequiresClosing: true
            Container: Container
            IsoType: Dvd
            HasSegments: true
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            DefaultSubtitleStreamIndex: 3
            GenPtsInput: true
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: File
            IgnoreIndex: true
            SupportsDirectPlay: true
            TranscodingSubProtocol: http
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 5
            Bitrate: 6
            OpenToken: OpenToken
            SupportsProbing: true
            Type: Default
            MediaAttachments:
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            ReadAtNativeFramerate: true
            ETag: ETag
            TranscodingContainer: TranscodingContainer
            IgnoreDts: true
            UseMostCompatibleTranscodingProfile: false
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 6
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            MediaStreams:
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            Size: 5
            Video3DFormat: HalfSideBySide
            BufferMs: 2
            Timestamp: None
            Name: Name
            RequiresOpening: true
            FallbackMaxStreamingBitrate: 6
            SupportsDirectStream: true
            VideoType: VideoFile
            RequiresClosing: true
            Container: Container
            IsoType: Dvd
            HasSegments: true
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            DefaultSubtitleStreamIndex: 3
            GenPtsInput: true
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: File
            IgnoreIndex: true
            SupportsDirectPlay: true
            TranscodingSubProtocol: http
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 5
            Bitrate: 6
            OpenToken: OpenToken
            SupportsProbing: true
            Type: Default
            MediaAttachments:
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            ReadAtNativeFramerate: true
            ETag: ETag
            TranscodingContainer: TranscodingContainer
            IgnoreDts: true
            UseMostCompatibleTranscodingProfile: false
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 6
          GenreItems:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          OfficialRating: OfficialRating
          ProgramCount: 5
          ProgramId: ProgramId
          Longitude: 9.254183946267839
          LockData: true
          FocalLength: 8.28965939814297
          IsNews: true
          ShutterSpeed: 4.573936264232251
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          IsFolder: true
          SeriesTimerId: SeriesTimerId
          SeriesId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          MediaStreams:
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          IsPlaceHolder: true
          CanDownload: true
          SeriesCount: 7
          IsMovie: true
          DateLastMediaAdded: 2000-01-23T04:56:07.000+00:00
          ParentArtImageTag: ParentArtImageTag
          PlayAccess: Full
          SeriesStudio: SeriesStudio
          IsLive: true
          Width: 0
          ExternalUrls:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          RecursiveItemCount: 3
          Path: Path
          ParentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          MusicVideoCount: 3
          ScreenshotImageTags:
          - ScreenshotImageTags
          - ScreenshotImageTags
          EpisodeCount: 4
          IsSeries: true
          ProductionLocations:
          - ProductionLocations
          - ProductionLocations
          ParentPrimaryImageItemId: ParentPrimaryImageItemId
          EndDate: 2000-01-23T04:56:07.000+00:00
          SeriesPrimaryImageTag: SeriesPrimaryImageTag
          ParentThumbItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          PreferredMetadataLanguage: PreferredMetadataLanguage
          Type: AggregateFolder
          BackdropImageTags:
          - BackdropImageTags
          - BackdropImageTags
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          AirsBeforeEpisodeNumber: 1
          ChildCount: 3
          Audio: Mono
          Artists:
          - Artists
          - Artists
          ChannelType: TV
          HasLyrics: true
          RunTimeTicks: 7
          AlbumPrimaryImageTag: AlbumPrimaryImageTag
          Video3DFormat: HalfSideBySide
          CumulativeRunTimeTicks: 0
          SourceType: SourceType
          CanDelete: true
          PlaylistItemId: PlaylistItemId
          DisplayPreferencesId: DisplayPreferencesId
          Album: Album
          Latitude: 8.863729185622827
          SortName: SortName
          ArtistCount: 4
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          Container: Container
          ProductionYear: 6
          SeriesName: SeriesName
          ParentArtItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          AlbumId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          LocalTrailerCount: 7
          IndexNumber: 0
          CompletionPercentage: 9.183123594773994
          Genres:
          - Genres
          - Genres
          SeasonId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          LockedFields:
          - Cast
          - Cast
          ParentPrimaryImageTag: ParentPrimaryImageTag
          ProviderIds:
            key: ProviderIds
          RemoteTrailers:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          MediaSourceCount: 4
          CustomRating: CustomRating
          AirsAfterSeasonNumber: 6
          AirDays:
          - Sunday
          - Sunday
          ParentLogoItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          PartCount: 3
          ChannelName: ChannelName
          EpisodeTitle: EpisodeTitle
          IsoSpeedRating: 3
          CommunityRating: 7.143538
          Software: Software
          Chapters:
          - StartPositionTicks: 0
            ImageTag: ImageTag
            ImageDateModified: 2000-01-23T04:56:07.000+00:00
            ImagePath: ImagePath
            Name: Name
          - StartPositionTicks: 0
            ImageTag: ImageTag
            ImageDateModified: 2000-01-23T04:56:07.000+00:00
            ImagePath: ImagePath
            Name: Name
          SongCount: 6
          Taglines:
          - Taglines
          - Taglines
          AirsBeforeSeasonNumber: 0
          PreferredMetadataCountryCode: PreferredMetadataCountryCode
          CameraModel: CameraModel
          ChannelNumber: ChannelNumber
          UserData: ""
          TimerId: TimerId
          DateCreated: 2000-01-23T04:56:07.000+00:00
          HasSubtitles: true
          ParentThumbImageTag: ParentThumbImageTag
          IsSports: true
          ChannelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ParentIndexNumber: 8
          VideoType: VideoFile
          AlbumArtists:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          ServerId: ServerId
          Number: Number
          AlbumCount: 8
          IsRepeat: true
          CollectionType: unknown
          Trickplay:
            key:
              key:
                ThumbnailCount: 7
                Bandwidth: 0
                TileHeight: 4
                Height: 4
                Width: 6
                TileWidth: 1
                Interval: 9
          PrimaryImageAspectRatio: 5.533258397034986
          Height: 2
          IsKids: true
          DisplayOrder: DisplayOrder
          IsHD: true
          EnableMediaSourceDisplay: true
          SeriesThumbImageTag: SeriesThumbImageTag
          MovieCount: 0
          People:
          - Role: Role
            Type: Unknown
            PrimaryImageTag: PrimaryImageTag
            Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
            ImageBlurHashes:
              Art:
                key: Art
              Banner:
                key: Banner
              Thumb:
                key: Thumb
              Chapter:
                key: Chapter
              BoxRear:
                key: BoxRear
              Box:
                key: Box
              Profile:
                key: Profile
              Logo:
                key: Logo
              Disc:
                key: Disc
              Primary:
                key: Primary
              Screenshot:
                key: Screenshot
              Backdrop:
                key: Backdrop
              Menu:
                key: Menu
          - Role: Role
            Type: Unknown
            PrimaryImageTag: PrimaryImageTag
            Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
            ImageBlurHashes:
              Art:
                key: Art
              Banner:
                key: Banner
              Thumb:
                key: Thumb
              Chapter:
                key: Chapter
              BoxRear:
                key: BoxRear
              Box:
                key: Box
              Profile:
                key: Profile
              Logo:
                key: Logo
              Disc:
                key: Disc
              Primary:
                key: Primary
              Screenshot:
                key: Screenshot
              Backdrop:
                key: Backdrop
              Menu:
                key: Menu
          Overview: Overview
          SpecialFeatureCount: 7
          ImageOrientation: TopLeft
          AlbumArtist: AlbumArtist
          ImageTags:
            key: ImageTags
          AspectRatio: AspectRatio
          TrailerCount: 9
          OriginalTitle: OriginalTitle
          ForcedSortName: ForcedSortName
          CurrentProgram: ""
          LocationType: FileSystem
          IsPremiere: true
          Altitude: 1.8268702177058116
        UserName: UserName
        SupportsMediaControl: true
        UserPrimaryImageTag: UserPrimaryImageTag
        DeviceType: DeviceType
        PlayableMediaTypes:
        - Unknown
        - Unknown
        LastPlaybackCheckIn: 2000-01-23T04:56:07.000+00:00
        NowPlayingItem: ""
        TranscodingInfo: ""
        Capabilities: ""
        UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        LastActivityDate: 2000-01-23T04:56:07.000+00:00
        Id: Id
        AdditionalUsers:
        - UserName: UserName
          UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - UserName: UserName
          UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        PlayState: ""
        NowViewingItem: ""
        DeviceName: DeviceName
      properties:
        PlayState:
          allOf:
          - $ref: '#/components/schemas/PlayerStateInfo'
          description: Gets or sets the play state.
          nullable: true
        AdditionalUsers:
          description: Gets or sets the additional users.
          items:
            $ref: '#/components/schemas/SessionUserInfo'
          nullable: true
          type: array
        Capabilities:
          allOf:
          - $ref: '#/components/schemas/ClientCapabilitiesDto'
          description: Gets or sets the client capabilities.
          nullable: true
        RemoteEndPoint:
          description: Gets or sets the remote end point.
          nullable: true
          type: string
        PlayableMediaTypes:
          description: Gets or sets the playable media types.
          items:
            $ref: '#/components/schemas/MediaType'
          type: array
        Id:
          description: Gets or sets the id.
          nullable: true
          type: string
        UserId:
          description: Gets or sets the user id.
          format: uuid
          type: string
        UserName:
          description: Gets or sets the username.
          nullable: true
          type: string
        Client:
          description: Gets or sets the type of the client.
          nullable: true
          type: string
        LastActivityDate:
          description: Gets or sets the last activity date.
          format: date-time
          type: string
        LastPlaybackCheckIn:
          description: Gets or sets the last playback check in.
          format: date-time
          type: string
        LastPausedDate:
          description: Gets or sets the last paused date.
          format: date-time
          nullable: true
          type: string
        DeviceName:
          description: Gets or sets the name of the device.
          nullable: true
          type: string
        DeviceType:
          description: Gets or sets the type of the device.
          nullable: true
          type: string
        NowPlayingItem:
          allOf:
          - $ref: '#/components/schemas/BaseItemDto'
          description: Gets or sets the now playing item.
          nullable: true
        NowViewingItem:
          allOf:
          - $ref: '#/components/schemas/BaseItemDto'
          description: Gets or sets the now viewing item.
          nullable: true
        DeviceId:
          description: Gets or sets the device id.
          nullable: true
          type: string
        ApplicationVersion:
          description: Gets or sets the application version.
          nullable: true
          type: string
        TranscodingInfo:
          allOf:
          - $ref: '#/components/schemas/TranscodingInfo'
          description: Gets or sets the transcoding info.
          nullable: true
        IsActive:
          description: Gets or sets a value indicating whether this session is active.
          type: boolean
        SupportsMediaControl:
          description: Gets or sets a value indicating whether the session supports
            media control.
          type: boolean
        SupportsRemoteControl:
          description: Gets or sets a value indicating whether the session supports
            remote control.
          type: boolean
        NowPlayingQueue:
          description: Gets or sets the now playing queue.
          items:
            $ref: '#/components/schemas/QueueItem'
          nullable: true
          type: array
        NowPlayingQueueFullItems:
          description: Gets or sets the now playing queue full items.
          items:
            $ref: '#/components/schemas/BaseItemDto'
          nullable: true
          type: array
        HasCustomDeviceName:
          description: Gets or sets a value indicating whether the session has a custom
            device name.
          type: boolean
        PlaylistItemId:
          description: Gets or sets the playlist item id.
          nullable: true
          type: string
        ServerId:
          description: Gets or sets the server id.
          nullable: true
          type: string
        UserPrimaryImageTag:
          description: Gets or sets the user primary image tag.
          nullable: true
          type: string
        SupportedCommands:
          description: Gets or sets the supported commands.
          items:
            $ref: '#/components/schemas/GeneralCommandType'
          type: array
      type: object
    SessionMessageType:
      description: The different kinds of messages that are used in the WebSocket
        api.
      enum:
      - ForceKeepAlive
      - GeneralCommand
      - UserDataChanged
      - Sessions
      - Play
      - SyncPlayCommand
      - SyncPlayGroupUpdate
      - Playstate
      - RestartRequired
      - ServerShuttingDown
      - ServerRestarting
      - LibraryChanged
      - UserDeleted
      - UserUpdated
      - SeriesTimerCreated
      - TimerCreated
      - SeriesTimerCancelled
      - TimerCancelled
      - RefreshProgress
      - ScheduledTaskEnded
      - PackageInstallationCancelled
      - PackageInstallationFailed
      - PackageInstallationCompleted
      - PackageInstalling
      - PackageUninstalled
      - ActivityLogEntry
      - ScheduledTasksInfo
      - ActivityLogEntryStart
      - ActivityLogEntryStop
      - SessionsStart
      - SessionsStop
      - ScheduledTasksInfoStart
      - ScheduledTasksInfoStop
      - KeepAlive
      type: string
    SessionsMessage:
      additionalProperties: false
      description: Sessions message.
      properties:
        Data:
          description: Gets or sets the data.
          items:
            $ref: '#/components/schemas/SessionInfoDto'
          nullable: true
          type: array
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: Sessions
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    SessionsStartMessage:
      additionalProperties: false
      description: "Sessions start message.\r\nData is the timing data encoded as\
        \ \"$initialDelay,$interval\" in ms."
      properties:
        Data:
          description: Gets or sets the data.
          nullable: true
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: SessionsStart
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    SessionsStopMessage:
      additionalProperties: false
      description: Sessions stop message.
      properties:
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: SessionsStop
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    SessionUserInfo:
      additionalProperties: false
      description: Class SessionUserInfo.
      example:
        UserName: UserName
        UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        UserId:
          description: Gets or sets the user identifier.
          format: uuid
          type: string
        UserName:
          description: Gets or sets the name of the user.
          nullable: true
          type: string
      type: object
    SetChannelMappingDto:
      additionalProperties: false
      description: Set channel mapping dto.
      example:
        ProviderId: ProviderId
        ProviderChannelId: ProviderChannelId
        TunerChannelId: TunerChannelId
      properties:
        ProviderId:
          description: Gets or sets the provider id.
          type: string
        TunerChannelId:
          description: Gets or sets the tuner channel id.
          type: string
        ProviderChannelId:
          description: Gets or sets the provider channel id.
          type: string
      required:
      - ProviderChannelId
      - ProviderId
      - TunerChannelId
      type: object
    SetPlaylistItemRequestDto:
      additionalProperties: false
      description: Class SetPlaylistItemRequestDto.
      example:
        PlaylistItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        PlaylistItemId:
          description: Gets or sets the playlist identifier of the playing item.
          format: uuid
          type: string
      type: object
    SetRepeatModeRequestDto:
      additionalProperties: false
      description: Class SetRepeatModeRequestDto.
      example:
        Mode: RepeatOne
      properties:
        Mode:
          allOf:
          - $ref: '#/components/schemas/GroupRepeatMode'
          description: Gets or sets the repeat mode.
          enum:
          - RepeatOne
          - RepeatAll
          - RepeatNone
          type: string
      type: object
    SetShuffleModeRequestDto:
      additionalProperties: false
      description: Class SetShuffleModeRequestDto.
      example:
        Mode: Sorted
      properties:
        Mode:
          allOf:
          - $ref: '#/components/schemas/GroupShuffleMode'
          description: Gets or sets the shuffle mode.
          enum:
          - Sorted
          - Shuffle
          type: string
      type: object
    SongInfo:
      additionalProperties: false
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        OriginalTitle:
          description: Gets or sets the original title.
          nullable: true
          type: string
        Path:
          description: Gets or sets the path.
          nullable: true
          type: string
        MetadataLanguage:
          description: Gets or sets the metadata language.
          nullable: true
          type: string
        MetadataCountryCode:
          description: Gets or sets the metadata country code.
          nullable: true
          type: string
        ProviderIds:
          additionalProperties:
            nullable: true
            type: string
          description: Gets or sets the provider ids.
          nullable: true
          type: object
        Year:
          description: Gets or sets the year.
          format: int32
          nullable: true
          type: integer
        IndexNumber:
          format: int32
          nullable: true
          type: integer
        ParentIndexNumber:
          format: int32
          nullable: true
          type: integer
        PremiereDate:
          format: date-time
          nullable: true
          type: string
        IsAutomated:
          type: boolean
        AlbumArtists:
          items:
            type: string
          nullable: true
          type: array
        Album:
          nullable: true
          type: string
        Artists:
          items:
            type: string
          nullable: true
          type: array
      type: object
    SortOrder:
      description: An enum representing the sorting order.
      enum:
      - Ascending
      - Descending
      type: string
    SpecialViewOptionDto:
      additionalProperties: false
      description: Special view option dto.
      example:
        Id: Id
        Name: Name
      properties:
        Name:
          description: Gets or sets view option name.
          nullable: true
          type: string
        Id:
          description: Gets or sets view option id.
          nullable: true
          type: string
      type: object
    StartupConfigurationDto:
      additionalProperties: false
      description: The startup configuration DTO.
      example:
        PreferredMetadataLanguage: PreferredMetadataLanguage
        UICulture: UICulture
        MetadataCountryCode: MetadataCountryCode
      properties:
        UICulture:
          description: Gets or sets UI language culture.
          nullable: true
          type: string
        MetadataCountryCode:
          description: Gets or sets the metadata country code.
          nullable: true
          type: string
        PreferredMetadataLanguage:
          description: Gets or sets the preferred language for the metadata.
          nullable: true
          type: string
      type: object
    StartupRemoteAccessDto:
      additionalProperties: false
      description: Startup remote access dto.
      example:
        EnableAutomaticPortMapping: true
        EnableRemoteAccess: true
      properties:
        EnableRemoteAccess:
          description: Gets or sets a value indicating whether enable remote access.
          type: boolean
        EnableAutomaticPortMapping:
          description: Gets or sets a value indicating whether enable automatic port
            mapping.
          type: boolean
      required:
      - EnableAutomaticPortMapping
      - EnableRemoteAccess
      type: object
    StartupUserDto:
      additionalProperties: false
      description: The startup user DTO.
      example:
        Name: Name
        Password: Password
      properties:
        Name:
          description: Gets or sets the username.
          nullable: true
          type: string
        Password:
          description: Gets or sets the user's password.
          nullable: true
          type: string
      type: object
    StringGroupUpdate:
      additionalProperties: false
      description: Class GroupUpdate.
      properties:
        GroupId:
          description: Gets the group identifier.
          format: uuid
          readOnly: true
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/GroupUpdateType'
          description: Gets the update type.
          enum:
          - UserJoined
          - UserLeft
          - GroupJoined
          - GroupLeft
          - StateUpdate
          - PlayQueue
          - NotInGroup
          - GroupDoesNotExist
          - CreateGroupDenied
          - JoinGroupDenied
          - LibraryAccessDenied
          type: string
        Data:
          description: Gets the update data.
          type: string
      type: object
    SubtitleDeliveryMethod:
      description: Delivery method to use during playback of a specific subtitle format.
      enum:
      - Encode
      - Embed
      - External
      - Hls
      - Drop
      type: string
    SubtitleOptions:
      additionalProperties: false
      properties:
        SkipIfEmbeddedSubtitlesPresent:
          type: boolean
        SkipIfAudioTrackMatches:
          type: boolean
        DownloadLanguages:
          items:
            type: string
          nullable: true
          type: array
        DownloadMovieSubtitles:
          type: boolean
        DownloadEpisodeSubtitles:
          type: boolean
        OpenSubtitlesUsername:
          nullable: true
          type: string
        OpenSubtitlesPasswordHash:
          nullable: true
          type: string
        IsOpenSubtitleVipAccount:
          type: boolean
        RequirePerfectMatch:
          type: boolean
      type: object
    SubtitlePlaybackMode:
      description: An enum representing a subtitle playback mode.
      enum:
      - Default
      - Always
      - OnlyForced
      - None
      - Smart
      type: string
    SubtitleProfile:
      additionalProperties: false
      description: A class for subtitle profile information.
      properties:
        Format:
          description: Gets or sets the format.
          nullable: true
          type: string
        Method:
          allOf:
          - $ref: '#/components/schemas/SubtitleDeliveryMethod'
          description: Gets or sets the delivery method.
          enum:
          - Encode
          - Embed
          - External
          - Hls
          - Drop
          type: string
        DidlMode:
          description: Gets or sets the DIDL mode.
          nullable: true
          type: string
        Language:
          description: Gets or sets the language.
          nullable: true
          type: string
        Container:
          description: Gets or sets the container.
          nullable: true
          type: string
      type: object
    SyncPlayCommandMessage:
      additionalProperties: false
      description: Sync play command.
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/SendCommand'
          description: Gets or sets the data.
          nullable: true
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: SyncPlayCommand
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    SyncPlayGroupUpdateCommandMessage:
      additionalProperties: false
      description: Untyped sync play command.
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/GroupUpdate'
          description: Gets or sets the data.
          nullable: true
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: SyncPlayGroupUpdate
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    SyncPlayQueueItem:
      additionalProperties: false
      description: Class QueueItem.
      properties:
        ItemId:
          description: Gets the item identifier.
          format: uuid
          type: string
        PlaylistItemId:
          description: Gets the playlist identifier of the item.
          format: uuid
          readOnly: true
          type: string
      type: object
    SyncPlayUserAccessType:
      description: Enum SyncPlayUserAccessType.
      enum:
      - CreateAndJoinGroups
      - JoinGroups
      - None
      type: string
    SystemInfo:
      additionalProperties: false
      description: Class SystemInfo.
      example:
        OperatingSystem: OperatingSystem
        ProductName: ProductName
        EncoderLocation: System
        PackageName: PackageName
        TranscodingTempPath: TranscodingTempPath
        CanSelfRestart: true
        StartupWizardCompleted: true
        Version: Version
        CachePath: CachePath
        HasPendingRestart: true
        ProgramDataPath: ProgramDataPath
        WebPath: WebPath
        SupportsLibraryMonitor: true
        LocalAddress: LocalAddress
        CanLaunchWebBrowser: false
        IsShuttingDown: true
        SystemArchitecture: X64
        ItemsByNamePath: ItemsByNamePath
        WebSocketPortNumber: 0
        CompletedInstallations:
        - SourceUrl: SourceUrl
          Version: Version
          Checksum: Checksum
          PackageInfo: ""
          Guid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Changelog: Changelog
          Name: Name
        - SourceUrl: SourceUrl
          Version: Version
          Checksum: Checksum
          PackageInfo: ""
          Guid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Changelog: Changelog
          Name: Name
        OperatingSystemDisplayName: OperatingSystemDisplayName
        InternalMetadataPath: InternalMetadataPath
        ServerName: ServerName
        Id: Id
        HasUpdateAvailable: false
        LogPath: LogPath
        CastReceiverApplications:
        - Id: Id
          Name: Name
        - Id: Id
          Name: Name
      properties:
        LocalAddress:
          description: Gets or sets the local address.
          nullable: true
          type: string
        ServerName:
          description: Gets or sets the name of the server.
          nullable: true
          type: string
        Version:
          description: Gets or sets the server version.
          nullable: true
          type: string
        ProductName:
          description: Gets or sets the product name. This is the AssemblyProduct
            name.
          nullable: true
          type: string
        OperatingSystem:
          deprecated: true
          description: Gets or sets the operating system.
          nullable: true
          type: string
        Id:
          description: Gets or sets the id.
          nullable: true
          type: string
        StartupWizardCompleted:
          description: Gets or sets a value indicating whether the startup wizard
            is completed.
          nullable: true
          type: boolean
        OperatingSystemDisplayName:
          deprecated: true
          description: Gets or sets the display name of the operating system.
          nullable: true
          type: string
        PackageName:
          description: Gets or sets the package name.
          nullable: true
          type: string
        HasPendingRestart:
          description: Gets or sets a value indicating whether this instance has pending
            restart.
          type: boolean
        IsShuttingDown:
          type: boolean
        SupportsLibraryMonitor:
          description: "Gets or sets a value indicating whether [supports library\
            \ monitor]."
          type: boolean
        WebSocketPortNumber:
          description: Gets or sets the web socket port number.
          format: int32
          type: integer
        CompletedInstallations:
          description: Gets or sets the completed installations.
          items:
            $ref: '#/components/schemas/InstallationInfo'
          nullable: true
          type: array
        CanSelfRestart:
          default: true
          deprecated: true
          description: Gets or sets a value indicating whether this instance can self
            restart.
          type: boolean
        CanLaunchWebBrowser:
          default: false
          deprecated: true
          type: boolean
        ProgramDataPath:
          description: Gets or sets the program data path.
          nullable: true
          type: string
        WebPath:
          description: Gets or sets the web UI resources path.
          nullable: true
          type: string
        ItemsByNamePath:
          description: Gets or sets the items by name path.
          nullable: true
          type: string
        CachePath:
          description: Gets or sets the cache path.
          nullable: true
          type: string
        LogPath:
          description: Gets or sets the log path.
          nullable: true
          type: string
        InternalMetadataPath:
          description: Gets or sets the internal metadata path.
          nullable: true
          type: string
        TranscodingTempPath:
          description: Gets or sets the transcode path.
          nullable: true
          type: string
        CastReceiverApplications:
          description: Gets or sets the list of cast receiver applications.
          items:
            $ref: '#/components/schemas/CastReceiverApplication'
          nullable: true
          type: array
        HasUpdateAvailable:
          default: false
          deprecated: true
          description: Gets or sets a value indicating whether this instance has update
            available.
          type: boolean
        EncoderLocation:
          default: System
          deprecated: true
          nullable: true
          type: string
        SystemArchitecture:
          default: X64
          deprecated: true
          nullable: true
          type: string
      type: object
    TaskCompletionStatus:
      description: Enum TaskCompletionStatus.
      enum:
      - Completed
      - Failed
      - Cancelled
      - Aborted
      type: string
    TaskInfo:
      additionalProperties: false
      description: Class TaskInfo.
      example:
        IsHidden: true
        Description: Description
        Category: Category
        State: Idle
        CurrentProgressPercentage: 0.8008281904610115
        Triggers:
        - DayOfWeek: Sunday
          Type: Type
          IntervalTicks: 1
          TimeOfDayTicks: 6
          MaxRuntimeTicks: 5
        - DayOfWeek: Sunday
          Type: Type
          IntervalTicks: 1
          TimeOfDayTicks: 6
          MaxRuntimeTicks: 5
        Id: Id
        LastExecutionResult: ""
        Key: Key
        Name: Name
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        State:
          allOf:
          - $ref: '#/components/schemas/TaskState'
          description: Gets or sets the state of the task.
          enum:
          - Idle
          - Cancelling
          - Running
          type: string
        CurrentProgressPercentage:
          description: Gets or sets the progress.
          format: double
          nullable: true
          type: number
        Id:
          description: Gets or sets the id.
          nullable: true
          type: string
        LastExecutionResult:
          allOf:
          - $ref: '#/components/schemas/TaskResult'
          description: Gets or sets the last execution result.
          nullable: true
        Triggers:
          description: Gets or sets the triggers.
          items:
            $ref: '#/components/schemas/TaskTriggerInfo'
          nullable: true
          type: array
        Description:
          description: Gets or sets the description.
          nullable: true
          type: string
        Category:
          description: Gets or sets the category.
          nullable: true
          type: string
        IsHidden:
          description: Gets or sets a value indicating whether this instance is hidden.
          type: boolean
        Key:
          description: Gets or sets the key.
          nullable: true
          type: string
      type: object
    TaskResult:
      additionalProperties: false
      description: Class TaskExecutionInfo.
      properties:
        StartTimeUtc:
          description: Gets or sets the start time UTC.
          format: date-time
          type: string
        EndTimeUtc:
          description: Gets or sets the end time UTC.
          format: date-time
          type: string
        Status:
          allOf:
          - $ref: '#/components/schemas/TaskCompletionStatus'
          description: Gets or sets the status.
          enum:
          - Completed
          - Failed
          - Cancelled
          - Aborted
          type: string
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        Key:
          description: Gets or sets the key.
          nullable: true
          type: string
        Id:
          description: Gets or sets the id.
          nullable: true
          type: string
        ErrorMessage:
          description: Gets or sets the error message.
          nullable: true
          type: string
        LongErrorMessage:
          description: Gets or sets the long error message.
          nullable: true
          type: string
      type: object
    TaskState:
      description: Enum TaskState.
      enum:
      - Idle
      - Cancelling
      - Running
      type: string
    TaskTriggerInfo:
      additionalProperties: false
      description: Class TaskTriggerInfo.
      example:
        DayOfWeek: Sunday
        Type: Type
        IntervalTicks: 1
        TimeOfDayTicks: 6
        MaxRuntimeTicks: 5
      properties:
        Type:
          description: Gets or sets the type.
          nullable: true
          type: string
        TimeOfDayTicks:
          description: Gets or sets the time of day.
          format: int64
          nullable: true
          type: integer
        IntervalTicks:
          description: Gets or sets the interval.
          format: int64
          nullable: true
          type: integer
        DayOfWeek:
          allOf:
          - $ref: '#/components/schemas/DayOfWeek'
          description: Gets or sets the day of week.
          enum:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          nullable: true
          type: string
        MaxRuntimeTicks:
          description: Gets or sets the maximum runtime ticks.
          format: int64
          nullable: true
          type: integer
      type: object
    ThemeMediaResult:
      additionalProperties: false
      description: Class ThemeMediaResult.
      example:
        TotalRecordCount: 0
        StartIndex: 6
        OwnerId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Items:
        - SeasonName: SeasonName
          PremiereDate: 2000-01-23T04:56:07.000+00:00
          CriticRating: 3.0937452
          AirTime: AirTime
          Studios:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          CameraMake: CameraMake
          Aperture: 6.623518433804886
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          ExtraType: Unknown
          ParentBackdropItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Etag: Etag
          ParentLogoImageTag: ParentLogoImageTag
          ExposureTime: 1.7325933120207193
          IsoType: Dvd
          MediaType: Unknown
          NormalizationGain: 8.761433
          Tags:
          - Tags
          - Tags
          ImageBlurHashes:
            Art:
              key: Art
            Banner:
              key: Banner
            Thumb:
              key: Thumb
            Chapter:
              key: Chapter
            BoxRear:
              key: BoxRear
            Box:
              key: Box
            Profile:
              key: Profile
            Logo:
              key: Logo
            Disc:
              key: Disc
            Primary:
              key: Primary
            Screenshot:
              key: Screenshot
            Backdrop:
              key: Backdrop
            Menu:
              key: Menu
          Status: Status
          IndexNumberEnd: 4
          ArtistItems:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          MediaSources:
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            MediaStreams:
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            Size: 5
            Video3DFormat: HalfSideBySide
            BufferMs: 2
            Timestamp: None
            Name: Name
            RequiresOpening: true
            FallbackMaxStreamingBitrate: 6
            SupportsDirectStream: true
            VideoType: VideoFile
            RequiresClosing: true
            Container: Container
            IsoType: Dvd
            HasSegments: true
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            DefaultSubtitleStreamIndex: 3
            GenPtsInput: true
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: File
            IgnoreIndex: true
            SupportsDirectPlay: true
            TranscodingSubProtocol: http
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 5
            Bitrate: 6
            OpenToken: OpenToken
            SupportsProbing: true
            Type: Default
            MediaAttachments:
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            ReadAtNativeFramerate: true
            ETag: ETag
            TranscodingContainer: TranscodingContainer
            IgnoreDts: true
            UseMostCompatibleTranscodingProfile: false
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 6
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            MediaStreams:
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            Size: 5
            Video3DFormat: HalfSideBySide
            BufferMs: 2
            Timestamp: None
            Name: Name
            RequiresOpening: true
            FallbackMaxStreamingBitrate: 6
            SupportsDirectStream: true
            VideoType: VideoFile
            RequiresClosing: true
            Container: Container
            IsoType: Dvd
            HasSegments: true
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            DefaultSubtitleStreamIndex: 3
            GenPtsInput: true
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: File
            IgnoreIndex: true
            SupportsDirectPlay: true
            TranscodingSubProtocol: http
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 5
            Bitrate: 6
            OpenToken: OpenToken
            SupportsProbing: true
            Type: Default
            MediaAttachments:
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            ReadAtNativeFramerate: true
            ETag: ETag
            TranscodingContainer: TranscodingContainer
            IgnoreDts: true
            UseMostCompatibleTranscodingProfile: false
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 6
          GenreItems:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          OfficialRating: OfficialRating
          ProgramCount: 5
          ProgramId: ProgramId
          Longitude: 9.254183946267839
          LockData: true
          FocalLength: 8.28965939814297
          IsNews: true
          ShutterSpeed: 4.573936264232251
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          IsFolder: true
          SeriesTimerId: SeriesTimerId
          SeriesId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          MediaStreams:
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          IsPlaceHolder: true
          CanDownload: true
          SeriesCount: 7
          IsMovie: true
          DateLastMediaAdded: 2000-01-23T04:56:07.000+00:00
          ParentArtImageTag: ParentArtImageTag
          PlayAccess: Full
          SeriesStudio: SeriesStudio
          IsLive: true
          Width: 0
          ExternalUrls:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          RecursiveItemCount: 3
          Path: Path
          ParentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          MusicVideoCount: 3
          ScreenshotImageTags:
          - ScreenshotImageTags
          - ScreenshotImageTags
          EpisodeCount: 4
          IsSeries: true
          ProductionLocations:
          - ProductionLocations
          - ProductionLocations
          ParentPrimaryImageItemId: ParentPrimaryImageItemId
          EndDate: 2000-01-23T04:56:07.000+00:00
          SeriesPrimaryImageTag: SeriesPrimaryImageTag
          ParentThumbItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          PreferredMetadataLanguage: PreferredMetadataLanguage
          Type: AggregateFolder
          BackdropImageTags:
          - BackdropImageTags
          - BackdropImageTags
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          AirsBeforeEpisodeNumber: 1
          ChildCount: 3
          Audio: Mono
          Artists:
          - Artists
          - Artists
          ChannelType: TV
          HasLyrics: true
          RunTimeTicks: 7
          AlbumPrimaryImageTag: AlbumPrimaryImageTag
          Video3DFormat: HalfSideBySide
          CumulativeRunTimeTicks: 0
          SourceType: SourceType
          CanDelete: true
          PlaylistItemId: PlaylistItemId
          DisplayPreferencesId: DisplayPreferencesId
          Album: Album
          Latitude: 8.863729185622827
          SortName: SortName
          ArtistCount: 4
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          Container: Container
          ProductionYear: 6
          SeriesName: SeriesName
          ParentArtItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          AlbumId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          LocalTrailerCount: 7
          IndexNumber: 0
          CompletionPercentage: 9.183123594773994
          Genres:
          - Genres
          - Genres
          SeasonId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          LockedFields:
          - Cast
          - Cast
          ParentPrimaryImageTag: ParentPrimaryImageTag
          ProviderIds:
            key: ProviderIds
          RemoteTrailers:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          MediaSourceCount: 4
          CustomRating: CustomRating
          AirsAfterSeasonNumber: 6
          AirDays:
          - Sunday
          - Sunday
          ParentLogoItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          PartCount: 3
          ChannelName: ChannelName
          EpisodeTitle: EpisodeTitle
          IsoSpeedRating: 3
          CommunityRating: 7.143538
          Software: Software
          Chapters:
          - StartPositionTicks: 0
            ImageTag: ImageTag
            ImageDateModified: 2000-01-23T04:56:07.000+00:00
            ImagePath: ImagePath
            Name: Name
          - StartPositionTicks: 0
            ImageTag: ImageTag
            ImageDateModified: 2000-01-23T04:56:07.000+00:00
            ImagePath: ImagePath
            Name: Name
          SongCount: 6
          Taglines:
          - Taglines
          - Taglines
          AirsBeforeSeasonNumber: 0
          PreferredMetadataCountryCode: PreferredMetadataCountryCode
          CameraModel: CameraModel
          ChannelNumber: ChannelNumber
          UserData: ""
          TimerId: TimerId
          DateCreated: 2000-01-23T04:56:07.000+00:00
          HasSubtitles: true
          ParentThumbImageTag: ParentThumbImageTag
          IsSports: true
          ChannelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ParentIndexNumber: 8
          VideoType: VideoFile
          AlbumArtists:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          ServerId: ServerId
          Number: Number
          AlbumCount: 8
          IsRepeat: true
          CollectionType: unknown
          Trickplay:
            key:
              key:
                ThumbnailCount: 7
                Bandwidth: 0
                TileHeight: 4
                Height: 4
                Width: 6
                TileWidth: 1
                Interval: 9
          PrimaryImageAspectRatio: 5.533258397034986
          Height: 2
          IsKids: true
          DisplayOrder: DisplayOrder
          IsHD: true
          EnableMediaSourceDisplay: true
          SeriesThumbImageTag: SeriesThumbImageTag
          MovieCount: 0
          People:
          - Role: Role
            Type: Unknown
            PrimaryImageTag: PrimaryImageTag
            Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
            ImageBlurHashes:
              Art:
                key: Art
              Banner:
                key: Banner
              Thumb:
                key: Thumb
              Chapter:
                key: Chapter
              BoxRear:
                key: BoxRear
              Box:
                key: Box
              Profile:
                key: Profile
              Logo:
                key: Logo
              Disc:
                key: Disc
              Primary:
                key: Primary
              Screenshot:
                key: Screenshot
              Backdrop:
                key: Backdrop
              Menu:
                key: Menu
          - Role: Role
            Type: Unknown
            PrimaryImageTag: PrimaryImageTag
            Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
            ImageBlurHashes:
              Art:
                key: Art
              Banner:
                key: Banner
              Thumb:
                key: Thumb
              Chapter:
                key: Chapter
              BoxRear:
                key: BoxRear
              Box:
                key: Box
              Profile:
                key: Profile
              Logo:
                key: Logo
              Disc:
                key: Disc
              Primary:
                key: Primary
              Screenshot:
                key: Screenshot
              Backdrop:
                key: Backdrop
              Menu:
                key: Menu
          Overview: Overview
          SpecialFeatureCount: 7
          ImageOrientation: TopLeft
          AlbumArtist: AlbumArtist
          ImageTags:
            key: ImageTags
          AspectRatio: AspectRatio
          TrailerCount: 9
          OriginalTitle: OriginalTitle
          ForcedSortName: ForcedSortName
          CurrentProgram: ""
          LocationType: FileSystem
          IsPremiere: true
          Altitude: 1.8268702177058116
        - SeasonName: SeasonName
          PremiereDate: 2000-01-23T04:56:07.000+00:00
          CriticRating: 3.0937452
          AirTime: AirTime
          Studios:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          CameraMake: CameraMake
          Aperture: 6.623518433804886
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          ExtraType: Unknown
          ParentBackdropItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Etag: Etag
          ParentLogoImageTag: ParentLogoImageTag
          ExposureTime: 1.7325933120207193
          IsoType: Dvd
          MediaType: Unknown
          NormalizationGain: 8.761433
          Tags:
          - Tags
          - Tags
          ImageBlurHashes:
            Art:
              key: Art
            Banner:
              key: Banner
            Thumb:
              key: Thumb
            Chapter:
              key: Chapter
            BoxRear:
              key: BoxRear
            Box:
              key: Box
            Profile:
              key: Profile
            Logo:
              key: Logo
            Disc:
              key: Disc
            Primary:
              key: Primary
            Screenshot:
              key: Screenshot
            Backdrop:
              key: Backdrop
            Menu:
              key: Menu
          Status: Status
          IndexNumberEnd: 4
          ArtistItems:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          MediaSources:
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            MediaStreams:
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            Size: 5
            Video3DFormat: HalfSideBySide
            BufferMs: 2
            Timestamp: None
            Name: Name
            RequiresOpening: true
            FallbackMaxStreamingBitrate: 6
            SupportsDirectStream: true
            VideoType: VideoFile
            RequiresClosing: true
            Container: Container
            IsoType: Dvd
            HasSegments: true
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            DefaultSubtitleStreamIndex: 3
            GenPtsInput: true
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: File
            IgnoreIndex: true
            SupportsDirectPlay: true
            TranscodingSubProtocol: http
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 5
            Bitrate: 6
            OpenToken: OpenToken
            SupportsProbing: true
            Type: Default
            MediaAttachments:
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            ReadAtNativeFramerate: true
            ETag: ETag
            TranscodingContainer: TranscodingContainer
            IgnoreDts: true
            UseMostCompatibleTranscodingProfile: false
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 6
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            MediaStreams:
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            - VideoRange: Unknown
              ColorSpace: ColorSpace
              LocalizedHearingImpaired: LocalizedHearingImpaired
              Index: 3
              BitDepth: 7
              SupportsExternalStream: true
              DvLevel: 2
              ReferenceFrameRate: 6.4384236
              Codec: Codec
              SampleRate: 9
              IsAnamorphic: true
              PixelFormat: PixelFormat
              RefFrames: 1
              IsAVC: true
              ColorTransfer: ColorTransfer
              RpuPresentFlag: 4
              LocalizedForced: LocalizedForced
              VideoRangeType: Unknown
              IsExternalUrl: true
              ElPresentFlag: 7
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DvProfile: 3
              AverageFrameRate: 8.762042
              Score: 6
              IsExternal: true
              AudioSpatialFormat: None
              LocalizedDefault: LocalizedDefault
              Level: 1.284659006116532
              CodecTimeBase: CodecTimeBase
              LocalizedUndefined: LocalizedUndefined
              DvBlSignalCompatibilityId: 1
              ColorRange: ColorRange
              Channels: 5
              Profile: Profile
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 9
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              VideoDoViTitle: VideoDoViTitle
              DeliveryMethod: Encode
              DvVersionMajor: 7
              BlPresentFlag: 1
              PacketLength: 4
              Title: Title
              Rotation: 1
              RealFrameRate: 9.018348
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Audio
              DvVersionMinor: 9
              IsInterlaced: true
              LocalizedExternal: LocalizedExternal
              BitRate: 6
            Size: 5
            Video3DFormat: HalfSideBySide
            BufferMs: 2
            Timestamp: None
            Name: Name
            RequiresOpening: true
            FallbackMaxStreamingBitrate: 6
            SupportsDirectStream: true
            VideoType: VideoFile
            RequiresClosing: true
            Container: Container
            IsoType: Dvd
            HasSegments: true
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            DefaultSubtitleStreamIndex: 3
            GenPtsInput: true
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: File
            IgnoreIndex: true
            SupportsDirectPlay: true
            TranscodingSubProtocol: http
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 5
            Bitrate: 6
            OpenToken: OpenToken
            SupportsProbing: true
            Type: Default
            MediaAttachments:
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            - CodecTag: CodecTag
              Comment: Comment
              DeliveryUrl: DeliveryUrl
              Codec: Codec
              FileName: FileName
              Index: 2
              MimeType: MimeType
            ReadAtNativeFramerate: true
            ETag: ETag
            TranscodingContainer: TranscodingContainer
            IgnoreDts: true
            UseMostCompatibleTranscodingProfile: false
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 6
          GenreItems:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          OfficialRating: OfficialRating
          ProgramCount: 5
          ProgramId: ProgramId
          Longitude: 9.254183946267839
          LockData: true
          FocalLength: 8.28965939814297
          IsNews: true
          ShutterSpeed: 4.573936264232251
          Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          IsFolder: true
          SeriesTimerId: SeriesTimerId
          SeriesId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          MediaStreams:
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          - VideoRange: Unknown
            ColorSpace: ColorSpace
            LocalizedHearingImpaired: LocalizedHearingImpaired
            Index: 3
            BitDepth: 7
            SupportsExternalStream: true
            DvLevel: 2
            ReferenceFrameRate: 6.4384236
            Codec: Codec
            SampleRate: 9
            IsAnamorphic: true
            PixelFormat: PixelFormat
            RefFrames: 1
            IsAVC: true
            ColorTransfer: ColorTransfer
            RpuPresentFlag: 4
            LocalizedForced: LocalizedForced
            VideoRangeType: Unknown
            IsExternalUrl: true
            ElPresentFlag: 7
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DvProfile: 3
            AverageFrameRate: 8.762042
            Score: 6
            IsExternal: true
            AudioSpatialFormat: None
            LocalizedDefault: LocalizedDefault
            Level: 1.284659006116532
            CodecTimeBase: CodecTimeBase
            LocalizedUndefined: LocalizedUndefined
            DvBlSignalCompatibilityId: 1
            ColorRange: ColorRange
            Channels: 5
            Profile: Profile
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 9
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            VideoDoViTitle: VideoDoViTitle
            DeliveryMethod: Encode
            DvVersionMajor: 7
            BlPresentFlag: 1
            PacketLength: 4
            Title: Title
            Rotation: 1
            RealFrameRate: 9.018348
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Audio
            DvVersionMinor: 9
            IsInterlaced: true
            LocalizedExternal: LocalizedExternal
            BitRate: 6
          IsPlaceHolder: true
          CanDownload: true
          SeriesCount: 7
          IsMovie: true
          DateLastMediaAdded: 2000-01-23T04:56:07.000+00:00
          ParentArtImageTag: ParentArtImageTag
          PlayAccess: Full
          SeriesStudio: SeriesStudio
          IsLive: true
          Width: 0
          ExternalUrls:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          RecursiveItemCount: 3
          Path: Path
          ParentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          MusicVideoCount: 3
          ScreenshotImageTags:
          - ScreenshotImageTags
          - ScreenshotImageTags
          EpisodeCount: 4
          IsSeries: true
          ProductionLocations:
          - ProductionLocations
          - ProductionLocations
          ParentPrimaryImageItemId: ParentPrimaryImageItemId
          EndDate: 2000-01-23T04:56:07.000+00:00
          SeriesPrimaryImageTag: SeriesPrimaryImageTag
          ParentThumbItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          PreferredMetadataLanguage: PreferredMetadataLanguage
          Type: AggregateFolder
          BackdropImageTags:
          - BackdropImageTags
          - BackdropImageTags
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          AirsBeforeEpisodeNumber: 1
          ChildCount: 3
          Audio: Mono
          Artists:
          - Artists
          - Artists
          ChannelType: TV
          HasLyrics: true
          RunTimeTicks: 7
          AlbumPrimaryImageTag: AlbumPrimaryImageTag
          Video3DFormat: HalfSideBySide
          CumulativeRunTimeTicks: 0
          SourceType: SourceType
          CanDelete: true
          PlaylistItemId: PlaylistItemId
          DisplayPreferencesId: DisplayPreferencesId
          Album: Album
          Latitude: 8.863729185622827
          SortName: SortName
          ArtistCount: 4
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          Container: Container
          ProductionYear: 6
          SeriesName: SeriesName
          ParentArtItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          AlbumId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          LocalTrailerCount: 7
          IndexNumber: 0
          CompletionPercentage: 9.183123594773994
          Genres:
          - Genres
          - Genres
          SeasonId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          LockedFields:
          - Cast
          - Cast
          ParentPrimaryImageTag: ParentPrimaryImageTag
          ProviderIds:
            key: ProviderIds
          RemoteTrailers:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          MediaSourceCount: 4
          CustomRating: CustomRating
          AirsAfterSeasonNumber: 6
          AirDays:
          - Sunday
          - Sunday
          ParentLogoItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          PartCount: 3
          ChannelName: ChannelName
          EpisodeTitle: EpisodeTitle
          IsoSpeedRating: 3
          CommunityRating: 7.143538
          Software: Software
          Chapters:
          - StartPositionTicks: 0
            ImageTag: ImageTag
            ImageDateModified: 2000-01-23T04:56:07.000+00:00
            ImagePath: ImagePath
            Name: Name
          - StartPositionTicks: 0
            ImageTag: ImageTag
            ImageDateModified: 2000-01-23T04:56:07.000+00:00
            ImagePath: ImagePath
            Name: Name
          SongCount: 6
          Taglines:
          - Taglines
          - Taglines
          AirsBeforeSeasonNumber: 0
          PreferredMetadataCountryCode: PreferredMetadataCountryCode
          CameraModel: CameraModel
          ChannelNumber: ChannelNumber
          UserData: ""
          TimerId: TimerId
          DateCreated: 2000-01-23T04:56:07.000+00:00
          HasSubtitles: true
          ParentThumbImageTag: ParentThumbImageTag
          IsSports: true
          ChannelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ParentIndexNumber: 8
          VideoType: VideoFile
          AlbumArtists:
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          - Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
          ServerId: ServerId
          Number: Number
          AlbumCount: 8
          IsRepeat: true
          CollectionType: unknown
          Trickplay:
            key:
              key:
                ThumbnailCount: 7
                Bandwidth: 0
                TileHeight: 4
                Height: 4
                Width: 6
                TileWidth: 1
                Interval: 9
          PrimaryImageAspectRatio: 5.533258397034986
          Height: 2
          IsKids: true
          DisplayOrder: DisplayOrder
          IsHD: true
          EnableMediaSourceDisplay: true
          SeriesThumbImageTag: SeriesThumbImageTag
          MovieCount: 0
          People:
          - Role: Role
            Type: Unknown
            PrimaryImageTag: PrimaryImageTag
            Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
            ImageBlurHashes:
              Art:
                key: Art
              Banner:
                key: Banner
              Thumb:
                key: Thumb
              Chapter:
                key: Chapter
              BoxRear:
                key: BoxRear
              Box:
                key: Box
              Profile:
                key: Profile
              Logo:
                key: Logo
              Disc:
                key: Disc
              Primary:
                key: Primary
              Screenshot:
                key: Screenshot
              Backdrop:
                key: Backdrop
              Menu:
                key: Menu
          - Role: Role
            Type: Unknown
            PrimaryImageTag: PrimaryImageTag
            Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            Name: Name
            ImageBlurHashes:
              Art:
                key: Art
              Banner:
                key: Banner
              Thumb:
                key: Thumb
              Chapter:
                key: Chapter
              BoxRear:
                key: BoxRear
              Box:
                key: Box
              Profile:
                key: Profile
              Logo:
                key: Logo
              Disc:
                key: Disc
              Primary:
                key: Primary
              Screenshot:
                key: Screenshot
              Backdrop:
                key: Backdrop
              Menu:
                key: Menu
          Overview: Overview
          SpecialFeatureCount: 7
          ImageOrientation: TopLeft
          AlbumArtist: AlbumArtist
          ImageTags:
            key: ImageTags
          AspectRatio: AspectRatio
          TrailerCount: 9
          OriginalTitle: OriginalTitle
          ForcedSortName: ForcedSortName
          CurrentProgram: ""
          LocationType: FileSystem
          IsPremiere: true
          Altitude: 1.8268702177058116
      properties:
        Items:
          description: Gets or sets the items.
          items:
            $ref: '#/components/schemas/BaseItemDto'
          type: array
        TotalRecordCount:
          description: Gets or sets the total number of records available.
          format: int32
          type: integer
        StartIndex:
          description: Gets or sets the index of the first record in Items.
          format: int32
          type: integer
        OwnerId:
          description: Gets or sets the owner id.
          format: uuid
          type: string
      type: object
    TimerCancelledMessage:
      additionalProperties: false
      description: Timer cancelled message.
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/TimerEventInfo'
          description: Gets or sets the data.
          nullable: true
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: TimerCancelled
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    TimerCreatedMessage:
      additionalProperties: false
      description: Timer created message.
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/TimerEventInfo'
          description: Gets or sets the data.
          nullable: true
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: TimerCreated
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    TimerEventInfo:
      additionalProperties: false
      properties:
        Id:
          type: string
        ProgramId:
          format: uuid
          nullable: true
          type: string
      type: object
    TimerInfoDto:
      additionalProperties: false
      example:
        PrePaddingSeconds: 6
        KeepUntil: UntilDeleted
        RunTimeTicks: 5
        ChannelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ExternalProgramId: ExternalProgramId
        ChannelPrimaryImageTag: ChannelPrimaryImageTag
        Name: Name
        StartDate: 2000-01-23T04:56:07.000+00:00
        IsPostPaddingRequired: true
        ProgramInfo: ""
        ServerId: ServerId
        ParentBackdropItemId: ParentBackdropItemId
        Status: New
        IsPrePaddingRequired: true
        Priority: 0
        ExternalId: ExternalId
        ExternalSeriesTimerId: ExternalSeriesTimerId
        ExternalChannelId: ExternalChannelId
        Overview: Overview
        PostPaddingSeconds: 1
        ProgramId: ProgramId
        EndDate: 2000-01-23T04:56:07.000+00:00
        Type: Type
        ChannelName: ChannelName
        ParentBackdropImageTags:
        - ParentBackdropImageTags
        - ParentBackdropImageTags
        ServiceName: ServiceName
        Id: Id
        SeriesTimerId: SeriesTimerId
      properties:
        Id:
          description: Gets or sets the Id of the recording.
          nullable: true
          type: string
        Type:
          nullable: true
          type: string
        ServerId:
          description: Gets or sets the server identifier.
          nullable: true
          type: string
        ExternalId:
          description: Gets or sets the external identifier.
          nullable: true
          type: string
        ChannelId:
          description: Gets or sets the channel id of the recording.
          format: uuid
          type: string
        ExternalChannelId:
          description: Gets or sets the external channel identifier.
          nullable: true
          type: string
        ChannelName:
          description: Gets or sets the channel name of the recording.
          nullable: true
          type: string
        ChannelPrimaryImageTag:
          nullable: true
          type: string
        ProgramId:
          description: Gets or sets the program identifier.
          nullable: true
          type: string
        ExternalProgramId:
          description: Gets or sets the external program identifier.
          nullable: true
          type: string
        Name:
          description: Gets or sets the name of the recording.
          nullable: true
          type: string
        Overview:
          description: Gets or sets the description of the recording.
          nullable: true
          type: string
        StartDate:
          description: "Gets or sets the start date of the recording, in UTC."
          format: date-time
          type: string
        EndDate:
          description: "Gets or sets the end date of the recording, in UTC."
          format: date-time
          type: string
        ServiceName:
          description: Gets or sets the name of the service.
          nullable: true
          type: string
        Priority:
          description: Gets or sets the priority.
          format: int32
          type: integer
        PrePaddingSeconds:
          description: Gets or sets the pre padding seconds.
          format: int32
          type: integer
        PostPaddingSeconds:
          description: Gets or sets the post padding seconds.
          format: int32
          type: integer
        IsPrePaddingRequired:
          description: Gets or sets a value indicating whether this instance is pre
            padding required.
          type: boolean
        ParentBackdropItemId:
          description: Gets or sets the Id of the Parent that has a backdrop if the
            item does not have one.
          nullable: true
          type: string
        ParentBackdropImageTags:
          description: Gets or sets the parent backdrop image tags.
          items:
            type: string
          nullable: true
          type: array
        IsPostPaddingRequired:
          description: Gets or sets a value indicating whether this instance is post
            padding required.
          type: boolean
        KeepUntil:
          allOf:
          - $ref: '#/components/schemas/KeepUntil'
          enum:
          - UntilDeleted
          - UntilSpaceNeeded
          - UntilWatched
          - UntilDate
          type: string
        Status:
          allOf:
          - $ref: '#/components/schemas/RecordingStatus'
          description: Gets or sets the status.
          enum:
          - New
          - InProgress
          - Completed
          - Cancelled
          - ConflictedOk
          - ConflictedNotOk
          - Error
          type: string
        SeriesTimerId:
          description: Gets or sets the series timer identifier.
          nullable: true
          type: string
        ExternalSeriesTimerId:
          description: Gets or sets the external series timer identifier.
          nullable: true
          type: string
        RunTimeTicks:
          description: Gets or sets the run time ticks.
          format: int64
          nullable: true
          type: integer
        ProgramInfo:
          allOf:
          - $ref: '#/components/schemas/BaseItemDto'
          description: Gets or sets the program information.
          nullable: true
      type: object
    TimerInfoDtoQueryResult:
      additionalProperties: false
      description: Query result container.
      example:
        TotalRecordCount: 5
        StartIndex: 2
        Items:
        - PrePaddingSeconds: 6
          KeepUntil: UntilDeleted
          RunTimeTicks: 5
          ChannelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ExternalProgramId: ExternalProgramId
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          IsPostPaddingRequired: true
          ProgramInfo: ""
          ServerId: ServerId
          ParentBackdropItemId: ParentBackdropItemId
          Status: New
          IsPrePaddingRequired: true
          Priority: 0
          ExternalId: ExternalId
          ExternalSeriesTimerId: ExternalSeriesTimerId
          ExternalChannelId: ExternalChannelId
          Overview: Overview
          PostPaddingSeconds: 1
          ProgramId: ProgramId
          EndDate: 2000-01-23T04:56:07.000+00:00
          Type: Type
          ChannelName: ChannelName
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          ServiceName: ServiceName
          Id: Id
          SeriesTimerId: SeriesTimerId
        - PrePaddingSeconds: 6
          KeepUntil: UntilDeleted
          RunTimeTicks: 5
          ChannelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ExternalProgramId: ExternalProgramId
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          IsPostPaddingRequired: true
          ProgramInfo: ""
          ServerId: ServerId
          ParentBackdropItemId: ParentBackdropItemId
          Status: New
          IsPrePaddingRequired: true
          Priority: 0
          ExternalId: ExternalId
          ExternalSeriesTimerId: ExternalSeriesTimerId
          ExternalChannelId: ExternalChannelId
          Overview: Overview
          PostPaddingSeconds: 1
          ProgramId: ProgramId
          EndDate: 2000-01-23T04:56:07.000+00:00
          Type: Type
          ChannelName: ChannelName
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          ServiceName: ServiceName
          Id: Id
          SeriesTimerId: SeriesTimerId
      properties:
        Items:
          description: Gets or sets the items.
          items:
            $ref: '#/components/schemas/TimerInfoDto'
          type: array
        TotalRecordCount:
          description: Gets or sets the total number of records available.
          format: int32
          type: integer
        StartIndex:
          description: Gets or sets the index of the first record in Items.
          format: int32
          type: integer
      type: object
    TonemappingAlgorithm:
      description: Enum containing tonemapping algorithms.
      enum:
      - none
      - clip
      - linear
      - gamma
      - reinhard
      - hable
      - mobius
      - bt2390
      type: string
    TonemappingMode:
      description: Enum containing tonemapping modes.
      enum:
      - auto
      - max
      - rgb
      - lum
      - itp
      type: string
    TonemappingRange:
      description: Enum containing tonemapping ranges.
      enum:
      - auto
      - tv
      - pc
      type: string
    TrailerInfo:
      additionalProperties: false
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        OriginalTitle:
          description: Gets or sets the original title.
          nullable: true
          type: string
        Path:
          description: Gets or sets the path.
          nullable: true
          type: string
        MetadataLanguage:
          description: Gets or sets the metadata language.
          nullable: true
          type: string
        MetadataCountryCode:
          description: Gets or sets the metadata country code.
          nullable: true
          type: string
        ProviderIds:
          additionalProperties:
            nullable: true
            type: string
          description: Gets or sets the provider ids.
          nullable: true
          type: object
        Year:
          description: Gets or sets the year.
          format: int32
          nullable: true
          type: integer
        IndexNumber:
          format: int32
          nullable: true
          type: integer
        ParentIndexNumber:
          format: int32
          nullable: true
          type: integer
        PremiereDate:
          format: date-time
          nullable: true
          type: string
        IsAutomated:
          type: boolean
      type: object
    TrailerInfoRemoteSearchQuery:
      additionalProperties: false
      example:
        SearchInfo: ""
        IncludeDisabledProviders: true
        SearchProviderName: SearchProviderName
        ItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        SearchInfo:
          allOf:
          - $ref: '#/components/schemas/TrailerInfo'
          nullable: true
        ItemId:
          format: uuid
          type: string
        SearchProviderName:
          description: Gets or sets the provider name to search within if set.
          nullable: true
          type: string
        IncludeDisabledProviders:
          description: Gets or sets a value indicating whether disabled providers
            should be included.
          type: boolean
      type: object
    TranscodeReason:
      enum:
      - ContainerNotSupported
      - VideoCodecNotSupported
      - AudioCodecNotSupported
      - SubtitleCodecNotSupported
      - AudioIsExternal
      - SecondaryAudioNotSupported
      - VideoProfileNotSupported
      - VideoLevelNotSupported
      - VideoResolutionNotSupported
      - VideoBitDepthNotSupported
      - VideoFramerateNotSupported
      - RefFramesNotSupported
      - AnamorphicVideoNotSupported
      - InterlacedVideoNotSupported
      - AudioChannelsNotSupported
      - AudioProfileNotSupported
      - AudioSampleRateNotSupported
      - AudioBitDepthNotSupported
      - ContainerBitrateExceedsLimit
      - VideoBitrateNotSupported
      - AudioBitrateNotSupported
      - UnknownVideoStreamInfo
      - UnknownAudioStreamInfo
      - DirectPlayError
      - VideoRangeTypeNotSupported
      - VideoCodecTagNotSupported
      type: string
    TranscodeSeekInfo:
      enum:
      - Auto
      - Bytes
      type: string
    TranscodingInfo:
      additionalProperties: false
      description: Class holding information on a runnning transcode.
      properties:
        AudioCodec:
          description: Gets or sets the thread count used for encoding.
          nullable: true
          type: string
        VideoCodec:
          description: Gets or sets the thread count used for encoding.
          nullable: true
          type: string
        Container:
          description: Gets or sets the thread count used for encoding.
          nullable: true
          type: string
        IsVideoDirect:
          description: Gets or sets a value indicating whether the video is passed
            through.
          type: boolean
        IsAudioDirect:
          description: Gets or sets a value indicating whether the audio is passed
            through.
          type: boolean
        Bitrate:
          description: Gets or sets the bitrate.
          format: int32
          nullable: true
          type: integer
        Framerate:
          description: Gets or sets the framerate.
          format: float
          nullable: true
          type: number
        CompletionPercentage:
          description: Gets or sets the completion percentage.
          format: double
          nullable: true
          type: number
        Width:
          description: Gets or sets the video width.
          format: int32
          nullable: true
          type: integer
        Height:
          description: Gets or sets the video height.
          format: int32
          nullable: true
          type: integer
        AudioChannels:
          description: Gets or sets the audio channels.
          format: int32
          nullable: true
          type: integer
        HardwareAccelerationType:
          allOf:
          - $ref: '#/components/schemas/HardwareAccelerationType'
          description: Gets or sets the hardware acceleration type.
          enum:
          - none
          - amf
          - qsv
          - nvenc
          - v4l2m2m
          - vaapi
          - videotoolbox
          - rkmpp
          nullable: true
          type: string
        TranscodeReasons:
          description: Gets or sets the transcode reasons.
          enum:
          - ContainerNotSupported
          - VideoCodecNotSupported
          - AudioCodecNotSupported
          - SubtitleCodecNotSupported
          - AudioIsExternal
          - SecondaryAudioNotSupported
          - VideoProfileNotSupported
          - VideoLevelNotSupported
          - VideoResolutionNotSupported
          - VideoBitDepthNotSupported
          - VideoFramerateNotSupported
          - RefFramesNotSupported
          - AnamorphicVideoNotSupported
          - InterlacedVideoNotSupported
          - AudioChannelsNotSupported
          - AudioProfileNotSupported
          - AudioSampleRateNotSupported
          - AudioBitDepthNotSupported
          - ContainerBitrateExceedsLimit
          - VideoBitrateNotSupported
          - AudioBitrateNotSupported
          - UnknownVideoStreamInfo
          - UnknownAudioStreamInfo
          - DirectPlayError
          - VideoRangeTypeNotSupported
          - VideoCodecTagNotSupported
          items:
            $ref: '#/components/schemas/TranscodeReason'
          type: array
      type: object
    TranscodingProfile:
      additionalProperties: false
      description: "A class for transcoding profile information.\r\nNote for client\
        \ developers: Conditions defined in MediaBrowser.Model.Dlna.CodecProfile has\
        \ higher priority and can override values defined here."
      properties:
        Container:
          description: Gets or sets the container.
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/DlnaProfileType'
          description: Gets or sets the DLNA profile type.
          enum:
          - Audio
          - Video
          - Photo
          - Subtitle
          - Lyric
          type: string
        VideoCodec:
          description: Gets or sets the video codec.
          type: string
        AudioCodec:
          description: Gets or sets the audio codec.
          type: string
        Protocol:
          allOf:
          - $ref: '#/components/schemas/MediaStreamProtocol'
          description: "Media streaming protocol.\r\nLowercase for backwards compatibility."
          enum:
          - http
          - hls
          type: string
        EstimateContentLength:
          default: false
          description: Gets or sets a value indicating whether the content length
            should be estimated.
          type: boolean
        EnableMpegtsM2TsMode:
          default: false
          description: Gets or sets a value indicating whether M2TS mode is enabled.
          type: boolean
        TranscodeSeekInfo:
          allOf:
          - $ref: '#/components/schemas/TranscodeSeekInfo'
          default: Auto
          description: Gets or sets the transcoding seek info mode.
          enum:
          - Auto
          - Bytes
          type: string
        CopyTimestamps:
          default: false
          description: Gets or sets a value indicating whether timestamps should be
            copied.
          type: boolean
        Context:
          allOf:
          - $ref: '#/components/schemas/EncodingContext'
          default: Streaming
          description: Gets or sets the encoding context.
          enum:
          - Streaming
          - Static
          type: string
        EnableSubtitlesInManifest:
          default: false
          description: Gets or sets a value indicating whether subtitles are allowed
            in the manifest.
          type: boolean
        MaxAudioChannels:
          description: Gets or sets the maximum audio channels.
          nullable: true
          type: string
        MinSegments:
          default: 0
          description: Gets or sets the minimum amount of segments.
          format: int32
          type: integer
        SegmentLength:
          default: 0
          description: Gets or sets the segment length.
          format: int32
          type: integer
        BreakOnNonKeyFrames:
          default: false
          description: Gets or sets a value indicating whether breaking the video
            stream on non-keyframes is supported.
          type: boolean
        Conditions:
          description: Gets or sets the profile conditions.
          items:
            $ref: '#/components/schemas/ProfileCondition'
          type: array
        EnableAudioVbrEncoding:
          default: true
          description: Gets or sets a value indicating whether variable bitrate encoding
            is supported.
          type: boolean
      type: object
    TransportStreamTimestamp:
      enum:
      - None
      - Zero
      - Valid
      type: string
    TrickplayInfo:
      additionalProperties: false
      description: An entity representing the metadata for a group of trickplay tiles.
      example:
        ThumbnailCount: 7
        Bandwidth: 0
        TileHeight: 4
        Height: 4
        Width: 6
        TileWidth: 1
        Interval: 9
      properties:
        Width:
          description: Gets or sets width of an individual thumbnail.
          format: int32
          type: integer
        Height:
          description: Gets or sets height of an individual thumbnail.
          format: int32
          type: integer
        TileWidth:
          description: Gets or sets amount of thumbnails per row.
          format: int32
          type: integer
        TileHeight:
          description: Gets or sets amount of thumbnails per column.
          format: int32
          type: integer
        ThumbnailCount:
          description: Gets or sets total amount of non-black thumbnails.
          format: int32
          type: integer
        Interval:
          description: Gets or sets interval in milliseconds between each trickplay
            thumbnail.
          format: int32
          type: integer
        Bandwidth:
          description: Gets or sets peak bandwith usage in bits per second.
          format: int32
          type: integer
      type: object
    TrickplayOptions:
      additionalProperties: false
      description: Class TrickplayOptions.
      properties:
        EnableHwAcceleration:
          description: Gets or sets a value indicating whether or not to use HW acceleration.
          type: boolean
        EnableHwEncoding:
          description: Gets or sets a value indicating whether or not to use HW accelerated
            MJPEG encoding.
          type: boolean
        EnableKeyFrameOnlyExtraction:
          description: "Gets or sets a value indicating whether to only extract key\
            \ frames.\r\nSignificantly faster, but is not compatible with all decoders\
            \ and/or video files."
          type: boolean
        ScanBehavior:
          allOf:
          - $ref: '#/components/schemas/TrickplayScanBehavior'
          description: Gets or sets the behavior used by trickplay provider on library
            scan/update.
          enum:
          - Blocking
          - NonBlocking
          type: string
        ProcessPriority:
          allOf:
          - $ref: '#/components/schemas/ProcessPriorityClass'
          description: Gets or sets the process priority for the ffmpeg process.
          enum:
          - Normal
          - Idle
          - High
          - RealTime
          - BelowNormal
          - AboveNormal
          type: string
        Interval:
          description: "Gets or sets the interval, in ms, between each new trickplay\
            \ image."
          format: int32
          type: integer
        WidthResolutions:
          description: "Gets or sets the target width resolutions, in px, to generates\
            \ preview images for."
          items:
            format: int32
            type: integer
          type: array
        TileWidth:
          description: Gets or sets number of tile images to allow in X dimension.
          format: int32
          type: integer
        TileHeight:
          description: Gets or sets number of tile images to allow in Y dimension.
          format: int32
          type: integer
        Qscale:
          description: Gets or sets the ffmpeg output quality level.
          format: int32
          type: integer
        JpegQuality:
          description: Gets or sets the jpeg quality to use for image tiles.
          format: int32
          type: integer
        ProcessThreads:
          description: Gets or sets the number of threads to be used by ffmpeg.
          format: int32
          type: integer
      type: object
    TrickplayScanBehavior:
      description: Enum TrickplayScanBehavior.
      enum:
      - Blocking
      - NonBlocking
      type: string
    TunerChannelMapping:
      additionalProperties: false
      example:
        ProviderChannelId: ProviderChannelId
        ProviderChannelName: ProviderChannelName
        Id: Id
        Name: Name
      properties:
        Name:
          nullable: true
          type: string
        ProviderChannelName:
          nullable: true
          type: string
        ProviderChannelId:
          nullable: true
          type: string
        Id:
          nullable: true
          type: string
      type: object
    TunerHostInfo:
      additionalProperties: false
      example:
        FriendlyName: FriendlyName
        DeviceId: DeviceId
        ImportFavoritesOnly: true
        Url: Url
        Source: Source
        AllowStreamSharing: true
        FallbackMaxStreamingBitrate: 0
        AllowFmp4TranscodingContainer: true
        Type: Type
        AllowHWTranscoding: true
        EnableStreamLooping: true
        TunerCount: 6
        UserAgent: UserAgent
        IgnoreDts: true
        Id: Id
      properties:
        Id:
          nullable: true
          type: string
        Url:
          nullable: true
          type: string
        Type:
          nullable: true
          type: string
        DeviceId:
          nullable: true
          type: string
        FriendlyName:
          nullable: true
          type: string
        ImportFavoritesOnly:
          type: boolean
        AllowHWTranscoding:
          type: boolean
        AllowFmp4TranscodingContainer:
          type: boolean
        AllowStreamSharing:
          type: boolean
        FallbackMaxStreamingBitrate:
          format: int32
          type: integer
        EnableStreamLooping:
          type: boolean
        Source:
          nullable: true
          type: string
        TunerCount:
          format: int32
          type: integer
        UserAgent:
          nullable: true
          type: string
        IgnoreDts:
          type: boolean
      type: object
    TypeOptions:
      additionalProperties: false
      properties:
        Type:
          nullable: true
          type: string
        MetadataFetchers:
          items:
            type: string
          nullable: true
          type: array
        MetadataFetcherOrder:
          items:
            type: string
          nullable: true
          type: array
        ImageFetchers:
          items:
            type: string
          nullable: true
          type: array
        ImageFetcherOrder:
          items:
            type: string
          nullable: true
          type: array
        ImageOptions:
          items:
            $ref: '#/components/schemas/ImageOption'
          nullable: true
          type: array
      type: object
    UnratedItem:
      description: An enum representing an unrated item.
      enum:
      - Movie
      - Trailer
      - Series
      - Music
      - Book
      - LiveTvChannel
      - LiveTvProgram
      - ChannelContent
      - Other
      type: string
    UpdateLibraryOptionsDto:
      additionalProperties: false
      description: Update library options dto.
      example:
        LibraryOptions: ""
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        Id:
          description: Gets or sets the library item id.
          format: uuid
          type: string
        LibraryOptions:
          allOf:
          - $ref: '#/components/schemas/LibraryOptions'
          description: Gets or sets library options.
          nullable: true
      type: object
    UpdateMediaPathRequestDto:
      additionalProperties: false
      description: Update library options dto.
      example:
        PathInfo: ""
        Name: Name
      properties:
        Name:
          description: Gets or sets the library name.
          type: string
        PathInfo:
          allOf:
          - $ref: '#/components/schemas/MediaPathInfo'
          description: Gets or sets library folder path information.
      required:
      - Name
      - PathInfo
      type: object
    UpdatePlaylistDto:
      additionalProperties: false
      description: Update existing playlist dto. Fields set to `null` will not be
        updated and keep their current values.
      example:
        IsPublic: true
        Ids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Users:
        - UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          CanEdit: true
        - UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          CanEdit: true
        Name: Name
      properties:
        Name:
          description: Gets or sets the name of the new playlist.
          nullable: true
          type: string
        Ids:
          description: Gets or sets item ids of the playlist.
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        Users:
          description: Gets or sets the playlist users.
          items:
            $ref: '#/components/schemas/PlaylistUserPermissions'
          nullable: true
          type: array
        IsPublic:
          description: Gets or sets a value indicating whether the playlist is public.
          nullable: true
          type: boolean
      type: object
    UpdatePlaylistUserDto:
      additionalProperties: false
      description: Update existing playlist user dto. Fields set to `null` will not
        be updated and keep their current values.
      example:
        CanEdit: true
      properties:
        CanEdit:
          description: Gets or sets a value indicating whether the user can edit the
            playlist.
          nullable: true
          type: boolean
      type: object
    UpdateUserItemDataDto:
      additionalProperties: false
      description: This is used by the api to get information about a item user data.
      example:
        UnplayedItemCount: 1
        Played: true
        PlayedPercentage: 6.027456183070403
        Rating: 0.8008281904610115
        PlayCount: 5
        PlaybackPositionTicks: 5
        LastPlayedDate: 2000-01-23T04:56:07.000+00:00
        Likes: true
        IsFavorite: true
        ItemId: ItemId
        Key: Key
      properties:
        Rating:
          description: Gets or sets the rating.
          format: double
          nullable: true
          type: number
        PlayedPercentage:
          description: Gets or sets the played percentage.
          format: double
          nullable: true
          type: number
        UnplayedItemCount:
          description: Gets or sets the unplayed item count.
          format: int32
          nullable: true
          type: integer
        PlaybackPositionTicks:
          description: Gets or sets the playback position ticks.
          format: int64
          nullable: true
          type: integer
        PlayCount:
          description: Gets or sets the play count.
          format: int32
          nullable: true
          type: integer
        IsFavorite:
          description: Gets or sets a value indicating whether this instance is favorite.
          nullable: true
          type: boolean
        Likes:
          description: Gets or sets a value indicating whether this MediaBrowser.Model.Dto.UpdateUserItemDataDto
            is likes.
          nullable: true
          type: boolean
        LastPlayedDate:
          description: Gets or sets the last played date.
          format: date-time
          nullable: true
          type: string
        Played:
          description: Gets or sets a value indicating whether this MediaBrowser.Model.Dto.UserItemDataDto
            is played.
          nullable: true
          type: boolean
        Key:
          description: Gets or sets the key.
          nullable: true
          type: string
        ItemId:
          description: Gets or sets the item identifier.
          nullable: true
          type: string
      type: object
    UpdateUserPassword:
      additionalProperties: false
      description: The update user password request body.
      example:
        ResetPassword: true
        CurrentPw: CurrentPw
        CurrentPassword: CurrentPassword
        NewPw: NewPw
      properties:
        CurrentPassword:
          description: Gets or sets the current sha1-hashed password.
          nullable: true
          type: string
        CurrentPw:
          description: Gets or sets the current plain text password.
          nullable: true
          type: string
        NewPw:
          description: Gets or sets the new plain text password.
          nullable: true
          type: string
        ResetPassword:
          description: Gets or sets a value indicating whether to reset the password.
          type: boolean
      type: object
    UploadSubtitleDto:
      additionalProperties: false
      description: Upload subtitles dto.
      example:
        IsHearingImpaired: true
        Format: Format
        Language: Language
        IsForced: true
        Data: Data
      properties:
        Language:
          description: Gets or sets the subtitle language.
          type: string
        Format:
          description: Gets or sets the subtitle format.
          type: string
        IsForced:
          description: Gets or sets a value indicating whether the subtitle is forced.
          type: boolean
        IsHearingImpaired:
          description: Gets or sets a value indicating whether the subtitle is for
            hearing impaired.
          type: boolean
        Data:
          description: Gets or sets the subtitle data.
          type: string
      required:
      - Data
      - Format
      - IsForced
      - IsHearingImpaired
      - Language
      type: object
    UserConfiguration:
      additionalProperties: false
      description: Class UserConfiguration.
      example:
        EnableNextEpisodeAutoPlay: true
        SubtitleLanguagePreference: SubtitleLanguagePreference
        DisplayMissingEpisodes: true
        CastReceiverId: CastReceiverId
        OrderedViews:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        LatestItemsExcludes:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        SubtitleMode: Default
        HidePlayedInLatest: true
        EnableLocalPassword: true
        RememberSubtitleSelections: true
        AudioLanguagePreference: AudioLanguagePreference
        DisplayCollectionsView: true
        PlayDefaultAudioTrack: true
        GroupedFolders:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        MyMediaExcludes:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        RememberAudioSelections: true
      properties:
        AudioLanguagePreference:
          description: Gets or sets the audio language preference.
          nullable: true
          type: string
        PlayDefaultAudioTrack:
          description: "Gets or sets a value indicating whether [play default audio\
            \ track]."
          type: boolean
        SubtitleLanguagePreference:
          description: Gets or sets the subtitle language preference.
          nullable: true
          type: string
        DisplayMissingEpisodes:
          type: boolean
        GroupedFolders:
          items:
            format: uuid
            type: string
          type: array
        SubtitleMode:
          allOf:
          - $ref: '#/components/schemas/SubtitlePlaybackMode'
          description: An enum representing a subtitle playback mode.
          enum:
          - Default
          - Always
          - OnlyForced
          - None
          - Smart
          type: string
        DisplayCollectionsView:
          type: boolean
        EnableLocalPassword:
          type: boolean
        OrderedViews:
          items:
            format: uuid
            type: string
          type: array
        LatestItemsExcludes:
          items:
            format: uuid
            type: string
          type: array
        MyMediaExcludes:
          items:
            format: uuid
            type: string
          type: array
        HidePlayedInLatest:
          type: boolean
        RememberAudioSelections:
          type: boolean
        RememberSubtitleSelections:
          type: boolean
        EnableNextEpisodeAutoPlay:
          type: boolean
        CastReceiverId:
          description: Gets or sets the id of the selected cast receiver.
          nullable: true
          type: string
      type: object
    UserDataChangedMessage:
      additionalProperties: false
      description: User data changed message.
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/UserDataChangeInfo'
          description: Gets or sets the data.
          nullable: true
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: UserDataChanged
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    UserDataChangeInfo:
      additionalProperties: false
      description: Class UserDataChangeInfo.
      properties:
        UserId:
          description: Gets or sets the user id.
          format: uuid
          type: string
        UserDataList:
          description: Gets or sets the user data list.
          items:
            $ref: '#/components/schemas/UserItemDataDto'
          type: array
      type: object
    UserDeletedMessage:
      additionalProperties: false
      description: User deleted message.
      properties:
        Data:
          description: Gets or sets the data.
          format: uuid
          type: string
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: UserDeleted
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    UserDto:
      additionalProperties: false
      description: Class UserDto.
      example:
        Policy: ""
        HasConfiguredEasyPassword: true
        EnableAutoLogin: true
        Configuration: ""
        LastLoginDate: 2000-01-23T04:56:07.000+00:00
        PrimaryImageTag: PrimaryImageTag
        Name: Name
        ServerId: ServerId
        HasConfiguredPassword: true
        ServerName: ServerName
        LastActivityDate: 2000-01-23T04:56:07.000+00:00
        PrimaryImageAspectRatio: 0.8008281904610115
        Id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        HasPassword: true
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        ServerId:
          description: Gets or sets the server identifier.
          nullable: true
          type: string
        ServerName:
          description: "Gets or sets the name of the server.\r\nThis is not used by\
            \ the server and is for client-side usage only."
          nullable: true
          type: string
        Id:
          description: Gets or sets the id.
          format: uuid
          type: string
        PrimaryImageTag:
          description: Gets or sets the primary image tag.
          nullable: true
          type: string
        HasPassword:
          description: Gets or sets a value indicating whether this instance has password.
          type: boolean
        HasConfiguredPassword:
          description: Gets or sets a value indicating whether this instance has configured
            password.
          type: boolean
        HasConfiguredEasyPassword:
          deprecated: true
          description: Gets or sets a value indicating whether this instance has configured
            easy password.
          type: boolean
        EnableAutoLogin:
          description: Gets or sets whether async login is enabled or not.
          nullable: true
          type: boolean
        LastLoginDate:
          description: Gets or sets the last login date.
          format: date-time
          nullable: true
          type: string
        LastActivityDate:
          description: Gets or sets the last activity date.
          format: date-time
          nullable: true
          type: string
        Configuration:
          allOf:
          - $ref: '#/components/schemas/UserConfiguration'
          description: Gets or sets the configuration.
          nullable: true
        Policy:
          allOf:
          - $ref: '#/components/schemas/UserPolicy'
          description: Gets or sets the policy.
          nullable: true
        PrimaryImageAspectRatio:
          description: Gets or sets the primary image aspect ratio.
          format: double
          nullable: true
          type: number
      type: object
    UserItemDataDto:
      additionalProperties: false
      description: Class UserItemDataDto.
      example:
        UnplayedItemCount: 1
        Played: true
        PlayedPercentage: 6.027456183070403
        Rating: 0.8008281904610115
        PlayCount: 5
        PlaybackPositionTicks: 5
        LastPlayedDate: 2000-01-23T04:56:07.000+00:00
        Likes: true
        IsFavorite: true
        ItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Key: Key
      properties:
        Rating:
          description: Gets or sets the rating.
          format: double
          nullable: true
          type: number
        PlayedPercentage:
          description: Gets or sets the played percentage.
          format: double
          nullable: true
          type: number
        UnplayedItemCount:
          description: Gets or sets the unplayed item count.
          format: int32
          nullable: true
          type: integer
        PlaybackPositionTicks:
          description: Gets or sets the playback position ticks.
          format: int64
          type: integer
        PlayCount:
          description: Gets or sets the play count.
          format: int32
          type: integer
        IsFavorite:
          description: Gets or sets a value indicating whether this instance is favorite.
          type: boolean
        Likes:
          description: Gets or sets a value indicating whether this MediaBrowser.Model.Dto.UserItemDataDto
            is likes.
          nullable: true
          type: boolean
        LastPlayedDate:
          description: Gets or sets the last played date.
          format: date-time
          nullable: true
          type: string
        Played:
          description: Gets or sets a value indicating whether this MediaBrowser.Model.Dto.UserItemDataDto
            is played.
          type: boolean
        Key:
          description: Gets or sets the key.
          type: string
        ItemId:
          description: Gets or sets the item identifier.
          format: uuid
          type: string
      type: object
    UserPolicy:
      additionalProperties: false
      example:
        EnableContentDeletion: true
        EnableContentDeletionFromFolders:
        - EnableContentDeletionFromFolders
        - EnableContentDeletionFromFolders
        EnablePlaybackRemuxing: true
        EnabledFolders:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        BlockedMediaFolders:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        LoginAttemptsBeforeLockout: 2
        IsDisabled: true
        MaxParentalRating: 0
        EnablePublicSharing: true
        AccessSchedules:
        - DayOfWeek: Sunday
          StartHour: 1.4658129805029452
          UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          EndHour: 5.962133916683182
          Id: 6
        - DayOfWeek: Sunday
          StartHour: 1.4658129805029452
          UserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          EndHour: 5.962133916683182
          Id: 6
        ForceRemoteSourceTranscoding: true
        EnableContentDownloading: true
        SyncPlayAccess: CreateAndJoinGroups
        EnableSubtitleManagement: false
        IsAdministrator: true
        BlockedChannels:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        EnableAllDevices: true
        EnabledChannels:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        MaxActiveSessions: 7
        EnableLyricManagement: false
        EnableCollectionManagement: false
        AllowedTags:
        - AllowedTags
        - AllowedTags
        EnableMediaConversion: true
        InvalidLoginAttemptCount: 5
        EnableLiveTvAccess: true
        EnableAllFolders: true
        EnableSharedDeviceControl: true
        EnableRemoteAccess: true
        IsHidden: true
        EnableLiveTvManagement: true
        BlockUnratedItems:
        - Movie
        - Movie
        EnableMediaPlayback: true
        EnableVideoPlaybackTranscoding: true
        EnableAllChannels: true
        EnableUserPreferenceAccess: true
        AuthenticationProviderId: AuthenticationProviderId
        BlockedTags:
        - BlockedTags
        - BlockedTags
        EnabledDevices:
        - EnabledDevices
        - EnabledDevices
        EnableRemoteControlOfOtherUsers: true
        PasswordResetProviderId: PasswordResetProviderId
        EnableAudioPlaybackTranscoding: true
        EnableSyncTranscoding: true
        RemoteClientBitrateLimit: 9
      properties:
        IsAdministrator:
          description: Gets or sets a value indicating whether this instance is administrator.
          type: boolean
        IsHidden:
          description: Gets or sets a value indicating whether this instance is hidden.
          type: boolean
        EnableCollectionManagement:
          default: false
          description: Gets or sets a value indicating whether this instance can manage
            collections.
          type: boolean
        EnableSubtitleManagement:
          default: false
          description: Gets or sets a value indicating whether this instance can manage
            subtitles.
          type: boolean
        EnableLyricManagement:
          default: false
          description: Gets or sets a value indicating whether this user can manage
            lyrics.
          type: boolean
        IsDisabled:
          description: Gets or sets a value indicating whether this instance is disabled.
          type: boolean
        MaxParentalRating:
          description: Gets or sets the max parental rating.
          format: int32
          nullable: true
          type: integer
        BlockedTags:
          items:
            type: string
          nullable: true
          type: array
        AllowedTags:
          items:
            type: string
          nullable: true
          type: array
        EnableUserPreferenceAccess:
          type: boolean
        AccessSchedules:
          items:
            $ref: '#/components/schemas/AccessSchedule'
          nullable: true
          type: array
        BlockUnratedItems:
          items:
            $ref: '#/components/schemas/UnratedItem'
          nullable: true
          type: array
        EnableRemoteControlOfOtherUsers:
          type: boolean
        EnableSharedDeviceControl:
          type: boolean
        EnableRemoteAccess:
          type: boolean
        EnableLiveTvManagement:
          type: boolean
        EnableLiveTvAccess:
          type: boolean
        EnableMediaPlayback:
          type: boolean
        EnableAudioPlaybackTranscoding:
          type: boolean
        EnableVideoPlaybackTranscoding:
          type: boolean
        EnablePlaybackRemuxing:
          type: boolean
        ForceRemoteSourceTranscoding:
          type: boolean
        EnableContentDeletion:
          type: boolean
        EnableContentDeletionFromFolders:
          items:
            type: string
          nullable: true
          type: array
        EnableContentDownloading:
          type: boolean
        EnableSyncTranscoding:
          description: "Gets or sets a value indicating whether [enable synchronize]."
          type: boolean
        EnableMediaConversion:
          type: boolean
        EnabledDevices:
          items:
            type: string
          nullable: true
          type: array
        EnableAllDevices:
          type: boolean
        EnabledChannels:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        EnableAllChannels:
          type: boolean
        EnabledFolders:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        EnableAllFolders:
          type: boolean
        InvalidLoginAttemptCount:
          format: int32
          type: integer
        LoginAttemptsBeforeLockout:
          format: int32
          type: integer
        MaxActiveSessions:
          format: int32
          type: integer
        EnablePublicSharing:
          type: boolean
        BlockedMediaFolders:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        BlockedChannels:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        RemoteClientBitrateLimit:
          format: int32
          type: integer
        AuthenticationProviderId:
          type: string
        PasswordResetProviderId:
          type: string
        SyncPlayAccess:
          allOf:
          - $ref: '#/components/schemas/SyncPlayUserAccessType'
          description: Enum SyncPlayUserAccessType.
          enum:
          - CreateAndJoinGroups
          - JoinGroups
          - None
          type: string
      required:
      - AuthenticationProviderId
      - PasswordResetProviderId
      type: object
    UserUpdatedMessage:
      additionalProperties: false
      description: User updated message.
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/UserDto'
          description: Gets or sets the data.
          nullable: true
        MessageId:
          description: Gets or sets the message id.
          format: uuid
          type: string
        MessageType:
          allOf:
          - $ref: '#/components/schemas/SessionMessageType'
          default: UserUpdated
          description: The different kinds of messages that are used in the WebSocket
            api.
          enum:
          - ForceKeepAlive
          - GeneralCommand
          - UserDataChanged
          - Sessions
          - Play
          - SyncPlayCommand
          - SyncPlayGroupUpdate
          - Playstate
          - RestartRequired
          - ServerShuttingDown
          - ServerRestarting
          - LibraryChanged
          - UserDeleted
          - UserUpdated
          - SeriesTimerCreated
          - TimerCreated
          - SeriesTimerCancelled
          - TimerCancelled
          - RefreshProgress
          - ScheduledTaskEnded
          - PackageInstallationCancelled
          - PackageInstallationFailed
          - PackageInstallationCompleted
          - PackageInstalling
          - PackageUninstalled
          - ActivityLogEntry
          - ScheduledTasksInfo
          - ActivityLogEntryStart
          - ActivityLogEntryStop
          - SessionsStart
          - SessionsStop
          - ScheduledTasksInfoStart
          - ScheduledTasksInfoStop
          - KeepAlive
          readOnly: true
          type: string
      type: object
    UtcTimeResponse:
      additionalProperties: false
      description: Class UtcTimeResponse.
      example:
        ResponseTransmissionTime: 2000-01-23T04:56:07.000+00:00
        RequestReceptionTime: 2000-01-23T04:56:07.000+00:00
      properties:
        RequestReceptionTime:
          description: Gets the UTC time when request has been received.
          format: date-time
          type: string
        ResponseTransmissionTime:
          description: Gets the UTC time when response has been sent.
          format: date-time
          type: string
      type: object
    ValidatePathDto:
      additionalProperties: false
      description: Validate path object.
      example:
        Path: Path
        IsFile: true
        ValidateWritable: true
      properties:
        ValidateWritable:
          description: Gets or sets a value indicating whether validate if path is
            writable.
          type: boolean
        Path:
          description: Gets or sets the path.
          nullable: true
          type: string
        IsFile:
          description: Gets or sets is path file.
          nullable: true
          type: boolean
      type: object
    VersionInfo:
      additionalProperties: false
      description: Defines the MediaBrowser.Model.Updates.VersionInfo class.
      example:
        sourceUrl: sourceUrl
        targetAbi: targetAbi
        checksum: checksum
        changelog: changelog
        repositoryName: repositoryName
        version: version
        VersionNumber: VersionNumber
        timestamp: timestamp
        repositoryUrl: repositoryUrl
      properties:
        version:
          description: Gets or sets the version.
          type: string
        VersionNumber:
          description: Gets the version as a System.Version.
          readOnly: true
          type: string
        changelog:
          description: Gets or sets the changelog for this version.
          nullable: true
          type: string
        targetAbi:
          description: Gets or sets the ABI that this version was built against.
          nullable: true
          type: string
        sourceUrl:
          description: Gets or sets the source URL.
          nullable: true
          type: string
        checksum:
          description: Gets or sets a checksum for the binary.
          nullable: true
          type: string
        timestamp:
          description: Gets or sets a timestamp of when the binary was built.
          nullable: true
          type: string
        repositoryName:
          description: Gets or sets the repository name.
          type: string
        repositoryUrl:
          description: Gets or sets the repository url.
          type: string
      type: object
    Video3DFormat:
      enum:
      - HalfSideBySide
      - FullSideBySide
      - FullTopAndBottom
      - HalfTopAndBottom
      - MVC
      type: string
    VideoRange:
      description: An enum representing video ranges.
      enum:
      - Unknown
      - SDR
      - HDR
      type: string
    VideoRangeType:
      description: An enum representing types of video ranges.
      enum:
      - Unknown
      - SDR
      - HDR10
      - HLG
      - DOVI
      - DOVIWithHDR10
      - DOVIWithHLG
      - DOVIWithSDR
      - HDR10Plus
      type: string
    VideoType:
      description: Enum VideoType.
      enum:
      - VideoFile
      - Iso
      - Dvd
      - BluRay
      type: string
    VirtualFolderInfo:
      additionalProperties: false
      description: Used to hold information about a user's list of configured virtual
        folders.
      example:
        RefreshProgress: 0.8008281904610115
        PrimaryImageItemId: PrimaryImageItemId
        CollectionType: movies
        Locations:
        - Locations
        - Locations
        LibraryOptions: ""
        ItemId: ItemId
        RefreshStatus: RefreshStatus
        Name: Name
      properties:
        Name:
          description: Gets or sets the name.
          nullable: true
          type: string
        Locations:
          description: Gets or sets the locations.
          items:
            type: string
          nullable: true
          type: array
        CollectionType:
          allOf:
          - $ref: '#/components/schemas/CollectionTypeOptions'
          description: Gets or sets the type of the collection.
          enum:
          - movies
          - tvshows
          - music
          - musicvideos
          - homevideos
          - boxsets
          - books
          - mixed
          nullable: true
          type: string
        LibraryOptions:
          allOf:
          - $ref: '#/components/schemas/LibraryOptions'
          nullable: true
        ItemId:
          description: Gets or sets the item identifier.
          nullable: true
          type: string
        PrimaryImageItemId:
          description: Gets or sets the primary image item identifier.
          nullable: true
          type: string
        RefreshProgress:
          format: double
          nullable: true
          type: number
        RefreshStatus:
          nullable: true
          type: string
      type: object
    WakeOnLanInfo:
      additionalProperties: false
      description: Provides the MAC address and port for wake-on-LAN functionality.
      example:
        Port: 0
        MacAddress: MacAddress
      properties:
        MacAddress:
          description: Gets the MAC address of the device.
          nullable: true
          type: string
        Port:
          description: Gets or sets the wake-on-LAN port.
          format: int32
          type: integer
      type: object
    WebSocketMessage:
      description: Represents the possible websocket types
      oneOf:
      - $ref: '#/components/schemas/InboundWebSocketMessage'
      - $ref: '#/components/schemas/OutboundWebSocketMessage'
      type: object
    XbmcMetadataOptions:
      additionalProperties: false
      properties:
        UserId:
          nullable: true
          type: string
        ReleaseDateFormat:
          type: string
        SaveImagePathsInNfo:
          type: boolean
        EnablePathSubstitution:
          type: boolean
        EnableExtraThumbsDuplication:
          type: boolean
      type: object
    BaseItemDto_ImageBlurHashes:
      description: "Gets or sets the blurhashes for the image tags.\r\nMaps image\
        \ type to dictionary mapping image tag to blurhash value."
      example:
        Art:
          key: Art
        Banner:
          key: Banner
        Thumb:
          key: Thumb
        Chapter:
          key: Chapter
        BoxRear:
          key: BoxRear
        Box:
          key: Box
        Profile:
          key: Profile
        Logo:
          key: Logo
        Disc:
          key: Disc
        Primary:
          key: Primary
        Screenshot:
          key: Screenshot
        Backdrop:
          key: Backdrop
        Menu:
          key: Menu
      nullable: true
      properties:
        Primary:
          additionalProperties:
            type: string
          type: object
        Art:
          additionalProperties:
            type: string
          type: object
        Backdrop:
          additionalProperties:
            type: string
          type: object
        Banner:
          additionalProperties:
            type: string
          type: object
        Logo:
          additionalProperties:
            type: string
          type: object
        Thumb:
          additionalProperties:
            type: string
          type: object
        Disc:
          additionalProperties:
            type: string
          type: object
        Box:
          additionalProperties:
            type: string
          type: object
        Screenshot:
          additionalProperties:
            type: string
          type: object
        Menu:
          additionalProperties:
            type: string
          type: object
        Chapter:
          additionalProperties:
            type: string
          type: object
        BoxRear:
          additionalProperties:
            type: string
          type: object
        Profile:
          additionalProperties:
            type: string
          type: object
      type: object
    BaseItemPerson_ImageBlurHashes:
      description: Gets or sets the primary image blurhash.
      example:
        Art:
          key: Art
        Banner:
          key: Banner
        Thumb:
          key: Thumb
        Chapter:
          key: Chapter
        BoxRear:
          key: BoxRear
        Box:
          key: Box
        Profile:
          key: Profile
        Logo:
          key: Logo
        Disc:
          key: Disc
        Primary:
          key: Primary
        Screenshot:
          key: Screenshot
        Backdrop:
          key: Backdrop
        Menu:
          key: Menu
      nullable: true
      properties:
        Primary:
          additionalProperties:
            type: string
          type: object
        Art:
          additionalProperties:
            type: string
          type: object
        Backdrop:
          additionalProperties:
            type: string
          type: object
        Banner:
          additionalProperties:
            type: string
          type: object
        Logo:
          additionalProperties:
            type: string
          type: object
        Thumb:
          additionalProperties:
            type: string
          type: object
        Disc:
          additionalProperties:
            type: string
          type: object
        Box:
          additionalProperties:
            type: string
          type: object
        Screenshot:
          additionalProperties:
            type: string
          type: object
        Menu:
          additionalProperties:
            type: string
          type: object
        Chapter:
          additionalProperties:
            type: string
          type: object
        BoxRear:
          additionalProperties:
            type: string
          type: object
        Profile:
          additionalProperties:
            type: string
          type: object
      type: object
  securitySchemes:
    CustomAuthentication:
      description: API key header parameter
      in: header
      name: Authorization
      type: apiKey

