/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.SubtitlePlaybackMode;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * Class UserConfiguration.
 */
@JsonPropertyOrder({
  UserConfiguration.JSON_PROPERTY_AUDIO_LANGUAGE_PREFERENCE,
  UserConfiguration.JSON_PROPERTY_PLAY_DEFAULT_AUDIO_TRACK,
  UserConfiguration.JSON_PROPERTY_SUBTITLE_LANGUAGE_PREFERENCE,
  UserConfiguration.JSON_PROPERTY_DISPLAY_MISSING_EPISODES,
  UserConfiguration.JSON_PROPERTY_GROUPED_FOLDERS,
  UserConfiguration.JSON_PROPERTY_SUBTITLE_MODE,
  UserConfiguration.JSON_PROPERTY_DISPLAY_COLLECTIONS_VIEW,
  UserConfiguration.JSON_PROPERTY_ENABLE_LOCAL_PASSWORD,
  UserConfiguration.JSON_PROPERTY_ORDERED_VIEWS,
  UserConfiguration.JSON_PROPERTY_LATEST_ITEMS_EXCLUDES,
  UserConfiguration.JSON_PROPERTY_MY_MEDIA_EXCLUDES,
  UserConfiguration.JSON_PROPERTY_HIDE_PLAYED_IN_LATEST,
  UserConfiguration.JSON_PROPERTY_REMEMBER_AUDIO_SELECTIONS,
  UserConfiguration.JSON_PROPERTY_REMEMBER_SUBTITLE_SELECTIONS,
  UserConfiguration.JSON_PROPERTY_ENABLE_NEXT_EPISODE_AUTO_PLAY,
  UserConfiguration.JSON_PROPERTY_CAST_RECEIVER_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-28T21:48:48.410245241Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class UserConfiguration {
  public static final String JSON_PROPERTY_AUDIO_LANGUAGE_PREFERENCE = "AudioLanguagePreference";
  private JsonNullable<String> audioLanguagePreference = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PLAY_DEFAULT_AUDIO_TRACK = "PlayDefaultAudioTrack";
  @javax.annotation.Nullable
  private Boolean playDefaultAudioTrack;

  public static final String JSON_PROPERTY_SUBTITLE_LANGUAGE_PREFERENCE = "SubtitleLanguagePreference";
  private JsonNullable<String> subtitleLanguagePreference = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DISPLAY_MISSING_EPISODES = "DisplayMissingEpisodes";
  @javax.annotation.Nullable
  private Boolean displayMissingEpisodes;

  public static final String JSON_PROPERTY_GROUPED_FOLDERS = "GroupedFolders";
  @javax.annotation.Nullable
  private List<UUID> groupedFolders = new ArrayList<>();

  public static final String JSON_PROPERTY_SUBTITLE_MODE = "SubtitleMode";
  @javax.annotation.Nullable
  private SubtitlePlaybackMode subtitleMode;

  public static final String JSON_PROPERTY_DISPLAY_COLLECTIONS_VIEW = "DisplayCollectionsView";
  @javax.annotation.Nullable
  private Boolean displayCollectionsView;

  public static final String JSON_PROPERTY_ENABLE_LOCAL_PASSWORD = "EnableLocalPassword";
  @javax.annotation.Nullable
  private Boolean enableLocalPassword;

  public static final String JSON_PROPERTY_ORDERED_VIEWS = "OrderedViews";
  @javax.annotation.Nullable
  private List<UUID> orderedViews = new ArrayList<>();

  public static final String JSON_PROPERTY_LATEST_ITEMS_EXCLUDES = "LatestItemsExcludes";
  @javax.annotation.Nullable
  private List<UUID> latestItemsExcludes = new ArrayList<>();

  public static final String JSON_PROPERTY_MY_MEDIA_EXCLUDES = "MyMediaExcludes";
  @javax.annotation.Nullable
  private List<UUID> myMediaExcludes = new ArrayList<>();

  public static final String JSON_PROPERTY_HIDE_PLAYED_IN_LATEST = "HidePlayedInLatest";
  @javax.annotation.Nullable
  private Boolean hidePlayedInLatest;

  public static final String JSON_PROPERTY_REMEMBER_AUDIO_SELECTIONS = "RememberAudioSelections";
  @javax.annotation.Nullable
  private Boolean rememberAudioSelections;

  public static final String JSON_PROPERTY_REMEMBER_SUBTITLE_SELECTIONS = "RememberSubtitleSelections";
  @javax.annotation.Nullable
  private Boolean rememberSubtitleSelections;

  public static final String JSON_PROPERTY_ENABLE_NEXT_EPISODE_AUTO_PLAY = "EnableNextEpisodeAutoPlay";
  @javax.annotation.Nullable
  private Boolean enableNextEpisodeAutoPlay;

  public static final String JSON_PROPERTY_CAST_RECEIVER_ID = "CastReceiverId";
  private JsonNullable<String> castReceiverId = JsonNullable.<String>undefined();

  public UserConfiguration() { 
  }

  public UserConfiguration audioLanguagePreference(@javax.annotation.Nullable String audioLanguagePreference) {
    this.audioLanguagePreference = JsonNullable.<String>of(audioLanguagePreference);
    return this;
  }

  /**
   * Gets or sets the audio language preference.
   * @return audioLanguagePreference
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getAudioLanguagePreference() {
        return audioLanguagePreference.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUDIO_LANGUAGE_PREFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAudioLanguagePreference_JsonNullable() {
    return audioLanguagePreference;
  }
  
  @JsonProperty(JSON_PROPERTY_AUDIO_LANGUAGE_PREFERENCE)
  public void setAudioLanguagePreference_JsonNullable(JsonNullable<String> audioLanguagePreference) {
    this.audioLanguagePreference = audioLanguagePreference;
  }

  public void setAudioLanguagePreference(@javax.annotation.Nullable String audioLanguagePreference) {
    this.audioLanguagePreference = JsonNullable.<String>of(audioLanguagePreference);
  }


  public UserConfiguration playDefaultAudioTrack(@javax.annotation.Nullable Boolean playDefaultAudioTrack) {
    this.playDefaultAudioTrack = playDefaultAudioTrack;
    return this;
  }

  /**
   * Gets or sets a value indicating whether [play default audio track].
   * @return playDefaultAudioTrack
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLAY_DEFAULT_AUDIO_TRACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getPlayDefaultAudioTrack() {
    return playDefaultAudioTrack;
  }


  @JsonProperty(JSON_PROPERTY_PLAY_DEFAULT_AUDIO_TRACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlayDefaultAudioTrack(@javax.annotation.Nullable Boolean playDefaultAudioTrack) {
    this.playDefaultAudioTrack = playDefaultAudioTrack;
  }


  public UserConfiguration subtitleLanguagePreference(@javax.annotation.Nullable String subtitleLanguagePreference) {
    this.subtitleLanguagePreference = JsonNullable.<String>of(subtitleLanguagePreference);
    return this;
  }

  /**
   * Gets or sets the subtitle language preference.
   * @return subtitleLanguagePreference
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getSubtitleLanguagePreference() {
        return subtitleLanguagePreference.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBTITLE_LANGUAGE_PREFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSubtitleLanguagePreference_JsonNullable() {
    return subtitleLanguagePreference;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBTITLE_LANGUAGE_PREFERENCE)
  public void setSubtitleLanguagePreference_JsonNullable(JsonNullable<String> subtitleLanguagePreference) {
    this.subtitleLanguagePreference = subtitleLanguagePreference;
  }

  public void setSubtitleLanguagePreference(@javax.annotation.Nullable String subtitleLanguagePreference) {
    this.subtitleLanguagePreference = JsonNullable.<String>of(subtitleLanguagePreference);
  }


  public UserConfiguration displayMissingEpisodes(@javax.annotation.Nullable Boolean displayMissingEpisodes) {
    this.displayMissingEpisodes = displayMissingEpisodes;
    return this;
  }

  /**
   * Get displayMissingEpisodes
   * @return displayMissingEpisodes
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISPLAY_MISSING_EPISODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getDisplayMissingEpisodes() {
    return displayMissingEpisodes;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_MISSING_EPISODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayMissingEpisodes(@javax.annotation.Nullable Boolean displayMissingEpisodes) {
    this.displayMissingEpisodes = displayMissingEpisodes;
  }


  public UserConfiguration groupedFolders(@javax.annotation.Nullable List<UUID> groupedFolders) {
    this.groupedFolders = groupedFolders;
    return this;
  }

  public UserConfiguration addGroupedFoldersItem(UUID groupedFoldersItem) {
    if (this.groupedFolders == null) {
      this.groupedFolders = new ArrayList<>();
    }
    this.groupedFolders.add(groupedFoldersItem);
    return this;
  }

  /**
   * Get groupedFolders
   * @return groupedFolders
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROUPED_FOLDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<UUID> getGroupedFolders() {
    return groupedFolders;
  }


  @JsonProperty(JSON_PROPERTY_GROUPED_FOLDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroupedFolders(@javax.annotation.Nullable List<UUID> groupedFolders) {
    this.groupedFolders = groupedFolders;
  }


  public UserConfiguration subtitleMode(@javax.annotation.Nullable SubtitlePlaybackMode subtitleMode) {
    this.subtitleMode = subtitleMode;
    return this;
  }

  /**
   * An enum representing a subtitle playback mode.
   * @return subtitleMode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBTITLE_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public SubtitlePlaybackMode getSubtitleMode() {
    return subtitleMode;
  }


  @JsonProperty(JSON_PROPERTY_SUBTITLE_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubtitleMode(@javax.annotation.Nullable SubtitlePlaybackMode subtitleMode) {
    this.subtitleMode = subtitleMode;
  }


  public UserConfiguration displayCollectionsView(@javax.annotation.Nullable Boolean displayCollectionsView) {
    this.displayCollectionsView = displayCollectionsView;
    return this;
  }

  /**
   * Get displayCollectionsView
   * @return displayCollectionsView
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISPLAY_COLLECTIONS_VIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getDisplayCollectionsView() {
    return displayCollectionsView;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_COLLECTIONS_VIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayCollectionsView(@javax.annotation.Nullable Boolean displayCollectionsView) {
    this.displayCollectionsView = displayCollectionsView;
  }


  public UserConfiguration enableLocalPassword(@javax.annotation.Nullable Boolean enableLocalPassword) {
    this.enableLocalPassword = enableLocalPassword;
    return this;
  }

  /**
   * Get enableLocalPassword
   * @return enableLocalPassword
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_LOCAL_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableLocalPassword() {
    return enableLocalPassword;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_LOCAL_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableLocalPassword(@javax.annotation.Nullable Boolean enableLocalPassword) {
    this.enableLocalPassword = enableLocalPassword;
  }


  public UserConfiguration orderedViews(@javax.annotation.Nullable List<UUID> orderedViews) {
    this.orderedViews = orderedViews;
    return this;
  }

  public UserConfiguration addOrderedViewsItem(UUID orderedViewsItem) {
    if (this.orderedViews == null) {
      this.orderedViews = new ArrayList<>();
    }
    this.orderedViews.add(orderedViewsItem);
    return this;
  }

  /**
   * Get orderedViews
   * @return orderedViews
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORDERED_VIEWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<UUID> getOrderedViews() {
    return orderedViews;
  }


  @JsonProperty(JSON_PROPERTY_ORDERED_VIEWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrderedViews(@javax.annotation.Nullable List<UUID> orderedViews) {
    this.orderedViews = orderedViews;
  }


  public UserConfiguration latestItemsExcludes(@javax.annotation.Nullable List<UUID> latestItemsExcludes) {
    this.latestItemsExcludes = latestItemsExcludes;
    return this;
  }

  public UserConfiguration addLatestItemsExcludesItem(UUID latestItemsExcludesItem) {
    if (this.latestItemsExcludes == null) {
      this.latestItemsExcludes = new ArrayList<>();
    }
    this.latestItemsExcludes.add(latestItemsExcludesItem);
    return this;
  }

  /**
   * Get latestItemsExcludes
   * @return latestItemsExcludes
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LATEST_ITEMS_EXCLUDES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<UUID> getLatestItemsExcludes() {
    return latestItemsExcludes;
  }


  @JsonProperty(JSON_PROPERTY_LATEST_ITEMS_EXCLUDES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLatestItemsExcludes(@javax.annotation.Nullable List<UUID> latestItemsExcludes) {
    this.latestItemsExcludes = latestItemsExcludes;
  }


  public UserConfiguration myMediaExcludes(@javax.annotation.Nullable List<UUID> myMediaExcludes) {
    this.myMediaExcludes = myMediaExcludes;
    return this;
  }

  public UserConfiguration addMyMediaExcludesItem(UUID myMediaExcludesItem) {
    if (this.myMediaExcludes == null) {
      this.myMediaExcludes = new ArrayList<>();
    }
    this.myMediaExcludes.add(myMediaExcludesItem);
    return this;
  }

  /**
   * Get myMediaExcludes
   * @return myMediaExcludes
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MY_MEDIA_EXCLUDES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<UUID> getMyMediaExcludes() {
    return myMediaExcludes;
  }


  @JsonProperty(JSON_PROPERTY_MY_MEDIA_EXCLUDES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMyMediaExcludes(@javax.annotation.Nullable List<UUID> myMediaExcludes) {
    this.myMediaExcludes = myMediaExcludes;
  }


  public UserConfiguration hidePlayedInLatest(@javax.annotation.Nullable Boolean hidePlayedInLatest) {
    this.hidePlayedInLatest = hidePlayedInLatest;
    return this;
  }

  /**
   * Get hidePlayedInLatest
   * @return hidePlayedInLatest
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HIDE_PLAYED_IN_LATEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getHidePlayedInLatest() {
    return hidePlayedInLatest;
  }


  @JsonProperty(JSON_PROPERTY_HIDE_PLAYED_IN_LATEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHidePlayedInLatest(@javax.annotation.Nullable Boolean hidePlayedInLatest) {
    this.hidePlayedInLatest = hidePlayedInLatest;
  }


  public UserConfiguration rememberAudioSelections(@javax.annotation.Nullable Boolean rememberAudioSelections) {
    this.rememberAudioSelections = rememberAudioSelections;
    return this;
  }

  /**
   * Get rememberAudioSelections
   * @return rememberAudioSelections
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMEMBER_AUDIO_SELECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getRememberAudioSelections() {
    return rememberAudioSelections;
  }


  @JsonProperty(JSON_PROPERTY_REMEMBER_AUDIO_SELECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRememberAudioSelections(@javax.annotation.Nullable Boolean rememberAudioSelections) {
    this.rememberAudioSelections = rememberAudioSelections;
  }


  public UserConfiguration rememberSubtitleSelections(@javax.annotation.Nullable Boolean rememberSubtitleSelections) {
    this.rememberSubtitleSelections = rememberSubtitleSelections;
    return this;
  }

  /**
   * Get rememberSubtitleSelections
   * @return rememberSubtitleSelections
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMEMBER_SUBTITLE_SELECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getRememberSubtitleSelections() {
    return rememberSubtitleSelections;
  }


  @JsonProperty(JSON_PROPERTY_REMEMBER_SUBTITLE_SELECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRememberSubtitleSelections(@javax.annotation.Nullable Boolean rememberSubtitleSelections) {
    this.rememberSubtitleSelections = rememberSubtitleSelections;
  }


  public UserConfiguration enableNextEpisodeAutoPlay(@javax.annotation.Nullable Boolean enableNextEpisodeAutoPlay) {
    this.enableNextEpisodeAutoPlay = enableNextEpisodeAutoPlay;
    return this;
  }

  /**
   * Get enableNextEpisodeAutoPlay
   * @return enableNextEpisodeAutoPlay
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_NEXT_EPISODE_AUTO_PLAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnableNextEpisodeAutoPlay() {
    return enableNextEpisodeAutoPlay;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_NEXT_EPISODE_AUTO_PLAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableNextEpisodeAutoPlay(@javax.annotation.Nullable Boolean enableNextEpisodeAutoPlay) {
    this.enableNextEpisodeAutoPlay = enableNextEpisodeAutoPlay;
  }


  public UserConfiguration castReceiverId(@javax.annotation.Nullable String castReceiverId) {
    this.castReceiverId = JsonNullable.<String>of(castReceiverId);
    return this;
  }

  /**
   * Gets or sets the id of the selected cast receiver.
   * @return castReceiverId
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getCastReceiverId() {
        return castReceiverId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CAST_RECEIVER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCastReceiverId_JsonNullable() {
    return castReceiverId;
  }
  
  @JsonProperty(JSON_PROPERTY_CAST_RECEIVER_ID)
  public void setCastReceiverId_JsonNullable(JsonNullable<String> castReceiverId) {
    this.castReceiverId = castReceiverId;
  }

  public void setCastReceiverId(@javax.annotation.Nullable String castReceiverId) {
    this.castReceiverId = JsonNullable.<String>of(castReceiverId);
  }


  /**
   * Return true if this UserConfiguration object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserConfiguration userConfiguration = (UserConfiguration) o;
    return equalsNullable(this.audioLanguagePreference, userConfiguration.audioLanguagePreference) &&
        Objects.equals(this.playDefaultAudioTrack, userConfiguration.playDefaultAudioTrack) &&
        equalsNullable(this.subtitleLanguagePreference, userConfiguration.subtitleLanguagePreference) &&
        Objects.equals(this.displayMissingEpisodes, userConfiguration.displayMissingEpisodes) &&
        Objects.equals(this.groupedFolders, userConfiguration.groupedFolders) &&
        Objects.equals(this.subtitleMode, userConfiguration.subtitleMode) &&
        Objects.equals(this.displayCollectionsView, userConfiguration.displayCollectionsView) &&
        Objects.equals(this.enableLocalPassword, userConfiguration.enableLocalPassword) &&
        Objects.equals(this.orderedViews, userConfiguration.orderedViews) &&
        Objects.equals(this.latestItemsExcludes, userConfiguration.latestItemsExcludes) &&
        Objects.equals(this.myMediaExcludes, userConfiguration.myMediaExcludes) &&
        Objects.equals(this.hidePlayedInLatest, userConfiguration.hidePlayedInLatest) &&
        Objects.equals(this.rememberAudioSelections, userConfiguration.rememberAudioSelections) &&
        Objects.equals(this.rememberSubtitleSelections, userConfiguration.rememberSubtitleSelections) &&
        Objects.equals(this.enableNextEpisodeAutoPlay, userConfiguration.enableNextEpisodeAutoPlay) &&
        equalsNullable(this.castReceiverId, userConfiguration.castReceiverId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(audioLanguagePreference), playDefaultAudioTrack, hashCodeNullable(subtitleLanguagePreference), displayMissingEpisodes, groupedFolders, subtitleMode, displayCollectionsView, enableLocalPassword, orderedViews, latestItemsExcludes, myMediaExcludes, hidePlayedInLatest, rememberAudioSelections, rememberSubtitleSelections, enableNextEpisodeAutoPlay, hashCodeNullable(castReceiverId));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserConfiguration {\n");
    sb.append("    audioLanguagePreference: ").append(toIndentedString(audioLanguagePreference)).append("\n");
    sb.append("    playDefaultAudioTrack: ").append(toIndentedString(playDefaultAudioTrack)).append("\n");
    sb.append("    subtitleLanguagePreference: ").append(toIndentedString(subtitleLanguagePreference)).append("\n");
    sb.append("    displayMissingEpisodes: ").append(toIndentedString(displayMissingEpisodes)).append("\n");
    sb.append("    groupedFolders: ").append(toIndentedString(groupedFolders)).append("\n");
    sb.append("    subtitleMode: ").append(toIndentedString(subtitleMode)).append("\n");
    sb.append("    displayCollectionsView: ").append(toIndentedString(displayCollectionsView)).append("\n");
    sb.append("    enableLocalPassword: ").append(toIndentedString(enableLocalPassword)).append("\n");
    sb.append("    orderedViews: ").append(toIndentedString(orderedViews)).append("\n");
    sb.append("    latestItemsExcludes: ").append(toIndentedString(latestItemsExcludes)).append("\n");
    sb.append("    myMediaExcludes: ").append(toIndentedString(myMediaExcludes)).append("\n");
    sb.append("    hidePlayedInLatest: ").append(toIndentedString(hidePlayedInLatest)).append("\n");
    sb.append("    rememberAudioSelections: ").append(toIndentedString(rememberAudioSelections)).append("\n");
    sb.append("    rememberSubtitleSelections: ").append(toIndentedString(rememberSubtitleSelections)).append("\n");
    sb.append("    enableNextEpisodeAutoPlay: ").append(toIndentedString(enableNextEpisodeAutoPlay)).append("\n");
    sb.append("    castReceiverId: ").append(toIndentedString(castReceiverId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `AudioLanguagePreference` to the URL query string
    if (getAudioLanguagePreference() != null) {
      joiner.add(String.format("%sAudioLanguagePreference%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAudioLanguagePreference()))));
    }

    // add `PlayDefaultAudioTrack` to the URL query string
    if (getPlayDefaultAudioTrack() != null) {
      joiner.add(String.format("%sPlayDefaultAudioTrack%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPlayDefaultAudioTrack()))));
    }

    // add `SubtitleLanguagePreference` to the URL query string
    if (getSubtitleLanguagePreference() != null) {
      joiner.add(String.format("%sSubtitleLanguagePreference%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSubtitleLanguagePreference()))));
    }

    // add `DisplayMissingEpisodes` to the URL query string
    if (getDisplayMissingEpisodes() != null) {
      joiner.add(String.format("%sDisplayMissingEpisodes%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDisplayMissingEpisodes()))));
    }

    // add `GroupedFolders` to the URL query string
    if (getGroupedFolders() != null) {
      for (int i = 0; i < getGroupedFolders().size(); i++) {
        if (getGroupedFolders().get(i) != null) {
          joiner.add(String.format("%sGroupedFolders%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getGroupedFolders().get(i)))));
        }
      }
    }

    // add `SubtitleMode` to the URL query string
    if (getSubtitleMode() != null) {
      joiner.add(String.format("%sSubtitleMode%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSubtitleMode()))));
    }

    // add `DisplayCollectionsView` to the URL query string
    if (getDisplayCollectionsView() != null) {
      joiner.add(String.format("%sDisplayCollectionsView%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDisplayCollectionsView()))));
    }

    // add `EnableLocalPassword` to the URL query string
    if (getEnableLocalPassword() != null) {
      joiner.add(String.format("%sEnableLocalPassword%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableLocalPassword()))));
    }

    // add `OrderedViews` to the URL query string
    if (getOrderedViews() != null) {
      for (int i = 0; i < getOrderedViews().size(); i++) {
        if (getOrderedViews().get(i) != null) {
          joiner.add(String.format("%sOrderedViews%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getOrderedViews().get(i)))));
        }
      }
    }

    // add `LatestItemsExcludes` to the URL query string
    if (getLatestItemsExcludes() != null) {
      for (int i = 0; i < getLatestItemsExcludes().size(); i++) {
        if (getLatestItemsExcludes().get(i) != null) {
          joiner.add(String.format("%sLatestItemsExcludes%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getLatestItemsExcludes().get(i)))));
        }
      }
    }

    // add `MyMediaExcludes` to the URL query string
    if (getMyMediaExcludes() != null) {
      for (int i = 0; i < getMyMediaExcludes().size(); i++) {
        if (getMyMediaExcludes().get(i) != null) {
          joiner.add(String.format("%sMyMediaExcludes%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              ApiClient.urlEncode(ApiClient.valueToString(getMyMediaExcludes().get(i)))));
        }
      }
    }

    // add `HidePlayedInLatest` to the URL query string
    if (getHidePlayedInLatest() != null) {
      joiner.add(String.format("%sHidePlayedInLatest%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getHidePlayedInLatest()))));
    }

    // add `RememberAudioSelections` to the URL query string
    if (getRememberAudioSelections() != null) {
      joiner.add(String.format("%sRememberAudioSelections%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRememberAudioSelections()))));
    }

    // add `RememberSubtitleSelections` to the URL query string
    if (getRememberSubtitleSelections() != null) {
      joiner.add(String.format("%sRememberSubtitleSelections%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRememberSubtitleSelections()))));
    }

    // add `EnableNextEpisodeAutoPlay` to the URL query string
    if (getEnableNextEpisodeAutoPlay() != null) {
      joiner.add(String.format("%sEnableNextEpisodeAutoPlay%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableNextEpisodeAutoPlay()))));
    }

    // add `CastReceiverId` to the URL query string
    if (getCastReceiverId() != null) {
      joiner.add(String.format("%sCastReceiverId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCastReceiverId()))));
    }

    return joiner.toString();
  }
}

