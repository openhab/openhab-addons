/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.SubtitlePlaybackMode;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Class UserConfiguration.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-27T20:32:56.699980679+01:00[Europe/Zurich]", comments = "Generator version: 7.10.0")
public class UserConfiguration {
  public static final String SERIALIZED_NAME_AUDIO_LANGUAGE_PREFERENCE = "AudioLanguagePreference";
  @SerializedName(SERIALIZED_NAME_AUDIO_LANGUAGE_PREFERENCE)
  @javax.annotation.Nullable
  private String audioLanguagePreference;

  public static final String SERIALIZED_NAME_PLAY_DEFAULT_AUDIO_TRACK = "PlayDefaultAudioTrack";
  @SerializedName(SERIALIZED_NAME_PLAY_DEFAULT_AUDIO_TRACK)
  @javax.annotation.Nullable
  private Boolean playDefaultAudioTrack;

  public static final String SERIALIZED_NAME_SUBTITLE_LANGUAGE_PREFERENCE = "SubtitleLanguagePreference";
  @SerializedName(SERIALIZED_NAME_SUBTITLE_LANGUAGE_PREFERENCE)
  @javax.annotation.Nullable
  private String subtitleLanguagePreference;

  public static final String SERIALIZED_NAME_DISPLAY_MISSING_EPISODES = "DisplayMissingEpisodes";
  @SerializedName(SERIALIZED_NAME_DISPLAY_MISSING_EPISODES)
  @javax.annotation.Nullable
  private Boolean displayMissingEpisodes;

  public static final String SERIALIZED_NAME_GROUPED_FOLDERS = "GroupedFolders";
  @SerializedName(SERIALIZED_NAME_GROUPED_FOLDERS)
  @javax.annotation.Nullable
  private List<UUID> groupedFolders = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUBTITLE_MODE = "SubtitleMode";
  @SerializedName(SERIALIZED_NAME_SUBTITLE_MODE)
  @javax.annotation.Nullable
  private SubtitlePlaybackMode subtitleMode;

  public static final String SERIALIZED_NAME_DISPLAY_COLLECTIONS_VIEW = "DisplayCollectionsView";
  @SerializedName(SERIALIZED_NAME_DISPLAY_COLLECTIONS_VIEW)
  @javax.annotation.Nullable
  private Boolean displayCollectionsView;

  public static final String SERIALIZED_NAME_ENABLE_LOCAL_PASSWORD = "EnableLocalPassword";
  @SerializedName(SERIALIZED_NAME_ENABLE_LOCAL_PASSWORD)
  @javax.annotation.Nullable
  private Boolean enableLocalPassword;

  public static final String SERIALIZED_NAME_ORDERED_VIEWS = "OrderedViews";
  @SerializedName(SERIALIZED_NAME_ORDERED_VIEWS)
  @javax.annotation.Nullable
  private List<UUID> orderedViews = new ArrayList<>();

  public static final String SERIALIZED_NAME_LATEST_ITEMS_EXCLUDES = "LatestItemsExcludes";
  @SerializedName(SERIALIZED_NAME_LATEST_ITEMS_EXCLUDES)
  @javax.annotation.Nullable
  private List<UUID> latestItemsExcludes = new ArrayList<>();

  public static final String SERIALIZED_NAME_MY_MEDIA_EXCLUDES = "MyMediaExcludes";
  @SerializedName(SERIALIZED_NAME_MY_MEDIA_EXCLUDES)
  @javax.annotation.Nullable
  private List<UUID> myMediaExcludes = new ArrayList<>();

  public static final String SERIALIZED_NAME_HIDE_PLAYED_IN_LATEST = "HidePlayedInLatest";
  @SerializedName(SERIALIZED_NAME_HIDE_PLAYED_IN_LATEST)
  @javax.annotation.Nullable
  private Boolean hidePlayedInLatest;

  public static final String SERIALIZED_NAME_REMEMBER_AUDIO_SELECTIONS = "RememberAudioSelections";
  @SerializedName(SERIALIZED_NAME_REMEMBER_AUDIO_SELECTIONS)
  @javax.annotation.Nullable
  private Boolean rememberAudioSelections;

  public static final String SERIALIZED_NAME_REMEMBER_SUBTITLE_SELECTIONS = "RememberSubtitleSelections";
  @SerializedName(SERIALIZED_NAME_REMEMBER_SUBTITLE_SELECTIONS)
  @javax.annotation.Nullable
  private Boolean rememberSubtitleSelections;

  public static final String SERIALIZED_NAME_ENABLE_NEXT_EPISODE_AUTO_PLAY = "EnableNextEpisodeAutoPlay";
  @SerializedName(SERIALIZED_NAME_ENABLE_NEXT_EPISODE_AUTO_PLAY)
  @javax.annotation.Nullable
  private Boolean enableNextEpisodeAutoPlay;

  public static final String SERIALIZED_NAME_CAST_RECEIVER_ID = "CastReceiverId";
  @SerializedName(SERIALIZED_NAME_CAST_RECEIVER_ID)
  @javax.annotation.Nullable
  private String castReceiverId;

  public UserConfiguration() {
  }

  public UserConfiguration audioLanguagePreference(@javax.annotation.Nullable String audioLanguagePreference) {
    this.audioLanguagePreference = audioLanguagePreference;
    return this;
  }

  /**
   * Gets or sets the audio language preference.
   * @return audioLanguagePreference
   */
  @javax.annotation.Nullable
  public String getAudioLanguagePreference() {
    return audioLanguagePreference;
  }

  public void setAudioLanguagePreference(@javax.annotation.Nullable String audioLanguagePreference) {
    this.audioLanguagePreference = audioLanguagePreference;
  }


  public UserConfiguration playDefaultAudioTrack(@javax.annotation.Nullable Boolean playDefaultAudioTrack) {
    this.playDefaultAudioTrack = playDefaultAudioTrack;
    return this;
  }

  /**
   * Gets or sets a value indicating whether [play default audio track].
   * @return playDefaultAudioTrack
   */
  @javax.annotation.Nullable
  public Boolean getPlayDefaultAudioTrack() {
    return playDefaultAudioTrack;
  }

  public void setPlayDefaultAudioTrack(@javax.annotation.Nullable Boolean playDefaultAudioTrack) {
    this.playDefaultAudioTrack = playDefaultAudioTrack;
  }


  public UserConfiguration subtitleLanguagePreference(@javax.annotation.Nullable String subtitleLanguagePreference) {
    this.subtitleLanguagePreference = subtitleLanguagePreference;
    return this;
  }

  /**
   * Gets or sets the subtitle language preference.
   * @return subtitleLanguagePreference
   */
  @javax.annotation.Nullable
  public String getSubtitleLanguagePreference() {
    return subtitleLanguagePreference;
  }

  public void setSubtitleLanguagePreference(@javax.annotation.Nullable String subtitleLanguagePreference) {
    this.subtitleLanguagePreference = subtitleLanguagePreference;
  }


  public UserConfiguration displayMissingEpisodes(@javax.annotation.Nullable Boolean displayMissingEpisodes) {
    this.displayMissingEpisodes = displayMissingEpisodes;
    return this;
  }

  /**
   * Get displayMissingEpisodes
   * @return displayMissingEpisodes
   */
  @javax.annotation.Nullable
  public Boolean getDisplayMissingEpisodes() {
    return displayMissingEpisodes;
  }

  public void setDisplayMissingEpisodes(@javax.annotation.Nullable Boolean displayMissingEpisodes) {
    this.displayMissingEpisodes = displayMissingEpisodes;
  }


  public UserConfiguration groupedFolders(@javax.annotation.Nullable List<UUID> groupedFolders) {
    this.groupedFolders = groupedFolders;
    return this;
  }

  public UserConfiguration addGroupedFoldersItem(UUID groupedFoldersItem) {
    if (this.groupedFolders == null) {
      this.groupedFolders = new ArrayList<>();
    }
    this.groupedFolders.add(groupedFoldersItem);
    return this;
  }

  /**
   * Get groupedFolders
   * @return groupedFolders
   */
  @javax.annotation.Nullable
  public List<UUID> getGroupedFolders() {
    return groupedFolders;
  }

  public void setGroupedFolders(@javax.annotation.Nullable List<UUID> groupedFolders) {
    this.groupedFolders = groupedFolders;
  }


  public UserConfiguration subtitleMode(@javax.annotation.Nullable SubtitlePlaybackMode subtitleMode) {
    this.subtitleMode = subtitleMode;
    return this;
  }

  /**
   * An enum representing a subtitle playback mode.
   * @return subtitleMode
   */
  @javax.annotation.Nullable
  public SubtitlePlaybackMode getSubtitleMode() {
    return subtitleMode;
  }

  public void setSubtitleMode(@javax.annotation.Nullable SubtitlePlaybackMode subtitleMode) {
    this.subtitleMode = subtitleMode;
  }


  public UserConfiguration displayCollectionsView(@javax.annotation.Nullable Boolean displayCollectionsView) {
    this.displayCollectionsView = displayCollectionsView;
    return this;
  }

  /**
   * Get displayCollectionsView
   * @return displayCollectionsView
   */
  @javax.annotation.Nullable
  public Boolean getDisplayCollectionsView() {
    return displayCollectionsView;
  }

  public void setDisplayCollectionsView(@javax.annotation.Nullable Boolean displayCollectionsView) {
    this.displayCollectionsView = displayCollectionsView;
  }


  public UserConfiguration enableLocalPassword(@javax.annotation.Nullable Boolean enableLocalPassword) {
    this.enableLocalPassword = enableLocalPassword;
    return this;
  }

  /**
   * Get enableLocalPassword
   * @return enableLocalPassword
   */
  @javax.annotation.Nullable
  public Boolean getEnableLocalPassword() {
    return enableLocalPassword;
  }

  public void setEnableLocalPassword(@javax.annotation.Nullable Boolean enableLocalPassword) {
    this.enableLocalPassword = enableLocalPassword;
  }


  public UserConfiguration orderedViews(@javax.annotation.Nullable List<UUID> orderedViews) {
    this.orderedViews = orderedViews;
    return this;
  }

  public UserConfiguration addOrderedViewsItem(UUID orderedViewsItem) {
    if (this.orderedViews == null) {
      this.orderedViews = new ArrayList<>();
    }
    this.orderedViews.add(orderedViewsItem);
    return this;
  }

  /**
   * Get orderedViews
   * @return orderedViews
   */
  @javax.annotation.Nullable
  public List<UUID> getOrderedViews() {
    return orderedViews;
  }

  public void setOrderedViews(@javax.annotation.Nullable List<UUID> orderedViews) {
    this.orderedViews = orderedViews;
  }


  public UserConfiguration latestItemsExcludes(@javax.annotation.Nullable List<UUID> latestItemsExcludes) {
    this.latestItemsExcludes = latestItemsExcludes;
    return this;
  }

  public UserConfiguration addLatestItemsExcludesItem(UUID latestItemsExcludesItem) {
    if (this.latestItemsExcludes == null) {
      this.latestItemsExcludes = new ArrayList<>();
    }
    this.latestItemsExcludes.add(latestItemsExcludesItem);
    return this;
  }

  /**
   * Get latestItemsExcludes
   * @return latestItemsExcludes
   */
  @javax.annotation.Nullable
  public List<UUID> getLatestItemsExcludes() {
    return latestItemsExcludes;
  }

  public void setLatestItemsExcludes(@javax.annotation.Nullable List<UUID> latestItemsExcludes) {
    this.latestItemsExcludes = latestItemsExcludes;
  }


  public UserConfiguration myMediaExcludes(@javax.annotation.Nullable List<UUID> myMediaExcludes) {
    this.myMediaExcludes = myMediaExcludes;
    return this;
  }

  public UserConfiguration addMyMediaExcludesItem(UUID myMediaExcludesItem) {
    if (this.myMediaExcludes == null) {
      this.myMediaExcludes = new ArrayList<>();
    }
    this.myMediaExcludes.add(myMediaExcludesItem);
    return this;
  }

  /**
   * Get myMediaExcludes
   * @return myMediaExcludes
   */
  @javax.annotation.Nullable
  public List<UUID> getMyMediaExcludes() {
    return myMediaExcludes;
  }

  public void setMyMediaExcludes(@javax.annotation.Nullable List<UUID> myMediaExcludes) {
    this.myMediaExcludes = myMediaExcludes;
  }


  public UserConfiguration hidePlayedInLatest(@javax.annotation.Nullable Boolean hidePlayedInLatest) {
    this.hidePlayedInLatest = hidePlayedInLatest;
    return this;
  }

  /**
   * Get hidePlayedInLatest
   * @return hidePlayedInLatest
   */
  @javax.annotation.Nullable
  public Boolean getHidePlayedInLatest() {
    return hidePlayedInLatest;
  }

  public void setHidePlayedInLatest(@javax.annotation.Nullable Boolean hidePlayedInLatest) {
    this.hidePlayedInLatest = hidePlayedInLatest;
  }


  public UserConfiguration rememberAudioSelections(@javax.annotation.Nullable Boolean rememberAudioSelections) {
    this.rememberAudioSelections = rememberAudioSelections;
    return this;
  }

  /**
   * Get rememberAudioSelections
   * @return rememberAudioSelections
   */
  @javax.annotation.Nullable
  public Boolean getRememberAudioSelections() {
    return rememberAudioSelections;
  }

  public void setRememberAudioSelections(@javax.annotation.Nullable Boolean rememberAudioSelections) {
    this.rememberAudioSelections = rememberAudioSelections;
  }


  public UserConfiguration rememberSubtitleSelections(@javax.annotation.Nullable Boolean rememberSubtitleSelections) {
    this.rememberSubtitleSelections = rememberSubtitleSelections;
    return this;
  }

  /**
   * Get rememberSubtitleSelections
   * @return rememberSubtitleSelections
   */
  @javax.annotation.Nullable
  public Boolean getRememberSubtitleSelections() {
    return rememberSubtitleSelections;
  }

  public void setRememberSubtitleSelections(@javax.annotation.Nullable Boolean rememberSubtitleSelections) {
    this.rememberSubtitleSelections = rememberSubtitleSelections;
  }


  public UserConfiguration enableNextEpisodeAutoPlay(@javax.annotation.Nullable Boolean enableNextEpisodeAutoPlay) {
    this.enableNextEpisodeAutoPlay = enableNextEpisodeAutoPlay;
    return this;
  }

  /**
   * Get enableNextEpisodeAutoPlay
   * @return enableNextEpisodeAutoPlay
   */
  @javax.annotation.Nullable
  public Boolean getEnableNextEpisodeAutoPlay() {
    return enableNextEpisodeAutoPlay;
  }

  public void setEnableNextEpisodeAutoPlay(@javax.annotation.Nullable Boolean enableNextEpisodeAutoPlay) {
    this.enableNextEpisodeAutoPlay = enableNextEpisodeAutoPlay;
  }


  public UserConfiguration castReceiverId(@javax.annotation.Nullable String castReceiverId) {
    this.castReceiverId = castReceiverId;
    return this;
  }

  /**
   * Gets or sets the id of the selected cast receiver.
   * @return castReceiverId
   */
  @javax.annotation.Nullable
  public String getCastReceiverId() {
    return castReceiverId;
  }

  public void setCastReceiverId(@javax.annotation.Nullable String castReceiverId) {
    this.castReceiverId = castReceiverId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserConfiguration userConfiguration = (UserConfiguration) o;
    return Objects.equals(this.audioLanguagePreference, userConfiguration.audioLanguagePreference) &&
        Objects.equals(this.playDefaultAudioTrack, userConfiguration.playDefaultAudioTrack) &&
        Objects.equals(this.subtitleLanguagePreference, userConfiguration.subtitleLanguagePreference) &&
        Objects.equals(this.displayMissingEpisodes, userConfiguration.displayMissingEpisodes) &&
        Objects.equals(this.groupedFolders, userConfiguration.groupedFolders) &&
        Objects.equals(this.subtitleMode, userConfiguration.subtitleMode) &&
        Objects.equals(this.displayCollectionsView, userConfiguration.displayCollectionsView) &&
        Objects.equals(this.enableLocalPassword, userConfiguration.enableLocalPassword) &&
        Objects.equals(this.orderedViews, userConfiguration.orderedViews) &&
        Objects.equals(this.latestItemsExcludes, userConfiguration.latestItemsExcludes) &&
        Objects.equals(this.myMediaExcludes, userConfiguration.myMediaExcludes) &&
        Objects.equals(this.hidePlayedInLatest, userConfiguration.hidePlayedInLatest) &&
        Objects.equals(this.rememberAudioSelections, userConfiguration.rememberAudioSelections) &&
        Objects.equals(this.rememberSubtitleSelections, userConfiguration.rememberSubtitleSelections) &&
        Objects.equals(this.enableNextEpisodeAutoPlay, userConfiguration.enableNextEpisodeAutoPlay) &&
        Objects.equals(this.castReceiverId, userConfiguration.castReceiverId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(audioLanguagePreference, playDefaultAudioTrack, subtitleLanguagePreference, displayMissingEpisodes, groupedFolders, subtitleMode, displayCollectionsView, enableLocalPassword, orderedViews, latestItemsExcludes, myMediaExcludes, hidePlayedInLatest, rememberAudioSelections, rememberSubtitleSelections, enableNextEpisodeAutoPlay, castReceiverId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserConfiguration {\n");
    sb.append("    audioLanguagePreference: ").append(toIndentedString(audioLanguagePreference)).append("\n");
    sb.append("    playDefaultAudioTrack: ").append(toIndentedString(playDefaultAudioTrack)).append("\n");
    sb.append("    subtitleLanguagePreference: ").append(toIndentedString(subtitleLanguagePreference)).append("\n");
    sb.append("    displayMissingEpisodes: ").append(toIndentedString(displayMissingEpisodes)).append("\n");
    sb.append("    groupedFolders: ").append(toIndentedString(groupedFolders)).append("\n");
    sb.append("    subtitleMode: ").append(toIndentedString(subtitleMode)).append("\n");
    sb.append("    displayCollectionsView: ").append(toIndentedString(displayCollectionsView)).append("\n");
    sb.append("    enableLocalPassword: ").append(toIndentedString(enableLocalPassword)).append("\n");
    sb.append("    orderedViews: ").append(toIndentedString(orderedViews)).append("\n");
    sb.append("    latestItemsExcludes: ").append(toIndentedString(latestItemsExcludes)).append("\n");
    sb.append("    myMediaExcludes: ").append(toIndentedString(myMediaExcludes)).append("\n");
    sb.append("    hidePlayedInLatest: ").append(toIndentedString(hidePlayedInLatest)).append("\n");
    sb.append("    rememberAudioSelections: ").append(toIndentedString(rememberAudioSelections)).append("\n");
    sb.append("    rememberSubtitleSelections: ").append(toIndentedString(rememberSubtitleSelections)).append("\n");
    sb.append("    enableNextEpisodeAutoPlay: ").append(toIndentedString(enableNextEpisodeAutoPlay)).append("\n");
    sb.append("    castReceiverId: ").append(toIndentedString(castReceiverId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AudioLanguagePreference");
    openapiFields.add("PlayDefaultAudioTrack");
    openapiFields.add("SubtitleLanguagePreference");
    openapiFields.add("DisplayMissingEpisodes");
    openapiFields.add("GroupedFolders");
    openapiFields.add("SubtitleMode");
    openapiFields.add("DisplayCollectionsView");
    openapiFields.add("EnableLocalPassword");
    openapiFields.add("OrderedViews");
    openapiFields.add("LatestItemsExcludes");
    openapiFields.add("MyMediaExcludes");
    openapiFields.add("HidePlayedInLatest");
    openapiFields.add("RememberAudioSelections");
    openapiFields.add("RememberSubtitleSelections");
    openapiFields.add("EnableNextEpisodeAutoPlay");
    openapiFields.add("CastReceiverId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UserConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UserConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserConfiguration is not found in the empty JSON string", UserConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UserConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UserConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("AudioLanguagePreference") != null && !jsonObj.get("AudioLanguagePreference").isJsonNull()) && !jsonObj.get("AudioLanguagePreference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AudioLanguagePreference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AudioLanguagePreference").toString()));
      }
      if ((jsonObj.get("SubtitleLanguagePreference") != null && !jsonObj.get("SubtitleLanguagePreference").isJsonNull()) && !jsonObj.get("SubtitleLanguagePreference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SubtitleLanguagePreference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SubtitleLanguagePreference").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("GroupedFolders") != null && !jsonObj.get("GroupedFolders").isJsonNull() && !jsonObj.get("GroupedFolders").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `GroupedFolders` to be an array in the JSON string but got `%s`", jsonObj.get("GroupedFolders").toString()));
      }
      // validate the optional field `SubtitleMode`
      if (jsonObj.get("SubtitleMode") != null && !jsonObj.get("SubtitleMode").isJsonNull()) {
        SubtitlePlaybackMode.validateJsonElement(jsonObj.get("SubtitleMode"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("OrderedViews") != null && !jsonObj.get("OrderedViews").isJsonNull() && !jsonObj.get("OrderedViews").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `OrderedViews` to be an array in the JSON string but got `%s`", jsonObj.get("OrderedViews").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("LatestItemsExcludes") != null && !jsonObj.get("LatestItemsExcludes").isJsonNull() && !jsonObj.get("LatestItemsExcludes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `LatestItemsExcludes` to be an array in the JSON string but got `%s`", jsonObj.get("LatestItemsExcludes").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("MyMediaExcludes") != null && !jsonObj.get("MyMediaExcludes").isJsonNull() && !jsonObj.get("MyMediaExcludes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `MyMediaExcludes` to be an array in the JSON string but got `%s`", jsonObj.get("MyMediaExcludes").toString()));
      }
      if ((jsonObj.get("CastReceiverId") != null && !jsonObj.get("CastReceiverId").isJsonNull()) && !jsonObj.get("CastReceiverId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CastReceiverId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CastReceiverId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<UserConfiguration>() {
           @Override
           public void write(JsonWriter out, UserConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UserConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UserConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UserConfiguration
   * @throws IOException if the JSON string is invalid with respect to UserConfiguration
   */
  public static UserConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserConfiguration.class);
  }

  /**
   * Convert an instance of UserConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

