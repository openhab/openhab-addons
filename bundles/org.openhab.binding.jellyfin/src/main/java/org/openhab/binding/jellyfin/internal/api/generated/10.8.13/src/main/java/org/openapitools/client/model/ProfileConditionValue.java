/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets ProfileConditionValue
 */
@JsonAdapter(ProfileConditionValue.Adapter.class)
public enum ProfileConditionValue {
  
  AUDIO_CHANNELS("AudioChannels"),
  
  AUDIO_BITRATE("AudioBitrate"),
  
  AUDIO_PROFILE("AudioProfile"),
  
  WIDTH("Width"),
  
  HEIGHT("Height"),
  
  HAS64_BIT_OFFSETS("Has64BitOffsets"),
  
  PACKET_LENGTH("PacketLength"),
  
  VIDEO_BIT_DEPTH("VideoBitDepth"),
  
  VIDEO_BITRATE("VideoBitrate"),
  
  VIDEO_FRAMERATE("VideoFramerate"),
  
  VIDEO_LEVEL("VideoLevel"),
  
  VIDEO_PROFILE("VideoProfile"),
  
  VIDEO_TIMESTAMP("VideoTimestamp"),
  
  IS_ANAMORPHIC("IsAnamorphic"),
  
  REF_FRAMES("RefFrames"),
  
  NUM_AUDIO_STREAMS("NumAudioStreams"),
  
  NUM_VIDEO_STREAMS("NumVideoStreams"),
  
  IS_SECONDARY_AUDIO("IsSecondaryAudio"),
  
  VIDEO_CODEC_TAG("VideoCodecTag"),
  
  IS_AVC("IsAvc"),
  
  IS_INTERLACED("IsInterlaced"),
  
  AUDIO_SAMPLE_RATE("AudioSampleRate"),
  
  AUDIO_BIT_DEPTH("AudioBitDepth"),
  
  VIDEO_RANGE_TYPE("VideoRangeType");

  private String value;

  ProfileConditionValue(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ProfileConditionValue fromValue(String value) {
    for (ProfileConditionValue b : ProfileConditionValue.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ProfileConditionValue> {
    @Override
    public void write(final JsonWriter jsonWriter, final ProfileConditionValue enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ProfileConditionValue read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ProfileConditionValue.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    ProfileConditionValue.fromValue(value);
  }
}

