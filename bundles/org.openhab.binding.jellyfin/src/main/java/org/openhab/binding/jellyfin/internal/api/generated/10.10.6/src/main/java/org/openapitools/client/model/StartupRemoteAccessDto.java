/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * Startup remote access dto.
 */
@JsonPropertyOrder({
  StartupRemoteAccessDto.JSON_PROPERTY_ENABLE_REMOTE_ACCESS,
  StartupRemoteAccessDto.JSON_PROPERTY_ENABLE_AUTOMATIC_PORT_MAPPING
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-28T21:48:58.939457991Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class StartupRemoteAccessDto {
  public static final String JSON_PROPERTY_ENABLE_REMOTE_ACCESS = "EnableRemoteAccess";
  @javax.annotation.Nonnull
  private Boolean enableRemoteAccess;

  public static final String JSON_PROPERTY_ENABLE_AUTOMATIC_PORT_MAPPING = "EnableAutomaticPortMapping";
  @javax.annotation.Nonnull
  private Boolean enableAutomaticPortMapping;

  public StartupRemoteAccessDto() { 
  }

  public StartupRemoteAccessDto enableRemoteAccess(@javax.annotation.Nonnull Boolean enableRemoteAccess) {
    this.enableRemoteAccess = enableRemoteAccess;
    return this;
  }

  /**
   * Gets or sets a value indicating whether enable remote access.
   * @return enableRemoteAccess
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENABLE_REMOTE_ACCESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Boolean getEnableRemoteAccess() {
    return enableRemoteAccess;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_REMOTE_ACCESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnableRemoteAccess(@javax.annotation.Nonnull Boolean enableRemoteAccess) {
    this.enableRemoteAccess = enableRemoteAccess;
  }


  public StartupRemoteAccessDto enableAutomaticPortMapping(@javax.annotation.Nonnull Boolean enableAutomaticPortMapping) {
    this.enableAutomaticPortMapping = enableAutomaticPortMapping;
    return this;
  }

  /**
   * Gets or sets a value indicating whether enable automatic port mapping.
   * @return enableAutomaticPortMapping
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENABLE_AUTOMATIC_PORT_MAPPING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Boolean getEnableAutomaticPortMapping() {
    return enableAutomaticPortMapping;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_AUTOMATIC_PORT_MAPPING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnableAutomaticPortMapping(@javax.annotation.Nonnull Boolean enableAutomaticPortMapping) {
    this.enableAutomaticPortMapping = enableAutomaticPortMapping;
  }


  /**
   * Return true if this StartupRemoteAccessDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StartupRemoteAccessDto startupRemoteAccessDto = (StartupRemoteAccessDto) o;
    return Objects.equals(this.enableRemoteAccess, startupRemoteAccessDto.enableRemoteAccess) &&
        Objects.equals(this.enableAutomaticPortMapping, startupRemoteAccessDto.enableAutomaticPortMapping);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enableRemoteAccess, enableAutomaticPortMapping);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StartupRemoteAccessDto {\n");
    sb.append("    enableRemoteAccess: ").append(toIndentedString(enableRemoteAccess)).append("\n");
    sb.append("    enableAutomaticPortMapping: ").append(toIndentedString(enableAutomaticPortMapping)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `EnableRemoteAccess` to the URL query string
    if (getEnableRemoteAccess() != null) {
      joiner.add(String.format("%sEnableRemoteAccess%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableRemoteAccess()))));
    }

    // add `EnableAutomaticPortMapping` to the URL query string
    if (getEnableAutomaticPortMapping() != null) {
      joiner.add(String.format("%sEnableAutomaticPortMapping%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnableAutomaticPortMapping()))));
    }

    return joiner.toString();
  }
}

