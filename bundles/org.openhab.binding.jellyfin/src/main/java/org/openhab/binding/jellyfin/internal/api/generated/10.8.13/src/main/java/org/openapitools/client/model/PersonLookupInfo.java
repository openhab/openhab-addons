/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.8.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * PersonLookupInfo
 */
@JsonPropertyOrder({
  PersonLookupInfo.JSON_PROPERTY_NAME,
  PersonLookupInfo.JSON_PROPERTY_ORIGINAL_TITLE,
  PersonLookupInfo.JSON_PROPERTY_PATH,
  PersonLookupInfo.JSON_PROPERTY_METADATA_LANGUAGE,
  PersonLookupInfo.JSON_PROPERTY_METADATA_COUNTRY_CODE,
  PersonLookupInfo.JSON_PROPERTY_PROVIDER_IDS,
  PersonLookupInfo.JSON_PROPERTY_YEAR,
  PersonLookupInfo.JSON_PROPERTY_INDEX_NUMBER,
  PersonLookupInfo.JSON_PROPERTY_PARENT_INDEX_NUMBER,
  PersonLookupInfo.JSON_PROPERTY_PREMIERE_DATE,
  PersonLookupInfo.JSON_PROPERTY_IS_AUTOMATED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-16T17:51:31.285278872Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class PersonLookupInfo {
  public static final String JSON_PROPERTY_NAME = "Name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ORIGINAL_TITLE = "OriginalTitle";
  private JsonNullable<String> originalTitle = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH = "Path";
  private JsonNullable<String> path = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_METADATA_LANGUAGE = "MetadataLanguage";
  private JsonNullable<String> metadataLanguage = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_METADATA_COUNTRY_CODE = "MetadataCountryCode";
  private JsonNullable<String> metadataCountryCode = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PROVIDER_IDS = "ProviderIds";
  private JsonNullable<Map<String, String>> providerIds = JsonNullable.<Map<String, String>>undefined();

  public static final String JSON_PROPERTY_YEAR = "Year";
  private JsonNullable<Integer> year = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_INDEX_NUMBER = "IndexNumber";
  private JsonNullable<Integer> indexNumber = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_PARENT_INDEX_NUMBER = "ParentIndexNumber";
  private JsonNullable<Integer> parentIndexNumber = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_PREMIERE_DATE = "PremiereDate";
  private JsonNullable<OffsetDateTime> premiereDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_IS_AUTOMATED = "IsAutomated";
  @javax.annotation.Nullable
  private Boolean isAutomated;

  public PersonLookupInfo() { 
  }

  public PersonLookupInfo name(@javax.annotation.Nullable String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

  /**
   * Gets or sets the name.
   * @return name
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public PersonLookupInfo originalTitle(@javax.annotation.Nullable String originalTitle) {
    this.originalTitle = JsonNullable.<String>of(originalTitle);
    return this;
  }

  /**
   * Gets or sets the original title.
   * @return originalTitle
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getOriginalTitle() {
        return originalTitle.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ORIGINAL_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOriginalTitle_JsonNullable() {
    return originalTitle;
  }
  
  @JsonProperty(JSON_PROPERTY_ORIGINAL_TITLE)
  public void setOriginalTitle_JsonNullable(JsonNullable<String> originalTitle) {
    this.originalTitle = originalTitle;
  }

  public void setOriginalTitle(@javax.annotation.Nullable String originalTitle) {
    this.originalTitle = JsonNullable.<String>of(originalTitle);
  }


  public PersonLookupInfo path(@javax.annotation.Nullable String path) {
    this.path = JsonNullable.<String>of(path);
    return this;
  }

  /**
   * Gets or sets the path.
   * @return path
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getPath() {
        return path.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPath_JsonNullable() {
    return path;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH)
  public void setPath_JsonNullable(JsonNullable<String> path) {
    this.path = path;
  }

  public void setPath(@javax.annotation.Nullable String path) {
    this.path = JsonNullable.<String>of(path);
  }


  public PersonLookupInfo metadataLanguage(@javax.annotation.Nullable String metadataLanguage) {
    this.metadataLanguage = JsonNullable.<String>of(metadataLanguage);
    return this;
  }

  /**
   * Gets or sets the metadata language.
   * @return metadataLanguage
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getMetadataLanguage() {
        return metadataLanguage.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METADATA_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMetadataLanguage_JsonNullable() {
    return metadataLanguage;
  }
  
  @JsonProperty(JSON_PROPERTY_METADATA_LANGUAGE)
  public void setMetadataLanguage_JsonNullable(JsonNullable<String> metadataLanguage) {
    this.metadataLanguage = metadataLanguage;
  }

  public void setMetadataLanguage(@javax.annotation.Nullable String metadataLanguage) {
    this.metadataLanguage = JsonNullable.<String>of(metadataLanguage);
  }


  public PersonLookupInfo metadataCountryCode(@javax.annotation.Nullable String metadataCountryCode) {
    this.metadataCountryCode = JsonNullable.<String>of(metadataCountryCode);
    return this;
  }

  /**
   * Gets or sets the metadata country code.
   * @return metadataCountryCode
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getMetadataCountryCode() {
        return metadataCountryCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METADATA_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMetadataCountryCode_JsonNullable() {
    return metadataCountryCode;
  }
  
  @JsonProperty(JSON_PROPERTY_METADATA_COUNTRY_CODE)
  public void setMetadataCountryCode_JsonNullable(JsonNullable<String> metadataCountryCode) {
    this.metadataCountryCode = metadataCountryCode;
  }

  public void setMetadataCountryCode(@javax.annotation.Nullable String metadataCountryCode) {
    this.metadataCountryCode = JsonNullable.<String>of(metadataCountryCode);
  }


  public PersonLookupInfo providerIds(@javax.annotation.Nullable Map<String, String> providerIds) {
    this.providerIds = JsonNullable.<Map<String, String>>of(providerIds);
    return this;
  }

  public PersonLookupInfo putProviderIdsItem(String key, String providerIdsItem) {
    if (this.providerIds == null || !this.providerIds.isPresent()) {
      this.providerIds = JsonNullable.<Map<String, String>>of(new HashMap<>());
    }
    try {
      this.providerIds.get().put(key, providerIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Gets or sets the provider ids.
   * @return providerIds
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Map<String, String> getProviderIds() {
        return providerIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROVIDER_IDS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, String>> getProviderIds_JsonNullable() {
    return providerIds;
  }
  
  @JsonProperty(JSON_PROPERTY_PROVIDER_IDS)
  public void setProviderIds_JsonNullable(JsonNullable<Map<String, String>> providerIds) {
    this.providerIds = providerIds;
  }

  public void setProviderIds(@javax.annotation.Nullable Map<String, String> providerIds) {
    this.providerIds = JsonNullable.<Map<String, String>>of(providerIds);
  }


  public PersonLookupInfo year(@javax.annotation.Nullable Integer year) {
    this.year = JsonNullable.<Integer>of(year);
    return this;
  }

  /**
   * Gets or sets the year.
   * @return year
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getYear() {
        return year.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getYear_JsonNullable() {
    return year;
  }
  
  @JsonProperty(JSON_PROPERTY_YEAR)
  public void setYear_JsonNullable(JsonNullable<Integer> year) {
    this.year = year;
  }

  public void setYear(@javax.annotation.Nullable Integer year) {
    this.year = JsonNullable.<Integer>of(year);
  }


  public PersonLookupInfo indexNumber(@javax.annotation.Nullable Integer indexNumber) {
    this.indexNumber = JsonNullable.<Integer>of(indexNumber);
    return this;
  }

  /**
   * Get indexNumber
   * @return indexNumber
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getIndexNumber() {
        return indexNumber.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INDEX_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getIndexNumber_JsonNullable() {
    return indexNumber;
  }
  
  @JsonProperty(JSON_PROPERTY_INDEX_NUMBER)
  public void setIndexNumber_JsonNullable(JsonNullable<Integer> indexNumber) {
    this.indexNumber = indexNumber;
  }

  public void setIndexNumber(@javax.annotation.Nullable Integer indexNumber) {
    this.indexNumber = JsonNullable.<Integer>of(indexNumber);
  }


  public PersonLookupInfo parentIndexNumber(@javax.annotation.Nullable Integer parentIndexNumber) {
    this.parentIndexNumber = JsonNullable.<Integer>of(parentIndexNumber);
    return this;
  }

  /**
   * Get parentIndexNumber
   * @return parentIndexNumber
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getParentIndexNumber() {
        return parentIndexNumber.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARENT_INDEX_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getParentIndexNumber_JsonNullable() {
    return parentIndexNumber;
  }
  
  @JsonProperty(JSON_PROPERTY_PARENT_INDEX_NUMBER)
  public void setParentIndexNumber_JsonNullable(JsonNullable<Integer> parentIndexNumber) {
    this.parentIndexNumber = parentIndexNumber;
  }

  public void setParentIndexNumber(@javax.annotation.Nullable Integer parentIndexNumber) {
    this.parentIndexNumber = JsonNullable.<Integer>of(parentIndexNumber);
  }


  public PersonLookupInfo premiereDate(@javax.annotation.Nullable OffsetDateTime premiereDate) {
    this.premiereDate = JsonNullable.<OffsetDateTime>of(premiereDate);
    return this;
  }

  /**
   * Get premiereDate
   * @return premiereDate
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public OffsetDateTime getPremiereDate() {
        return premiereDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PREMIERE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getPremiereDate_JsonNullable() {
    return premiereDate;
  }
  
  @JsonProperty(JSON_PROPERTY_PREMIERE_DATE)
  public void setPremiereDate_JsonNullable(JsonNullable<OffsetDateTime> premiereDate) {
    this.premiereDate = premiereDate;
  }

  public void setPremiereDate(@javax.annotation.Nullable OffsetDateTime premiereDate) {
    this.premiereDate = JsonNullable.<OffsetDateTime>of(premiereDate);
  }


  public PersonLookupInfo isAutomated(@javax.annotation.Nullable Boolean isAutomated) {
    this.isAutomated = isAutomated;
    return this;
  }

  /**
   * Get isAutomated
   * @return isAutomated
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_AUTOMATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getIsAutomated() {
    return isAutomated;
  }


  @JsonProperty(JSON_PROPERTY_IS_AUTOMATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsAutomated(@javax.annotation.Nullable Boolean isAutomated) {
    this.isAutomated = isAutomated;
  }


  /**
   * Return true if this PersonLookupInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersonLookupInfo personLookupInfo = (PersonLookupInfo) o;
    return equalsNullable(this.name, personLookupInfo.name) &&
        equalsNullable(this.originalTitle, personLookupInfo.originalTitle) &&
        equalsNullable(this.path, personLookupInfo.path) &&
        equalsNullable(this.metadataLanguage, personLookupInfo.metadataLanguage) &&
        equalsNullable(this.metadataCountryCode, personLookupInfo.metadataCountryCode) &&
        equalsNullable(this.providerIds, personLookupInfo.providerIds) &&
        equalsNullable(this.year, personLookupInfo.year) &&
        equalsNullable(this.indexNumber, personLookupInfo.indexNumber) &&
        equalsNullable(this.parentIndexNumber, personLookupInfo.parentIndexNumber) &&
        equalsNullable(this.premiereDate, personLookupInfo.premiereDate) &&
        Objects.equals(this.isAutomated, personLookupInfo.isAutomated);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(name), hashCodeNullable(originalTitle), hashCodeNullable(path), hashCodeNullable(metadataLanguage), hashCodeNullable(metadataCountryCode), hashCodeNullable(providerIds), hashCodeNullable(year), hashCodeNullable(indexNumber), hashCodeNullable(parentIndexNumber), hashCodeNullable(premiereDate), isAutomated);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersonLookupInfo {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    originalTitle: ").append(toIndentedString(originalTitle)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    metadataLanguage: ").append(toIndentedString(metadataLanguage)).append("\n");
    sb.append("    metadataCountryCode: ").append(toIndentedString(metadataCountryCode)).append("\n");
    sb.append("    providerIds: ").append(toIndentedString(providerIds)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("    indexNumber: ").append(toIndentedString(indexNumber)).append("\n");
    sb.append("    parentIndexNumber: ").append(toIndentedString(parentIndexNumber)).append("\n");
    sb.append("    premiereDate: ").append(toIndentedString(premiereDate)).append("\n");
    sb.append("    isAutomated: ").append(toIndentedString(isAutomated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `Name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getName()))));
    }

    // add `OriginalTitle` to the URL query string
    if (getOriginalTitle() != null) {
      joiner.add(String.format("%sOriginalTitle%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOriginalTitle()))));
    }

    // add `Path` to the URL query string
    if (getPath() != null) {
      joiner.add(String.format("%sPath%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPath()))));
    }

    // add `MetadataLanguage` to the URL query string
    if (getMetadataLanguage() != null) {
      joiner.add(String.format("%sMetadataLanguage%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMetadataLanguage()))));
    }

    // add `MetadataCountryCode` to the URL query string
    if (getMetadataCountryCode() != null) {
      joiner.add(String.format("%sMetadataCountryCode%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMetadataCountryCode()))));
    }

    // add `ProviderIds` to the URL query string
    if (getProviderIds() != null) {
      for (String _key : getProviderIds().keySet()) {
        joiner.add(String.format("%sProviderIds%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getProviderIds().get(_key), ApiClient.urlEncode(ApiClient.valueToString(getProviderIds().get(_key)))));
      }
    }

    // add `Year` to the URL query string
    if (getYear() != null) {
      joiner.add(String.format("%sYear%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getYear()))));
    }

    // add `IndexNumber` to the URL query string
    if (getIndexNumber() != null) {
      joiner.add(String.format("%sIndexNumber%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIndexNumber()))));
    }

    // add `ParentIndexNumber` to the URL query string
    if (getParentIndexNumber() != null) {
      joiner.add(String.format("%sParentIndexNumber%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getParentIndexNumber()))));
    }

    // add `PremiereDate` to the URL query string
    if (getPremiereDate() != null) {
      joiner.add(String.format("%sPremiereDate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPremiereDate()))));
    }

    // add `IsAutomated` to the URL query string
    if (getIsAutomated() != null) {
      joiner.add(String.format("%sIsAutomated%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsAutomated()))));
    }

    return joiner.toString();
  }
}

