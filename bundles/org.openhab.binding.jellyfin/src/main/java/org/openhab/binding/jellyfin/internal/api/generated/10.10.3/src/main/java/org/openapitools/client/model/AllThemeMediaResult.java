/*
 * Jellyfin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.client.model.ThemeMediaResult;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * AllThemeMediaResult
 */
@JsonPropertyOrder({
  AllThemeMediaResult.JSON_PROPERTY_THEME_VIDEOS_RESULT,
  AllThemeMediaResult.JSON_PROPERTY_THEME_SONGS_RESULT,
  AllThemeMediaResult.JSON_PROPERTY_SOUNDTRACK_SONGS_RESULT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-16T17:51:50.987643556Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class AllThemeMediaResult {
  public static final String JSON_PROPERTY_THEME_VIDEOS_RESULT = "ThemeVideosResult";
  private JsonNullable<ThemeMediaResult> themeVideosResult = JsonNullable.<ThemeMediaResult>undefined();

  public static final String JSON_PROPERTY_THEME_SONGS_RESULT = "ThemeSongsResult";
  private JsonNullable<ThemeMediaResult> themeSongsResult = JsonNullable.<ThemeMediaResult>undefined();

  public static final String JSON_PROPERTY_SOUNDTRACK_SONGS_RESULT = "SoundtrackSongsResult";
  private JsonNullable<ThemeMediaResult> soundtrackSongsResult = JsonNullable.<ThemeMediaResult>undefined();

  public AllThemeMediaResult() { 
  }

  public AllThemeMediaResult themeVideosResult(@javax.annotation.Nullable ThemeMediaResult themeVideosResult) {
    this.themeVideosResult = JsonNullable.<ThemeMediaResult>of(themeVideosResult);
    return this;
  }

  /**
   * Class ThemeMediaResult.
   * @return themeVideosResult
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public ThemeMediaResult getThemeVideosResult() {
        return themeVideosResult.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_THEME_VIDEOS_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ThemeMediaResult> getThemeVideosResult_JsonNullable() {
    return themeVideosResult;
  }
  
  @JsonProperty(JSON_PROPERTY_THEME_VIDEOS_RESULT)
  public void setThemeVideosResult_JsonNullable(JsonNullable<ThemeMediaResult> themeVideosResult) {
    this.themeVideosResult = themeVideosResult;
  }

  public void setThemeVideosResult(@javax.annotation.Nullable ThemeMediaResult themeVideosResult) {
    this.themeVideosResult = JsonNullable.<ThemeMediaResult>of(themeVideosResult);
  }


  public AllThemeMediaResult themeSongsResult(@javax.annotation.Nullable ThemeMediaResult themeSongsResult) {
    this.themeSongsResult = JsonNullable.<ThemeMediaResult>of(themeSongsResult);
    return this;
  }

  /**
   * Class ThemeMediaResult.
   * @return themeSongsResult
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public ThemeMediaResult getThemeSongsResult() {
        return themeSongsResult.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_THEME_SONGS_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ThemeMediaResult> getThemeSongsResult_JsonNullable() {
    return themeSongsResult;
  }
  
  @JsonProperty(JSON_PROPERTY_THEME_SONGS_RESULT)
  public void setThemeSongsResult_JsonNullable(JsonNullable<ThemeMediaResult> themeSongsResult) {
    this.themeSongsResult = themeSongsResult;
  }

  public void setThemeSongsResult(@javax.annotation.Nullable ThemeMediaResult themeSongsResult) {
    this.themeSongsResult = JsonNullable.<ThemeMediaResult>of(themeSongsResult);
  }


  public AllThemeMediaResult soundtrackSongsResult(@javax.annotation.Nullable ThemeMediaResult soundtrackSongsResult) {
    this.soundtrackSongsResult = JsonNullable.<ThemeMediaResult>of(soundtrackSongsResult);
    return this;
  }

  /**
   * Class ThemeMediaResult.
   * @return soundtrackSongsResult
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public ThemeMediaResult getSoundtrackSongsResult() {
        return soundtrackSongsResult.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOUNDTRACK_SONGS_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ThemeMediaResult> getSoundtrackSongsResult_JsonNullable() {
    return soundtrackSongsResult;
  }
  
  @JsonProperty(JSON_PROPERTY_SOUNDTRACK_SONGS_RESULT)
  public void setSoundtrackSongsResult_JsonNullable(JsonNullable<ThemeMediaResult> soundtrackSongsResult) {
    this.soundtrackSongsResult = soundtrackSongsResult;
  }

  public void setSoundtrackSongsResult(@javax.annotation.Nullable ThemeMediaResult soundtrackSongsResult) {
    this.soundtrackSongsResult = JsonNullable.<ThemeMediaResult>of(soundtrackSongsResult);
  }


  /**
   * Return true if this AllThemeMediaResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AllThemeMediaResult allThemeMediaResult = (AllThemeMediaResult) o;
    return equalsNullable(this.themeVideosResult, allThemeMediaResult.themeVideosResult) &&
        equalsNullable(this.themeSongsResult, allThemeMediaResult.themeSongsResult) &&
        equalsNullable(this.soundtrackSongsResult, allThemeMediaResult.soundtrackSongsResult);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(themeVideosResult), hashCodeNullable(themeSongsResult), hashCodeNullable(soundtrackSongsResult));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AllThemeMediaResult {\n");
    sb.append("    themeVideosResult: ").append(toIndentedString(themeVideosResult)).append("\n");
    sb.append("    themeSongsResult: ").append(toIndentedString(themeSongsResult)).append("\n");
    sb.append("    soundtrackSongsResult: ").append(toIndentedString(soundtrackSongsResult)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `ThemeVideosResult` to the URL query string
    if (getThemeVideosResult() != null) {
      joiner.add(getThemeVideosResult().toUrlQueryString(prefix + "ThemeVideosResult" + suffix));
    }

    // add `ThemeSongsResult` to the URL query string
    if (getThemeSongsResult() != null) {
      joiner.add(getThemeSongsResult().toUrlQueryString(prefix + "ThemeSongsResult" + suffix));
    }

    // add `SoundtrackSongsResult` to the URL query string
    if (getSoundtrackSongsResult() != null) {
      joiner.add(getSoundtrackSongsResult().toUrlQueryString(prefix + "SoundtrackSongsResult" + suffix));
    }

    return joiner.toString();
  }
}

