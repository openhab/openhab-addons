<?xml version="1.0" encoding="UTF-8"?>
<config-description:config-descriptions
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:config-description="https://openhab.org/schemas/config-description/v1.0.0"
	xsi:schemaLocation="https://openhab.org/schemas/config-description/v1.0.0
		https://openhab.org/schemas/config-description-1.0.0.xsd">
	<config-description uri="automation:jsscripting">
		<parameter-group name="environment">
			<label>JavaScript Environment</label>
			<description>This group defines JavaScript's environment.</description>
		</parameter-group>

		<parameter-group name="system">
			<label>System Behaviour</label>
			<description>This group defines JavaScript's system behaviour.</description>
		</parameter-group>

		<parameter name="injectionEnabledV2" type="integer" required="true" min="0" max="2" groupName="environment">
			<label>Inject Global Variables from Helper Library</label>
			<description><![CDATA[
			Import all variables from the openHAB JavaScript library for common services like items, things, actions, log, etc... <br>
			If disabled, the openHAB JavaScript library can be imported manually using"<code>require('openhab')</code>.
			]]></description>
			<options>
				<option value="2">Auto injection enabled only for UI-based scripts (recommended)</option>
				<option value="1">Auto injection enabled for all scripts, i.e. including file-based scripts</option>
				<option value="0">Disable auto-injection and import manually instead</option>
			</options>
			<default>2</default>
		</parameter>
		<parameter name="wrapperEnabled" type="boolean" required="true" groupName="environment">
			<label>Wrap UI-based scripts in Self-Executing Function</label>
			<description><![CDATA[
			Wrapping UI-based scripts in a self-executing function allows the use of the <code>let</code> and <code>const</code> variable declarations,
			as well as the use of <code>function</code> and <code>class</code> declarations.<br>
			With this option enabled, you can also use <code>return</code> statements in your scripts to abort execution at any point.
			]]></description>
			<default>true</default>
			<advanced>true</advanced>
		</parameter>

		<parameter name="injectionCachingEnabled" type="boolean" required="true" groupName="system">
			<label>Cache openHAB JavaScript Library Injection</label>
			<description><![CDATA[
			Cache the openHAB JavaScript library injection for optimal performance.<br>
			Disable this option to allow loading the library from the local user configuration directory "automation/js/node_modules". Disabling caching may increase script loading times, especially on less powerful systems.
			]]></description>
			<default>true</default>
		</parameter>
		<parameter name="dependencyTrackingEnabled" type="boolean" required="true" groupName="system">
			<label>Enable Dependency Tracking</label>
			<description>Dependency tracking allows your scripts to automatically reload when one of its dependencies is updated.
				You may want to disable dependency tracking if you plan on editing or updating a shared library, but don't want all
				your scripts to reload until you can test it. Please note that changing this setting only applies to scripts loaded
				after the change.</description>
			<default>true</default>
			<advanced>true</advanced>
		</parameter>
	</config-description>
</config-description:config-descriptions>
