# add-on

addon.argoclima.name = ArgoClima Binding
addon.argoclima.description = This is the binding for ArgoClima. Allows to control Argo HVAC devices.

# thing types

thing-type.argoclima.local.label = ArgoClima A/C - Local
thing-type.argoclima.local.description = ArgoClima Ulisse Eco 13-compatible Air Conditioner <i>(local LAN connection)</i> <br/> Independent mode - does not require Internet connectivity (see <b>connectionMode</b> setting for more options).
thing-type.argoclima.remote.label = ArgoClima A/C - Remote
thing-type.argoclima.remote.description = ArgoClima Ulisse Eco 13-compatible Air Conditioner <i>(remote connection via Argo servers)</i> <br/><i>Requires Internet connectivity for <b>both</b> openHAB and the HVAC device separately.</i>

# thing types config

thing-type.config.argoclima.local.connectionMode.label = Connection Mode
thing-type.config.argoclima.local.connectionMode.description = Type of connection to use.<br/> <b>- <code>LOCAL_CONNECTION</code></b> - Directly communicates with the AC device over LAN (default mode).<br/> <b>- <code>REMOTE_API_STUB</code></b> - openHAB simulates vendor's remote server <i>(most functionality implemented, w/o FW update support)</i>. Requires traffic from the AC re-routed to this OH instance (network-level configuration, see README). Allows <u>full-local control</u> (w/o Internet access to the device). Can also control units which are not directly reachable over LAN, e.g. behind NAT (set <code>Local IP address</code>).<br /> <b>- <code>REMOTE_API_PROXY</code></b> - openHAB behaves as a proxy to the remote Manufacturer's server (injects OH-side commands). Allows to still use the Vendor's application. WARNING: This mode (similarly to using vanilla Argo WebApp) may be considered insecure <i>(plain HTTP communications, passwords transmitted in the clear, unsigned FW updates...)</i>.<br />
thing-type.config.argoclima.local.connectionMode.option.LOCAL_CONNECTION = LOCAL_CONNECTION - Local only (no remote server stub). (**Default**)
thing-type.config.argoclima.local.connectionMode.option.REMOTE_API_STUB = REMOTE_API_STUB - openHAB as ArgoClima server stub. [Advanced] (**Recommended**)
thing-type.config.argoclima.local.connectionMode.option.REMOTE_API_PROXY = REMOTE_API_PROXY - openHAB as ArgoClima server w/ pass-through to OEM app. [Advanced]
thing-type.config.argoclima.local.deviceCpuId.label = CPU ID
thing-type.config.argoclima.local.deviceCpuId.description = CPU ID of the device. Optional, value is used for detecting device update in proxy mode.
thing-type.config.argoclima.local.group.connection.label = Connection
thing-type.config.argoclima.local.group.connection.description = Connection settings.
thing-type.config.argoclima.local.group.serverStub.label = Argo Server Stub
thing-type.config.argoclima.local.group.serverStub.description = Configuration of openHAB acting as Argo API server (requires proxying device-side traffic to this OH instance). <i>These settings are effective only for <code>REMOTE_API_STUB | REMOTE_API_PROXY</code> connection modes.</i>
thing-type.config.argoclima.local.hostname.label = Hostname
thing-type.config.argoclima.local.hostname.description = Hostname or IP address of the HVAC device.<br/><i>If <b>useLocalConnection</b> setting is <b>enabled</b>, this address will be used for (command push + status polling) communication with the device.</i>
thing-type.config.argoclima.local.hvacListenPort.label = Device API Listen Port
thing-type.config.argoclima.local.hvacListenPort.description = Port at which the local device listens on.<br/> <i>This setting is effective only if <code>Use Local Connection</code> is <code>true</code>. The default value 1001 is hard-coded in Argo Firmware. You would only need to override it if the device is behind NAT, and you have configured a custom port forwarding rule using port other than 1001</i>
thing-type.config.argoclima.local.includeDeviceSidePasswordsInProperties.label = Include Device-Side Passwords
thing-type.config.argoclima.local.includeDeviceSidePasswordsInProperties.description = Whether to include the intercepted passwords to the HVAC as well as the Wi-Fi (sent by the device to Argo servers) as Thing propertis.<br/> <i> (applicable only to <code>REMOTE_*</code> connection modes)</i><br/> <b>IMPORTANT:</b> Regardless of this setting, the values ARE sent in the clear (and w/o HTTPS) by the device to the vendor servers. To prevent them from leaking, you may want to create a firewall rule redirecting HVAC traffic to openHAB <i>(instead of talking to Argo servers)</i>, and use <code>REMOTE_API_STUB</code> mode of this binding.
thing-type.config.argoclima.local.includeDeviceSidePasswordsInProperties.option.NEVER = NEVER - The passwords are not exposed as Thing properties. (**Default**)
thing-type.config.argoclima.local.includeDeviceSidePasswordsInProperties.option.MASKED = MASKED - Intercepted Wi-Fi and HVAC passwords are displayed as properties, but masked with ***.
thing-type.config.argoclima.local.includeDeviceSidePasswordsInProperties.option.CLEARTEXT = CLEARTEXT - Intercepted Wi-Fi and HVAC passwords are displayed as Thing properties, in cleartext.
thing-type.config.argoclima.local.localDeviceIP.label = Local IP Address
thing-type.config.argoclima.local.localDeviceIP.description = Local IP address of the device in its local subnet (may be different from <b>hostname</b>, if behind NAT).<br/> Optional, value is used for detecting device-side updates in one of the <code>REMOTE</code> modes.
thing-type.config.argoclima.local.matchAnyIncomingDeviceIp.label = Match ANY Incoming Device IP
thing-type.config.argoclima.local.matchAnyIncomingDeviceIp.description = If enabled, will <b>not</b> attempt to match the incoming Argo requests by IP (neither <code>'Local IP address (behind NAT)'</code> nor <code>'Hostname'</code>), and instead accept <b>ANY</b> device-side Argo protocol request as matching <b>THIS</b> Thing. <br/> Applicable only to <code>REMOTE_*</code> modes. <i>(not recommended, use only for <b>single</b> Argo HVAC in the network, when its local IP is not known</i>)
thing-type.config.argoclima.local.oemServerAddress.label = Argo Remote Server Address
thing-type.config.argoclima.local.oemServerAddress.description = The OEM server's port, used to pass through the communications to. <br/> <i>This setting is effective only for <code>REMOTE_API_PROXY</code> connection mode</i>
thing-type.config.argoclima.local.oemServerPort.label = Argo Remote Server Port
thing-type.config.argoclima.local.oemServerPort.description = The OEM server's port, used to pass through the communications to<br/> <i>This setting is effective only for <code>REMOTE_API_PROXY</code> connection mode</i>
thing-type.config.argoclima.local.refreshInterval.label = Refresh Interval
thing-type.config.argoclima.local.refreshInterval.description = Interval the device is polled in seconds. This setting is only effective if <code>Use Local Connection</code> is <code>ON</code>.<br/> Set to <code>0</code> to disable polling (requires any of <code>REMOTE_*</code> connection modes)
thing-type.config.argoclima.local.stubServerListenAddresses.label = Stub Server Listen Adresses
thing-type.config.argoclima.local.stubServerListenAddresses.description = List of interfaces the stub server will listen on<br/> <i>This setting is effective only for <code>REMOTE_API_STUB | REMOTE_API_PROXY</code> connection modes</i>
thing-type.config.argoclima.local.stubServerPort.label = Stub Server Listen Port
thing-type.config.argoclima.local.stubServerPort.description = Port at which the Stub server will listen on.<br/> <i>This setting is effective only for <code>REMOTE_*</code> connection modes</i>
thing-type.config.argoclima.local.useLocalConnection.label = Use Local Connection
thing-type.config.argoclima.local.useLocalConnection.description = If enabled, will directly communicate with the device to send commands and poll for its status.<br/> Must be enabled for <code>LOCAL_CONNECTION</code> mode. If disabled (in any of the <code>REMOTE_*</code> connection modes), no push communication will be initiated from OH-side, and commands will be sent on next device-side poll cycle (possible delay)
thing-type.config.argoclima.remote.group.connection.label = Connection
thing-type.config.argoclima.remote.group.connection.description = Connection settings.
thing-type.config.argoclima.remote.group.oemServerConnection.label = Argo Server Connection Details
thing-type.config.argoclima.remote.group.oemServerConnection.description = Configuration of Argo remote server.
thing-type.config.argoclima.remote.oemServerAddress.label = Argo Remote Server Address
thing-type.config.argoclima.remote.oemServerAddress.description = The OEM server's hostname, used for communications.<br/> <i>This is the same host as for the Web Application (address provided in device's user manual). Example: uisetup.ddns.net</i>
thing-type.config.argoclima.remote.oemServerPort.label = Argo Remote Server Port
thing-type.config.argoclima.remote.oemServerPort.description = The OEM server's port. <i>Default 80.</i>
thing-type.config.argoclima.remote.password.label = Password
thing-type.config.argoclima.remote.password.description = Password to access the device
thing-type.config.argoclima.remote.refreshInterval.label = Refresh Interval
thing-type.config.argoclima.remote.refreshInterval.description = Interval the vendor device API is polled in <i>(in seconds)</i>.
thing-type.config.argoclima.remote.username.label = Username
thing-type.config.argoclima.remote.username.description = Username

# channel group types

channel-group-type.argoclima.ac-controls-group.label = A/C Controls
channel-group-type.argoclima.modes-group.label = Operation Modes
channel-group-type.argoclima.modes-group.channel.eco-mode.label = Eco Mode
channel-group-type.argoclima.modes-group.channel.night-mode.label = Night Mode
channel-group-type.argoclima.modes-group.channel.turbo-mode.label = Turbo Mode
channel-group-type.argoclima.settings-group.label = Settings
channel-group-type.argoclima.timers-group.label = Timers
channel-group-type.argoclima.unsupported-group.label = Unsupported Modes
channel-group-type.argoclima.unsupported-group.description = These channels are available on the original Argo remote (and app), but the Ulisse DCI device does not support it.
channel-group-type.argoclima.unsupported-group.channel.filter-mode.label = Filter Mode

# channel types

channel-type.argoclima.active-timer.label = Active Timer
channel-type.argoclima.active-timer.state.option.NO_TIMER = No Timer
channel-type.argoclima.active-timer.state.option.DELAY_TIMER = Delay Timer
channel-type.argoclima.active-timer.state.option.SCHEDULE_TIMER_1 = Schedule Timer 1
channel-type.argoclima.active-timer.state.option.SCHEDULE_TIMER_2 = Schedule Timer 2
channel-type.argoclima.active-timer.state.option.SCHEDULE_TIMER_3 = Schedule Timer 3
channel-type.argoclima.current-temperature.label = Actual Temperature
channel-type.argoclima.delay-timer.label = Delay Timer Value
channel-type.argoclima.device-lights.label = Device Lights
channel-type.argoclima.eco-mode-modifier.label = Eco Mode
channel-type.argoclima.eco-power-limit.label = Power Limit In Eco Mode
channel-type.argoclima.fan-speed.label = Fan Speed
channel-type.argoclima.fan-speed.state.option.AUTO = AUTO
channel-type.argoclima.fan-speed.state.option.LEVEL_1 = Level 1
channel-type.argoclima.fan-speed.state.option.LEVEL_2 = Level 2
channel-type.argoclima.fan-speed.state.option.LEVEL_3 = Level 3
channel-type.argoclima.fan-speed.state.option.LEVEL_4 = Level 4
channel-type.argoclima.fan-speed.state.option.LEVEL_5 = Level 5
channel-type.argoclima.fan-speed.state.option.LEVEL_6 = Level 6
channel-type.argoclima.filter-mode-modifier.label = Filter Mode
channel-type.argoclima.ifeel.label = Use iFeel Temperature
channel-type.argoclima.mode-basic.label = Mode
channel-type.argoclima.mode-basic.state.option.COOL = Cool
channel-type.argoclima.mode-basic.state.option.DRY = Dry
channel-type.argoclima.mode-basic.state.option.FAN = Fan
channel-type.argoclima.mode-basic.state.option.AUTO = Auto
channel-type.argoclima.mode-extended.label = Extended Mode
channel-type.argoclima.mode-extended.state.option.COOL = Cool
channel-type.argoclima.mode-extended.state.option.WARM = Heat
channel-type.argoclima.mode-extended.state.option.DRY = Dry
channel-type.argoclima.mode-extended.state.option.FAN = Fan
channel-type.argoclima.mode-extended.state.option.AUTO = Auto
channel-type.argoclima.night-mode-modifier.label = Night Mode
channel-type.argoclima.set-temperature.label = Set Temperature
channel-type.argoclima.set-temperature.description = The device's target temperature
channel-type.argoclima.swing-mode.label = Airflow Direction
channel-type.argoclima.swing-mode.state.option.AUTO = Swing
channel-type.argoclima.swing-mode.state.option.LEVEL_1 = Swing - Upper Half
channel-type.argoclima.swing-mode.state.option.LEVEL_2 = Static - Lowest
channel-type.argoclima.swing-mode.state.option.LEVEL_3 = Static - Low
channel-type.argoclima.swing-mode.state.option.LEVEL_4 = Static - Mid-low
channel-type.argoclima.swing-mode.state.option.LEVEL_5 = Static - Mid-high
channel-type.argoclima.swing-mode.state.option.LEVEL_6 = Static - High
channel-type.argoclima.swing-mode.state.option.LEVEL_7 = Static - Highest
channel-type.argoclima.temperature-display-unit.label = Temperature Display Unit
channel-type.argoclima.temperature-display-unit.state.option.SCALE_CELSIUS = Degrees Celsius
channel-type.argoclima.temperature-display-unit.state.option.SCALE_FARHENHEIT = Fahrenheit
channel-type.argoclima.turbo-mode-modifier.label = Turbo Mode

# config (dynamic)

dynamic-config.argoclima.group.schedule.label = Schedule {0,number,#}
dynamic-config.argoclima.group.schedule.description = Schedule timer - profile {0,number,#}
dynamic-config.argoclima.group.actions.label = Actions
dynamic-config.argoclima.schedule.days.monday = Monday
dynamic-config.argoclima.schedule.days.tuesday = Tuesday
dynamic-config.argoclima.schedule.days.wednesday = Wednesday
dynamic-config.argoclima.schedule.days.thursday = Thursday
dynamic-config.argoclima.schedule.days.friday = Friday
dynamic-config.argoclima.schedule.days.saturday = Saturday
dynamic-config.argoclima.schedule.days.sunday = Sunday
dynamic-config.argoclima.schedule.days.label = Days
dynamic-config.argoclima.schedule.days.description = Days when the schedule is run
dynamic-config.argoclima.schedule.on-time.label = On Time
dynamic-config.argoclima.schedule.on-time.description = Time when the A/C turns on
dynamic-config.argoclima.schedule.off-time.label = Off Time
dynamic-config.argoclima.schedule.off-time.description = Time when the A/C turns off
dynamic-config.argoclima.schedule.reset.label = Reset Settings
dynamic-config.argoclima.schedule.reset.description = Reset device settings to factory defaults

# thing statuses

thing-status.argoclima.configuration.load-error = Error loading thing configuration
thing-status.argoclima.configuration.invalid-format = Invalid "{0}" value: {1}
thing-status.argoclima.configuration.empty-value = "{0}" is empty
thing-status.argoclima.configuration.value-not-in-range = "{0}" must be in range [{1,number,#}..{2,number,#}]
thing-status.argoclima.configuration.value-below-min = "{0}" must be >= {1,number,#}
thing-status.argoclima.configuration.invalid-combination = Cannot set "{0}" to {1}, when "{2}" is {3}
thing-status.argoclima.local-unreachable = Failed to communicate with Argo HVAC device at [http://{0}:{1,number,#}{2}]. {3}
thing-status.cause.argoclima.exception.caused-by = Caused by: {0}
thing-status.cause.argoclima.exception.unrecognized-response = Unrecognized API response
thing-status.cause.argoclima.invalid-api-response-status = API request yielded invalid response status {0} {1} (expected HTTP 200 OK). URL was: {2}
thing-status.cause.argoclima.device-eof = Device did not respond on its socket (EOF). Check that the device is correctly communicating with Argo servers (or openHAB stub server)
thing-status.cause.argoclima.communication-error = Device communication error: {0}
thing-status.cause.argoclima.communication-error.timeout = Timeout: {0}
thing-status.cause.argoclima.empty-remote-response = The remote API response was empty. Check username and password
thing-status.cause.argoclima.unrecognized-remote-response = The remote API response [{0}] was not recognized
thing-status.cause.argoclima.remote-device-stale = Device was last seen {0} (or more) mins ago (threshold is set at {1} min). Please ensure the HVAC is connected to Wi-Fi and communicating with Argo servers
thing-status.argoclima.awaiting-request = Direct communication with device is disabled. Awaiting device-side request
thing-status.argoclima.invalid-config = Invalid thing configuration. {0}
thing-status.argoclima.poll-failed = Polling for device-side update failed. Unable to communicate with HVAC device for past {0} refresh cycles. Last error: {1}
thing-status.argoclima.confirmation-not-received = Could not control HVAC device. Command(s): {0} were not confirmed by the device within {1} s
thing-status.argoclima.handler-init-failure = Error while initializing Thing: {0}
thing-status.argoclima.stub-server.start-failure = [{0} mode] Failed to start RPC server at port: {1,number,#}. Error: {2}
thing-status.argoclima.stub-server.start-failure.internal = Server startup failure: {0}
thing-status.argoclima.passtrough-client.start-failure = Passthrough API client (for host={0}, port={1,number,#}) failed to start: {2}
