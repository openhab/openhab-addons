# add-on

addon.serial.name = Serial Binding
addon.serial.description = This binding supports sending/receiving data to/from a serial port or TCP connection

# thing types

thing-type.serial.serialBridge.label = Serial Bridge
thing-type.serial.serialBridge.description = Serial port which can send and receive data
thing-type.serial.serialDevice.label = Serial Device
thing-type.serial.serialDevice.description = Represents a device
thing-type.serial.tcpBridge.label = TCP Bridge
thing-type.serial.tcpBridge.description = TCP socket which can send and receive data
thing-type.serial.tcpServerBridge.label = TCP Server Bridge
thing-type.serial.tcpServerBridge.description = Like TCP bridge, but listens on a local port for incoming connections

# thing types config

thing-type.config.serial.serialBridge.baudRate.label = Baud Rate
thing-type.config.serial.serialBridge.baudRate.description = Set the baud rate
thing-type.config.serial.serialBridge.baudRate.option.2400 = 2400
thing-type.config.serial.serialBridge.baudRate.option.4800 = 4800
thing-type.config.serial.serialBridge.baudRate.option.9600 = 9600
thing-type.config.serial.serialBridge.baudRate.option.19200 = 19200
thing-type.config.serial.serialBridge.baudRate.option.38400 = 38400
thing-type.config.serial.serialBridge.baudRate.option.57600 = 57600
thing-type.config.serial.serialBridge.baudRate.option.115200 = 115200
thing-type.config.serial.serialBridge.charset.label = Charset
thing-type.config.serial.serialBridge.charset.description = The charset to use for converting between bytes and string (e.g. UTF-8, ISO-8859-1). Enter 'HEX' to convert binary data into hexadecimal strings, separated by space.
thing-type.config.serial.serialBridge.dataBits.label = Data Bits
thing-type.config.serial.serialBridge.dataBits.description = Set the data bits
thing-type.config.serial.serialBridge.dataBits.option.5 = 5
thing-type.config.serial.serialBridge.dataBits.option.6 = 6
thing-type.config.serial.serialBridge.dataBits.option.7 = 7
thing-type.config.serial.serialBridge.dataBits.option.8 = 8
thing-type.config.serial.serialBridge.eolPattern.label = EOL Pattern
thing-type.config.serial.serialBridge.eolPattern.description = Only for Charset = HEX: 'End of line' pattern as regular expression. For example, "0D 10" matches \r\n, "\\bFF" matches 0xFF. Please note that the matched pattern will be part of the result string.
thing-type.config.serial.serialBridge.parity.label = Parity
thing-type.config.serial.serialBridge.parity.description = Set the parity
thing-type.config.serial.serialBridge.parity.option.N = N(one)
thing-type.config.serial.serialBridge.parity.option.O = O(dd)
thing-type.config.serial.serialBridge.parity.option.E = E(even)
thing-type.config.serial.serialBridge.parity.option.M = M(ark)
thing-type.config.serial.serialBridge.parity.option.S = S(pace)
thing-type.config.serial.serialBridge.serialPort.label = Serial Port
thing-type.config.serial.serialBridge.serialPort.description = The serial port to use (e.g. Linux: /dev/ttyUSB0, Windows: COM1)
thing-type.config.serial.serialBridge.stopBits.label = Stop Bits
thing-type.config.serial.serialBridge.stopBits.description = Set the stop bits
thing-type.config.serial.serialBridge.stopBits.option.1 = 1
thing-type.config.serial.serialBridge.stopBits.option.1.5 = 1.5
thing-type.config.serial.serialBridge.stopBits.option.2 = 2
thing-type.config.serial.serialDevice.patternMatch.label = Patern Match
thing-type.config.serial.serialDevice.patternMatch.description = Regular expression used to identify device from received data (must match the whole line)
thing-type.config.serial.tcpBridge.address.label = Address
thing-type.config.serial.tcpBridge.address.description = The IP address or hostname
thing-type.config.serial.tcpBridge.charset.label = Charset or HEX
thing-type.config.serial.tcpBridge.charset.description = The charset to use for converting between bytes and string (e.g. UTF-8, ISO-8859-1). Enter 'HEX' to convert binary data into hexadecimal strings, separated by space.
thing-type.config.serial.tcpBridge.eolPattern.label = EOL pattern
thing-type.config.serial.tcpBridge.eolPattern.description = Only for Charset = HEX: 'End of line' pattern as regular expression. For example, "0D 10" matches \r\n, "\\bFF" matches 0xFF. Please note that the matched pattern will be part of the result string.
thing-type.config.serial.tcpBridge.keepAlive.label = Keep-Alive
thing-type.config.serial.tcpBridge.keepAlive.description = Send keep-alive
thing-type.config.serial.tcpBridge.port.label = Port
thing-type.config.serial.tcpBridge.port.description = TCP port to connect
thing-type.config.serial.tcpBridge.reconnectInterval.label = Reconnect Interval
thing-type.config.serial.tcpBridge.reconnectInterval.description = Reconnection interval in seconds after connection failure (0 = disabled)
thing-type.config.serial.tcpBridge.timeout.label = Socket Timeout
thing-type.config.serial.tcpBridge.timeout.description = Timeout in seconds
thing-type.config.serial.tcpServerBridge.bindAddress.label = Address
thing-type.config.serial.tcpServerBridge.bindAddress.description = The IP address to bind to (default: 0.0.0.0)
thing-type.config.serial.tcpServerBridge.charset.label = Charset or HEX
thing-type.config.serial.tcpServerBridge.charset.description = The charset to use for converting between bytes and string (e.g. UTF-8, ISO-8859-1). Enter 'HEX' to convert binary data into hexadecimal strings, separated by space.
thing-type.config.serial.tcpServerBridge.eolPattern.label = EOL pattern
thing-type.config.serial.tcpServerBridge.eolPattern.description = Only for Charset = HEX: 'End of line' pattern as regular expression. For example, "0D 10" matches \r\n, "\\bFF" matches 0xFF. Please note that the matched pattern will be part of the result string.
thing-type.config.serial.tcpServerBridge.keepAlive.label = Keep-Alive
thing-type.config.serial.tcpServerBridge.keepAlive.description = Send keep-alive
thing-type.config.serial.tcpServerBridge.port.label = Port
thing-type.config.serial.tcpServerBridge.port.description = Listening TCP port
thing-type.config.serial.tcpServerBridge.timeout.label = Socket Timeout
thing-type.config.serial.tcpServerBridge.timeout.description = Timeout in seconds

# channel types

channel-type.serial.binaryData.label = Binary Data
channel-type.serial.binaryData.description = Channel for sending/receiving data encoded as Base64 to/from the serial port
channel-type.serial.dimmer.label = Dimmer
channel-type.serial.dimmer.description = Channel to receive commands from a Dimmer
channel-type.serial.number.label = Number
channel-type.serial.number.description = Channel to receive commands as a number
channel-type.serial.rollershutter.label = Rollershutter
channel-type.serial.rollershutter.description = Channel to receive commands from a Rollershutter
channel-type.serial.string.label = String
channel-type.serial.string.description = Channel to receive commands as a string
channel-type.serial.stringData.label = String Data
channel-type.serial.stringData.description = Channel for sending/receiving data as a string to/from the serial port
channel-type.serial.switch.label = Switch
channel-type.serial.switch.description = Channel to receive commands from a Switch

# channel types config

channel-type.config.serial.dimmer.commandFormat.label = Percent Format
channel-type.config.serial.dimmer.commandFormat.description = Format string applied to the percent command, e.g. ID=671;VAL=%d
channel-type.config.serial.dimmer.commandTransformation.label = Command Transformation
channel-type.config.serial.dimmer.commandTransformation.description = Transformation used to convert command to device data, e.g. <code>JS(device.js)</code>. Multiple transformations can be chained by listing each transformation on a separate line, or by concatenating them with "∩".
channel-type.config.serial.dimmer.decreaseValue.label = Decrease Value
channel-type.config.serial.dimmer.decreaseValue.description = Send this value when receiving a DECREASE command
channel-type.config.serial.dimmer.increaseValue.label = Increase Value
channel-type.config.serial.dimmer.increaseValue.description = Send this value when receiving an INCREASE command
channel-type.config.serial.dimmer.offValue.label = Off Value
channel-type.config.serial.dimmer.offValue.description = Send this value when receiving an OFF command
channel-type.config.serial.dimmer.onValue.label = On Value
channel-type.config.serial.dimmer.onValue.description = Send this value when receiving an ON command
channel-type.config.serial.dimmer.refreshInterval.label = Refresh Interval
channel-type.config.serial.dimmer.refreshInterval.description = Interval for the automatic channel update in seconds. This value is only required if the peer has to send the “Refresh Value” command regularly in order to return the current properties. It is not required if the peer automatically forwards changed values to its clients.
channel-type.config.serial.dimmer.refreshValue.label = Refresh Value
channel-type.config.serial.dimmer.refreshValue.description = Send this value to receive the current state
channel-type.config.serial.dimmer.stateTransformation.label = State Transformation
channel-type.config.serial.dimmer.stateTransformation.description = Transformation used to convert device data to channel state, e.g. <code>REGEX(.*?STATE=(.*?);.*)</code>. Multiple transformations can be chained by listing each transformation on a separate line, or by concatenating them with "∩".
channel-type.config.serial.number.commandFormat.label = Number Format
channel-type.config.serial.number.commandFormat.description = Format string applied to the command, e.g. ID=671;VAL=%f
channel-type.config.serial.number.commandTransformation.label = Command Transformation
channel-type.config.serial.number.commandTransformation.description = Transformation used to convert command to device data, e.g. <code>JS(device.js)</code>. Multiple transformations can be chained by listing each transformation on a separate line, or by concatenating them with "∩".
channel-type.config.serial.number.refreshInterval.label = Refresh Interval
channel-type.config.serial.number.refreshInterval.description = Interval for the automatic channel update in seconds. This value is only required if the peer has to send the “Refresh Value” command regularly in order to return the current properties. It is not required if the peer automatically forwards changed values to its clients.
channel-type.config.serial.number.refreshValue.label = Refresh Value
channel-type.config.serial.number.refreshValue.description = Send this value to receive the current state
channel-type.config.serial.number.stateTransformation.label = State Transformation
channel-type.config.serial.number.stateTransformation.description = Transformation used to convert device data to channel state, e.g. <code>REGEX(.*?STATE=(.*?);.*)</code>. Multiple transformations can be chained by listing each transformation on a separate line, or by concatenating them with "∩".
channel-type.config.serial.rollershutter.commandFormat.label = Percent Format
channel-type.config.serial.rollershutter.commandFormat.description = Format string applied to the percent command, e.g. ID=671;VAL=%d
channel-type.config.serial.rollershutter.commandTransformation.label = Command Transformation
channel-type.config.serial.rollershutter.commandTransformation.description = Transformation used to convert command to device data, e.g. <code>JS(device.js)</code>. Multiple transformations can be chained by listing each transformation on a separate line, or by concatenating them with "∩".
channel-type.config.serial.rollershutter.downValue.label = Down Value
channel-type.config.serial.rollershutter.downValue.description = Send this value when receiving a DOWN command
channel-type.config.serial.rollershutter.refreshInterval.label = Refresh Interval
channel-type.config.serial.rollershutter.refreshInterval.description = Interval for the automatic channel update in seconds. This value is only required if the peer has to send the “Refresh Value” command regularly in order to return the current properties. It is not required if the peer automatically forwards changed values to its clients.
channel-type.config.serial.rollershutter.refreshValue.label = Refresh Value
channel-type.config.serial.rollershutter.refreshValue.description = Send this value to receive the current state
channel-type.config.serial.rollershutter.stateTransformation.label = State Transformation
channel-type.config.serial.rollershutter.stateTransformation.description = Transformation used to convert device data to channel state, e.g. <code>REGEX(.*?STATE=(.*?);.*)</code>. Multiple transformations can be chained by listing each transformation on a separate line, or by concatenating them with "∩".
channel-type.config.serial.rollershutter.stopValue.label = Stop Value
channel-type.config.serial.rollershutter.stopValue.description = Send this value when receiving a STOP command
channel-type.config.serial.rollershutter.upValue.label = Up Value
channel-type.config.serial.rollershutter.upValue.description = Send this value when receiving an UP command
channel-type.config.serial.string.commandFormat.label = String Format
channel-type.config.serial.string.commandFormat.description = Format string applied to the command, e.g. ID=671;COMMAND=%s
channel-type.config.serial.string.commandTransformation.label = Command Transformation
channel-type.config.serial.string.commandTransformation.description = Transformation used to convert command to device data, e.g. <code>JS(device.js)</code>. Multiple transformations can be chained by listing each transformation on a separate line, or by concatenating them with "∩".
channel-type.config.serial.string.refreshInterval.label = Refresh Interval
channel-type.config.serial.string.refreshInterval.description = Interval for the automatic channel update in seconds. This value is only required if the peer has to send the “Refresh Value” command regularly in order to return the current properties. It is not required if the peer automatically forwards changed values to its clients.
channel-type.config.serial.string.refreshValue.label = Refresh Value
channel-type.config.serial.string.refreshValue.description = Send this value to receive the current state
channel-type.config.serial.string.stateTransformation.label = State Transformation
channel-type.config.serial.string.stateTransformation.description = Transformation used to convert device data to channel state, e.g. <code>REGEX(.*?STATE=(.*?);.*)</code>. Multiple transformations can be chained by listing each transformation on a separate line, or by concatenating them with "∩".
channel-type.config.serial.switch.commandTransformation.label = Command Transformation
channel-type.config.serial.switch.commandTransformation.description = Transformation used to convert command to device data, e.g. <code>JS(device.js)</code>. Multiple transformations can be chained by listing each transformation on a separate line, or by concatenating them with "∩".
channel-type.config.serial.switch.offValue.label = Off Value
channel-type.config.serial.switch.offValue.description = Send this value when receiving an OFF command
channel-type.config.serial.switch.onValue.label = On Value
channel-type.config.serial.switch.onValue.description = Send this value when receiving an ON command
channel-type.config.serial.switch.refreshInterval.label = Refresh Interval
channel-type.config.serial.switch.refreshInterval.description = Interval for the automatic channel update in seconds. This value is only required if the peer has to send the “Refresh Value” command regularly in order to return the current properties. It is not required if the peer automatically forwards changed values to its clients.
channel-type.config.serial.switch.refreshValue.label = Refresh Value
channel-type.config.serial.switch.refreshValue.description = Send this value to receive the current state
channel-type.config.serial.switch.stateTransformation.label = State Transformation
channel-type.config.serial.switch.stateTransformation.description = Transformation used to convert device data to channel state, e.g. <code>REGEX(.*?STATE=(.*?);.*)</code>. Multiple transformations can be chained by listing each transformation on a separate line, or by concatenating them with "∩".
