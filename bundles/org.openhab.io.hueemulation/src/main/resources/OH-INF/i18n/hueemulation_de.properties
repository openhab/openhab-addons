io.config.hueemulation.createNewUserOnEveryEndpoint.label = Pairing\: Unbekannte Benutzer-Schlüssel hinzufügen
io.config.hueemulation.createNewUserOnEveryEndpoint.description = Legen Sie diese Option fest, um neue Benutzer während des nächsten Kopplungszeitraums zu erstellen. Dies hilft bei der Erkennung von Amazon Echo-Geräten. Diese Option wird nach der Zeitüberschreitung automatisch ausgeschaltet.
io.config.hueemulation.discoveryHttpPort.label = Optionaler Discovery Web Port
io.config.hueemulation.discoveryHttpPort.description = Einige Hue-Anwendungen benötigen einen anderen Port (80) als den, auf dem openHAB standardmäßig läuft (8080). Diese Option zeigt nur einen anderen Port an als den, auf dem wir hören. Nützlich, wenn Sie eine iptables-Regel haben, die den Verkehr von diesem Port auf den openHAB-Port umleitet.
io.config.hueemulation.discoveryIp.label = Optionale Discovery-Adresse
io.config.hueemulation.discoveryIp.description = Wenn Ihr Host über mehrere IP-Adressen verfügt, können Sie die IP(s) angeben, die Sie im UPNP-Ermittlungsprozess bekannt geben möchten. Auf den meisten Systemen können Sie dieses Feld leer lassen. Verwenden Sie Kommas, um mehrere Einträge zu trennen.
io.config.hueemulation.ignoreItemsWithTags.label = Elemente nach Tag ignorieren
io.config.hueemulation.ignoreItemsWithTags.description = Alle Elemente, die mit den angegebenen Tags versehen sind, werden vom Hue Emulation Service ignoriert. Verwenden Sie Kommas, um mehrere Einträge zu trennen.
io.config.hueemulation.pairingEnabled.label = Geräte Koppeln
io.config.hueemulation.pairingEnabled.description = Das Pairing muss aktiviert sein, um ein neues Gerät zu verbinden. Das Pairing wird nach der konfigurierten Pairing-Zeit (normalerweise 60 Sekunden) automatisch deaktiviert.
io.config.hueemulation.pairingTimeout.label = Pairing Zeitüberschreitung
io.config.hueemulation.pairingTimeout.description = Das Pairing wird nach der angegebenen Zeit in Sekunden automatisch deaktiviert.
io.config.hueemulation.permanentV1bridge.label = V1 Hue-Brücke dauerhaft emulieren
io.config.hueemulation.permanentV1bridge.description = Es gibt keinen offensichtlichen Grund, die neuere Brücke nicht immer zu emulieren, aber hier ist die Option, wenn Sie die alte (runde Hue-Brücke) emulieren möchten.
io.config.hueemulation.restrictToTagsColorLights.label = Color Item Tags
io.config.hueemulation.restrictToTagsColorLights.description = Die HUE-Emulation kann entweder alle Farbelemente veröffentlichen, wenn dies auf eine leere Zeichenkette gesetzt ist, oder Elemente nach Tags filtern. Verwenden Sie Kommas, um mehrere Einträge zu trennen.
io.config.hueemulation.restrictToTagsSwitches.label = Switch Item Tags
io.config.hueemulation.restrictToTagsSwitches.description = Die HUE-Emulation kann entweder Switch-Einträge veröffentlichen, wenn dies auf eine leere Zeichenfolge gesetzt ist, oder Einträge nach Tags filtern. Verwenden Sie Kommas, um mehrere Einträge zu trennen.
io.config.hueemulation.restrictToTagsWhiteLights.label = White Item Tags
io.config.hueemulation.restrictToTagsWhiteLights.description = Die HUE-Emulation kann entweder alle Dimmer-Elemente veröffentlichen, wenn dies auf eine leere Zeichenkette gesetzt ist, oder die Elemente nach Tags filtern. Verwenden Sie Kommas, um mehrere Einträge zu trennen.
io.config.hueemulation.temporarilyEmulateV1bridge.label = Koppeln\: Vorübergehende Emulation der V1 Hue Bridge
io.config.hueemulation.temporarilyEmulateV1bridge.description = Einige Amazon Echos unterstützen nur V1-Bridges (runde Hardware-Bridge). Diese Option ist nur während der Erkennung aktiv und wird nach dem Timeout automatisch ausgeschaltet.
io.config.hueemulation.uuid.label = Eindeutige Bridge-ID
io.config.hueemulation.uuid.description = Jeder Hue-Bridge ist eine universelle eindeutige ID (UUID) zugewiesen. Diese wird zufällig generiert, wenn kein Wert zugewiesen wurde. Hinweis zu Amazon Alexa Echo-Geräten\: Es kann hilfreich sein, die UUID zu ändern, nachdem Sie die Element-IDs geändert haben. Die Echos werden diesen Dienst als neue Bridge erkennen.

# hue.ruleCondition

module-type.hue.ruleCondition.label = Eine Bedingung speziell für Hue-Regeln
module-type.hue.ruleCondition.description = Abhängig von der Bedingung und dem Artikelstatus wird diese Bedingung erfüllt oder nicht
module-type.hue.ruleCondition.config.operator.label = Operator
module-type.hue.ruleCondition.config.operator.description = Der Operator, der die Hue Bridge Sendezeit oder den Licht/Sensorzustand mit einem bestimmten statischen Wert vergleicht
module-type.hue.ruleCondition.config.operator.option.eq = Gleich
module-type.hue.ruleCondition.config.operator.option.gt = Größer als
module-type.hue.ruleCondition.config.operator.option.lt = Niedriger als
module-type.hue.ruleCondition.config.operator.option.dx = Bei der Artikelstatusänderung
module-type.hue.ruleCondition.config.operator.option.ddx = Änderung des Artikelzustands verzögert
module-type.hue.ruleCondition.config.operator.option.stable = Artikel wurde aktualisiert, aber nicht geändert
module-type.hue.ruleCondition.config.operator.option.not_stable = Artikel wurde aktualisiert und geändert
module-type.hue.ruleCondition.config.operator.option.in = Die aktuelle Zeit liegt im Bereich der angegebenen Zeit
module-type.hue.ruleCondition.config.operator.option.not_in = Die aktuelle Zeit liegt NICHT im Bereich der angegebenen Zeit
module-type.hue.ruleCondition.config.address.label = Hue-Linkadresse
module-type.hue.ruleCondition.config.address.description = Eine lokale Hue-Linkadresse wie /sensors/2/state/buttonevent oder /config/localtime
module-type.hue.ruleCondition.config.value.label = Ein optionaler Vergleichswert
module-type.hue.ruleCondition.config.value.description = Nur gültig für eq,lg,lt Operatoren und eine Zahl oder boolesche Artikelart oder in,not_in. Für einen späteren Zeitpunkt muss es im Format von W127/T12\:12/T14\:00\:00 sein, in dem die gültigen Wochentage (binäre Kodierung), die Startzeit und die Stoppzeit beschrieben werden.

# rules.HttpAction

module-type.rules.HttpAction.label = Regel entfernen
module-type.rules.HttpAction.description = Löscht eine Regel dauerhaft
module-type.rules.HttpAction.config.method.label = Http-Methode
module-type.rules.HttpAction.config.method.description = Die zu verwendende http-Methode
module-type.rules.HttpAction.config.method.option.GET = GET
module-type.rules.HttpAction.config.method.option.POST = POST
module-type.rules.HttpAction.config.method.option.PUT = PUT
module-type.rules.HttpAction.config.method.option.HEAD = HEAD
module-type.rules.HttpAction.config.method.option.DELETE = LÖSCHEN
module-type.rules.HttpAction.config.url.label = URL
module-type.rules.HttpAction.config.url.description = Die Url, auf der die http-Anfrage ausgeführt werden soll. Kann relativ sein, beginnend mit '/'. Zum Beispiel '/api/foo/bar'
module-type.rules.HttpAction.config.body.label = Data
module-type.rules.HttpAction.config.body.description = Für Post und Put Anforderungen können Sie Daten mit der Anfrage senden
module-type.rules.HttpAction.config.mimetype.label = MIME-Typ
module-type.rules.HttpAction.config.mimetype.description = Für Post und Put Anforderungen können Sie Daten mit der Anfrage senden. Legen Sie hier den Mimetyp dieses Datums fest.
module-type.rules.HttpAction.config.mimetype.option.text/plain = Text
module-type.rules.HttpAction.config.mimetype.option.application/json = Json
module-type.rules.HttpAction.config.mimetype.option.application/xml = XML
module-type.rules.HttpAction.config.mimetype.option.application/octet-stream = Binary
module-type.rules.HttpAction.config.timeout.label = Timeout in Sekunden
module-type.rules.HttpAction.config.timeout.description = Der Timeout dieser Anfrage in Sekunden.

# rules.RemoveRuleAction

module-type.rules.RemoveRuleAction.label = Regel entfernen
module-type.rules.RemoveRuleAction.description = Löscht eine Regel dauerhaft
module-type.rules.RemoveRuleAction.config.removeuid.label = Regel
module-type.rules.RemoveRuleAction.config.removeuid.description = Die Regel, die entfernt werden soll

# timer.AbsoluteDateTimeTrigger

module-type.timer.AbsoluteDateTimeTrigger.label = Absoluter Datum/Zeit-Trigger
module-type.timer.AbsoluteDateTimeTrigger.description = Dies löst eine Regel basierend auf einem festen Datum/Zeit aus
module-type.timer.AbsoluteDateTimeTrigger.config.date.label = Date
module-type.timer.AbsoluteDateTimeTrigger.config.date.description = Ein Datum mit dem Muster jjjj-mm-tt
module-type.timer.AbsoluteDateTimeTrigger.config.time.label = Zeit
module-type.timer.AbsoluteDateTimeTrigger.config.time.description = Eine Zeit mit dem Muster hh\:mm\:ss
module-type.timer.AbsoluteDateTimeTrigger.config.randomizeTime.label = Zufällige Zeitbegrenzung
module-type.timer.AbsoluteDateTimeTrigger.config.randomizeTime.description = Eine obere Zeitgrenze mit dem Muster hh\:mm\:ss. Wenn dies angegeben ist, löst der Trigger eine zufällige Zeit zwischen der Zeit und der zufälligen Zeit aus

# timer.TimerTrigger

module-type.timer.TimerTrigger.label = Timer-Auslöser
module-type.timer.TimerTrigger.description = Dies löst eine Regel basierend auf einem Timer aus
module-type.timer.TimerTrigger.config.time.label = Dauer
module-type.timer.TimerTrigger.config.time.description = Eine Dauer bevor dieser Timer mit dem Muster hh\:mm\:ss abläuft. Die kürzeste Dauer ist daher 1 Sekunde, die längste ist 99 Stunden.
module-type.timer.TimerTrigger.config.randomizeTime.label = Dauer Obergrenze
module-type.timer.TimerTrigger.config.randomizeTime.description = Eine optionale Obergrenze für die Dauer bis zum Ablauf dieses Timers nach dem Muster hh\:mm\:ss. Es wird eine zufällige Dauer zwischen Dauer und Dauer-Obergrenze ausgewählt.
module-type.timer.TimerTrigger.config.repeat.label = Wiederholen
module-type.timer.TimerTrigger.config.repeat.description = Sie können diesen Timer zu einem wiederkehrenden Timer machen, indem Sie einen Wert über 1 setzen. Die Standardeinstellung ist 1. Wenn Sie einen Wert unter 0 setzen wie -1, wird dieser Timer unbegrenzt wiederholt

# service

service.io.hueemulation.label = Hue Emulation
