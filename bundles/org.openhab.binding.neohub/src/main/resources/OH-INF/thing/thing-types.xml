<?xml version="1.0" encoding="UTF-8"?>
<thing:thing-descriptions bindingId="neohub"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:thing="https://openhab.org/schemas/thing-description/v1.0.0"
	xsi:schemaLocation="https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd">

	<bridge-type id="neohub">

		<label>NeoHub</label>
		<description>Heatmiser NeoHub bridge to NeoStat and NeoPlug devices</description>
		<semantic-equipment-tag>NetworkAppliance</semantic-equipment-tag>

		<channels>
			<channel typeId="meshNetworkQoS" id="meshNetworkQoS"/>
		</channels>

		<properties>
			<property name="vendor">Heatmiser</property>
			<property name="modelId">NeoHub</property>
		</properties>
		<representation-property>hostName</representation-property>

		<config-description>
			<parameter name="hostName" type="text" required="true">
				<label>Host Name</label>
				<context>network-address</context>
				<description>Host name (IP address) of the NeoHub</description>
			</parameter>

			<parameter name="portNumber" type="integer" required="false">
				<label>Port Number</label>
				<description>Override port number to use to connect to the NeoHub (0=automatic)</description>
				<default>0</default>
				<advanced>true</advanced>
			</parameter>

			<parameter name="pollingInterval" type="integer" min="4" max="60" required="false" unit="s">
				<label>Polling Interval</label>
				<description>Time (seconds) between polling the NeoHub (min=4, max/default=60)</description>
				<default>60</default>
				<advanced>true</advanced>
			</parameter>

			<parameter name="socketTimeout" type="integer" min="5" max="20" required="false" unit="s">
				<label>Socket Timeout</label>
				<description>Time (seconds) to wait for connections to the Hub (min/default=5, max=20)</description>
				<default>5</default>
				<advanced>true</advanced>
			</parameter>

			<parameter name="preferLegacyApi" type="boolean" required="false">
				<label>Prefer Legacy API</label>
				<description>Use the legacy API instead of the new API (if available)</description>
				<default>false</default>
				<advanced>true</advanced>
			</parameter>

			<parameter name="useWebSocket" type="boolean" required="false">
				<label>Connect via WebSocket</label>
				<description>Select whether to communicate with the Neohub via WebSocket or TCP</description>
				<default>false</default>
			</parameter>

			<parameter name="apiToken" type="text" required="false">
				<label>API Access Token</label>
				<description>API access token for the hub (created with the Heatmiser mobile app)</description>
			</parameter>
		</config-description>

	</bridge-type>

	<thing-type id="neostat">

		<supported-bridge-type-refs>
			<bridge-type-ref id="neohub"/>
		</supported-bridge-type-refs>

		<label>Heatmiser NeoStat</label>
		<description>Heatmiser Neo Smart Thermostat</description>
		<semantic-equipment-tag>Thermostat</semantic-equipment-tag>

		<channels>
			<channel id="roomTemperature" typeId="temperature">
				<label>Room Temperature</label>
				<description>Actual room temperature</description>
			</channel>

			<channel id="targetTemperature" typeId="targetTemperature"/>

			<channel id="floorTemperature" typeId="temperature">
				<label>Floor Temperature</label>
				<description>Actual floor temperature</description>
			</channel>

			<channel id="thermostatOutputState" typeId="thermostatOutputState"/>
			<channel id="occupancyModePresent" typeId="occupancyModePresent"/>
			<channel id="batteryLowAlarm" typeId="system.low-battery"/>

		</channels>

		<properties>
			<property name="vendor">Heatmiser</property>
			<property name="modelId">NeoStat</property>
		</properties>
		<representation-property>deviceNameInHub</representation-property>

		<config-description>
			<parameter name="deviceNameInHub" type="text" required="true">
				<label>Device Name</label>
				<description>Device Name that identifies the NeoStat device in the NeoHub and Heatmiser App</description>
			</parameter>
		</config-description>

	</thing-type>

	<thing-type id="neoplug">

		<supported-bridge-type-refs>
			<bridge-type-ref id="neohub"/>
		</supported-bridge-type-refs>

		<label>Heatmiser NeoPlug</label>
		<description>Heatmiser Neo Smart Plug</description>
		<semantic-equipment-tag>PowerOutlet</semantic-equipment-tag>

		<channels>
			<channel id="plugOutputState" typeId="plugOutputState"/>
			<channel id="plugAutoMode" typeId="plugAutoMode"/>
		</channels>

		<properties>
			<property name="vendor">Heatmiser</property>
			<property name="modelId">NeoPlug</property>
		</properties>
		<representation-property>deviceNameInHub</representation-property>

		<config-description>
			<parameter name="deviceNameInHub" type="text" required="true">
				<label>Device Name</label>
				<description>Device Name that identifies the NeoPlug device in the NeoHub and Heatmiser App</description>
			</parameter>
		</config-description>

	</thing-type>

	<thing-type id="neocontact">

		<supported-bridge-type-refs>
			<bridge-type-ref id="neohub"/>
		</supported-bridge-type-refs>

		<label>Heatmiser Contact Sensor</label>
		<description>Heatmiser (wireless) Window or Door Contact</description>
		<semantic-equipment-tag>ContactSensor</semantic-equipment-tag>

		<channels>
			<channel id="contactState" typeId="contactState"/>
			<channel id="batteryLowAlarm" typeId="system.low-battery">
				<label>Battery Low Alarm</label>
				<description>ON if the device has a low battery</description>
			</channel>
		</channels>

		<properties>
			<property name="vendor">Heatmiser</property>
			<property name="modelId">Contact Sensor</property>
		</properties>
		<representation-property>deviceNameInHub</representation-property>

		<config-description>
			<parameter name="deviceNameInHub" type="text" required="true">
				<label>Device Name</label>
				<description>Device Name that identifies the Contact in the NeoHub and Heatmiser App</description>
			</parameter>
		</config-description>

	</thing-type>

	<thing-type id="neotemperaturesensor">

		<supported-bridge-type-refs>
			<bridge-type-ref id="neohub"/>
		</supported-bridge-type-refs>

		<label>Heatmiser Wireless Air Sensor</label>
		<description>Heatmiser (wireless) Temperature Sensor</description>
		<semantic-equipment-tag>Sensor</semantic-equipment-tag>

		<channels>
			<channel id="sensorTemperature" typeId="temperature">
				<label>Temperature</label>
				<description>Measured temperature value (Read-Only)</description>
			</channel>

			<channel id="batteryLowAlarm" typeId="system.low-battery">
				<label>Battery Low Alarm</label>
				<description>ON if the device has a low battery</description>
			</channel>
		</channels>

		<properties>
			<property name="vendor">Heatmiser</property>
			<property name="modelId">Wireless Air Sensor</property>
		</properties>
		<representation-property>deviceNameInHub</representation-property>

		<config-description>
			<parameter name="deviceNameInHub" type="text" required="true">
				<label>Device Name</label>
				<description>Device Name that identifies the Temperature Sensor in the NeoHub and Heatmiser App</description>
			</parameter>
		</config-description>

	</thing-type>

	<channel-type id="temperature">
		<item-type>Number:Temperature</item-type>
		<label>Temperature</label>
		<description>Measured temperature value (Read-Only)</description>
		<category>temperature</category>
		<tags>
			<tag>Measurement</tag>
			<tag>Temperature</tag>
		</tags>
		<state readOnly="true" pattern="%.1f %unit%"/>
		<config-description>
			<parameter name="holdOnlineState" type="boolean" required="false">
				<label>Hold Online State</label>
				<description>If the device loses its RF mesh connection, hold the last known state display value</description>
				<default>false</default>
			</parameter>
		</config-description>
	</channel-type>

	<channel-type id="targetTemperature">
		<item-type>Number:Temperature</item-type>
		<label>Target Temperature</label>
		<description>Target temperature setting of the room</description>
		<category>temperature</category>
		<tags>
			<tag>Setpoint</tag>
			<tag>Temperature</tag>
		</tags>
		<state readOnly="false" pattern="%.1f %unit%" step="0.5"/>
		<config-description>
			<parameter name="holdOnlineState" type="boolean" required="false">
				<label>Hold Online State</label>
				<description>If the device loses its RF mesh connection, hold the last known state display value</description>
				<default>false</default>
			</parameter>
		</config-description>
	</channel-type>

	<channel-type id="thermostatOutputState">
		<item-type>String</item-type>
		<label>Thermostat Output State</label>
		<description>Status of whether the thermostat is Off, or calling for Heat</description>
		<category>fire</category>
		<tags>
			<tag>Status</tag>
			<tag>Heating</tag>
		</tags>
		<state readOnly="true"/>
		<config-description>
			<parameter name="holdOnlineState" type="boolean" required="false">
				<label>Hold Online State</label>
				<description>If the device loses its RF mesh connection, hold the last known state display value</description>
				<default>false</default>
			</parameter>
		</config-description>
	</channel-type>

	<channel-type id="occupancyModePresent">
		<item-type>Switch</item-type>
		<label>Occupancy Mode Present</label>
		<description>The Thermostat is in the Present Occupancy Mode (Off=Absent, On=Present)</description>
		<category>presence</category>
		<tags>
			<tag>Switch</tag>
			<tag>Presence</tag>
		</tags>
		<state readOnly="false"/>
		<config-description>
			<parameter name="holdOnlineState" type="boolean" required="false">
				<label>Hold Online State</label>
				<description>If the device loses its RF mesh connection, hold the last known state display value</description>
				<default>false</default>
			</parameter>
		</config-description>
	</channel-type>

	<channel-type id="plugAutoMode">
		<item-type>Switch</item-type>
		<label>Plug Auto Mode</label>
		<description>The Plug is in Automatic Mode (Off=Manual, On=Automatic)</description>
		<category>energy</category>
		<tags>
			<tag>Switch</tag>
			<tag>Mode</tag>
		</tags>
		<state readOnly="false"/>
		<config-description>
			<parameter name="holdOnlineState" type="boolean" required="false">
				<label>Hold Online State</label>
				<description>If the device loses its RF mesh connection, hold the last known state display value</description>
				<default>false</default>
			</parameter>
		</config-description>
	</channel-type>

	<channel-type id="plugOutputState">
		<item-type>Switch</item-type>
		<label>Plug Output State</label>
		<description>The state of the Plug switch, Off or On</description>
		<tags>
			<tag>Switch</tag>
			<tag>Power</tag>
		</tags>
		<state readOnly="false"/>
		<config-description>
			<parameter name="holdOnlineState" type="boolean" required="false">
				<label>Hold Online State</label>
				<description>If the device loses its RF mesh connection, hold the last known state display value</description>
				<default>false</default>
			</parameter>
		</config-description>
	</channel-type>

	<channel-type id="contactState">
		<item-type>Contact</item-type>
		<label>Contact State</label>
		<description>The state of the contact</description>
		<category>window</category>
		<tags>
			<tag>Status</tag>
			<tag>OpenState</tag>
		</tags>
		<state readOnly="true"/>
		<config-description>
			<parameter name="holdOnlineState" type="boolean" required="false">
				<label>Hold Online State</label>
				<description>If the device loses its RF mesh connection, hold the last known state display value</description>
				<default>false</default>
			</parameter>
		</config-description>
	</channel-type>

	<channel-type id="meshNetworkQoS">
		<item-type>Number:Dimensionless</item-type>
		<label>Mesh Network QoS</label>
		<description>Quality of Service: percentage of configured devices currently connected to the RF mesh network</description>
		<tags>
			<tag>Measurement</tag>
			<tag>QualityOfService</tag>
		</tags>
		<state readOnly="true" pattern="%.0f %%"></state>
	</channel-type>

</thing:thing-descriptions>
