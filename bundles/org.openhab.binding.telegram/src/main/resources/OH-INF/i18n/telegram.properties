# add-on

addon.telegram.name = Telegram Binding
addon.telegram.description = This is the binding for Telegram. It allows to send and receive messages.

# thing types

thing-type.telegram.telegramBot.label = Telegram Bot
thing-type.telegram.telegramBot.description = Thing to receive the latest message send to a Telegram Bot.

# thing types config

thing-type.config.telegram.telegramBot.botToken.label = Bot Token
thing-type.config.telegram.telegramBot.botToken.description = Enter the bot token you received from the "BotFather".
thing-type.config.telegram.telegramBot.chatIds.label = Chat Id(s)
thing-type.config.telegram.telegramBot.chatIds.description = One or more chat id(s). Access modifiers ("<" for inbound only, ">" for outbound only) can be used as prefix (optional).
thing-type.config.telegram.telegramBot.longPollingTime.label = Long Polling Time
thing-type.config.telegram.telegramBot.longPollingTime.description = Enter the long polling time in seconds.
thing-type.config.telegram.telegramBot.parseMode.label = Parse Mode
thing-type.config.telegram.telegramBot.parseMode.description = Support for formatted messages, values: Markdown or HTML. Default: no formatting is used.
thing-type.config.telegram.telegramBot.parseMode.option. = No Formatting
thing-type.config.telegram.telegramBot.parseMode.option.HTML = HTML
thing-type.config.telegram.telegramBot.parseMode.option.Markdown = Markdown
thing-type.config.telegram.telegramBot.proxyHost.label = Proxy Host
thing-type.config.telegram.telegramBot.proxyHost.description = Enter your proxy host. It will be used for telegram binding only and doesn't affect entire system.
thing-type.config.telegram.telegramBot.proxyPort.label = Proxy Port
thing-type.config.telegram.telegramBot.proxyPort.description = Enter your proxy port.
thing-type.config.telegram.telegramBot.proxyType.label = Proxy Type
thing-type.config.telegram.telegramBot.proxyType.description = Enter your proxy type. Default: SOCKS5
thing-type.config.telegram.telegramBot.proxyType.option.SOCKS5 = SOCKS5
thing-type.config.telegram.telegramBot.proxyType.option.HTTP = HTTP

# channel types

channel-type.telegram.callbackEvent.label = Query Callback Received
channel-type.telegram.callbackEvent.description = Callback Query response encoded as JSON.<br /> Event payload could contain the following, but `null` values will not be present: <ul> <li>Long `message_id` - Unique message ID of the original Query message</li> <li>String `from` - First and/or last name of sender</li> <li>Long `chat_id` - Unique chat ID</li> <li>String `callback_id` - Unique callback ID to send receipt confirmation to</li> <li>String `reply_id` - Plain text name of original Query</li> <li>String `text` - Selected response text from options give in original Query</li> </ul>
channel-type.telegram.callbackRawEvent.label = Raw Callback Query Received
channel-type.telegram.callbackRawEvent.description = Raw Callback Query response from the Telegram library encoded as JSON.
channel-type.telegram.chatId.label = Chat Id
channel-type.telegram.chatId.description = Contains the id of chat from where the message was received.
channel-type.telegram.lastMessageDate.label = Last Message Date
channel-type.telegram.lastMessageDate.description = Contains the latest message date as a DateTime
channel-type.telegram.lastMessageName.label = Last Message Name
channel-type.telegram.lastMessageName.description = Contains the latest message senders name as a string
channel-type.telegram.lastMessageText.label = Last Message Text
channel-type.telegram.lastMessageText.description = Contains the latest message text as a string
channel-type.telegram.lastMessageURL.label = Last Message URL
channel-type.telegram.lastMessageURL.description = Contains the URL of the latest message
channel-type.telegram.lastMessageUsername.label = Last Message Username
channel-type.telegram.lastMessageUsername.description = Contains the latest message senders username as a string
channel-type.telegram.messageEvent.label = Message Received
channel-type.telegram.messageEvent.description = Message encoded as JSON.<br /> Event payload could contain the following, but `null` values will not be present: <ul> <li>Long `message_id` - Unique message ID in this chat</li> <li>String `from` - First and/or last name of sender</li> <li>Long `chat_id` - Unique chat ID</li> <li>String `text` - Message text</li> <li>String `animation_url` - URL to download animation from</li> <li>String `audio_url` - URL to download audio from</li> <li>String `document_url` - URL to download file from</li> <li>Array `photo_url` - Array of URLs to download photos from</li> <li>String `sticker_url` - URL to download sticker from</li> <li>String `video_url` - URL to download video from</li> <li>String `video_note_url` - URL to download video note from</li> <li>String `voice_url` - URL to download voice clip from</li> </ul>
channel-type.telegram.messageRawEvent.label = Raw Message Received
channel-type.telegram.messageRawEvent.description = Raw Message from the Telegram library as JSON.
channel-type.telegram.replyId.label = Reply Id
channel-type.telegram.replyId.description = Contains the id of the reply which was passed to sendTelegram() as replyId. This id can be used to have an unambiguous assignment of the user reply to the message which was sent by the bot.
