<?xml version="1.0" encoding="UTF-8"?>
<thing:thing-descriptions bindingId="hyperion"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:thing="https://openhab.org/schemas/thing-description/v1.0.0"
	xsi:schemaLocation="https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd">

	<thing-type id="serverV1">
		<label>Hyperion Server</label>
		<description>This is a Hyperion server</description>
		<channels>
			<channel id="brightness" typeId="brightness"/>
			<channel id="color" typeId="color"/>
			<channel id="effect" typeId="effect"/>
			<channel id="clear" typeId="clear"/>
		</channels>

		<config-description>
			<parameter name="host" type="text" required="true">
				<label>Host Address</label>
				<context>network-address</context>
				<description>The host address of the Hyperion server JSON API.</description>
			</parameter>
			<parameter name="port" type="integer" required="false">
				<label>Port</label>
				<description>The port of the Hyperion server JSON API.</description>
				<default>19444</default>
			</parameter>
			<parameter name="priority" type="integer" required="false">
				<label>Priority</label>
				<description>The priority associated with updates sent to the Hyperion server.</description>
				<default>50</default>
			</parameter>
			<parameter name="poll_frequency" type="integer" required="false" min="1">
				<label>Polling Frequency</label>
				<description>How often (in seconds) to poll the Hyperion server for value changes.</description>
				<default>15</default>
			</parameter>
		</config-description>

	</thing-type>
	<thing-type id="serverNG">
		<label>Hyperion.ng Server</label>
		<description>This is a Hyperion.ng server</description>
		<channels>
			<channel id="hyperionenabled" typeId="enabled"/>
			<channel id="brightness" typeId="brightness"/>
			<channel id="effect" typeId="effect"/>
			<channel id="clear" typeId="clear"/>
			<channel id="color" typeId="color"/>
			<channel id="blackborder" typeId="blackborder"/>
			<channel id="smoothing" typeId="smoothing"/>
			<channel id="kodichecker" typeId="kodichecker"/>
			<channel id="forwarder" typeId="forwarder"/>
			<channel id="udplistener" typeId="udplistener"/>
			<channel id="boblightserver" typeId="boblightserver"/>
			<channel id="grabber" typeId="grabber"/>
			<channel id="v4l" typeId="v4l"/>
			<channel id="leddevice" typeId="leddevice"/>
		</channels>

		<config-description>
			<parameter name="host" type="text" required="true">
				<label>Host Address</label>
				<context>network-address</context>
				<description>The host address of the Hyperion server JSON API.</description>
			</parameter>
			<parameter name="port" type="integer" required="false">
				<label>Port</label>
				<description>The port of the Hyperion server JSON API.</description>
				<default>19444</default>
			</parameter>
			<parameter name="priority" type="integer" required="false">
				<label>Priority</label>
				<description>The priority associated with updates sent to the Hyperion server.</description>
				<default>50</default>
			</parameter>
			<parameter name="poll_frequency" type="integer" required="false" min="1">
				<label>Polling Frequency</label>
				<description>How often (in seconds) to poll the Hyperion server for value changes.</description>
				<default>3</default>
			</parameter>
			<parameter name="origin" type="text" required="false">
				<label>Origin</label>
				<description>The origin used on color and effect commands.</description>
				<default>openHAB</default>
				<advanced>true</advanced>
			</parameter>
		</config-description>

	</thing-type>

	<channel-type id="brightness">
		<item-type>Dimmer</item-type>
		<label>Brightness</label>
		<description>Sets the brightness of the LEDs</description>
	</channel-type>
	<channel-type id="color">
		<item-type>Color</item-type>
		<label>Color</label>
		<description>Sets the color effect of the LEDs</description>
	</channel-type>

	<channel-type id="effect">
		<item-type>String</item-type>
		<label>Effect</label>
		<description>Sets the effect of the LEDs</description>
	</channel-type>

	<channel-type id="clear" advanced="true">
		<item-type>String</item-type>
		<label>Clear Priority</label>
		<description>Clears the given Hyperion priority</description>
	</channel-type>

	<channel-type id="enabled">
		<item-type>Switch</item-type>
		<label>Enabled</label>
		<description>Shows whether Hyperion is currently enabled or not and allows enabling or disabling of Hyperion</description>
	</channel-type>

	<channel-type id="blackborder" advanced="true">
		<item-type>Switch</item-type>
		<label>Black Border</label>
		<description>Shows the current state of the black border component and allows the black border component to be enabled
			or disabled</description>
	</channel-type>

	<channel-type id="smoothing" advanced="true">
		<item-type>Switch</item-type>
		<label>Smoothing</label>
		<description>Shows the current state of the smoothing component and allows the smoothing component to be enabled or
			disabled</description>
	</channel-type>

	<channel-type id="kodichecker" advanced="true">
		<item-type>Switch</item-type>
		<label>Kodi Checker</label>
		<description>Shows the current state of the Kodi checker component and allows the Kodi checker component to be enabled
			or disabled</description>
	</channel-type>

	<channel-type id="forwarder" advanced="true">
		<item-type>Switch</item-type>
		<label>Forwarder</label>
		<description>Shows the current state of the forwarder component and allows the forwarder component to be enabled or
			disabled</description>
	</channel-type>

	<channel-type id="udplistener" advanced="true">
		<item-type>Switch</item-type>
		<label>UDP Listener</label>
		<description>Shows the current state of the UDP listener component and allows the UDP listener component to be enabled
			or disabled</description>
	</channel-type>

	<channel-type id="boblightserver" advanced="true">
		<item-type>Switch</item-type>
		<label>UDP Listener</label>
		<description>Shows the current state of the Boblight server component and allows the Boblight server component to be
			enabled or disabled</description>
	</channel-type>

	<channel-type id="grabber" advanced="true">
		<item-type>Switch</item-type>
		<label>Grabber</label>
		<description>Shows the current state of the grabber component and allows the grabber component to be enabled or
			disabled</description>
	</channel-type>


	<channel-type id="v4l" advanced="true">
		<item-type>Switch</item-type>
		<label>V4L Device</label>
		<description>Shows the current state of the v4l component and allows the v4l component to be enabled or disabled</description>
	</channel-type>

	<channel-type id="leddevice" advanced="true">
		<item-type>Switch</item-type>
		<label>LED Device</label>
		<description>Shows the current state of the LED component and allows the LED component to be enabled or disabled</description>
	</channel-type>

</thing:thing-descriptions>
