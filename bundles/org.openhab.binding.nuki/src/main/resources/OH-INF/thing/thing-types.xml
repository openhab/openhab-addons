<?xml version="1.0" encoding="UTF-8"?>
<thing:thing-descriptions bindingId="nuki"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:thing="https://openhab.org/schemas/thing-description/v1.0.0"
	xsi:schemaLocation="https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd">

	<!-- Nuki Bridge (Bridge Type) -->
	<bridge-type id="bridge">
		<label>Nuki Bridge</label>
		<description>This bridge represents a Nuki Bridge on your local network. Nuki Smart Locks have to be paired via
			Bluetooth with it.</description>
		<semantic-equipment-tag>NetworkAppliance</semantic-equipment-tag>
		<properties>
			<property name="bridgeId"/>
			<property name="hardwareId"/>
			<property name="serverId"/>
			<property name="firmwareVersion"/>
			<property name="wifiFirmwareVersion"/>
		</properties>
		<config-description>
			<parameter name="ip" type="text" required="true">
				<label>IP Address</label>
				<context>network-address</context>
				<description>The IP address of the Nuki Bridge. Look it up on your router. It is recommended to set a static IP
					address lease for the Nuki Bridge (and for your openHAB server too) on your router.</description>
			</parameter>
			<parameter name="port" type="integer" required="true">
				<label>Port</label>
				<description>The Port which you configured during Initial Bridge setup
					(https://nuki.io/en/support/bridge/bridge-setup/initial-bridge-setup/).</description>
				<default>8080</default>
			</parameter>
			<parameter name="apiToken" type="text" required="true">
				<label>API Token</label>
				<context>password</context>
				<description>The API Token which you configured during Initial Bridge setup
					(https://nuki.io/en/support/bridge/bridge-setup/initial-bridge-setup/).</description>
			</parameter>
			<parameter name="manageCallbacks" type="boolean" required="false">
				<label>Manage Nuki Bridge Callbacks</label>
				<description>
					Let the Nuki Binding manage the callback on the Nuki Bridge. Nuki bridge uses HTTP callback to notify
					openHAB about changes in device properties (e.g. when doors are opened, unlocked, doorbell rings, battery level
					changes etc.). If callback is not registered, binding will not work properly and channels will not be updated. If
					this is enabled, binding will automatically register and unregister callback as necessary. If this is disabled,
					user must register callback manually. It is recommended that this is turned on.
				</description>
				<default>true</default>
			</parameter>
			<parameter name="secureToken" type="boolean" required="false">
				<label>Secure Token</label>
				<description>
					Use hashed token when communicating with bridge. This increases security and prevents sniffing of
					access token and replay attacks, since communication with bridge is not encrypted. For this feature to work, both
					device running openHAB and Nuki Bridge must have synchronized time. When disabled, token is sent in plain text with
					each bridge request. It is recommended that this is turned on unless there are problems with synchronizing time
					between openHAB and Nuki Bridge.
				</description>
				<default>true</default>
			</parameter>
		</config-description>
	</bridge-type>

	<!-- Nuki Smart Lock (Thing Type) -->
	<thing-type id="smartlock" listed="false">
		<supported-bridge-type-refs>
			<bridge-type-ref id="bridge"/>
		</supported-bridge-type-refs>
		<label>Nuki Smart Lock</label>
		<description>Nuki Smart Lock which is paired via Bluetooth to a Nuki Bridge.</description>
		<semantic-equipment-tag>Lock</semantic-equipment-tag>
		<channels>
			<channel id="lock" typeId="smartlockLock"/>
			<channel id="lockState" typeId="smartlockState"/>
			<channel id="lowBattery" typeId="system.low-battery"/>
			<channel id="keypadLowBattery" typeId="system.low-battery"/>
			<channel id="batteryLevel" typeId="system.battery-level"/>
			<channel id="batteryCharging" typeId="smartLockBatteryCharging"/>
			<channel id="doorsensorState" typeId="smartlockDoorState"/>
		</channels>
		<properties>
			<property name="name"/>
			<property name="firmwareVersion"/>
		</properties>
		<representation-property>nukiId</representation-property>
		<config-description>
			<parameter name="unlatch" type="boolean" required="false">
				<label>Unlatch</label>
				<description>If switched to On (or set to true) the Nuki Smart Lock will unlock the door but then also automatically
					pull the latch of the door lock. Usually, if the door hinges are correctly adjusted, the door will then swing open.</description>
				<default>false</default>
			</parameter>
			<parameter name="nukiId" type="text" required="true" readOnly="true">
				<label>Nuki ID</label>
				<description>The decimal string that identifies the Nuki Smart Lock.</description>
			</parameter>
			<parameter name="deviceType" type="integer" required="true" readOnly="true">
				<label>Device Type</label>
				<default>0</default>
				<options>
					<option value="0">Nuki Smart Lock 1.0/2.0</option>
					<option value="3">Nuki Smart Door</option>
					<option value="4">Nuki Smart Lock 3.0 (Pro)</option>
				</options>
				<description>
					Numeric device type as specified by bridge HTTP API - 0 = Nuki Smart Lock 1.0/2.0, 3 = Nuki Smart Door,
					4 = Nuki Smart Lock 3.0 (Pro).
					Sent with each API request. Its purpose is not documented, seems to only be used for
					distinguishing between opener and smartlock actions.
					There does not seem to be any (documented or observable)
					differences between different smart lock device types.
				</description>
			</parameter>
		</config-description>
	</thing-type>

	<!-- Nuki Opener (Thing Type) -->
	<thing-type id="opener" listed="false">
		<supported-bridge-type-refs>
			<bridge-type-ref id="bridge"/>
		</supported-bridge-type-refs>
		<label>Nuki Opener</label>
		<description>Nuki Opener which is paired via Bluetooth to a Nuki Bridge.</description>
		<semantic-equipment-tag>Lock</semantic-equipment-tag>
		<channels>
			<channel id="openerState" typeId="openerState"/>
			<channel id="openerMode" typeId="openerMode"/>
			<channel id="openerLowBattery" typeId="system.low-battery"/>
			<channel id="ringActionState" typeId="ringActionState"/>
			<channel id="ringActionTimestamp" typeId="ringActionTimestamp"/>
		</channels>
		<properties>
			<property name="name"/>
			<property name="firmwareVersion"/>
		</properties>
		<representation-property>nukiId</representation-property>
		<config-description>
			<parameter name="nukiId" type="text" required="true" readOnly="true">
				<label>Nuki ID</label>
				<description>The decimal string that identifies the Nuki Opener.</description>
			</parameter>
		</config-description>
	</thing-type>

	<!-- Channel Type -->
	<channel-type id="smartlockLock">
		<item-type>Switch</item-type>
		<label>Lock</label>
		<description>Use this channel with a Switch Item to unlock and lock the door. Configure "Unlatch" to true if your Nuki
			Smart Lock is mounted on a door lock with a knob on the outside.</description>
		<category>Door</category>
		<state>
			<options>
				<option value="OFF">Unlocks the door</option>
				<option value="ON">Locks the door</option>
			</options>
		</state>
	</channel-type>

	<channel-type id="smartlockState">
		<item-type>Number</item-type>
		<label>Lock State</label>
		<description>Use this channel if you want to execute other supported lock actions or to display the current lock
			state.</description>
		<category>Door</category>
		<state>
			<options>
				<option value="0">Uncalibrated</option>
				<option value="1">Locked</option>
				<option value="2">Unlocking</option>
				<option value="3">Unlocked</option>
				<option value="4">Locking</option>
				<option value="5">Unlatched</option>
				<option value="6">Unlocked (Lock 'n' Go)</option>
				<option value="7">Unlatching</option>
				<option value="1002">Unlocking (Lock 'n' Go)</option>
				<option value="1007">Unlatching (Lock 'n' Go)</option>
				<option value="254">Motor blocked</option>
				<option value="255">UNDEFINED</option>
			</options>
		</state>
		<command>
			<options>
				<option value="1">Unlock</option>
				<option value="2">Lock</option>
				<option value="3">Unlatch</option>
				<option value="4">Lock'n'go</option>
				<option value="5">Lock'n'go with unlatch</option>
			</options>
		</command>
		<autoUpdatePolicy>veto</autoUpdatePolicy>
	</channel-type>

	<channel-type id="smartLockBatteryCharging">
		<item-type>Switch</item-type>
		<label>Battery Charging</label>
		<description>Use this channel to display the current state of charging</description>
		<category>Energy</category>
		<state readOnly="true">
			<options>
				<option value="OFF">Battery is not charging</option>
				<option value="ON">Battery is charging</option>
			</options>
		</state>
	</channel-type>

	<channel-type id="smartlockDoorState">
		<item-type>Number</item-type>
		<label>Door State</label>
		<description>Use this channel to display the current state of the door sensor</description>
		<category>Door</category>
		<state readOnly="true">
			<options>
				<option value="1">Deactivated</option>
				<option value="2">Closed</option>
				<option value="3">Open</option>
				<option value="4">Door state unknown</option>
				<option value="5">Calibrating</option>
				<option value="16">Uncalibrated</option>
				<option value="240">Removed</option>
				<option value="255">Unknown</option>
			</options>
		</state>
		<autoUpdatePolicy>veto</autoUpdatePolicy>
	</channel-type>

	<channel-type id="openerState">
		<item-type>Number</item-type>
		<label>Opener State</label>
		<description>Use this channel if you want to execute other supported opener actions or to display the current opener
			state.</description>
		<category>FrontDoor</category>
		<state>
			<options>
				<option value="0">Untrained</option>
				<option value="1">Online</option>
				<option value="3">Ring to open active</option>
				<option value="5">Open</option>
				<option value="7">Opening</option>
				<option value="253">Boot run</option>
				<option value="255">Undefined</option>
			</options>
		</state>
		<command>
			<options>
				<option value="1">Activate ring to open</option>
				<option value="2">Deactivate ring to open</option>
				<option value="3">Electric strike actuation</option>
				<option value="4">Activate continuous mode</option>
				<option value="5">Deactivate continuous mode</option>
			</options>
		</command>
		<autoUpdatePolicy>veto</autoUpdatePolicy>
	</channel-type>

	<channel-type id="openerMode">
		<item-type>Number</item-type>
		<label>Opener Mode</label>
		<description>Use this channel to display/set current mode of the opener</description>
		<category>FrontDoor</category>
		<state readOnly="true">
			<options>
				<option value="2">Door mode</option>
				<option value="3">Continuous mode</option>
			</options>
		</state>
		<autoUpdatePolicy>veto</autoUpdatePolicy>
	</channel-type>

	<channel-type id="ringActionState">
		<kind>trigger</kind>
		<label>Ring Action State</label>
		<description>Channel is triggered when doorbell is rang, at most once every 30s</description>
		<category>Siren</category>
		<event>
			<options>
				<option value="RINGING">Doorbell is ringing</option>
			</options>
		</event>
	</channel-type>

	<channel-type id="ringActionTimestamp">
		<item-type>DateTime</item-type>
		<label>Ring Action Timestamp</label>
		<description>Time of last ring action</description>
		<category>Siren</category>
		<autoUpdatePolicy>veto</autoUpdatePolicy>
	</channel-type>
</thing:thing-descriptions>
