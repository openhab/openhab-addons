# add-on

addon.jrubyscripting.name = JRuby Scripting
addon.jrubyscripting.description = This adds a JRuby script engine.

# add-on

automation.config.jrubyscripting.check_update.label = Check for Gem Updates
automation.config.jrubyscripting.check_update.description = Check RubyGems for updates to the above gems when OpenHAB starts or JRuby settings are changed. Otherwise it will try to fulfill the requirements with locally installed gems, and you can manage them yourself with an external Ruby by setting the same GEM_HOME.
automation.config.jrubyscripting.dependency_tracking.label = Enable Dependency Tracking
automation.config.jrubyscripting.dependency_tracking.description = Dependency tracking allows your scripts to automatically reload when one of its dependencies is updated. You may want to disable dependency tracking if you plan on editing or updating a shared library, but don't want all your scripts to reload until you can test it.
automation.config.jrubyscripting.gem_home.label = GEM_HOME
automation.config.jrubyscripting.gem_home.description = Location Ruby Gems will be installed to and loaded from. Directory will be created if necessary. You can use <tt>{RUBY_ENGINE_VERSION}</tt>, <tt>{RUBY_ENGINE}</tt> and/or <tt>{RUBY_VERSION}</tt> replacements in this value to automatically point to a new directory when the addon is updated with a new version of JRuby. Defaults to "<tt>OPENHAB_CONF/automation/ruby/.gem/{RUBY_ENGINE_VERSION}</tt>" when not specified.
automation.config.jrubyscripting.gems.label = Ruby Gems
automation.config.jrubyscripting.gems.description = A comma separated list of Ruby Gems to install. Versions may be constrained by separating with an <tt>=</tt> and then the standard RubyGems version constraint, such as "<tt>openhab-scripting=~>5.0</tt>".
automation.config.jrubyscripting.group.environment.label = Ruby Environment
automation.config.jrubyscripting.group.environment.description = This group defines Ruby's environment.
automation.config.jrubyscripting.group.gems.label = Ruby Gems
automation.config.jrubyscripting.group.gems.description = This group defines the list of Ruby Gems to install.
automation.config.jrubyscripting.group.system.label = System Properties
automation.config.jrubyscripting.group.system.description = This group defines JRuby system properties.
automation.config.jrubyscripting.local_context.label = Context Instance Type
automation.config.jrubyscripting.local_context.description = The local context holds Ruby runtime, name-value pairs for sharing variables between Java and Ruby. See <a href="https://github.com/jruby/jruby/wiki/RedBridge#Context_Instance_Type">the documentation</a> for options and details.
automation.config.jrubyscripting.local_context.option.singleton = Singleton
automation.config.jrubyscripting.local_context.option.threadsafe = ThreadSafe
automation.config.jrubyscripting.local_context.option.singlethread = SingleThread
automation.config.jrubyscripting.local_context.option.concurrent = Concurrent
automation.config.jrubyscripting.local_variable.label = Local Variable Behavior
automation.config.jrubyscripting.local_variable.description = Defines how variables are shared between Ruby and Java. See <a href="https://github.com/jruby/jruby/wiki/RedBridge#local-variable-behavior-options">the documentation</a> for options and details.
automation.config.jrubyscripting.local_variable.option.transient = Transient
automation.config.jrubyscripting.local_variable.option.persistent = Persistent
automation.config.jrubyscripting.local_variable.option.global = Global
automation.config.jrubyscripting.require.label = Require Scripts
automation.config.jrubyscripting.require.description = A comma separated list of script names to be required by the JRuby Scripting Engine before running user scripts.
automation.config.jrubyscripting.rubylib.label = RUBYLIB
automation.config.jrubyscripting.rubylib.description = Search path for user libraries. Separate each path with a colon (semicolon in Windows). Defaults to "<tt>OPENHAB_CONF/automation/ruby/lib</tt>" when not specified.
